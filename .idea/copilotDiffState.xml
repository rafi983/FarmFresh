<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/api/auth/users/route.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/auth/users/route.js" />
              <option name="updatedContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;&#10;export async function GET(request) {&#10;  try {&#10;    const { searchParams } = new URL(request.url);&#10;    const userType = searchParams.get(&quot;userType&quot;);&#10;    const limit = searchParams.get(&quot;limit&quot;) ? parseInt(searchParams.get(&quot;limit&quot;)) : 100;&#10;    const search = searchParams.get(&quot;search&quot;);&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Build query filter&#10;    let filter = {};&#10;    &#10;    if (userType) {&#10;      filter.userType = userType;&#10;    }&#10;&#10;    if (search) {&#10;      filter.$or = [&#10;        { name: { $regex: search, $options: &quot;i&quot; } },&#10;        { firstName: { $regex: search, $options: &quot;i&quot; } },&#10;        { lastName: { $regex: search, $options: &quot;i&quot; } },&#10;        { email: { $regex: search, $options: &quot;i&quot; } },&#10;        { &quot;farmDetails.farmName&quot;: { $regex: search, $options: &quot;i&quot; } }&#10;      ];&#10;    }&#10;&#10;    console.log(&quot; Users API - Query filter:&quot;, filter);&#10;    console.log(&quot; Users API - Limit:&quot;, limit);&#10;&#10;    // Fetch users from database&#10;    const users = await db.collection(&quot;users&quot;)&#10;      .find(filter)&#10;      .limit(limit)&#10;      .project({&#10;        // Exclude sensitive information&#10;        password: 0,&#10;        resetPasswordToken: 0,&#10;        resetPasswordExpires: 0&#10;      })&#10;      .toArray();&#10;&#10;    console.log(&quot; Users API - Found users:&quot;, users.length);&#10;    console.log(&quot; Users API - Sample users:&quot;, users.slice(0, 2).map(u =&gt; ({&#10;      name: u.name,&#10;      userType: u.userType,&#10;      farmName: u.farmDetails?.farmName&#10;    })));&#10;&#10;    return NextResponse.json({&#10;      users,&#10;      total: users.length,&#10;      message: `Found ${users.length} users${userType ? ` of type ${userType}` : &quot;&quot;}`&#10;    });&#10;&#10;  } catch (error) {&#10;    console.error(&quot;Error fetching users:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to fetch users&quot;, details: error.message },&#10;      { status: 500 }&#10;    );&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/orders/[orderId]/route.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/orders/[orderId]/route.js" />
              <option name="originalContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;import { ObjectId } from &quot;mongodb&quot;;&#10;&#10;export async function GET(request, { params }) {&#10;  try {&#10;    const { orderId } = params;&#10;&#10;    if (!orderId) {&#10;      return NextResponse.json(&#10;        { error: &quot;Order ID is required&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    const order = await db.collection(&quot;orders&quot;).findOne({&#10;      _id: new ObjectId(orderId),&#10;    });&#10;&#10;    if (!order) {&#10;      return NextResponse.json({ error: &quot;Order not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    return NextResponse.json({ order });&#10;  } catch (error) {&#10;    console.error(&quot;Get order error:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to get order&quot;, details: error.message },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;export async function PATCH(request, { params }) {&#10;  try {&#10;    const { orderId } = params;&#10;    const updateData = await request.json();&#10;&#10;    console.log(&quot;Updating order:&quot;, orderId, &quot;with data:&quot;, updateData);&#10;&#10;    if (!orderId) {&#10;      return NextResponse.json(&#10;        { error: &quot;Order ID is required&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    // Validate ObjectId format&#10;    if (!ObjectId.isValid(orderId)) {&#10;      console.error(&quot;Invalid ObjectId format:&quot;, orderId);&#10;      return NextResponse.json(&#10;        { error: &quot;Invalid order ID format&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Check if order exists first&#10;    const existingOrder = await db.collection(&quot;orders&quot;).findOne({&#10;      _id: new ObjectId(orderId),&#10;    });&#10;&#10;    if (!existingOrder) {&#10;      console.error(&quot;Order not found:&quot;, orderId);&#10;      return NextResponse.json({ error: &quot;Order not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    console.log(&quot;Existing order found, proceeding with update...&quot;);&#10;&#10;    // Prepare the update operation&#10;    const updateOperation = {&#10;      $set: {&#10;        ...updateData,&#10;        updatedAt: new Date().toISOString(),&#10;      },&#10;    };&#10;&#10;    // If status history is provided, add it to the array&#10;    if (updateData.statusHistory) {&#10;      updateOperation.$push = {&#10;        statusHistory: updateData.statusHistory,&#10;      };&#10;      // Remove statusHistory from $set since we're using $push for it&#10;      delete updateOperation.$set.statusHistory;&#10;    }&#10;&#10;    console.log(&quot;Update operation:&quot;, JSON.stringify(updateOperation, null, 2));&#10;&#10;    // Perform the update&#10;    const result = await db&#10;      .collection(&quot;orders&quot;)&#10;      .updateOne({ _id: new ObjectId(orderId) }, updateOperation);&#10;&#10;    console.log(&quot;Update result:&quot;, result);&#10;&#10;    if (result.matchedCount === 0) {&#10;      return NextResponse.json(&#10;        { error: &quot;Order not found during update&quot; },&#10;        { status: 404 },&#10;      );&#10;    }&#10;&#10;    if (result.modifiedCount === 0) {&#10;      console.warn(&quot;Order found but not modified - possibly same data&quot;);&#10;    }&#10;&#10;    // Fetch the updated order to return the complete data&#10;    const updatedOrder = await db.collection(&quot;orders&quot;).findOne({&#10;      _id: new ObjectId(orderId),&#10;    });&#10;&#10;    console.log(&quot;Order updated successfully:&quot;, orderId);&#10;&#10;    return NextResponse.json({&#10;      message: &quot;Order updated successfully&quot;,&#10;      order: updatedOrder,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Update order error:&quot;, error);&#10;    console.error(&quot;Error stack:&quot;, error.stack);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to update order&quot;, details: error.message },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;export async function DELETE(request, { params }) {&#10;  try {&#10;    const { orderId } = params;&#10;&#10;    if (!orderId) {&#10;      return NextResponse.json(&#10;        { error: &quot;Order ID is required&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Check if order exists and can be deleted&#10;    const order = await db.collection(&quot;orders&quot;).findOne({&#10;      _id: new ObjectId(orderId),&#10;    });&#10;&#10;    if (!order) {&#10;      return NextResponse.json({ error: &quot;Order not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    // Only allow deletion of cancelled orders or very recent pending orders&#10;    const canDelete =&#10;      order.status === &quot;cancelled&quot; ||&#10;      (order.status === &quot;pending&quot; &amp;&amp;&#10;        Date.now() - new Date(order.createdAt).getTime() &lt; 300000); // 5 minutes&#10;&#10;    if (!canDelete) {&#10;      return NextResponse.json(&#10;        {&#10;          error:&#10;            &quot;Order cannot be deleted. Only cancelled orders or recent pending orders can be deleted.&quot;,&#10;        },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    const result = await db.collection(&quot;orders&quot;).deleteOne({&#10;      _id: new ObjectId(orderId),&#10;    });&#10;&#10;    return NextResponse.json({&#10;      message: &quot;Order deleted successfully&quot;,&#10;      deletedCount: result.deletedCount,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Delete order error:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to delete order&quot;, details: error.message },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;" />
              <option name="updatedContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;import { ObjectId } from &quot;mongodb&quot;;&#10;&#10;export async function GET(request, { params }) {&#10;  try {&#10;    const { orderId } = params;&#10;&#10;    if (!orderId) {&#10;      return NextResponse.json(&#10;        { error: &quot;Order ID is required&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    const order = await db.collection(&quot;orders&quot;).findOne({&#10;      _id: new ObjectId(orderId),&#10;    });&#10;&#10;    if (!order) {&#10;      return NextResponse.json({ error: &quot;Order not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    return NextResponse.json({ order });&#10;  } catch (error) {&#10;    console.error(&quot;Get order error:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to get order&quot;, details: error.message },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;export async function PATCH(request, { params }) {&#10;  try {&#10;    const { orderId } = params;&#10;    const updateData = await request.json();&#10;&#10;    console.log(&quot;Updating order:&quot;, orderId, &quot;with data:&quot;, updateData);&#10;&#10;    if (!orderId) {&#10;      return NextResponse.json(&#10;        { error: &quot;Order ID is required&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    // Validate ObjectId format&#10;    if (!ObjectId.isValid(orderId)) {&#10;      console.error(&quot;Invalid ObjectId format:&quot;, orderId);&#10;      return NextResponse.json(&#10;        { error: &quot;Invalid order ID format&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Check if order exists first&#10;    const existingOrder = await db.collection(&quot;orders&quot;).findOne({&#10;      _id: new ObjectId(orderId),&#10;    });&#10;&#10;    if (!existingOrder) {&#10;      console.error(&quot;Order not found:&quot;, orderId);&#10;      return NextResponse.json({ error: &quot;Order not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    console.log(&quot;Existing order found, proceeding with update...&quot;);&#10;&#10;    // Check the current statusHistory structure&#10;    const currentStatusHistory = existingOrder.statusHistory;&#10;    console.log(&quot;Current statusHistory type:&quot;, typeof currentStatusHistory);&#10;    console.log(&quot;Current statusHistory is array:&quot;, Array.isArray(currentStatusHistory));&#10;&#10;    // Prepare the update operation&#10;    const updateOperation = {&#10;      $set: {&#10;        ...updateData,&#10;        updatedAt: new Date().toISOString(),&#10;      },&#10;    };&#10;&#10;    // Handle statusHistory properly based on current state&#10;    if (updateData.statusHistory) {&#10;      if (Array.isArray(currentStatusHistory)) {&#10;        // statusHistory is already an array, use $push&#10;        updateOperation.$push = {&#10;          statusHistory: updateData.statusHistory,&#10;        };&#10;      } else {&#10;        // statusHistory doesn't exist or is not an array, initialize/replace it&#10;        updateOperation.$set.statusHistory = currentStatusHistory &amp;&amp; Array.isArray(currentStatusHistory) &#10;          ? [...currentStatusHistory, updateData.statusHistory]&#10;          : [updateData.statusHistory];&#10;      }&#10;      &#10;      // Remove statusHistory from $set if we're using $push&#10;      if (updateOperation.$push) {&#10;        delete updateOperation.$set.statusHistory;&#10;      }&#10;    }&#10;&#10;    console.log(&quot;Update operation:&quot;, JSON.stringify(updateOperation, null, 2));&#10;&#10;    // Perform the update&#10;    const result = await db&#10;      .collection(&quot;orders&quot;)&#10;      .updateOne({ _id: new ObjectId(orderId) }, updateOperation);&#10;&#10;    console.log(&quot;Update result:&quot;, result);&#10;&#10;    if (result.matchedCount === 0) {&#10;      return NextResponse.json(&#10;        { error: &quot;Order not found during update&quot; },&#10;        { status: 404 },&#10;      );&#10;    }&#10;&#10;    if (result.modifiedCount === 0) {&#10;      console.warn(&quot;Order found but not modified - possibly same data&quot;);&#10;    }&#10;&#10;    // Fetch the updated order to return the complete data&#10;    const updatedOrder = await db.collection(&quot;orders&quot;).findOne({&#10;      _id: new ObjectId(orderId),&#10;    });&#10;&#10;    console.log(&quot;Order updated successfully:&quot;, orderId);&#10;&#10;    return NextResponse.json({&#10;      message: &quot;Order updated successfully&quot;,&#10;      order: updatedOrder,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Update order error:&quot;, error);&#10;    console.error(&quot;Error stack:&quot;, error.stack);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to update order&quot;, details: error.message },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;export async function DELETE(request, { params }) {&#10;  try {&#10;    const { orderId } = params;&#10;&#10;    if (!orderId) {&#10;      return NextResponse.json(&#10;        { error: &quot;Order ID is required&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Check if order exists and can be deleted&#10;    const order = await db.collection(&quot;orders&quot;).findOne({&#10;      _id: new ObjectId(orderId),&#10;    });&#10;&#10;    if (!order) {&#10;      return NextResponse.json({ error: &quot;Order not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    // Only allow deletion of cancelled orders or very recent pending orders&#10;    const canDelete =&#10;      order.status === &quot;cancelled&quot; ||&#10;      (order.status === &quot;pending&quot; &amp;&amp;&#10;        Date.now() - new Date(order.createdAt).getTime() &lt; 300000); // 5 minutes&#10;&#10;    if (!canDelete) {&#10;      return NextResponse.json(&#10;        {&#10;          error:&#10;            &quot;Order cannot be deleted. Only cancelled orders or recent pending orders can be deleted.&quot;,&#10;        },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    const result = await db.collection(&quot;orders&quot;).deleteOne({&#10;      _id: new ObjectId(orderId),&#10;    });&#10;&#10;    return NextResponse.json({&#10;      message: &quot;Order deleted successfully&quot;,&#10;      deletedCount: result.deletedCount,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Delete order error:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to delete order&quot;, details: error.message },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/products/[id]/route.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/products/[id]/route.js" />
              <option name="originalContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;import { ObjectId } from &quot;mongodb&quot;;&#10;import {&#10;  enhanceProductWithRatings,&#10;  enhanceProductsWithRatings,&#10;} from &quot;@/lib/reviewUtils&quot;;&#10;&#10;export async function GET(request, { params }) {&#10;  try {&#10;    const { id } = params;&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // First try to find product by string ID (most products use string IDs)&#10;    let targetProduct = await db.collection(&quot;products&quot;).findOne({ _id: id });&#10;&#10;    // If not found, try with ObjectId (for MongoDB generated IDs)&#10;    if (!targetProduct &amp;&amp; ObjectId.isValid(id)) {&#10;      targetProduct = await db&#10;        .collection(&quot;products&quot;)&#10;        .findOne({ _id: new ObjectId(id) });&#10;    }&#10;&#10;    // If still not found, try searching in nested structures (legacy support)&#10;    if (!targetProduct) {&#10;      const productDocuments = await db&#10;        .collection(&quot;products&quot;)&#10;        .find({})&#10;        .toArray();&#10;&#10;      productDocuments.forEach((doc) =&gt; {&#10;        if (doc.products &amp;&amp; Array.isArray(doc.products)) {&#10;          const found = doc.products.find(&#10;            (product) =&gt; product._id === id || product._id.toString() === id,&#10;          );&#10;          if (found) {&#10;            targetProduct = found;&#10;          }&#10;        }&#10;      });&#10;    }&#10;&#10;    if (!targetProduct) {&#10;      return NextResponse.json({ error: &quot;Product not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    // Get all products for finding related products&#10;    let allProducts = await db.collection(&quot;products&quot;).find({}).toArray();&#10;&#10;    // If products are in nested structure, extract them&#10;    if (allProducts.length &gt; 0 &amp;&amp; allProducts[0].products) {&#10;      let extractedProducts = [];&#10;      allProducts.forEach((doc) =&gt; {&#10;        if (doc.products &amp;&amp; Array.isArray(doc.products)) {&#10;          extractedProducts = extractedProducts.concat(doc.products);&#10;        }&#10;      });&#10;      allProducts = extractedProducts;&#10;    }&#10;&#10;    // Add default values for missing fields&#10;    const product = {&#10;      ...targetProduct,&#10;      // Combine both image sources - single image field and images array&#10;      images: (() =&gt; {&#10;        const imageArray = [];&#10;&#10;        // Add single image if it exists&#10;        if (targetProduct.image) {&#10;          imageArray.push(targetProduct.image);&#10;        }&#10;&#10;        // Add images array if it exists&#10;        if (targetProduct.images &amp;&amp; Array.isArray(targetProduct.images)) {&#10;          imageArray.push(...targetProduct.images);&#10;        }&#10;&#10;        // Remove duplicates and empty values&#10;        return [...new Set(imageArray.filter((img) =&gt; img &amp;&amp; img.trim()))];&#10;      })(),&#10;      farmer: targetProduct.farmer || {&#10;        name: &quot;Local Farmer&quot;,&#10;        location: &quot;Bangladesh&quot;,&#10;        bio: &quot;Dedicated to providing fresh, high-quality produce using sustainable farming practices.&quot;,&#10;        experience: 5,&#10;      },&#10;      stock: targetProduct.stock || 50,&#10;      isOrganic: targetProduct.isOrganic || false,&#10;      isFresh: targetProduct.isFresh || true,&#10;      features: targetProduct.features || [&#10;        &quot;Fresh&quot;,&#10;        &quot;Locally sourced&quot;,&#10;        &quot;High quality&quot;,&#10;      ],&#10;    };&#10;&#10;    // Calculate real ratings and review counts from reviews data&#10;    const enhancedProduct = enhanceProductWithRatings(product);&#10;&#10;    // Get related products (same category, exclude current product)&#10;    let relatedProducts = allProducts&#10;      .filter(&#10;        (p) =&gt;&#10;          p.category === enhancedProduct.category &amp;&amp;&#10;          p._id !== enhancedProduct._id,&#10;      )&#10;      .slice(0, 4)&#10;      .map((p) =&gt; ({&#10;        ...p,&#10;        // Fix related products images too - combine both sources&#10;        images: (() =&gt; {&#10;          const imageArray = [];&#10;&#10;          // Add single image if it exists&#10;          if (p.image) {&#10;            imageArray.push(p.image);&#10;          }&#10;&#10;          // Add images array if it exists&#10;          if (p.images &amp;&amp; Array.isArray(p.images)) {&#10;            imageArray.push(...p.images);&#10;          }&#10;&#10;          // Remove duplicates and empty values&#10;          return [...new Set(imageArray.filter((img) =&gt; img &amp;&amp; img.trim()))];&#10;        })(),&#10;        farmer: p.farmer || { name: &quot;Local Farmer&quot;, location: &quot;Bangladesh&quot; },&#10;        stock: p.stock || 50,&#10;        isOrganic: p.isOrganic || false,&#10;        isFresh: p.isFresh || true,&#10;      }));&#10;&#10;    // Calculate real ratings for related products too&#10;    relatedProducts = enhanceProductsWithRatings(relatedProducts);&#10;&#10;    return NextResponse.json({&#10;      product: enhancedProduct,&#10;      relatedProducts,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Error fetching product details:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to fetch product details&quot; },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;// PUT - Update a product&#10;export async function PUT(request, { params }) {&#10;  try {&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;    const { id } = params;&#10;    const updateData = await request.json();&#10;&#10;    if (!ObjectId.isValid(id)) {&#10;      return NextResponse.json(&#10;        { error: &quot;Invalid product ID&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    // Remove _id from updateData if it exists to avoid conflicts&#10;    delete updateData._id;&#10;&#10;    // Add updated timestamp&#10;    updateData.updatedAt = new Date().toISOString();&#10;&#10;    const result = await db&#10;      .collection(&quot;products&quot;)&#10;      .updateOne({ _id: new ObjectId(id) }, { $set: updateData });&#10;&#10;    if (result.matchedCount === 0) {&#10;      return NextResponse.json({ error: &quot;Product not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    // Fetch the updated product to return&#10;    const updatedProduct = await db&#10;      .collection(&quot;products&quot;)&#10;      .findOne({ _id: new ObjectId(id) });&#10;&#10;    return NextResponse.json({&#10;      message: &quot;Product updated successfully&quot;,&#10;      product: updatedProduct,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Error updating product:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to update product&quot; },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;// DELETE - Delete a product&#10;export async function DELETE(request, { params }) {&#10;  try {&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;    const { id } = params;&#10;&#10;    if (!ObjectId.isValid(id)) {&#10;      return NextResponse.json(&#10;        { error: &quot;Invalid product ID&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    // First check if product exists&#10;    const product = await db&#10;      .collection(&quot;products&quot;)&#10;      .findOne({ _id: new ObjectId(id) });&#10;&#10;    if (!product) {&#10;      return NextResponse.json({ error: &quot;Product not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    // Optional: Check if there are any pending orders with this product&#10;    const pendingOrders = await db.collection(&quot;orders&quot;).findOne({&#10;      &quot;items.productId&quot;: id,&#10;      status: { $in: [&quot;pending&quot;, &quot;confirmed&quot;, &quot;shipped&quot;] },&#10;    });&#10;&#10;    if (pendingOrders) {&#10;      return NextResponse.json(&#10;        {&#10;          error:&#10;            &quot;Cannot delete product with pending orders. Please wait for all orders to be completed or cancelled.&quot;,&#10;          hasPendingOrders: true,&#10;        },&#10;        { status: 409 },&#10;      );&#10;    }&#10;&#10;    // Delete the product&#10;    const result = await db&#10;      .collection(&quot;products&quot;)&#10;      .deleteOne({ _id: new ObjectId(id) });&#10;&#10;    if (result.deletedCount === 0) {&#10;      return NextResponse.json(&#10;        { error: &quot;Failed to delete product&quot; },&#10;        { status: 500 },&#10;      );&#10;    }&#10;&#10;    // Optional: Remove product from any user favorites&#10;    await db&#10;      .collection(&quot;users&quot;)&#10;      .updateMany({ favorites: id }, { $pull: { favorites: id } });&#10;&#10;    return NextResponse.json({&#10;      message: &quot;Product deleted successfully&quot;,&#10;      deletedProductId: id,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Error deleting product:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to delete product&quot; },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;      totalSales: 0,&#10;      totalRevenue: 0,&#10;      averageRating: 0,&#10;      totalReviews: 0,&#10;    };&#10;  }&#10;}&#10;" />
              <option name="updatedContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;import { ObjectId } from &quot;mongodb&quot;;&#10;import {&#10;  enhanceProductWithRatings,&#10;  enhanceProductsWithRatings,&#10;} from &quot;@/lib/reviewUtils&quot;;&#10;&#10;export async function GET(request, { params }) {&#10;  try {&#10;    const { id } = params;&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // First try to find product by string ID (most products use string IDs)&#10;    let targetProduct = await db.collection(&quot;products&quot;).findOne({ _id: id });&#10;&#10;    // If not found, try with ObjectId (for MongoDB generated IDs)&#10;    if (!targetProduct &amp;&amp; ObjectId.isValid(id)) {&#10;      targetProduct = await db&#10;        .collection(&quot;products&quot;)&#10;        .findOne({ _id: new ObjectId(id) });&#10;    }&#10;&#10;    // If still not found, try searching in nested structures (legacy support)&#10;    if (!targetProduct) {&#10;      const productDocuments = await db&#10;        .collection(&quot;products&quot;)&#10;        .find({})&#10;        .toArray();&#10;&#10;      productDocuments.forEach((doc) =&gt; {&#10;        if (doc.products &amp;&amp; Array.isArray(doc.products)) {&#10;          const found = doc.products.find(&#10;            (product) =&gt; product._id === id || product._id.toString() === id,&#10;          );&#10;          if (found) {&#10;            targetProduct = found;&#10;          }&#10;        }&#10;      });&#10;    }&#10;&#10;    if (!targetProduct) {&#10;      return NextResponse.json({ error: &quot;Product not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    // Get all products for finding related products&#10;    let allProducts = await db.collection(&quot;products&quot;).find({}).toArray();&#10;&#10;    // If products are in nested structure, extract them&#10;    if (allProducts.length &gt; 0 &amp;&amp; allProducts[0].products) {&#10;      let extractedProducts = [];&#10;      allProducts.forEach((doc) =&gt; {&#10;        if (doc.products &amp;&amp; Array.isArray(doc.products)) {&#10;          extractedProducts = extractedProducts.concat(doc.products);&#10;        }&#10;      });&#10;      allProducts = extractedProducts;&#10;    }&#10;&#10;    // Add default values for missing fields&#10;    const product = {&#10;      ...targetProduct,&#10;      // Combine both image sources - single image field and images array&#10;      images: (() =&gt; {&#10;        const imageArray = [];&#10;&#10;        // Add single image if it exists&#10;        if (targetProduct.image) {&#10;          imageArray.push(targetProduct.image);&#10;        }&#10;&#10;        // Add images array if it exists&#10;        if (targetProduct.images &amp;&amp; Array.isArray(targetProduct.images)) {&#10;          imageArray.push(...targetProduct.images);&#10;        }&#10;&#10;        // Remove duplicates and empty values&#10;        return [...new Set(imageArray.filter((img) =&gt; img &amp;&amp; img.trim()))];&#10;      })(),&#10;      farmer: targetProduct.farmer || {&#10;        name: &quot;Local Farmer&quot;,&#10;        location: &quot;Bangladesh&quot;,&#10;        bio: &quot;Dedicated to providing fresh, high-quality produce using sustainable farming practices.&quot;,&#10;        experience: 5,&#10;      },&#10;      stock: targetProduct.stock || 50,&#10;      isOrganic: targetProduct.isOrganic || false,&#10;      isFresh: targetProduct.isFresh || true,&#10;      features: targetProduct.features || [&#10;        &quot;Fresh&quot;,&#10;        &quot;Locally sourced&quot;,&#10;        &quot;High quality&quot;,&#10;      ],&#10;    };&#10;&#10;    // Calculate real ratings and review counts from reviews data&#10;    const enhancedProduct = enhanceProductWithRatings(product);&#10;&#10;    // Fetch real performance metrics from orders collection&#10;    const performanceMetrics = await calculateProductPerformance(db, id);&#10;&#10;    // Add performance metrics to the product&#10;    enhancedProduct.performanceMetrics = performanceMetrics;&#10;&#10;    // Get related products (same category, exclude current product)&#10;    let relatedProducts = allProducts&#10;      .filter(&#10;        (p) =&gt;&#10;          p.category === enhancedProduct.category &amp;&amp;&#10;          p._id !== enhancedProduct._id,&#10;      )&#10;      .slice(0, 4)&#10;      .map((p) =&gt; ({&#10;        ...p,&#10;        // Fix related products images too - combine both sources&#10;        images: (() =&gt; {&#10;          const imageArray = [];&#10;&#10;          // Add single image if it exists&#10;          if (p.image) {&#10;            imageArray.push(p.image);&#10;          }&#10;&#10;          // Add images array if it exists&#10;          if (p.images &amp;&amp; Array.isArray(p.images)) {&#10;            imageArray.push(...p.images);&#10;          }&#10;&#10;          // Remove duplicates and empty values&#10;          return [...new Set(imageArray.filter((img) =&gt; img &amp;&amp; img.trim()))];&#10;        })(),&#10;        farmer: p.farmer || { name: &quot;Local Farmer&quot;, location: &quot;Bangladesh&quot; },&#10;        stock: p.stock || 50,&#10;        isOrganic: p.isOrganic || false,&#10;        isFresh: p.isFresh || true,&#10;      }));&#10;&#10;    // Calculate real ratings for related products too&#10;    relatedProducts = enhanceProductsWithRatings(relatedProducts);&#10;&#10;    return NextResponse.json({&#10;      product: enhancedProduct,&#10;      relatedProducts,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Error fetching product details:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to fetch product details&quot; },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;// PUT - Update a product&#10;export async function PUT(request, { params }) {&#10;  try {&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;    const { id } = params;&#10;    const updateData = await request.json();&#10;&#10;    if (!ObjectId.isValid(id)) {&#10;      return NextResponse.json(&#10;        { error: &quot;Invalid product ID&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    // Remove _id from updateData if it exists to avoid conflicts&#10;    delete updateData._id;&#10;&#10;    // Add updated timestamp&#10;    updateData.updatedAt = new Date().toISOString();&#10;&#10;    const result = await db&#10;      .collection(&quot;products&quot;)&#10;      .updateOne({ _id: new ObjectId(id) }, { $set: updateData });&#10;&#10;    if (result.matchedCount === 0) {&#10;      return NextResponse.json({ error: &quot;Product not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    // Fetch the updated product to return&#10;    const updatedProduct = await db&#10;      .collection(&quot;products&quot;)&#10;      .findOne({ _id: new ObjectId(id) });&#10;&#10;    return NextResponse.json({&#10;      message: &quot;Product updated successfully&quot;,&#10;      product: updatedProduct,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Error updating product:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to update product&quot; },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;// DELETE - Delete a product&#10;export async function DELETE(request, { params }) {&#10;  try {&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;    const { id } = params;&#10;&#10;    if (!ObjectId.isValid(id)) {&#10;      return NextResponse.json(&#10;        { error: &quot;Invalid product ID&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    // First check if product exists&#10;    const product = await db&#10;      .collection(&quot;products&quot;)&#10;      .findOne({ _id: new ObjectId(id) });&#10;&#10;    if (!product) {&#10;      return NextResponse.json({ error: &quot;Product not found&quot; }, { status: 404 });&#10;    }&#10;&#10;    // Optional: Check if there are any pending orders with this product&#10;    const pendingOrders = await db.collection(&quot;orders&quot;).findOne({&#10;      &quot;items.productId&quot;: id,&#10;      status: { $in: [&quot;pending&quot;, &quot;confirmed&quot;, &quot;shipped&quot;] },&#10;    });&#10;&#10;    if (pendingOrders) {&#10;      return NextResponse.json(&#10;        {&#10;          error:&#10;            &quot;Cannot delete product with pending orders. Please wait for all orders to be completed or cancelled.&quot;,&#10;          hasPendingOrders: true,&#10;        },&#10;        { status: 409 },&#10;      );&#10;    }&#10;&#10;    // Delete the product&#10;    const result = await db&#10;      .collection(&quot;products&quot;)&#10;      .deleteOne({ _id: new ObjectId(id) });&#10;&#10;    if (result.deletedCount === 0) {&#10;      return NextResponse.json(&#10;        { error: &quot;Failed to delete product&quot; },&#10;        { status: 500 },&#10;      );&#10;    }&#10;&#10;    // Optional: Remove product from any user favorites&#10;    await db&#10;      .collection(&quot;users&quot;)&#10;      .updateMany({ favorites: id }, { $pull: { favorites: id } });&#10;&#10;    return NextResponse.json({&#10;      message: &quot;Product deleted successfully&quot;,&#10;      deletedProductId: id,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Error deleting product:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to delete product&quot; },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;// Helper function to calculate real product performance metrics from orders and reviews&#10;async function calculateProductPerformance(db, productId) {&#10;  try {&#10;    // Handle both string IDs and ObjectIds&#10;    let productIdQuery = productId;&#10;    if (ObjectId.isValid(productId)) {&#10;      productIdQuery = new ObjectId(productId);&#10;    }&#10;&#10;    // Calculate sales metrics from completed orders&#10;    const salesData = await db.collection(&quot;orders&quot;).aggregate([&#10;      { &#10;        $match: { &#10;          status: &quot;completed&quot; &#10;        } &#10;      },&#10;      { $unwind: &quot;$items&quot; },&#10;      { &#10;        $match: { &#10;          $or: [&#10;            { &quot;items.productId&quot;: productId },&#10;            { &quot;items.productId&quot;: productIdQuery }&#10;          ]&#10;        } &#10;      },&#10;      {&#10;        $group: {&#10;          _id: null,&#10;          totalSales: { $sum: &quot;$items.quantity&quot; },&#10;          totalRevenue: { $sum: { $multiply: [&quot;$items.quantity&quot;, &quot;$items.price&quot;] } },&#10;          totalOrders: { $sum: 1 }&#10;        }&#10;      }&#10;    ]).toArray();&#10;&#10;    // Calculate review metrics&#10;    const reviewsData = await db.collection(&quot;reviews&quot;).aggregate([&#10;      { &#10;        $match: { &#10;          $or: [&#10;            { productId: productId },&#10;            { productId: productIdQuery }&#10;          ]&#10;        } &#10;      },&#10;      {&#10;        $group: {&#10;          _id: null,&#10;          averageRating: { $avg: &quot;$rating&quot; },&#10;          totalReviews: { $sum: 1 }&#10;        }&#10;      }&#10;    ]).toArray();&#10;&#10;    // Get recent orders count (last 30 days)&#10;    const thirtyDaysAgo = new Date();&#10;    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);&#10;    &#10;    const recentOrdersData = await db.collection(&quot;orders&quot;).aggregate([&#10;      { &#10;        $match: { &#10;          createdAt: { $gte: thirtyDaysAgo.toISOString() },&#10;          status: { $in: [&quot;completed&quot;, &quot;shipped&quot;, &quot;delivered&quot;] }&#10;        } &#10;      },&#10;      { $unwind: &quot;$items&quot; },&#10;      { &#10;        $match: { &#10;          $or: [&#10;            { &quot;items.productId&quot;: productId },&#10;            { &quot;items.productId&quot;: productIdQuery }&#10;          ]&#10;        } &#10;      },&#10;      {&#10;        $group: {&#10;          _id: null,&#10;          recentSales: { $sum: &quot;$items.quantity&quot; },&#10;          recentRevenue: { $sum: { $multiply: [&quot;$items.quantity&quot;, &quot;$items.price&quot;] } }&#10;        }&#10;      }&#10;    ]).toArray();&#10;&#10;    const salesMetrics = salesData[0] || {};&#10;    const reviewsMetrics = reviewsData[0] || {};&#10;    const recentMetrics = recentOrdersData[0] || {};&#10;&#10;    return {&#10;      totalSales: salesMetrics.totalSales || 0,&#10;      totalRevenue: salesMetrics.totalRevenue || 0,&#10;      totalOrders: salesMetrics.totalOrders || 0,&#10;      averageRating: reviewsMetrics.averageRating || 0,&#10;      totalReviews: reviewsMetrics.totalReviews || 0,&#10;      recentSales: recentMetrics.recentSales || 0,&#10;      recentRevenue: recentMetrics.recentRevenue || 0,&#10;      // Add some calculated metrics&#10;      averageOrderValue: salesMetrics.totalOrders &gt; 0 ? (salesMetrics.totalRevenue / salesMetrics.totalOrders) : 0,&#10;      salesTrend: recentMetrics.recentSales &gt; 0 ? &quot;up&quot; : &quot;stable&quot;&#10;    };&#10;  } catch (error) {&#10;    console.error(&quot;Error calculating product performance:&quot;, error);&#10;    return {&#10;      totalSales: 0,&#10;      totalRevenue: 0,&#10;      totalOrders: 0,&#10;      averageRating: 0,&#10;      totalReviews: 0,&#10;      recentSales: 0,&#10;      recentRevenue: 0,&#10;      averageOrderValue: 0,&#10;      salesTrend: &quot;stable&quot;&#10;    };&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/details/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/details/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import Link from &quot;next/link&quot;;&#10;import Image from &quot;next/image&quot;;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { useSearchParams } from &quot;next/navigation&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useCart } from &quot;@/contexts/CartContext&quot;;&#10;import ProductCard from &quot;@/components/ProductCard&quot;;&#10;import StarRating from &quot;@/components/StarRating&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;&#10;export default function ProductDetails() {&#10;  const searchParams = useSearchParams();&#10;  const productId = searchParams.get(&quot;id&quot;);&#10;  const viewMode = searchParams.get(&quot;view&quot;); // Check for view parameter&#10;  const { data: session } = useSession();&#10;  const { addToCart } = useCart();&#10;&#10;  const [product, setProduct] = useState(null);&#10;  const [relatedProducts, setRelatedProducts] = useState([]);&#10;  const [reviews, setReviews] = useState([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [selectedImage, setSelectedImage] = useState(0);&#10;  const [quantity, setQuantity] = useState(1);&#10;  const [activeTab, setActiveTab] = useState(&quot;description&quot;);&#10;  const [reviewsPage, setReviewsPage] = useState(1);&#10;  const [hasMoreReviews, setHasMoreReviews] = useState(false);&#10;  const [isAddingToCart, setIsAddingToCart] = useState(false);&#10;  const [isFavorite, setIsFavorite] = useState(false);&#10;  const [isOwner, setIsOwner] = useState(false);&#10;&#10;  // Review form state&#10;  const [showReviewForm, setShowReviewForm] = useState(false);&#10;  const [reviewForm, setReviewForm] = useState({ rating: 5, comment: &quot;&quot; });&#10;  const [isSubmittingReview, setIsSubmittingReview] = useState(false);&#10;&#10;  // Farmer-specific states&#10;  const [editMode, setEditMode] = useState(false);&#10;  const [stockUpdate, setStockUpdate] = useState(&quot;&quot;);&#10;  const [priceUpdate, setPriceUpdate] = useState(&quot;&quot;);&#10;  const [isUpdating, setIsUpdating] = useState(false);&#10;&#10;  useEffect(() =&gt; {&#10;    if (productId) {&#10;      fetchProductDetails();&#10;      fetchReviews();&#10;    }&#10;  }, [productId]);&#10;&#10;  const fetchProductDetails = async () =&gt; {&#10;    console.log(&quot; FETCHING PRODUCT DETAILS - START&quot;);&#10;    console.log(&quot;Product ID from URL:&quot;, productId);&#10;    console.log(&quot;View Mode:&quot;, viewMode);&#10;&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`);&#10;      console.log(&quot;API Response Status:&quot;, response.status);&#10;&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;        console.log(&quot; RAW API RESPONSE:&quot;, data);&#10;        console.log(&quot; PRODUCT DATA:&quot;, data.product);&#10;        console.log(&quot; PRODUCT IMAGES:&quot;, data.product?.images);&#10;        console.log(&quot; IMAGES TYPE:&quot;, typeof data.product?.images);&#10;        console.log(&#10;          &quot; IMAGES ARRAY CHECK:&quot;,&#10;          Array.isArray(data.product?.images),&#10;        );&#10;&#10;        setProduct(data.product);&#10;        setRelatedProducts(data.relatedProducts);&#10;&#10;        // Check ownership only if not forcing customer view&#10;        if (viewMode !== &quot;customer&quot;) {&#10;          setIsOwner(checkOwnership(data.product));&#10;        } else {&#10;          setIsOwner(false); // Force customer view&#10;        }&#10;      } else {&#10;        console.error(&#10;          &quot;API Response Error:&quot;,&#10;          response.status,&#10;          response.statusText,&#10;        );&#10;        const errorData = await response.text();&#10;        console.error(&quot;Error Response Body:&quot;, errorData);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching product details:&quot;, error);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  const fetchReviews = async (page = 1, append = false) =&gt; {&#10;    try {&#10;      const response = await fetch(&#10;        `/api/products/${productId}/reviews?page=${page}`,&#10;      );&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;&#10;        if (append) {&#10;          setReviews((prev) =&gt; [...prev, ...data.reviews]);&#10;        } else {&#10;          setReviews(data.reviews);&#10;        }&#10;        setHasMoreReviews(data.hasMore);&#10;        setReviewsPage(page);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching reviews:&quot;, error);&#10;    }&#10;  };&#10;&#10;  const handleAddToCart = async () =&gt; {&#10;    if (!session?.user) {&#10;      // Redirect to login if not authenticated&#10;      window.location.href = &quot;/login&quot;;&#10;      return;&#10;    }&#10;&#10;    setIsAddingToCart(true);&#10;    try {&#10;      // Use consistent user ID format&#10;      const userId =&#10;        session.user.userId ||&#10;        session.user.id ||&#10;        session.user._id ||&#10;        session.user.email;&#10;&#10;      const response = await fetch(&quot;/api/cart&quot;, {&#10;        method: &quot;POST&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify({&#10;          productId: productId,&#10;          quantity: quantity,&#10;          userId: userId,&#10;        }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Product added to cart successfully!&quot;);&#10;      } else {&#10;        const errorData = await response.json();&#10;        alert(errorData.error || &quot;Failed to add to cart&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error adding to cart:&quot;, error);&#10;      alert(&quot;Failed to add product to cart. Please try again.&quot;);&#10;    } finally {&#10;      setIsAddingToCart(false);&#10;    }&#10;  };&#10;&#10;  const handleBuyNow = async () =&gt; {&#10;    if (!session?.user) {&#10;      // Redirect to login if not authenticated&#10;      window.location.href = &quot;/login&quot;;&#10;      return;&#10;    }&#10;&#10;    // First add to cart, then navigate to payment&#10;    setIsAddingToCart(true);&#10;    try {&#10;      // Use consistent user ID format&#10;      const userId =&#10;        session.user.userId ||&#10;        session.user.id ||&#10;        session.user._id ||&#10;        session.user.email;&#10;&#10;      const response = await fetch(&quot;/api/cart&quot;, {&#10;        method: &quot;POST&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify({&#10;          productId: productId,&#10;          quantity: quantity,&#10;          userId: userId,&#10;        }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        // Navigate to payment page&#10;        window.location.href = &quot;/payment&quot;;&#10;      } else {&#10;        const errorData = await response.json();&#10;        alert(errorData.error || &quot;Failed to add to cart&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error processing buy now:&quot;, error);&#10;      alert(&quot;Failed to process order. Please try again.&quot;);&#10;    } finally {&#10;      setIsAddingToCart(false);&#10;    }&#10;  };&#10;&#10;  const handleFavoriteToggle = async () =&gt; {&#10;    setIsFavorite(!isFavorite);&#10;    // TODO: Implement favorite API call&#10;  };&#10;&#10;  const handleSubmitReview = async (e) =&gt; {&#10;    e.preventDefault();&#10;    if (!session) {&#10;      alert(&quot;Please login to submit a review&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsSubmittingReview(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}/reviews`, {&#10;        method: &quot;POST&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify(reviewForm),&#10;      });&#10;&#10;      if (response.ok) {&#10;        setShowReviewForm(false);&#10;        setReviewForm({ rating: 5, comment: &quot;&quot; });&#10;        fetchReviews(); // Refresh reviews&#10;        fetchProductDetails(); // Refresh product rating&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to submit review&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error submitting review:&quot;, error);&#10;      alert(&quot;Failed to submit review&quot;);&#10;    } finally {&#10;      setIsSubmittingReview(false);&#10;    }&#10;  };&#10;&#10;  const loadMoreReviews = () =&gt; {&#10;    fetchReviews(reviewsPage + 1, true);&#10;  };&#10;&#10;  // Check if current user owns this product&#10;  const checkOwnership = (productData) =&gt; {&#10;    if (!session?.user || !productData) return false;&#10;&#10;    const userId = session.user.userId || session.user.id || session.user._id;&#10;    const userEmail = session.user.email;&#10;&#10;    return (&#10;      productData.farmerId === userId ||&#10;      productData.farmerId === String(userId) ||&#10;      productData.farmerEmail === userEmail ||&#10;      productData.farmer?.email === userEmail ||&#10;      productData.farmer?.id === userId&#10;    );&#10;  };&#10;&#10;  const handleUpdateProduct = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    // Validate input&#10;    if (!stockUpdate &amp;&amp; !priceUpdate) {&#10;      alert(&quot;Please enter a value to update&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const updateData = {};&#10;&#10;      // Only include fields that have values&#10;      if (stockUpdate &amp;&amp; stockUpdate.trim() !== &quot;&quot;) {&#10;        const stockValue = parseInt(stockUpdate);&#10;        if (isNaN(stockValue) || stockValue &lt; 0) {&#10;          alert(&quot;Please enter a valid stock number&quot;);&#10;          setIsUpdating(false);&#10;          return;&#10;        }&#10;        updateData.stock = stockValue;&#10;      }&#10;&#10;      if (priceUpdate &amp;&amp; priceUpdate.trim() !== &quot;&quot;) {&#10;        const priceValue = parseFloat(priceUpdate);&#10;        if (isNaN(priceValue) || priceValue &lt;= 0) {&#10;          alert(&quot;Please enter a valid price&quot;);&#10;          setIsUpdating(false);&#10;          return;&#10;        }&#10;        updateData.price = priceValue;&#10;      }&#10;&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify(updateData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Product updated successfully!&quot;);&#10;        fetchProductDetails(); // Refresh product details&#10;        setStockUpdate(&quot;&quot;); // Clear input&#10;        setPriceUpdate(&quot;&quot;); // Clear input&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to update product&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error updating product:&quot;, error);&#10;      alert(&quot;Failed to update product. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleStockUpdate = async () =&gt; {&#10;    if (!stockUpdate || !stockUpdate.trim()) {&#10;      alert(&quot;Please enter a stock value&quot;);&#10;      return;&#10;    }&#10;&#10;    const stockValue = parseInt(stockUpdate);&#10;    if (isNaN(stockValue) || stockValue &lt; 0) {&#10;      alert(&quot;Please enter a valid stock number&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify({ stock: stockValue }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Stock updated successfully!&quot;);&#10;        fetchProductDetails();&#10;        setStockUpdate(&quot;&quot;);&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to update stock&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error updating stock:&quot;, error);&#10;      alert(&quot;Failed to update stock. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handlePriceUpdate = async () =&gt; {&#10;    if (!priceUpdate || !priceUpdate.trim()) {&#10;      alert(&quot;Please enter a price value&quot;);&#10;      return;&#10;    }&#10;&#10;    const priceValue = parseFloat(priceUpdate);&#10;    if (isNaN(priceValue) || priceValue &lt;= 0) {&#10;      alert(&quot;Please enter a valid price&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify({ price: priceValue }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Price updated successfully!&quot;);&#10;        fetchProductDetails();&#10;        setPriceUpdate(&quot;&quot;);&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to update price&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error updating price:&quot;, error);&#10;      alert(&quot;Failed to update price. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleToggleStatus = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    const newStatus = product.status === &quot;active&quot; ? &quot;inactive&quot; : &quot;active&quot;;&#10;    const actionText = newStatus === &quot;active&quot; ? &quot;activate&quot; : &quot;deactivate&quot;;&#10;&#10;    if (!confirm(`Are you sure you want to ${actionText} this product?`)) {&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify({ status: newStatus }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(`Product ${actionText}d successfully!`);&#10;        fetchProductDetails();&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || `Failed to ${actionText} product`);&#10;      }&#10;    } catch (error) {&#10;      console.error(`Error ${actionText}ing product:`, error);&#10;      alert(`Failed to ${actionText} product. Please try again.`);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleDeleteProduct = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    if (&#10;      !confirm(&#10;        &quot;⚠️ Are you sure you want to delete this product?\n\nThis action cannot be undone and will remove:\n• The product listing\n• All associated data\n• Product from any pending orders&quot;,&#10;      )&#10;    ) {&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;DELETE&quot;,&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Product deleted successfully!&quot;);&#10;        window.location.href = &quot;/manage&quot;; // Redirect to dashboard&#10;      } else {&#10;        const error = await response.json();&#10;        if (response.status === 409) {&#10;          alert(&#10;            &quot;❌ Cannot Delete Product\n\nThis product has pending orders and cannot be deleted.\nPlease wait for all orders to be completed or cancelled before deleting this product.\n\nYou can temporarily deactivate the product instead.&quot;,&#10;          );&#10;        } else {&#10;          alert(error.error || &quot;Failed to delete product&quot;);&#10;        }&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error deleting product:&quot;, error);&#10;      alert(&quot;Failed to delete product. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12&quot;&gt;&#10;              &lt;div className=&quot;space-y-4&quot;&gt;&#10;                &lt;div className=&quot;aspect-square bg-gray-300 dark:bg-gray-600 rounded-2xl&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;grid grid-cols-5 gap-2&quot;&gt;&#10;                  {[...Array(5)].map((_, i) =&gt; (&#10;                    &lt;div&#10;                      key={i}&#10;                      className=&quot;aspect-square bg-gray-300 dark:bg-gray-600 rounded-lg&quot;&#10;                    &gt;&lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                &lt;div className=&quot;h-8 bg-gray-300 dark:bg-gray-600 rounded w-3/4&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-4 bg-gray-300 dark:bg-gray-600 rounded w-1/2&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-6 bg-gray-300 dark:bg-gray-600 rounded w-1/4&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-10 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  if (!product) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center&quot;&gt;&#10;          &lt;h1 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;            Product not found&#10;          &lt;/h1&gt;&#10;          &lt;Link&#10;            href=&quot;/products&quot;&#10;            className=&quot;text-primary-600 hover:text-primary-700&quot;&#10;          &gt;&#10;            Browse all products&#10;          &lt;/Link&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          {/* Show farmer view only if isOwner is true AND viewMode is not &quot;customer&quot; */}&#10;          {isOwner &amp;&amp; viewMode !== &quot;customer&quot; ? (&#10;            &lt;&gt;&#10;              {/* Farmer Breadcrumb */}&#10;              &lt;nav className=&quot;mb-8&quot;&gt;&#10;                &lt;ol className=&quot;flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/manage&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-tachometer-alt mr-1&quot;&gt;&lt;/i&gt;&#10;                      Dashboard&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;span className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                      {product.name} - Management&#10;                    &lt;/span&gt;&#10;                  &lt;/li&gt;&#10;                &lt;/ol&gt;&#10;              &lt;/nav&gt;&#10;&#10;              {/* Add Customer View Notice */}&#10;              &lt;div className=&quot;bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4 mb-6&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-info-circle text-blue-600 dark:text-blue-400 mr-2&quot;&gt;&lt;/i&gt;&#10;                    &lt;span className=&quot;text-blue-800 dark:text-blue-200&quot;&gt;&#10;                      You are viewing this as the product owner.&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;Link&#10;                    href={`/details?id=${productId}&amp;view=customer`}&#10;                    className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-eye mr-1&quot;&gt;&lt;/i&gt;&#10;                    View as Customer&#10;                  &lt;/Link&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Farmer Product Management Header */}&#10;              &lt;div className=&quot;bg-gradient-to-r from-green-600 to-emerald-600 rounded-2xl shadow-lg p-8 mb-8 text-white&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h1 className=&quot;text-3xl font-bold mb-2&quot;&gt;&#10;                      Product Management&#10;                    &lt;/h1&gt;&#10;                    &lt;p className=&quot;text-green-100&quot;&gt;&#10;                      Manage your product listing and inventory&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-right&quot;&gt;&#10;                    &lt;div className=&quot;text-sm text-green-100 mb-1&quot;&gt;&#10;                      Product Status&#10;                    &lt;/div&gt;&#10;                    &lt;div&#10;                      className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${&#10;                        product.status === &quot;active&quot;&#10;                          ? &quot;bg-green-100 text-green-800&quot;&#10;                          : &quot;bg-red-100 text-red-800&quot;&#10;                      }`}&#10;                    &gt;&#10;                      &lt;i&#10;                        className={`fas ${product.status === &quot;active&quot; ? &quot;fa-check-circle&quot; : &quot;fa-pause-circle&quot;} mr-1`}&#10;                      &gt;&lt;/i&gt;&#10;                      {product.status === &quot;active&quot; ? &quot;Active&quot; : &quot;Inactive&quot;}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-3 gap-8&quot;&gt;&#10;                {/* Product Images &amp; Info */}&#10;                &lt;div className=&quot;lg:col-span-2 space-y-6&quot;&gt;&#10;                  {/* Image Management */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                        Product Images ({product.images?.length || 0})&#10;                      &lt;/h3&gt;&#10;                      &lt;button className=&quot;text-blue-600 hover:text-blue-700 text-sm font-medium&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-plus mr-1&quot;&gt;&lt;/i&gt;&#10;                        Add Images&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Current Images Display */}&#10;                    {(() =&gt; {&#10;                      // Debug logging for farmer view&#10;                      console.log(&quot;=== FARMER VIEW IMAGE DEBUG ===&quot;);&#10;                      console.log(&quot;Product object:&quot;, product);&#10;                      console.log(&quot;Product images array:&quot;, product.images);&#10;                      console.log(&quot;Product single image:&quot;, product.image);&#10;                      console.log(&quot;Images length:&quot;, product.images?.length);&#10;                      console.log(&quot;Has single image:&quot;, !!product.image);&#10;&#10;                      // Combine both image sources&#10;                      const allImages = [];&#10;                      if (product.image) {&#10;                        allImages.push(product.image);&#10;                      }&#10;                      if (product.images &amp;&amp; product.images.length &gt; 0) {&#10;                        allImages.push(...product.images);&#10;                      }&#10;&#10;                      console.log(&quot;Combined images:&quot;, allImages);&#10;                      console.log(&quot;Total image count:&quot;, allImages.length);&#10;                      console.log(&quot;=== END DEBUG ===&quot;);&#10;&#10;                      return null;&#10;                    })()}&#10;&#10;                    {(() =&gt; {&#10;                      // Combine both image sources&#10;                      const allImages = [];&#10;                      if (product.image) {&#10;                        allImages.push(product.image);&#10;                      }&#10;                      if (product.images &amp;&amp; product.images.length &gt; 0) {&#10;                        allImages.push(...product.images);&#10;                      }&#10;&#10;                      return allImages.length &gt; 0 ? (&#10;                        &lt;div className=&quot;grid grid-cols-2 md:grid-cols-3 gap-4&quot;&gt;&#10;                          {allImages.map((image, index) =&gt; {&#10;                            console.log(&#10;                              `Rendering farmer view image ${index + 1}:`,&#10;                              image,&#10;                            );&#10;                            return (&#10;                              &lt;div key={index} className=&quot;relative group&quot;&gt;&#10;                                &lt;div className=&quot;aspect-square bg-gray-100 dark:bg-gray-700 rounded-lg overflow-hidden&quot;&gt;&#10;                                  &lt;Image&#10;                                    src={image}&#10;                                    alt={`${product.name} ${index + 1}`}&#10;                                    width={200}&#10;                                    height={200}&#10;                                    className=&quot;w-full h-full object-cover transition-transform group-hover:scale-105&quot;&#10;                                    onError={(e) =&gt; {&#10;                                      console.log(&#10;                                        &quot;Farmer view image load ERROR:&quot;,&#10;                                        {&#10;                                          index,&#10;                                          originalSrc: image,&#10;                                          errorEvent: e,&#10;                                        },&#10;                                      );&#10;                                      e.target.src =&#10;                                        &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=200&amp;h=200&amp;fit=crop&quot;;&#10;                                    }}&#10;                                    onLoad={() =&gt; {&#10;                                      console.log(&#10;                                        `Farmer view image ${index + 1} loaded successfully:`,&#10;                                        image,&#10;                                      );&#10;                                    }}&#10;                                  /&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div className=&quot;absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity&quot;&gt;&#10;                                  &lt;button className=&quot;bg-red-500 hover:bg-red-600 text-white p-1 rounded text-xs&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-trash&quot;&gt;&lt;/i&gt;&#10;                                  &lt;/button&gt;&#10;                                &lt;/div&gt;&#10;                                {index === 0 &amp;&amp; (&#10;                                  &lt;div className=&quot;absolute bottom-2 left-2&quot;&gt;&#10;                                    &lt;span className=&quot;bg-blue-500 text-white px-2 py-1 rounded text-xs font-medium&quot;&gt;&#10;                                      Primary&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                &lt;div className=&quot;absolute bottom-2 right-2&quot;&gt;&#10;                                  &lt;span className=&quot;bg-black bg-opacity-50 text-white px-1 py-0.5 rounded text-xs&quot;&gt;&#10;                                    {index + 1}&#10;                                  &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            );&#10;                          })}&#10;&#10;                          {/* Add Image Placeholder */}&#10;                          &lt;div className=&quot;aspect-square border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg flex items-center justify-center hover:border-blue-500 hover:bg-blue-50 dark:hover:bg-blue-900/20 transition cursor-pointer&quot;&gt;&#10;                            &lt;div className=&quot;text-center&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-plus text-2xl text-gray-400 mb-2&quot;&gt;&lt;/i&gt;&#10;                              &lt;p className=&quot;text-sm text-gray-500&quot;&gt;Add Image&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;div className=&quot;w-16 h-16 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-image text-2xl text-gray-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;h4 className=&quot;text-lg font-medium text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                            No Images Uploaded&#10;                          &lt;/h4&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;                            Add product images to make your listing more&#10;                            attractive&#10;                          &lt;/p&gt;&#10;                          &lt;button className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-upload mr-1&quot;&gt;&lt;/i&gt;&#10;                            Upload Images&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      );&#10;                    })()}&#10;&#10;                    {/* Enhanced Debug info for farmer view */}&#10;                    &lt;div className=&quot;mt-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-3&quot;&gt;&#10;                      &lt;p className=&quot;text-xs font-semibold text-yellow-800 dark:text-yellow-200 mb-1&quot;&gt;&#10;                         DEBUG - Farmer View Images:&#10;                      &lt;/p&gt;&#10;                      &lt;div className=&quot;text-xs text-yellow-700 dark:text-yellow-300 space-y-1&quot;&gt;&#10;                        &lt;p&gt;&#10;                          &lt;strong&gt;Images Array Length:&lt;/strong&gt;{&quot; &quot;}&#10;                          {product.images?.length || 0}&#10;                        &lt;/p&gt;&#10;                        &lt;p&gt;&#10;                          &lt;strong&gt;Single Image Field:&lt;/strong&gt;{&quot; &quot;}&#10;                          {product.image ? &quot;Yes&quot; : &quot;No&quot;}&#10;                        &lt;/p&gt;&#10;                        &lt;p&gt;&#10;                          &lt;strong&gt;Total Images:&lt;/strong&gt;{&quot; &quot;}&#10;                          {(() =&gt; {&#10;                            const allImages = [];&#10;                            if (product.image) allImages.push(product.image);&#10;                            if (product.images &amp;&amp; product.images.length &gt; 0)&#10;                              allImages.push(...product.images);&#10;                            return allImages.length;&#10;                          })()}&#10;                        &lt;/p&gt;&#10;                        &lt;p&gt;&#10;                          &lt;strong&gt;Product ID:&lt;/strong&gt; {productId}&#10;                        &lt;/p&gt;&#10;                        {product.image &amp;&amp; (&#10;                          &lt;div className=&quot;ml-2 p-1 bg-yellow-100 dark:bg-yellow-900 rounded text-xs break-all&quot;&gt;&#10;                            &lt;strong&gt;Single Image:&lt;/strong&gt;{&quot; &quot;}&#10;                            {product.image.substring(0, 50)}...&#10;                          &lt;/div&gt;&#10;                        )}&#10;                        {product.images?.map((img, idx) =&gt; (&#10;                          &lt;div&#10;                            key={idx}&#10;                            className=&quot;ml-2 p-1 bg-yellow-100 dark:bg-yellow-900 rounded text-xs break-all&quot;&#10;                          &gt;&#10;                            &lt;strong&gt;Array Image {idx + 1}:&lt;/strong&gt; {img}&#10;                          &lt;/div&gt;&#10;                        ))}&#10;                        &lt;p&gt;&#10;                          &lt;strong&gt;API Response Check:&lt;/strong&gt; Open browser&#10;                          console for detailed logs&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Product Information */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                        Product Information&#10;                      &lt;/h3&gt;&#10;                      &lt;Link&#10;                        href={`/create?edit=${productId}`}&#10;                        className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-edit mr-1&quot;&gt;&lt;/i&gt;&#10;                        Edit Details&#10;                      &lt;/Link&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;h4 className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.name}&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          {product.category}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;                        &lt;div className=&quot;bg-gray-50 dark:bg-gray-700 rounded-lg p-4&quot;&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400 mb-1&quot;&gt;&#10;                            Current Price&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-2xl font-bold text-green-600&quot;&gt;&#10;                            ৳{product.price}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-500&quot;&gt;&#10;                            per {product.unit || &quot;kg&quot;}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;bg-gray-50 dark:bg-gray-700 rounded-lg p-4&quot;&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400 mb-1&quot;&gt;&#10;                            Current Stock&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-2xl font-bold text-blue-600&quot;&gt;&#10;                            {product.stock}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-500&quot;&gt;&#10;                            {product.unit || &quot;kg&quot;} available&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400 mb-2&quot;&gt;&#10;                          Description&#10;                        &lt;/div&gt;&#10;                        &lt;p className=&quot;text-gray-700 dark:text-gray-300 leading-relaxed&quot;&gt;&#10;                          {product.description || &quot;No description available&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {product.features &amp;&amp; (&#10;                        &lt;div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400 mb-2&quot;&gt;&#10;                            Features&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#10;                            {product.features.map((feature, index) =&gt; (&#10;                              &lt;span&#10;                                key={index}&#10;                                className=&quot;bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded text-sm&quot;&#10;                              &gt;&#10;                                {feature}&#10;                              &lt;/span&gt;&#10;                            ))}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Quick Actions */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-6&quot;&gt;&#10;                      Quick Updates&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                      {/* Stock Update */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                          Update Stock&#10;                        &lt;/label&gt;&#10;                        &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                          &lt;input&#10;                            type=&quot;number&quot;&#10;                            value={stockUpdate}&#10;                            onChange={(e) =&gt; setStockUpdate(e.target.value)}&#10;                            placeholder={product.stock.toString()}&#10;                            className=&quot;flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-white&quot;&#10;                          /&gt;&#10;                          &lt;button&#10;                            onClick={handleUpdateProduct}&#10;                            disabled={!stockUpdate || isUpdating}&#10;                            className=&quot;bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg font-medium transition&quot;&#10;                          &gt;&#10;                            {isUpdating ? &quot;Updating...&quot; : &quot;Update&quot;}&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Price Update */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                          Update Price (৳)&#10;                        &lt;/label&gt;&#10;                        &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                          &lt;input&#10;                            type=&quot;number&quot;&#10;                            value={priceUpdate}&#10;                            onChange={(e) =&gt; setPriceUpdate(e.target.value)}&#10;                            placeholder={product.price.toString()}&#10;                            className=&quot;flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-white&quot;&#10;                          /&gt;&#10;                          &lt;button&#10;                            onClick={handleUpdateProduct}&#10;                            disabled={!priceUpdate || isUpdating}&#10;                            className=&quot;bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg font-medium transition&quot;&#10;                          &gt;&#10;                            {isUpdating ? &quot;Updating...&quot; : &quot;Update&quot;}&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Sidebar - Analytics &amp; Actions */}&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {/* Performance Stats */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                      Performance&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      &lt;div className=&quot;text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-blue-600&quot;&gt;&#10;                          {product.purchaseCount || 0}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Total Sales&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;text-center p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-yellow-600&quot;&gt;&#10;                          {product.averageRating&#10;                            ? product.averageRating.toFixed(1)&#10;                            : &quot;0.0&quot;}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Average Rating&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-green-600&quot;&gt;&#10;                          {reviews?.length || 0}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Total Reviews&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                      Actions&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;div className=&quot;space-y-3&quot;&gt;&#10;                      &lt;Link&#10;                        href={`/create?edit=${productId}`}&#10;                        className=&quot;w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-edit mr-2&quot;&gt;&lt;/i&gt;&#10;                        Edit Product&#10;                      &lt;/Link&gt;&#10;&#10;                      &lt;Link&#10;                        href={`/details?id=${productId}&amp;view=customer`}&#10;                        className=&quot;w-full bg-gray-600 hover:bg-gray-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-eye mr-2&quot;&gt;&lt;/i&gt;&#10;                        View as Customer&#10;                      &lt;/Link&gt;&#10;&#10;                      &lt;button&#10;                        onClick={handleToggleStatus}&#10;                        disabled={isUpdating}&#10;                        className={`w-full py-3 px-4 rounded-lg font-medium transition flex items-center justify-center ${&#10;                          product.status === &quot;active&quot;&#10;                            ? &quot;bg-yellow-600 hover:bg-yellow-700 text-white&quot;&#10;                            : &quot;bg-green-600 hover:bg-green-700 text-white&quot;&#10;                        } ${isUpdating ? &quot;opacity-50 cursor-not-allowed&quot; : &quot;&quot;}`}&#10;                      &gt;&#10;                        {isUpdating ? (&#10;                          &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        ) : (&#10;                          &lt;i&#10;                            className={`fas ${product.status === &quot;active&quot; ? &quot;fa-pause&quot; : &quot;fa-play&quot;} mr-2`}&#10;                          &gt;&lt;/i&gt;&#10;                        )}&#10;                        {isUpdating&#10;                          ? &quot;Updating...&quot;&#10;                          : product.status === &quot;active&quot;&#10;                            ? &quot;Deactivate&quot;&#10;                            : &quot;Activate&quot;}&#10;                      &lt;/button&gt;&#10;&#10;                      &lt;button&#10;                        onClick={handleDeleteProduct}&#10;                        disabled={isUpdating}&#10;                        className={`w-full bg-red-600 hover:bg-red-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center ${&#10;                          isUpdating ? &quot;opacity-50 cursor-not-allowed&quot; : &quot;&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {isUpdating ? (&#10;                          &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        ) : (&#10;                          &lt;i className=&quot;fas fa-trash mr-2&quot;&gt;&lt;/i&gt;&#10;                        )}&#10;                        {isUpdating ? &quot;Deleting...&quot; : &quot;Delete Product&quot;}&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Recent Orders */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                      Recent Orders&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;div className=&quot;space-y-3 text-sm&quot;&gt;&#10;                      &lt;div className=&quot;text-center py-8 text-gray-500 dark:text-gray-400&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-shopping-bag text-2xl mb-2&quot;&gt;&lt;/i&gt;&#10;                        &lt;p&gt;No recent orders&lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/&gt;&#10;          ) : (&#10;            /* Regular Customer View */&#10;            &lt;&gt;&#10;              {/* Regular breadcrumb and customer interface here */}&#10;              {/* Breadcrumb */}&#10;              &lt;nav className=&quot;mb-8&quot;&gt;&#10;                &lt;ol className=&quot;flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      Home&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/products&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      Products&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;span className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                      {product.name}&#10;                    &lt;/span&gt;&#10;                  &lt;/li&gt;&#10;                &lt;/ol&gt;&#10;              &lt;/nav&gt;&#10;&#10;              &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12&quot;&gt;&#10;                {/* Product Images */}&#10;                &lt;div className=&quot;space-y-4&quot;&gt;&#10;                  &lt;div className=&quot;aspect-square bg-white dark:bg-gray-800 rounded-2xl overflow-hidden shadow-lg&quot;&gt;&#10;                    {(() =&gt; {&#10;                      // Combine both image sources for customer view&#10;                      const allImages = [];&#10;                      if (product.image) {&#10;                        allImages.push(product.image);&#10;                      }&#10;                      if (product.images &amp;&amp; product.images.length &gt; 0) {&#10;                        allImages.push(...product.images);&#10;                      }&#10;&#10;                      console.log(&#10;                        &quot;Customer view - Combined images:&quot;,&#10;                        allImages,&#10;                      );&#10;                      console.log(&#10;                        &quot;Customer view - Selected image index:&quot;,&#10;                        selectedImage,&#10;                      );&#10;                      console.log(&#10;                        &quot;Customer view - Displaying image:&quot;,&#10;                        allImages[selectedImage],&#10;                      );&#10;&#10;                      return (&#10;                        &lt;Image&#10;                          src={&#10;                            allImages[selectedImage] ||&#10;                            &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=600&amp;h=600&amp;fit=crop&quot;&#10;                          }&#10;                          alt={product.name}&#10;                          width={600}&#10;                          height={600}&#10;                          className=&quot;w-full h-full object-cover&quot;&#10;                          onError={(e) =&gt; {&#10;                            console.log(&#10;                              &quot;Customer view main image load ERROR:&quot;,&#10;                              e.target.src,&#10;                            );&#10;                            e.target.src =&#10;                              &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=600&amp;h=600&amp;fit=crop&quot;;&#10;                          }}&#10;                          onLoad={(e) =&gt; {&#10;                            console.log(&#10;                              &quot;Customer view main image loaded successfully:&quot;,&#10;                              e.target.src,&#10;                            );&#10;                          }}&#10;                        /&gt;&#10;                      );&#10;                    })()}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Thumbnail Images */}&#10;                  {(() =&gt; {&#10;                    // Combine both image sources for thumbnails&#10;                    const allImages = [];&#10;                    if (product.image) {&#10;                      allImages.push(product.image);&#10;                    }&#10;                    if (product.images &amp;&amp; product.images.length &gt; 0) {&#10;                      allImages.push(...product.images);&#10;                    }&#10;&#10;                    return allImages.length &gt; 1 ? (&#10;                      &lt;div className=&quot;grid grid-cols-5 gap-2&quot;&gt;&#10;                        {allImages.map((image, index) =&gt; (&#10;                          &lt;button&#10;                            key={index}&#10;                            onClick={() =&gt; setSelectedImage(index)}&#10;                            className={`aspect-square bg-white dark:bg-gray-800 rounded-lg overflow-hidden border-2 transition ${&#10;                              selectedImage === index&#10;                                ? &quot;border-primary-500&quot;&#10;                                : &quot;border-transparent hover:border-primary-300&quot;&#10;                            }`}&#10;                          &gt;&#10;                            &lt;Image&#10;                              src={image}&#10;                              alt={`${product.name} ${index + 1}`}&#10;                              width={100}&#10;                              height={100}&#10;                              className=&quot;w-full h-full object-cover&quot;&#10;                              onError={(e) =&gt; {&#10;                                console.log(&#10;                                  &quot;Customer view thumbnail load ERROR:&quot;,&#10;                                  e.target.src,&#10;                                );&#10;                                e.target.src =&#10;                                  &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=100&amp;h=100&amp;fit=crop&quot;;&#10;                              }}&#10;                              onLoad={() =&gt; {&#10;                                console.log(&#10;                                  `Customer view thumbnail ${index + 1} loaded successfully`,&#10;                                );&#10;                              }}&#10;                            /&gt;&#10;                          &lt;/button&gt;&#10;                        ))}&#10;                      &lt;/div&gt;&#10;                    ) : null;&#10;                  })()}&#10;                &lt;/div&gt;&#10;&#10;                {/* Product Info */}&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {/* Category and Features */}&#10;                  &lt;div className=&quot;flex items-center gap-2 flex-wrap&quot;&gt;&#10;                    &lt;span className=&quot;bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 px-3 py-1 rounded-full text-sm font-medium&quot;&gt;&#10;                      {product.category}&#10;                    &lt;/span&gt;&#10;                    {product.isOrganic &amp;&amp; (&#10;                      &lt;span className=&quot;bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                        Organic&#10;                      &lt;/span&gt;&#10;                    )}&#10;                    {product.isFresh &amp;&amp; (&#10;                      &lt;span className=&quot;bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                        Fresh&#10;                      &lt;/span&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Product Name and Farmer */}&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;flex items-center space-x-2 mb-2&quot;&gt;&#10;                      {product.isOrganic &amp;&amp; (&#10;                        &lt;span className=&quot;bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                          Organic&#10;                        &lt;/span&gt;&#10;                      )}&#10;                      {product.isFresh &amp;&amp; (&#10;                        &lt;span className=&quot;bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                          Fresh&#10;                        &lt;/span&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                    &lt;h1 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                      {product.name}&#10;                    &lt;/h1&gt;&#10;                    &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Produced by{&quot; &quot;}&#10;                      &lt;span className=&quot;font-semibold text-primary-600 dark:text-primary-400&quot;&gt;&#10;                        {product.farmer?.farmName ||&#10;                          product.farmer?.name ||&#10;                          &quot;Unknown Farm&quot;}&#10;                      &lt;/span&gt;&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Rating and Reviews */}&#10;                  &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                    &lt;StarRating&#10;                      rating={product.averageRating || 0}&#10;                      showValue={true}&#10;                    /&gt;&#10;                    &lt;span className=&quot;text-gray-500 dark:text-gray-400&quot;&gt;&#10;                      ({product.reviewCount || product.totalReviews || 0}{&quot; &quot;}&#10;                      reviews)&#10;                    &lt;/span&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; setActiveTab(&quot;reviews&quot;)}&#10;                      className=&quot;text-primary-600 dark:text-primary-400 hover:underline&quot;&#10;                    &gt;&#10;                      Write a review&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Price and Stock */}&#10;                  &lt;div className=&quot;bg-gray-100 dark:bg-gray-800 rounded-xl p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;span className=&quot;text-3xl font-bold text-primary-600 dark:text-primary-400&quot;&gt;&#10;                          ৳{product.price}&#10;                        &lt;/span&gt;&#10;                        &lt;span className=&quot;text-lg text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          /{product.unit || &quot;kg&quot;}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-right&quot;&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          Available Stock&#10;                        &lt;/p&gt;&#10;                        &lt;p className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.stock} {product.unit || &quot;kg&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Location */}&#10;                    &lt;div className=&quot;flex items-center text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-map-marker-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                      &lt;span&gt;&#10;                        {product.farmer?.location || &quot;Location not specified&quot;}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Quantity Selection */}&#10;                  &lt;div className=&quot;space-y-4&quot;&gt;&#10;                    &lt;div&gt;&#10;                      &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                        Quantity ({product.unit || &quot;kg&quot;})&#10;                      &lt;/label&gt;&#10;                      &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setQuantity(Math.max(1, quantity - 1))}&#10;                          className=&quot;w-10 h-10 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-center hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-minus text-sm&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          value={quantity}&#10;                          onChange={(e) =&gt;&#10;                            setQuantity(&#10;                              Math.max(1, parseInt(e.target.value) || 1),&#10;                            )&#10;                          }&#10;                          min=&quot;1&quot;&#10;                          max={product.stock}&#10;                          className=&quot;w-20 text-center py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                        /&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt;&#10;                            setQuantity(Math.min(product.stock, quantity + 1))&#10;                          }&#10;                          className=&quot;w-10 h-10 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-center hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-plus text-sm&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;space-y-3&quot;&gt;&#10;                    &lt;button&#10;                      onClick={handleBuyNow}&#10;                      disabled={product.stock &lt;= 0}&#10;                      className=&quot;w-full bg-primary-600 hover:bg-primary-700 dark:bg-primary-700 dark:hover:bg-primary-800 text-white py-3 px-6 rounded-lg font-medium transition-all duration-200 shadow-md hover:shadow-lg disabled:bg-gray-400&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-bolt mr-2&quot;&gt;&lt;/i&gt;&#10;                      Buy Now&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={handleAddToCart}&#10;                      disabled={isAddingToCart || product.stock &lt;= 0}&#10;                      className=&quot;w-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white py-3 px-6 rounded-lg font-medium transition disabled:bg-gray-400&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-shopping-cart mr-2&quot;&gt;&lt;/i&gt;&#10;                      {isAddingToCart ? &quot;Adding...&quot; : &quot;Add to Cart&quot;}&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={handleFavoriteToggle}&#10;                      className=&quot;w-full border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 text-gray-900 dark:text-white py-3 px-6 rounded-lg font-medium transition&quot;&#10;                    &gt;&#10;                      &lt;i&#10;                        className={`${isFavorite ? &quot;fas&quot; : &quot;far&quot;} fa-heart mr-2 ${isFavorite ? &quot;text-red-500&quot; : &quot;&quot;}`}&#10;                      &gt;&lt;/i&gt;&#10;                      Add to Favorite&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Farmer Contact */}&#10;                  &lt;div className=&quot;bg-primary-50 dark:bg-primary-900 rounded-xl p-4&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                      &lt;div className=&quot;w-12 h-12 rounded-full bg-primary-100 dark:bg-primary-800 flex items-center justify-center&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-user text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div&gt;&#10;                        &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.farmer?.name || &quot;Unknown Farmer&quot;}&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Farmer since{&quot; &quot;}&#10;                          {new Date().getFullYear() -&#10;                            (product.farmer?.experience || 5)}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Tabs Section */}&#10;              &lt;div className=&quot;mt-16&quot;&gt;&#10;                &lt;div className=&quot;border-b border-gray-200 dark:border-gray-700&quot;&gt;&#10;                  &lt;nav className=&quot;flex space-x-8&quot;&gt;&#10;                    {[&#10;                      &quot;description&quot;,&#10;                      &quot;nutrition&quot;,&#10;                      &quot;storage&quot;,&#10;                      &quot;reviews&quot;,&#10;                      &quot;farmer&quot;,&#10;                    ].map((tab) =&gt; (&#10;                      &lt;button&#10;                        key={tab}&#10;                        onClick={() =&gt; setActiveTab(tab)}&#10;                        className={`py-4 px-1 border-b-2 font-medium text-sm transition ${&#10;                          activeTab === tab&#10;                            ? &quot;border-primary-500 text-primary-600 dark:text-primary-400&quot;&#10;                            : &quot;border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {tab === &quot;nutrition&quot;&#10;                          ? &quot;Nutrition&quot;&#10;                          : tab === &quot;storage&quot;&#10;                            ? &quot;Storage&quot;&#10;                            : tab.charAt(0).toUpperCase() + tab.slice(1)}&#10;                      &lt;/button&gt;&#10;                    ))}&#10;                  &lt;/nav&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;py-8&quot;&gt;&#10;                  {/* Description Tab */}&#10;                  {activeTab === &quot;description&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-4&quot;&gt;&#10;                        Product Description&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;                        {product.description ||&#10;                          &quot;No description available for this product.&quot;}&#10;                      &lt;/p&gt;&#10;&#10;                      {product.features &amp;&amp; product.features.length &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;mt-6&quot;&gt;&#10;                          &lt;h4 className=&quot;text-lg font-medium mb-3&quot;&gt;Features&lt;/h4&gt;&#10;                          &lt;ul className=&quot;list-disc list-inside space-y-1&quot;&gt;&#10;                            {product.features.map((feature, index) =&gt; (&#10;                              &lt;li&#10;                                key={index}&#10;                                className=&quot;text-gray-600 dark:text-gray-400&quot;&#10;                              &gt;&#10;                                {feature}&#10;                              &lt;/li&gt;&#10;                            ))}&#10;                          &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Nutrition Tab */}&#10;                  {activeTab === &quot;nutrition&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        Nutritional Information&#10;                      &lt;/h3&gt;&#10;&#10;                      {product.nutritionalInformation ? (&#10;                        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden&quot;&gt;&#10;                          &lt;div className=&quot;px-6 py-4 bg-gray-50 dark:bg-gray-700 border-b border-gray-200 dark:border-gray-600&quot;&gt;&#10;                            &lt;h4 className=&quot;text-lg font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                              Per{&quot; &quot;}&#10;                              {product.nutritionalInformation.servingSize ||&#10;                                &quot;100g&quot;}{&quot; &quot;}&#10;                              serving&#10;                            &lt;/h4&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          &lt;div className=&quot;p-6&quot;&gt;&#10;                            &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                              {/* Main nutrients */}&#10;                              &lt;div className=&quot;space-y-3&quot;&gt;&#10;                                {product.nutritionalInformation.calories &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;&#10;                                      Calories&#10;                                    &lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.calories}{&quot; &quot;}&#10;                                      kcal&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.protein &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;Protein&lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.protein}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation&#10;                                  .carbohydrates &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;&#10;                                      Carbohydrates&#10;                                    &lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {&#10;                                        product.nutritionalInformation&#10;                                          .carbohydrates&#10;                                      }&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.fiber &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;Fiber&lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.fiber}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.fat &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;Fat&lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.fat}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                              &lt;/div&gt;&#10;&#10;                              {/* Vitamins and Minerals */}&#10;                              &lt;div className=&quot;space-y-3&quot;&gt;&#10;                                {product.nutritionalInformation.iron &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;Iron&lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.iron}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.vitaminB1 &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;&#10;                                      Vitamin B1&#10;                                    &lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.vitaminB1}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.vitaminC &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;&#10;                                      Vitamin C&#10;                                    &lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.vitaminC}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.gluten &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium text-orange-600&quot;&gt;&#10;                                      Allergen Info&#10;                                    &lt;/span&gt;&#10;                                    &lt;span className=&quot;text-orange-600 dark:text-orange-400&quot;&gt;&#10;                                      {product.nutritionalInformation.gluten}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Nutritional information is not available for this&#10;                            product.&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Storage Instructions Tab */}&#10;                  {activeTab === &quot;storage&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        Storage Instructions&#10;                      &lt;/h3&gt;&#10;&#10;                      {product.storageInstructions ? (&#10;                        &lt;div className=&quot;bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-6&quot;&gt;&#10;                          &lt;div className=&quot;flex items-start gap-3&quot;&gt;&#10;                            &lt;div className=&quot;flex-shrink-0 mt-1&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-snowflake text-blue-600 dark:text-blue-400 text-xl&quot;&gt;&lt;/i&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;flex-1&quot;&gt;&#10;                              &lt;h4 className=&quot;text-lg font-medium text-blue-900 dark:text-blue-100 mb-3&quot;&gt;&#10;                                How to Store This Product&#10;                              &lt;/h4&gt;&#10;                              &lt;p className=&quot;text-blue-800 dark:text-blue-200 leading-relaxed&quot;&gt;&#10;                                {product.storageInstructions}&#10;                              &lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Storage instructions are not available for this&#10;                            product.&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* General storage tips */}&#10;                      &lt;div className=&quot;mt-8&quot;&gt;&#10;                        &lt;h4 className=&quot;text-lg font-medium mb-4&quot;&gt;&#10;                          General Storage Tips&#10;                        &lt;/h4&gt;&#10;                        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;                          &lt;div className=&quot;bg-gray-50 dark:bg-gray-800 rounded-lg p-4&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center gap-2 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-thermometer-half text-green-600&quot;&gt;&lt;/i&gt;&#10;                              &lt;span className=&quot;font-medium&quot;&gt;Temperature&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Keep at recommended temperature to maintain&#10;                              freshness&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          &lt;div className=&quot;bg-gray-50 dark:bg-gray-800 rounded-lg p-4&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center gap-2 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-tint text-blue-600&quot;&gt;&lt;/i&gt;&#10;                              &lt;span className=&quot;font-medium&quot;&gt;Moisture&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Control humidity levels to prevent spoilage&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          &lt;div className=&quot;bg-gray-50 dark:bg-gray-800 rounded-lg p-4&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center gap-2 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-sun text-yellow-600&quot;&gt;&lt;/i&gt;&#10;                              &lt;span className=&quot;font-medium&quot;&gt;Light&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Store away from direct sunlight when specified&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          &lt;div className=&quot;bg-gray-50 dark:bg-gray-800 rounded-lg p-4&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center gap-2 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-clock text-purple-600&quot;&gt;&lt;/i&gt;&#10;                              &lt;span className=&quot;font-medium&quot;&gt;Freshness&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Consume within recommended timeframe&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Reviews Tab */}&#10;                  {activeTab === &quot;reviews&quot; &amp;&amp; (&#10;                    &lt;div&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-8&quot;&gt;&#10;                        &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          Customer Reviews&#10;                        &lt;/h2&gt;&#10;                        {session &amp;&amp; (&#10;                          &lt;button&#10;                            onClick={() =&gt; setShowReviewForm(true)}&#10;                            className=&quot;bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg font-medium transition&quot;&#10;                          &gt;&#10;                            Write a Review&#10;                          &lt;/button&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Review Summary */}&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-6 mb-8&quot;&gt;&#10;                        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-8&quot;&gt;&#10;                          &lt;div&gt;&#10;                            &lt;div className=&quot;flex items-center space-x-2 mb-4&quot;&gt;&#10;                              &lt;span className=&quot;text-4xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                                {(() =&gt; {&#10;                                  // Use reviews from API call, which should contain the product's reviews array&#10;                                  const allReviews = reviews || [];&#10;                                  if (allReviews.length === 0) {&#10;                                    // Fallback to product's original rating if no reviews from API&#10;                                    return (&#10;                                      product.averageRating ||&#10;                                      product.rating ||&#10;                                      0&#10;                                    ).toFixed(1);&#10;                                  }&#10;                                  const totalRating = allReviews.reduce(&#10;                                    (sum, review) =&gt;&#10;                                      sum + Number(review.rating || 0),&#10;                                    0,&#10;                                  );&#10;                                  return (&#10;                                    totalRating / allReviews.length&#10;                                  ).toFixed(1);&#10;                                })()}&#10;                              &lt;/span&gt;&#10;                              &lt;div&gt;&#10;                                &lt;div className=&quot;flex text-yellow-400 mb-1&quot;&gt;&#10;                                  {[...Array(5)].map((_, i) =&gt; {&#10;                                    // Calculate average rating from API reviews or fallback to product rating&#10;                                    const allReviews = reviews || [];&#10;                                    let avgRating = 0;&#10;                                    if (allReviews.length &gt; 0) {&#10;                                      const totalRating = allReviews.reduce(&#10;                                        (sum, review) =&gt;&#10;                                          sum + Number(review.rating || 0),&#10;                                        0,&#10;                                      );&#10;                                      avgRating =&#10;                                        totalRating / allReviews.length;&#10;                                    } else {&#10;                                      avgRating =&#10;                                        product.averageRating ||&#10;                                        product.rating ||&#10;                                        0;&#10;                                    }&#10;&#10;                                    console.log(&#10;                                      &quot;Star rendering - Average rating:&quot;,&#10;                                      avgRating,&#10;                                      &quot;Star index:&quot;,&#10;                                      i,&#10;                                    );&#10;&#10;                                    return (&#10;                                      &lt;i&#10;                                        key={i}&#10;                                        className={`fas fa-star ${&#10;                                          i &lt; Math.round(avgRating)&#10;                                            ? &quot;text-yellow-400&quot;&#10;                                            : &quot;text-gray-300&quot;&#10;                                        }`}&#10;                                      &gt;&lt;/i&gt;&#10;                                    );&#10;                                  })}&#10;                                &lt;/div&gt;&#10;                                &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                  Based on{&quot; &quot;}&#10;                                  {reviews?.length ||&#10;                                    product.totalReviews ||&#10;                                    product.reviewCount ||&#10;                                    0}{&quot; &quot;}&#10;                                  reviews&#10;                                &lt;/p&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;space-y-2&quot;&gt;&#10;                            {/* Dynamic Rating breakdown using API reviews */}&#10;                            {[5, 4, 3, 2, 1].map((star) =&gt; {&#10;                              const allReviews = reviews || [];&#10;                              const totalReviews = allReviews.length;&#10;&#10;                              // Count reviews that fall within the star range (e.g., 4.0-4.9 for 4 stars)&#10;                              const starCount = allReviews.filter((review) =&gt; {&#10;                                const rating = Number(review.rating || 0);&#10;                                return rating &gt;= star &amp;&amp; rating &lt; star + 1;&#10;                              }).length;&#10;&#10;                              const percentage =&#10;                                totalReviews &gt; 0&#10;                                  ? (starCount / totalReviews) * 100&#10;                                  : 0;&#10;&#10;                              return (&#10;                                &lt;div&#10;                                  key={star}&#10;                                  className=&quot;flex items-center space-x-2&quot;&#10;                                &gt;&#10;                                  &lt;span className=&quot;text-sm w-8&quot;&gt;{star}★&lt;/span&gt;&#10;                                  &lt;div className=&quot;flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-2&quot;&gt;&#10;                                    &lt;div&#10;                                      className=&quot;bg-yellow-400 h-2 rounded-full transition-all duration-300&quot;&#10;                                      style={{ width: `${percentage}%` }}&#10;                                    &gt;&lt;/div&gt;&#10;                                  &lt;/div&gt;&#10;                                  &lt;span className=&quot;text-sm text-gray-500 dark:text-gray-400 w-8&quot;&gt;&#10;                                    {starCount}&#10;                                  &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                              );&#10;                            })}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Review Form Modal */}&#10;                      {showReviewForm &amp;&amp; (&#10;                        &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4&quot;&gt;&#10;                          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg max-w-md w-full p-6&quot;&gt;&#10;                            &lt;h4 className=&quot;text-lg font-semibold mb-4&quot;&gt;&#10;                              Write a Review&#10;                            &lt;/h4&gt;&#10;                            &lt;form onSubmit={handleSubmitReview}&gt;&#10;                              &lt;div className=&quot;mb-4&quot;&gt;&#10;                                &lt;label className=&quot;block text-sm font-medium mb-2&quot;&gt;&#10;                                  Rating&#10;                                &lt;/label&gt;&#10;                                &lt;div className=&quot;flex gap-1&quot;&gt;&#10;                                  {[1, 2, 3, 4, 5].map((star) =&gt; (&#10;                                    &lt;button&#10;                                      key={star}&#10;                                      type=&quot;button&quot;&#10;                                      onClick={() =&gt;&#10;                                        setReviewForm({&#10;                                          ...reviewForm,&#10;                                          rating: star,&#10;                                        })&#10;                                      }&#10;                                      className={`text-2xl transition-colors ${&#10;                                        star &lt;= reviewForm.rating&#10;                                          ? &quot;text-yellow-400 hover:text-yellow-500&quot;&#10;                                          : &quot;text-gray-300 hover:text-gray-400&quot;&#10;                                      }`}&#10;                                    &gt;&#10;                                      ★&#10;                                    &lt;/button&gt;&#10;                                  ))}&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;mb-4&quot;&gt;&#10;                                &lt;label className=&quot;block text-sm font-medium mb-2&quot;&gt;&#10;                                  Comment&#10;                                &lt;/label&gt;&#10;                                &lt;textarea&#10;                                  value={reviewForm.comment}&#10;                                  onChange={(e) =&gt;&#10;                                    setReviewForm({&#10;                                      ...reviewForm,&#10;                                      comment: e.target.value,&#10;                                    })&#10;                                  }&#10;                                  className=&quot;w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 dark:bg-gray-700&quot;&#10;                                  rows=&quot;4&quot;&#10;                                  placeholder=&quot;Share your experience with this product...&quot;&#10;                                  required&#10;                                /&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;flex gap-3&quot;&gt;&#10;                                &lt;button&#10;                                  type=&quot;button&quot;&#10;                                  onClick={() =&gt; setShowReviewForm(false)}&#10;                                  className=&quot;flex-1 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition&quot;&#10;                                &gt;&#10;                                  Cancel&#10;                                &lt;/button&gt;&#10;                                &lt;button&#10;                                  type=&quot;submit&quot;&#10;                                  disabled={&#10;                                    isSubmittingReview ||&#10;                                    !reviewForm.comment.trim()&#10;                                  }&#10;                                  className=&quot;flex-1 bg-primary-600 hover:bg-primary-700 text-white py-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed transition&quot;&#10;                                &gt;&#10;                                  {isSubmittingReview&#10;                                    ? &quot;Submitting...&quot;&#10;                                    : &quot;Submit Review&quot;}&#10;                                &lt;/button&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/form&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* Individual Reviews */}&#10;                      &lt;div className=&quot;space-y-6&quot;&gt;&#10;                        {/* Only display reviews from API call */}&#10;                        {(() =&gt; {&#10;                          const allReviews = reviews || [];&#10;&#10;                          if (allReviews.length === 0) {&#10;                            return (&#10;                              &lt;div className=&quot;text-center py-12&quot;&gt;&#10;                                &lt;div className=&quot;w-16 h-16 bg-gray-100 dark:bg-gray-800 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#10;                                  &lt;i className=&quot;fas fa-comment-alt text-2xl text-gray-400&quot;&gt;&lt;/i&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;h3 className=&quot;text-lg font-medium text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                                  No reviews yet&#10;                                &lt;/h3&gt;&#10;                                &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-6&quot;&gt;&#10;                                  Be the first to share your thoughts about this&#10;                                  product.&#10;                                &lt;/p&gt;&#10;                                {session &amp;&amp; (&#10;                                  &lt;button&#10;                                    onClick={() =&gt; setShowReviewForm(true)}&#10;                                    className=&quot;bg-primary-600 hover:bg-primary-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#10;                                  &gt;&#10;                                    Write the First Review&#10;                                  &lt;/button&gt;&#10;                                )}&#10;                              &lt;/div&gt;&#10;                            );&#10;                          }&#10;&#10;                          return allReviews.map((review, index) =&gt; (&#10;                            &lt;div&#10;                              key={review._id || index}&#10;                              className=&quot;bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm&quot;&#10;                            &gt;&#10;                              &lt;div className=&quot;flex items-start space-x-4&quot;&gt;&#10;                                &lt;div className=&quot;w-12 h-12 rounded-full bg-primary-100 dark:bg-primary-900 flex items-center justify-center&quot;&gt;&#10;                                  &lt;i className=&quot;fas fa-user text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div className=&quot;flex-1&quot;&gt;&#10;                                  &lt;div className=&quot;flex items-center justify-between mb-2&quot;&gt;&#10;                                    &lt;div&gt;&#10;                                      &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;                                        &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                                          {review.userName || &quot;Anonymous&quot;}&#10;                                        &lt;/h4&gt;&#10;                                        {review.isCurrentUser &amp;&amp; (&#10;                                          &lt;span className=&quot;bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 px-2 py-1 rounded text-xs&quot;&gt;&#10;                                            Your Review&#10;                                          &lt;/span&gt;&#10;                                        )}&#10;                                        &lt;span className=&quot;bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded text-xs&quot;&gt;&#10;                                          Verified Purchase&#10;                                        &lt;/span&gt;&#10;                                      &lt;/div&gt;&#10;                                      &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                                        &lt;div className=&quot;flex text-yellow-400 text-sm&quot;&gt;&#10;                                          {[...Array(5)].map((_, i) =&gt; {&#10;                                            const reviewRating = Number(&#10;                                              review.rating || 0,&#10;                                            );&#10;                                            console.log(&#10;                                              `Review by ${review.userName} - Rating: ${reviewRating}, Star ${i + 1}: ${i &lt; Math.floor(reviewRating) ? &quot;filled&quot; : &quot;empty&quot;}`,&#10;                                            );&#10;&#10;                                            return (&#10;                                              &lt;i&#10;                                                key={i}&#10;                                                className={`fas fa-star ${&#10;                                                  i &lt; Math.floor(reviewRating)&#10;                                                    ? &quot;text-yellow-400&quot;&#10;                                                    : &quot;text-gray-300&quot;&#10;                                                }`}&#10;                                              &gt;&lt;/i&gt;&#10;                                            );&#10;                                          })}&#10;                                        &lt;/div&gt;&#10;                                        &lt;span className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                          {review.createdAt&#10;                                            ? new Date(&#10;                                                review.createdAt,&#10;                                              ).toLocaleDateString()&#10;                                            : &quot;Unknown date&quot;}&#10;                                        &lt;/span&gt;&#10;                                      &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;button className=&quot;text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition&quot;&gt;&#10;                                      &lt;i className=&quot;fas fa-ellipsis-v&quot;&gt;&lt;/i&gt;&#10;                                    &lt;/button&gt;&#10;                                  &lt;/div&gt;&#10;                                  &lt;p className=&quot;text-gray-700 dark:text-gray-300 mb-3 leading-relaxed&quot;&gt;&#10;                                    {review.comment}&#10;                                  &lt;/p&gt;&#10;                                  &lt;div className=&quot;flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                    &lt;button className=&quot;hover:text-primary-600 dark:hover:text-primary-400 transition&quot;&gt;&#10;                                      &lt;i className=&quot;far fa-thumbs-up mr-1&quot;&gt;&lt;/i&gt;&#10;                                      Helpful (&#10;                                      {Math.floor(Math.random() * 15) + 1})&#10;                                    &lt;/button&gt;&#10;                                    &lt;button className=&quot;hover:text-primary-600 dark:hover:text-primary-400 transition&quot;&gt;&#10;                                      Reply&#10;                                    &lt;/button&gt;&#10;                                    {review.isCurrentUser &amp;&amp; (&#10;                                      &lt;button className=&quot;hover:text-red-600 dark:hover:text-red-400 transition&quot;&gt;&#10;                                        Edit&#10;                                      &lt;/button&gt;&#10;                                    )}&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          ));&#10;                        })()}&#10;&#10;                        {/* Load More Reviews Button */}&#10;                        {hasMoreReviews &amp;&amp; (&#10;                          &lt;div className=&quot;text-center mt-8&quot;&gt;&#10;                            &lt;button&#10;                              onClick={loadMoreReviews}&#10;                              className=&quot;bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white px-6 py-3 rounded-lg font-medium transition&quot;&#10;                            &gt;&#10;                              Load More Reviews&#10;                            &lt;/button&gt;&#10;                          &lt;/div&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Farmer Info Tab */}&#10;                  {activeTab === &quot;farmer&quot; &amp;&amp; (&#10;                    &lt;div&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        About the Farmer&#10;                      &lt;/h3&gt;&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg p-6 shadow-lg&quot;&gt;&#10;                        &lt;div className=&quot;flex items-start gap-4&quot;&gt;&#10;                          &lt;div className=&quot;w-16 h-16 bg-primary-100 dark:bg-primary-900 rounded-full flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-user text-2xl text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;flex-1&quot;&gt;&#10;                            &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;                              {product.farmer?.name || &quot;Unknown Farmer&quot;}&#10;                            &lt;/h4&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-3&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-map-marker-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                              {product.farmer?.location ||&#10;                                &quot;Location not specified&quot;}&#10;                            &lt;/p&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              {product.farmer?.bio ||&#10;                                &quot;No farmer information available.&quot;}&#10;                            &lt;/p&gt;&#10;&#10;                            {product.farmer?.experience &amp;&amp; (&#10;                              &lt;div className=&quot;mt-4&quot;&gt;&#10;                                &lt;span className=&quot;text-sm text-gray-500&quot;&gt;&#10;                                  Experience:{&quot; &quot;}&#10;                                &lt;/span&gt;&#10;                                &lt;span className=&quot;font-medium&quot;&gt;&#10;                                  {product.farmer.experience} years&#10;                                &lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Related Products */}&#10;              {relatedProducts.length &gt; 0 &amp;&amp; (&#10;                &lt;div className=&quot;mt-16&quot;&gt;&#10;                  &lt;h3 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-8&quot;&gt;&#10;                    Related Products&#10;                  &lt;/h3&gt;&#10;                  &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6&quot;&gt;&#10;                    {relatedProducts.map((relatedProduct) =&gt; (&#10;                      &lt;ProductCard&#10;                        key={relatedProduct._id}&#10;                        product={relatedProduct}&#10;                      /&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import Link from &quot;next/link&quot;;&#10;import Image from &quot;next/image&quot;;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { useSearchParams } from &quot;next/navigation&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useCart } from &quot;@/contexts/CartContext&quot;;&#10;import ProductCard from &quot;@/components/ProductCard&quot;;&#10;import StarRating from &quot;@/components/StarRating&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;&#10;export default function ProductDetails() {&#10;  const searchParams = useSearchParams();&#10;  const productId = searchParams.get(&quot;id&quot;);&#10;  const viewMode = searchParams.get(&quot;view&quot;); // Check for view parameter&#10;  const { data: session } = useSession();&#10;  const { addToCart } = useCart();&#10;&#10;  const [product, setProduct] = useState(null);&#10;  const [relatedProducts, setRelatedProducts] = useState([]);&#10;  const [reviews, setReviews] = useState([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [selectedImage, setSelectedImage] = useState(0);&#10;  const [quantity, setQuantity] = useState(1);&#10;  const [activeTab, setActiveTab] = useState(&quot;description&quot;);&#10;  const [reviewsPage, setReviewsPage] = useState(1);&#10;  const [hasMoreReviews, setHasMoreReviews] = useState(false);&#10;  const [isAddingToCart, setIsAddingToCart] = useState(false);&#10;  const [isFavorite, setIsFavorite] = useState(false);&#10;  const [isOwner, setIsOwner] = useState(false);&#10;&#10;  // Review form state&#10;  const [showReviewForm, setShowReviewForm] = useState(false);&#10;  const [reviewForm, setReviewForm] = useState({ rating: 5, comment: &quot;&quot; });&#10;  const [isSubmittingReview, setIsSubmittingReview] = useState(false);&#10;&#10;  // Farmer-specific states&#10;  const [editMode, setEditMode] = useState(false);&#10;  const [stockUpdate, setStockUpdate] = useState(&quot;&quot;);&#10;  const [priceUpdate, setPriceUpdate] = useState(&quot;&quot;);&#10;  const [isUpdating, setIsUpdating] = useState(false);&#10;&#10;  useEffect(() =&gt; {&#10;    if (productId) {&#10;      fetchProductDetails();&#10;      fetchReviews();&#10;    }&#10;  }, [productId]);&#10;&#10;  const fetchProductDetails = async () =&gt; {&#10;    console.log(&quot; FETCHING PRODUCT DETAILS - START&quot;);&#10;    console.log(&quot;Product ID from URL:&quot;, productId);&#10;    console.log(&quot;View Mode:&quot;, viewMode);&#10;&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`);&#10;      console.log(&quot;API Response Status:&quot;, response.status);&#10;&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;        console.log(&quot; RAW API RESPONSE:&quot;, data);&#10;        console.log(&quot; PRODUCT DATA:&quot;, data.product);&#10;        console.log(&quot; PRODUCT IMAGES:&quot;, data.product?.images);&#10;        console.log(&quot; IMAGES TYPE:&quot;, typeof data.product?.images);&#10;        console.log(&#10;          &quot; IMAGES ARRAY CHECK:&quot;,&#10;          Array.isArray(data.product?.images),&#10;        );&#10;&#10;        setProduct(data.product);&#10;        setRelatedProducts(data.relatedProducts);&#10;&#10;        // Check ownership only if not forcing customer view&#10;        if (viewMode !== &quot;customer&quot;) {&#10;          setIsOwner(checkOwnership(data.product));&#10;        } else {&#10;          setIsOwner(false); // Force customer view&#10;        }&#10;      } else {&#10;        console.error(&#10;          &quot;API Response Error:&quot;,&#10;          response.status,&#10;          response.statusText,&#10;        );&#10;        const errorData = await response.text();&#10;        console.error(&quot;Error Response Body:&quot;, errorData);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching product details:&quot;, error);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  const fetchReviews = async (page = 1, append = false) =&gt; {&#10;    try {&#10;      const response = await fetch(&#10;        `/api/products/${productId}/reviews?page=${page}`,&#10;      );&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;&#10;        if (append) {&#10;          setReviews((prev) =&gt; [...prev, ...data.reviews]);&#10;        } else {&#10;          setReviews(data.reviews);&#10;        }&#10;        setHasMoreReviews(data.hasMore);&#10;        setReviewsPage(page);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching reviews:&quot;, error);&#10;    }&#10;  };&#10;&#10;  const handleAddToCart = async () =&gt; {&#10;    if (!session?.user) {&#10;      // Redirect to login if not authenticated&#10;      window.location.href = &quot;/login&quot;;&#10;      return;&#10;    }&#10;&#10;    setIsAddingToCart(true);&#10;    try {&#10;      // Use consistent user ID format&#10;      const userId =&#10;        session.user.userId ||&#10;        session.user.id ||&#10;        session.user._id ||&#10;        session.user.email;&#10;&#10;      const response = await fetch(&quot;/api/cart&quot;, {&#10;        method: &quot;POST&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify({&#10;          productId: productId,&#10;          quantity: quantity,&#10;          userId: userId,&#10;        }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Product added to cart successfully!&quot;);&#10;      } else {&#10;        const errorData = await response.json();&#10;        alert(errorData.error || &quot;Failed to add to cart&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error adding to cart:&quot;, error);&#10;      alert(&quot;Failed to add product to cart. Please try again.&quot;);&#10;    } finally {&#10;      setIsAddingToCart(false);&#10;    }&#10;  };&#10;&#10;  const handleBuyNow = async () =&gt; {&#10;    if (!session?.user) {&#10;      // Redirect to login if not authenticated&#10;      window.location.href = &quot;/login&quot;;&#10;      return;&#10;    }&#10;&#10;    // First add to cart, then navigate to payment&#10;    setIsAddingToCart(true);&#10;    try {&#10;      // Use consistent user ID format&#10;      const userId =&#10;        session.user.userId ||&#10;        session.user.id ||&#10;        session.user._id ||&#10;        session.user.email;&#10;&#10;      const response = await fetch(&quot;/api/cart&quot;, {&#10;        method: &quot;POST&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify({&#10;          productId: productId,&#10;          quantity: quantity,&#10;          userId: userId,&#10;        }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        // Navigate to payment page&#10;        window.location.href = &quot;/payment&quot;;&#10;      } else {&#10;        const errorData = await response.json();&#10;        alert(errorData.error || &quot;Failed to add to cart&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error processing buy now:&quot;, error);&#10;      alert(&quot;Failed to process order. Please try again.&quot;);&#10;    } finally {&#10;      setIsAddingToCart(false);&#10;    }&#10;  };&#10;&#10;  const handleFavoriteToggle = async () =&gt; {&#10;    setIsFavorite(!isFavorite);&#10;    // TODO: Implement favorite API call&#10;  };&#10;&#10;  const handleSubmitReview = async (e) =&gt; {&#10;    e.preventDefault();&#10;    if (!session) {&#10;      alert(&quot;Please login to submit a review&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsSubmittingReview(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}/reviews`, {&#10;        method: &quot;POST&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify(reviewForm),&#10;      });&#10;&#10;      if (response.ok) {&#10;        setShowReviewForm(false);&#10;        setReviewForm({ rating: 5, comment: &quot;&quot; });&#10;        fetchReviews(); // Refresh reviews&#10;        fetchProductDetails(); // Refresh product rating&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to submit review&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error submitting review:&quot;, error);&#10;      alert(&quot;Failed to submit review&quot;);&#10;    } finally {&#10;      setIsSubmittingReview(false);&#10;    }&#10;  };&#10;&#10;  const loadMoreReviews = () =&gt; {&#10;    fetchReviews(reviewsPage + 1, true);&#10;  };&#10;&#10;  // Check if current user owns this product&#10;  const checkOwnership = (productData) =&gt; {&#10;    if (!session?.user || !productData) return false;&#10;&#10;    const userId = session.user.userId || session.user.id || session.user._id;&#10;    const userEmail = session.user.email;&#10;&#10;    return (&#10;      productData.farmerId === userId ||&#10;      productData.farmerId === String(userId) ||&#10;      productData.farmerEmail === userEmail ||&#10;      productData.farmer?.email === userEmail ||&#10;      productData.farmer?.id === userId&#10;    );&#10;  };&#10;&#10;  const handleUpdateProduct = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    // Validate input&#10;    if (!stockUpdate &amp;&amp; !priceUpdate) {&#10;      alert(&quot;Please enter a value to update&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const updateData = {};&#10;&#10;      // Only include fields that have values&#10;      if (stockUpdate &amp;&amp; stockUpdate.trim() !== &quot;&quot;) {&#10;        const stockValue = parseInt(stockUpdate);&#10;        if (isNaN(stockValue) || stockValue &lt; 0) {&#10;          alert(&quot;Please enter a valid stock number&quot;);&#10;          setIsUpdating(false);&#10;          return;&#10;        }&#10;        updateData.stock = stockValue;&#10;      }&#10;&#10;      if (priceUpdate &amp;&amp; priceUpdate.trim() !== &quot;&quot;) {&#10;        const priceValue = parseFloat(priceUpdate);&#10;        if (isNaN(priceValue) || priceValue &lt;= 0) {&#10;          alert(&quot;Please enter a valid price&quot;);&#10;          setIsUpdating(false);&#10;          return;&#10;        }&#10;        updateData.price = priceValue;&#10;      }&#10;&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify(updateData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Product updated successfully!&quot;);&#10;        fetchProductDetails(); // Refresh product details&#10;        setStockUpdate(&quot;&quot;); // Clear input&#10;        setPriceUpdate(&quot;&quot;); // Clear input&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to update product&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error updating product:&quot;, error);&#10;      alert(&quot;Failed to update product. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleStockUpdate = async () =&gt; {&#10;    if (!stockUpdate || !stockUpdate.trim()) {&#10;      alert(&quot;Please enter a stock value&quot;);&#10;      return;&#10;    }&#10;&#10;    const stockValue = parseInt(stockUpdate);&#10;    if (isNaN(stockValue) || stockValue &lt; 0) {&#10;      alert(&quot;Please enter a valid stock number&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify({ stock: stockValue }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Stock updated successfully!&quot;);&#10;        fetchProductDetails();&#10;        setStockUpdate(&quot;&quot;);&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to update stock&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error updating stock:&quot;, error);&#10;      alert(&quot;Failed to update stock. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handlePriceUpdate = async () =&gt; {&#10;    if (!priceUpdate || !priceUpdate.trim()) {&#10;      alert(&quot;Please enter a price value&quot;);&#10;      return;&#10;    }&#10;&#10;    const priceValue = parseFloat(priceUpdate);&#10;    if (isNaN(priceValue) || priceValue &lt;= 0) {&#10;      alert(&quot;Please enter a valid price&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify({ price: priceValue }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Price updated successfully!&quot;);&#10;        fetchProductDetails();&#10;        setPriceUpdate(&quot;&quot;);&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to update price&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error updating price:&quot;, error);&#10;      alert(&quot;Failed to update price. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleToggleStatus = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    const newStatus = product.status === &quot;active&quot; ? &quot;inactive&quot; : &quot;active&quot;;&#10;    const actionText = newStatus === &quot;active&quot; ? &quot;activate&quot; : &quot;deactivate&quot;;&#10;&#10;    if (!confirm(`Are you sure you want to ${actionText} this product?`)) {&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify({ status: newStatus }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(`Product ${actionText}d successfully!`);&#10;        fetchProductDetails();&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || `Failed to ${actionText} product`);&#10;      }&#10;    } catch (error) {&#10;      console.error(`Error ${actionText}ing product:`, error);&#10;      alert(`Failed to ${actionText} product. Please try again.`);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleDeleteProduct = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    if (&#10;      !confirm(&#10;        &quot;⚠️ Are you sure you want to delete this product?\n\nThis action cannot be undone and will remove:\n• The product listing\n• All associated data\n• Product from any pending orders&quot;,&#10;      )&#10;    ) {&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;DELETE&quot;,&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Product deleted successfully!&quot;);&#10;        window.location.href = &quot;/manage&quot;; // Redirect to dashboard&#10;      } else {&#10;        const error = await response.json();&#10;        if (response.status === 409) {&#10;          alert(&#10;            &quot;❌ Cannot Delete Product\n\nThis product has pending orders and cannot be deleted.\nPlease wait for all orders to be completed or cancelled before deleting this product.\n\nYou can temporarily deactivate the product instead.&quot;,&#10;          );&#10;        } else {&#10;          alert(error.error || &quot;Failed to delete product&quot;);&#10;        }&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error deleting product:&quot;, error);&#10;      alert(&quot;Failed to delete product. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12&quot;&gt;&#10;              &lt;div className=&quot;space-y-4&quot;&gt;&#10;                &lt;div className=&quot;aspect-square bg-gray-300 dark:bg-gray-600 rounded-2xl&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;grid grid-cols-5 gap-2&quot;&gt;&#10;                  {[...Array(5)].map((_, i) =&gt; (&#10;                    &lt;div&#10;                      key={i}&#10;                      className=&quot;aspect-square bg-gray-300 dark:bg-gray-600 rounded-lg&quot;&#10;                    &gt;&lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                &lt;div className=&quot;h-8 bg-gray-300 dark:bg-gray-600 rounded w-3/4&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-4 bg-gray-300 dark:bg-gray-600 rounded w-1/2&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-6 bg-gray-300 dark:bg-gray-600 rounded w-1/4&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-10 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  if (!product) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center&quot;&gt;&#10;          &lt;h1 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;            Product not found&#10;          &lt;/h1&gt;&#10;          &lt;Link&#10;            href=&quot;/products&quot;&#10;            className=&quot;text-primary-600 hover:text-primary-700&quot;&#10;          &gt;&#10;            Browse all products&#10;          &lt;/Link&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          {/* Show farmer view only if isOwner is true AND viewMode is not &quot;customer&quot; */}&#10;          {isOwner &amp;&amp; viewMode !== &quot;customer&quot; ? (&#10;            &lt;&gt;&#10;              {/* Farmer Breadcrumb */}&#10;              &lt;nav className=&quot;mb-8&quot;&gt;&#10;                &lt;ol className=&quot;flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/manage&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-tachometer-alt mr-1&quot;&gt;&lt;/i&gt;&#10;                      Dashboard&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;span className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                      {product.name} - Management&#10;                    &lt;/span&gt;&#10;                  &lt;/li&gt;&#10;                &lt;/ol&gt;&#10;              &lt;/nav&gt;&#10;&#10;              {/* Add Customer View Notice */}&#10;              &lt;div className=&quot;bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4 mb-6&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-info-circle text-blue-600 dark:text-blue-400 mr-2&quot;&gt;&lt;/i&gt;&#10;                    &lt;span className=&quot;text-blue-800 dark:text-blue-200&quot;&gt;&#10;                      You are viewing this as the product owner.&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;Link&#10;                    href={`/details?id=${productId}&amp;view=customer`}&#10;                    className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-eye mr-1&quot;&gt;&lt;/i&gt;&#10;                    View as Customer&#10;                  &lt;/Link&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Farmer Product Management Header */}&#10;              &lt;div className=&quot;bg-gradient-to-r from-green-600 to-emerald-600 rounded-2xl shadow-lg p-8 mb-8 text-white&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h1 className=&quot;text-3xl font-bold mb-2&quot;&gt;&#10;                      Product Management&#10;                    &lt;/h1&gt;&#10;                    &lt;p className=&quot;text-green-100&quot;&gt;&#10;                      Manage your product listing and inventory&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-right&quot;&gt;&#10;                    &lt;div className=&quot;text-sm text-green-100 mb-1&quot;&gt;&#10;                      Product Status&#10;                    &lt;/div&gt;&#10;                    &lt;div&#10;                      className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${&#10;                        product.status === &quot;active&quot;&#10;                          ? &quot;bg-green-100 text-green-800&quot;&#10;                          : &quot;bg-red-100 text-red-800&quot;&#10;                      }`}&#10;                    &gt;&#10;                      &lt;i&#10;                        className={`fas ${product.status === &quot;active&quot; ? &quot;fa-check-circle&quot; : &quot;fa-pause-circle&quot;} mr-1`}&#10;                      &gt;&lt;/i&gt;&#10;                      {product.status === &quot;active&quot; ? &quot;Active&quot; : &quot;Inactive&quot;}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-3 gap-8&quot;&gt;&#10;                {/* Product Images &amp; Info */}&#10;                &lt;div className=&quot;lg:col-span-2 space-y-6&quot;&gt;&#10;                  {/* Image Management */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                        Product Images ({product.images?.length || 0})&#10;                      &lt;/h3&gt;&#10;                      &lt;button className=&quot;text-blue-600 hover:text-blue-700 text-sm font-medium&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-plus mr-1&quot;&gt;&lt;/i&gt;&#10;                        Add Images&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Current Images Display */}&#10;                    {(() =&gt; {&#10;                      // Debug logging for farmer view&#10;                      console.log(&quot;=== FARMER VIEW IMAGE DEBUG ===&quot;);&#10;                      console.log(&quot;Product object:&quot;, product);&#10;                      console.log(&quot;Product images array:&quot;, product.images);&#10;                      console.log(&quot;Product single image:&quot;, product.image);&#10;                      console.log(&quot;Images length:&quot;, product.images?.length);&#10;                      console.log(&quot;Has single image:&quot;, !!product.image);&#10;&#10;                      // Combine both image sources&#10;                      const allImages = [];&#10;                      if (product.image) {&#10;                        allImages.push(product.image);&#10;                      }&#10;                      if (product.images &amp;&amp; product.images.length &gt; 0) {&#10;                        allImages.push(...product.images);&#10;                      }&#10;&#10;                      console.log(&quot;Combined images:&quot;, allImages);&#10;                      console.log(&quot;Total image count:&quot;, allImages.length);&#10;                      console.log(&quot;=== END DEBUG ===&quot;);&#10;&#10;                      return null;&#10;                    })()}&#10;&#10;                    {(() =&gt; {&#10;                      // Combine both image sources&#10;                      const allImages = [];&#10;                      if (product.image) {&#10;                        allImages.push(product.image);&#10;                      }&#10;                      if (product.images &amp;&amp; product.images.length &gt; 0) {&#10;                        allImages.push(...product.images);&#10;                      }&#10;&#10;                      return allImages.length &gt; 0 ? (&#10;                        &lt;div className=&quot;grid grid-cols-2 md:grid-cols-3 gap-4&quot;&gt;&#10;                          {allImages.map((image, index) =&gt; {&#10;                            console.log(&#10;                              `Rendering farmer view image ${index + 1}:`,&#10;                              image,&#10;                            );&#10;                            return (&#10;                              &lt;div key={index} className=&quot;relative group&quot;&gt;&#10;                                &lt;div className=&quot;aspect-square bg-gray-100 dark:bg-gray-700 rounded-lg overflow-hidden&quot;&gt;&#10;                                  &lt;Image&#10;                                    src={image}&#10;                                    alt={`${product.name} ${index + 1}`}&#10;                                    width={200}&#10;                                    height={200}&#10;                                    className=&quot;w-full h-full object-cover transition-transform group-hover:scale-105&quot;&#10;                                    onError={(e) =&gt; {&#10;                                      console.log(&#10;                                        &quot;Farmer view image load ERROR:&quot;,&#10;                                        {&#10;                                          index,&#10;                                          originalSrc: image,&#10;                                          errorEvent: e,&#10;                                        },&#10;                                      );&#10;                                      e.target.src =&#10;                                        &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=200&amp;h=200&amp;fit=crop&quot;;&#10;                                    }}&#10;                                    onLoad={() =&gt; {&#10;                                      console.log(&#10;                                        `Farmer view image ${index + 1} loaded successfully:`,&#10;                                        image,&#10;                                      );&#10;                                    }}&#10;                                  /&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div className=&quot;absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity&quot;&gt;&#10;                                  &lt;button className=&quot;bg-red-500 hover:bg-red-600 text-white p-1 rounded text-xs&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-trash&quot;&gt;&lt;/i&gt;&#10;                                  &lt;/button&gt;&#10;                                &lt;/div&gt;&#10;                                {index === 0 &amp;&amp; (&#10;                                  &lt;div className=&quot;absolute bottom-2 left-2&quot;&gt;&#10;                                    &lt;span className=&quot;bg-blue-500 text-white px-2 py-1 rounded text-xs font-medium&quot;&gt;&#10;                                      Primary&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                &lt;div className=&quot;absolute bottom-2 right-2&quot;&gt;&#10;                                  &lt;span className=&quot;bg-black bg-opacity-50 text-white px-1 py-0.5 rounded text-xs&quot;&gt;&#10;                                    {index + 1}&#10;                                  &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            );&#10;                          })}&#10;&#10;                          {/* Add Image Placeholder */}&#10;                          &lt;div className=&quot;aspect-square border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg flex items-center justify-center hover:border-blue-500 hover:bg-blue-50 dark:hover:bg-blue-900/20 transition cursor-pointer&quot;&gt;&#10;                            &lt;div className=&quot;text-center&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-plus text-2xl text-gray-400 mb-2&quot;&gt;&lt;/i&gt;&#10;                              &lt;p className=&quot;text-sm text-gray-500&quot;&gt;Add Image&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;div className=&quot;w-16 h-16 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-image text-2xl text-gray-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;h4 className=&quot;text-lg font-medium text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                            No Images Uploaded&#10;                          &lt;/h4&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;                            Add product images to make your listing more&#10;                            attractive&#10;                          &lt;/p&gt;&#10;                          &lt;button className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-upload mr-1&quot;&gt;&lt;/i&gt;&#10;                            Upload Images&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      );&#10;                    })()}&#10;&#10;                    {/* Enhanced Debug info for farmer view */}&#10;                    &lt;div className=&quot;mt-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-3&quot;&gt;&#10;                      &lt;p className=&quot;text-xs font-semibold text-yellow-800 dark:text-yellow-200 mb-1&quot;&gt;&#10;                         DEBUG - Farmer View Images:&#10;                      &lt;/p&gt;&#10;                      &lt;div className=&quot;text-xs text-yellow-700 dark:text-yellow-300 space-y-1&quot;&gt;&#10;                        &lt;p&gt;&#10;                          &lt;strong&gt;Images Array Length:&lt;/strong&gt;{&quot; &quot;}&#10;                          {product.images?.length || 0}&#10;                        &lt;/p&gt;&#10;                        &lt;p&gt;&#10;                          &lt;strong&gt;Single Image Field:&lt;/strong&gt;{&quot; &quot;}&#10;                          {product.image ? &quot;Yes&quot; : &quot;No&quot;}&#10;                        &lt;/p&gt;&#10;                        &lt;p&gt;&#10;                          &lt;strong&gt;Total Images:&lt;/strong&gt;{&quot; &quot;}&#10;                          {(() =&gt; {&#10;                            const allImages = [];&#10;                            if (product.image) allImages.push(product.image);&#10;                            if (product.images &amp;&amp; product.images.length &gt; 0)&#10;                              allImages.push(...product.images);&#10;                            return allImages.length;&#10;                          })()}&#10;                        &lt;/p&gt;&#10;                        &lt;p&gt;&#10;                          &lt;strong&gt;Product ID:&lt;/strong&gt; {productId}&#10;                        &lt;/p&gt;&#10;                        {product.image &amp;&amp; (&#10;                          &lt;div className=&quot;ml-2 p-1 bg-yellow-100 dark:bg-yellow-900 rounded text-xs break-all&quot;&gt;&#10;                            &lt;strong&gt;Single Image:&lt;/strong&gt;{&quot; &quot;}&#10;                            {product.image.substring(0, 50)}...&#10;                          &lt;/div&gt;&#10;                        )}&#10;                        {product.images?.map((img, idx) =&gt; (&#10;                          &lt;div&#10;                            key={idx}&#10;                            className=&quot;ml-2 p-1 bg-yellow-100 dark:bg-yellow-900 rounded text-xs break-all&quot;&#10;                          &gt;&#10;                            &lt;strong&gt;Array Image {idx + 1}:&lt;/strong&gt; {img}&#10;                          &lt;/div&gt;&#10;                        ))}&#10;                        &lt;p&gt;&#10;                          &lt;strong&gt;API Response Check:&lt;/strong&gt; Open browser&#10;                          console for detailed logs&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Product Information */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                        Product Information&#10;                      &lt;/h3&gt;&#10;                      &lt;Link&#10;                        href={`/create?edit=${productId}`}&#10;                        className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-edit mr-1&quot;&gt;&lt;/i&gt;&#10;                        Edit Details&#10;                      &lt;/Link&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;h4 className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.name}&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          {product.category}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;                        &lt;div className=&quot;bg-gray-50 dark:bg-gray-700 rounded-lg p-4&quot;&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400 mb-1&quot;&gt;&#10;                            Current Price&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-2xl font-bold text-green-600&quot;&gt;&#10;                            ৳{product.price}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-500&quot;&gt;&#10;                            per {product.unit || &quot;kg&quot;}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;bg-gray-50 dark:bg-gray-700 rounded-lg p-4&quot;&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400 mb-1&quot;&gt;&#10;                            Current Stock&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-2xl font-bold text-blue-600&quot;&gt;&#10;                            {product.stock}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-500&quot;&gt;&#10;                            {product.unit || &quot;kg&quot;} available&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400 mb-2&quot;&gt;&#10;                          Description&#10;                        &lt;/div&gt;&#10;                        &lt;p className=&quot;text-gray-700 dark:text-gray-300 leading-relaxed&quot;&gt;&#10;                          {product.description || &quot;No description available&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {product.features &amp;&amp; (&#10;                        &lt;div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400 mb-2&quot;&gt;&#10;                            Features&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#10;                            {product.features.map((feature, index) =&gt; (&#10;                              &lt;span&#10;                                key={index}&#10;                                className=&quot;bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded text-sm&quot;&#10;                              &gt;&#10;                                {feature}&#10;                              &lt;/span&gt;&#10;                            ))}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Quick Actions */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-6&quot;&gt;&#10;                      Quick Updates&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                      {/* Stock Update */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                          Update Stock&#10;                        &lt;/label&gt;&#10;                        &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                          &lt;input&#10;                            type=&quot;number&quot;&#10;                            value={stockUpdate}&#10;                            onChange={(e) =&gt; setStockUpdate(e.target.value)}&#10;                            placeholder={product.stock.toString()}&#10;                            className=&quot;flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-white&quot;&#10;                          /&gt;&#10;                          &lt;button&#10;                            onClick={handleUpdateProduct}&#10;                            disabled={!stockUpdate || isUpdating}&#10;                            className=&quot;bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg font-medium transition&quot;&#10;                          &gt;&#10;                            {isUpdating ? &quot;Updating...&quot; : &quot;Update&quot;}&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Price Update */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                          Update Price (৳)&#10;                        &lt;/label&gt;&#10;                        &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                          &lt;input&#10;                            type=&quot;number&quot;&#10;                            value={priceUpdate}&#10;                            onChange={(e) =&gt; setPriceUpdate(e.target.value)}&#10;                            placeholder={product.price.toString()}&#10;                            className=&quot;flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-white&quot;&#10;                          /&gt;&#10;                          &lt;button&#10;                            onClick={handleUpdateProduct}&#10;                            disabled={!priceUpdate || isUpdating}&#10;                            className=&quot;bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg font-medium transition&quot;&#10;                          &gt;&#10;                            {isUpdating ? &quot;Updating...&quot; : &quot;Update&quot;}&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Sidebar - Analytics &amp; Actions */}&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {/* Performance Stats */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                        Performance&#10;                      &lt;/h3&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                        Real-time data&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      {/* Total Sales */}&#10;                      &lt;div className=&quot;text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-center gap-2 mb-1&quot;&gt;&#10;                          &lt;div className=&quot;text-2xl font-bold text-blue-600&quot;&gt;&#10;                            {product.performanceMetrics?.totalSales || 0}&#10;                          &lt;/div&gt;&#10;                          {product.performanceMetrics?.salesTrend === &quot;up&quot; &amp;&amp; (&#10;                            &lt;i className=&quot;fas fa-arrow-up text-green-500 text-sm&quot;&gt;&lt;/i&gt;&#10;                          )}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Total Sales (Units)&#10;                        &lt;/div&gt;&#10;                        {product.performanceMetrics?.recentSales &gt; 0 &amp;&amp; (&#10;                          &lt;div className=&quot;text-xs text-green-600 mt-1&quot;&gt;&#10;                            +{product.performanceMetrics.recentSales} this month&#10;                          &lt;/div&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Total Revenue */}&#10;                      &lt;div className=&quot;text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-green-600&quot;&gt;&#10;                          ৳{product.performanceMetrics?.totalRevenue?.toLocaleString() || 0}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Total Revenue&#10;                        &lt;/div&gt;&#10;                        {product.performanceMetrics?.recentRevenue &gt; 0 &amp;&amp; (&#10;                          &lt;div className=&quot;text-xs text-green-600 mt-1&quot;&gt;&#10;                            +৳{product.performanceMetrics.recentRevenue.toLocaleString()} this month&#10;                          &lt;/div&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Average Rating */}&#10;                      &lt;div className=&quot;text-center p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-yellow-600&quot;&gt;&#10;                          {product.performanceMetrics?.averageRating &#10;                            ? product.performanceMetrics.averageRating.toFixed(1)&#10;                            : &quot;0.0&quot;}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Average Rating&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;flex justify-center mt-1&quot;&gt;&#10;                          {[...Array(5)].map((_, i) =&gt; (&#10;                            &lt;i&#10;                              key={i}&#10;                              className={`fas fa-star text-xs ${&#10;                                i &lt; Math.round(product.performanceMetrics?.averageRating || 0)&#10;                                  ? &quot;text-yellow-400&quot;&#10;                                  : &quot;text-gray-300&quot;&#10;                              }`}&#10;                            &gt;&lt;/i&gt;&#10;                          ))}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Total Reviews */}&#10;                      &lt;div className=&quot;text-center p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-purple-600&quot;&gt;&#10;                          {product.performanceMetrics?.totalReviews || 0}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Total Reviews&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Average Order Value */}&#10;                      {product.performanceMetrics?.averageOrderValue &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;text-center p-4 bg-orange-50 dark:bg-orange-900/20 rounded-lg&quot;&gt;&#10;                          &lt;div className=&quot;text-2xl font-bold text-orange-600&quot;&gt;&#10;                            ৳{product.performanceMetrics.averageOrderValue.toFixed(0)}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Avg. Order Value&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* Total Orders */}&#10;                      {product.performanceMetrics?.totalOrders &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;text-center p-4 bg-indigo-50 dark:bg-indigo-900/20 rounded-lg&quot;&gt;&#10;                          &lt;div className=&quot;text-2xl font-bold text-indigo-600&quot;&gt;&#10;                            {product.performanceMetrics.totalOrders}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Total Orders&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Performance Summary */}&#10;                    &lt;div className=&quot;mt-4 pt-4 border-t border-gray-200 dark:border-gray-700&quot;&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400 text-center&quot;&gt;&#10;                        {product.performanceMetrics?.totalSales &gt; 0 &#10;                          ? &quot; Active product with sales history&quot;&#10;                          : &quot; New product - building performance data&quot;&#10;                        }&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                      Actions&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;div className=&quot;space-y-3&quot;&gt;&#10;                      &lt;Link&#10;                        href={`/create?edit=${productId}`}&#10;                        className=&quot;w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-edit mr-2&quot;&gt;&lt;/i&gt;&#10;                        Edit Product&#10;                      &lt;/Link&gt;&#10;&#10;                      &lt;Link&#10;                        href={`/details?id=${productId}&amp;view=customer`}&#10;                        className=&quot;w-full bg-gray-600 hover:bg-gray-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-eye mr-2&quot;&gt;&lt;/i&gt;&#10;                        View as Customer&#10;                      &lt;/Link&gt;&#10;&#10;                      &lt;button&#10;                        onClick={handleToggleStatus}&#10;                        disabled={isUpdating}&#10;                        className={`w-full py-3 px-4 rounded-lg font-medium transition flex items-center justify-center ${&#10;                          product.status === &quot;active&quot;&#10;                            ? &quot;bg-yellow-600 hover:bg-yellow-700 text-white&quot;&#10;                            : &quot;bg-green-600 hover:bg-green-700 text-white&quot;&#10;                        } ${isUpdating ? &quot;opacity-50 cursor-not-allowed&quot; : &quot;&quot;}`}&#10;                      &gt;&#10;                        {isUpdating ? (&#10;                          &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        ) : (&#10;                          &lt;i&#10;                            className={`fas ${product.status === &quot;active&quot; ? &quot;fa-pause&quot; : &quot;fa-play&quot;} mr-2`}&#10;                          &gt;&lt;/i&gt;&#10;                        )}&#10;                        {isUpdating&#10;                          ? &quot;Updating...&quot;&#10;                          : product.status === &quot;active&quot;&#10;                            ? &quot;Deactivate&quot;&#10;                            : &quot;Activate&quot;}&#10;                      &lt;/button&gt;&#10;&#10;                      &lt;button&#10;                        onClick={handleDeleteProduct}&#10;                        disabled={isUpdating}&#10;                        className={`w-full bg-red-600 hover:bg-red-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center ${&#10;                          isUpdating ? &quot;opacity-50 cursor-not-allowed&quot; : &quot;&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {isUpdating ? (&#10;                          &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        ) : (&#10;                          &lt;i className=&quot;fas fa-trash mr-2&quot;&gt;&lt;/i&gt;&#10;                        )}&#10;                        {isUpdating ? &quot;Deleting...&quot; : &quot;Delete Product&quot;}&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Recent Orders */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                      Recent Orders&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;div className=&quot;space-y-3 text-sm&quot;&gt;&#10;                      &lt;div className=&quot;text-center py-8 text-gray-500 dark:text-gray-400&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-shopping-bag text-2xl mb-2&quot;&gt;&lt;/i&gt;&#10;                        &lt;p&gt;No recent orders&lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/&gt;&#10;          ) : (&#10;            /* Regular Customer View */&#10;            &lt;&gt;&#10;              {/* Regular breadcrumb and customer interface here */}&#10;              {/* Breadcrumb */}&#10;              &lt;nav className=&quot;mb-8&quot;&gt;&#10;                &lt;ol className=&quot;flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      Home&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/products&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      Products&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;span className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                      {product.name}&#10;                    &lt;/span&gt;&#10;                  &lt;/li&gt;&#10;                &lt;/ol&gt;&#10;              &lt;/nav&gt;&#10;&#10;              &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12&quot;&gt;&#10;                {/* Product Images */}&#10;                &lt;div className=&quot;space-y-4&quot;&gt;&#10;                  &lt;div className=&quot;aspect-square bg-white dark:bg-gray-800 rounded-2xl overflow-hidden shadow-lg&quot;&gt;&#10;                    {(() =&gt; {&#10;                      // Combine both image sources for customer view&#10;                      const allImages = [];&#10;                      if (product.image) {&#10;                        allImages.push(product.image);&#10;                      }&#10;                      if (product.images &amp;&amp; product.images.length &gt; 0) {&#10;                        allImages.push(...product.images);&#10;                      }&#10;&#10;                      console.log(&#10;                        &quot;Customer view - Combined images:&quot;,&#10;                        allImages,&#10;                      );&#10;                      console.log(&#10;                        &quot;Customer view - Selected image index:&quot;,&#10;                        selectedImage,&#10;                      );&#10;                      console.log(&#10;                        &quot;Customer view - Displaying image:&quot;,&#10;                        allImages[selectedImage],&#10;                      );&#10;&#10;                      return (&#10;                        &lt;Image&#10;                          src={&#10;                            allImages[selectedImage] ||&#10;                            &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=600&amp;h=600&amp;fit=crop&quot;&#10;                          }&#10;                          alt={product.name}&#10;                          width={600}&#10;                          height={600}&#10;                          className=&quot;w-full h-full object-cover&quot;&#10;                          onError={(e) =&gt; {&#10;                            console.log(&#10;                              &quot;Customer view main image load ERROR:&quot;,&#10;                              e.target.src,&#10;                            );&#10;                            e.target.src =&#10;                              &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=600&amp;h=600&amp;fit=crop&quot;;&#10;                          }}&#10;                          onLoad={(e) =&gt; {&#10;                            console.log(&#10;                              &quot;Customer view main image loaded successfully:&quot;,&#10;                              e.target.src,&#10;                            );&#10;                          }}&#10;                        /&gt;&#10;                      );&#10;                    })()}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Thumbnail Images */}&#10;                  {(() =&gt; {&#10;                    // Combine both image sources for thumbnails&#10;                    const allImages = [];&#10;                    if (product.image) {&#10;                      allImages.push(product.image);&#10;                    }&#10;                    if (product.images &amp;&amp; product.images.length &gt; 0) {&#10;                      allImages.push(...product.images);&#10;                    }&#10;&#10;                    return allImages.length &gt; 1 ? (&#10;                      &lt;div className=&quot;grid grid-cols-5 gap-2&quot;&gt;&#10;                        {allImages.map((image, index) =&gt; (&#10;                          &lt;button&#10;                            key={index}&#10;                            onClick={() =&gt; setSelectedImage(index)}&#10;                            className={`aspect-square bg-white dark:bg-gray-800 rounded-lg overflow-hidden border-2 transition ${&#10;                              selectedImage === index&#10;                                ? &quot;border-primary-500&quot;&#10;                                : &quot;border-transparent hover:border-primary-300&quot;&#10;                            }`}&#10;                          &gt;&#10;                            &lt;Image&#10;                              src={image}&#10;                              alt={`${product.name} ${index + 1}`}&#10;                              width={100}&#10;                              height={100}&#10;                              className=&quot;w-full h-full object-cover&quot;&#10;                              onError={(e) =&gt; {&#10;                                console.log(&#10;                                  &quot;Customer view thumbnail load ERROR:&quot;,&#10;                                  e.target.src,&#10;                                );&#10;                                e.target.src =&#10;                                  &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=100&amp;h=100&amp;fit=crop&quot;;&#10;                              }}&#10;                              onLoad={() =&gt; {&#10;                                console.log(&#10;                                  `Customer view thumbnail ${index + 1} loaded successfully`,&#10;                                );&#10;                              }}&#10;                            /&gt;&#10;                          &lt;/button&gt;&#10;                        ))}&#10;                      &lt;/div&gt;&#10;                    ) : null;&#10;                  })()}&#10;                &lt;/div&gt;&#10;&#10;                {/* Product Info */}&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {/* Category and Features */}&#10;                  &lt;div className=&quot;flex items-center gap-2 flex-wrap&quot;&gt;&#10;                    &lt;span className=&quot;bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 px-3 py-1 rounded-full text-sm font-medium&quot;&gt;&#10;                      {product.category}&#10;                    &lt;/span&gt;&#10;                    {product.isOrganic &amp;&amp; (&#10;                      &lt;span className=&quot;bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                        Organic&#10;                      &lt;/span&gt;&#10;                    )}&#10;                    {product.isFresh &amp;&amp; (&#10;                      &lt;span className=&quot;bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                        Fresh&#10;                      &lt;/span&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Product Name and Farmer */}&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;flex items-center space-x-2 mb-2&quot;&gt;&#10;                      {product.isOrganic &amp;&amp; (&#10;                        &lt;span className=&quot;bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                          Organic&#10;                        &lt;/span&gt;&#10;                      )}&#10;                      {product.isFresh &amp;&amp; (&#10;                        &lt;span className=&quot;bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                          Fresh&#10;                        &lt;/span&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                    &lt;h1 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                      {product.name}&#10;                    &lt;/h1&gt;&#10;                    &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Produced by{&quot; &quot;}&#10;                      &lt;span className=&quot;font-semibold text-primary-600 dark:text-primary-400&quot;&gt;&#10;                        {product.farmer?.farmName ||&#10;                          product.farmer?.name ||&#10;                          &quot;Unknown Farm&quot;}&#10;                      &lt;/span&gt;&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Rating and Reviews */}&#10;                  &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                    &lt;StarRating&#10;                      rating={product.averageRating || 0}&#10;                      showValue={true}&#10;                    /&gt;&#10;                    &lt;span className=&quot;text-gray-500 dark:text-gray-400&quot;&gt;&#10;                      ({product.reviewCount || product.totalReviews || 0}{&quot; &quot;}&#10;                      reviews)&#10;                    &lt;/span&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; setActiveTab(&quot;reviews&quot;)}&#10;                      className=&quot;text-primary-600 dark:text-primary-400 hover:underline&quot;&#10;                    &gt;&#10;                      Write a review&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Price and Stock */}&#10;                  &lt;div className=&quot;bg-gray-100 dark:bg-gray-800 rounded-xl p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;span className=&quot;text-3xl font-bold text-primary-600 dark:text-primary-400&quot;&gt;&#10;                          ৳{product.price}&#10;                        &lt;/span&gt;&#10;                        &lt;span className=&quot;text-lg text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          /{product.unit || &quot;kg&quot;}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-right&quot;&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          Available Stock&#10;                        &lt;/p&gt;&#10;                        &lt;p className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.stock} {product.unit || &quot;kg&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Location */}&#10;                    &lt;div className=&quot;flex items-center text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-map-marker-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                      &lt;span&gt;&#10;                        {product.farmer?.location || &quot;Location not specified&quot;}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Quantity Selection */}&#10;                  &lt;div className=&quot;space-y-4&quot;&gt;&#10;                    &lt;div&gt;&#10;                      &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                        Quantity ({product.unit || &quot;kg&quot;})&#10;                      &lt;/label&gt;&#10;                      &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setQuantity(Math.max(1, quantity - 1))}&#10;                          className=&quot;w-10 h-10 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-center hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-minus text-sm&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          value={quantity}&#10;                          onChange={(e) =&gt;&#10;                            setQuantity(&#10;                              Math.max(1, parseInt(e.target.value) || 1),&#10;                            )&#10;                          }&#10;                          min=&quot;1&quot;&#10;                          max={product.stock}&#10;                          className=&quot;w-20 text-center py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                        /&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt;&#10;                            setQuantity(Math.min(product.stock, quantity + 1))&#10;                          }&#10;                          className=&quot;w-10 h-10 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-center hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-plus text-sm&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;space-y-3&quot;&gt;&#10;                    &lt;button&#10;                      onClick={handleBuyNow}&#10;                      disabled={product.stock &lt;= 0}&#10;                      className=&quot;w-full bg-primary-600 hover:bg-primary-700 dark:bg-primary-700 dark:hover:bg-primary-800 text-white py-3 px-6 rounded-lg font-medium transition-all duration-200 shadow-md hover:shadow-lg disabled:bg-gray-400&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-bolt mr-2&quot;&gt;&lt;/i&gt;&#10;                      Buy Now&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={handleAddToCart}&#10;                      disabled={isAddingToCart || product.stock &lt;= 0}&#10;                      className=&quot;w-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white py-3 px-6 rounded-lg font-medium transition disabled:bg-gray-400&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-shopping-cart mr-2&quot;&gt;&lt;/i&gt;&#10;                      {isAddingToCart ? &quot;Adding...&quot; : &quot;Add to Cart&quot;}&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={handleFavoriteToggle}&#10;                      className=&quot;w-full border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 text-gray-900 dark:text-white py-3 px-6 rounded-lg font-medium transition&quot;&#10;                    &gt;&#10;                      &lt;i&#10;                        className={`${isFavorite ? &quot;fas&quot; : &quot;far&quot;} fa-heart mr-2 ${isFavorite ? &quot;text-red-500&quot; : &quot;&quot;}`}&#10;                      &gt;&lt;/i&gt;&#10;                      Add to Favorite&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Farmer Contact */}&#10;                  &lt;div className=&quot;bg-primary-50 dark:bg-primary-900 rounded-xl p-4&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                      &lt;div className=&quot;w-12 h-12 rounded-full bg-primary-100 dark:bg-primary-800 flex items-center justify-center&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-user text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div&gt;&#10;                        &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.farmer?.name || &quot;Unknown Farmer&quot;}&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Farmer since{&quot; &quot;}&#10;                          {new Date().getFullYear() -&#10;                            (product.farmer?.experience || 5)}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Tabs Section */}&#10;              &lt;div className=&quot;mt-16&quot;&gt;&#10;                &lt;div className=&quot;border-b border-gray-200 dark:border-gray-700&quot;&gt;&#10;                  &lt;nav className=&quot;flex space-x-8&quot;&gt;&#10;                    {[&#10;                      &quot;description&quot;,&#10;                      &quot;nutrition&quot;,&#10;                      &quot;storage&quot;,&#10;                      &quot;reviews&quot;,&#10;                      &quot;farmer&quot;,&#10;                    ].map((tab) =&gt; (&#10;                      &lt;button&#10;                        key={tab}&#10;                        onClick={() =&gt; setActiveTab(tab)}&#10;                        className={`py-4 px-1 border-b-2 font-medium text-sm transition ${&#10;                          activeTab === tab&#10;                            ? &quot;border-primary-500 text-primary-600 dark:text-primary-400&quot;&#10;                            : &quot;border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {tab === &quot;nutrition&quot;&#10;                          ? &quot;Nutrition&quot;&#10;                          : tab === &quot;storage&quot;&#10;                            ? &quot;Storage&quot;&#10;                            : tab.charAt(0).toUpperCase() + tab.slice(1)}&#10;                      &lt;/button&gt;&#10;                    ))}&#10;                  &lt;/nav&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;py-8&quot;&gt;&#10;                  {/* Description Tab */}&#10;                  {activeTab === &quot;description&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-4&quot;&gt;&#10;                        Product Description&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;                        {product.description ||&#10;                          &quot;No description available for this product.&quot;}&#10;                      &lt;/p&gt;&#10;&#10;                      {product.features &amp;&amp; product.features.length &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;mt-6&quot;&gt;&#10;                          &lt;h4 className=&quot;text-lg font-medium mb-3&quot;&gt;Features&lt;/h4&gt;&#10;                          &lt;ul className=&quot;list-disc list-inside space-y-1&quot;&gt;&#10;                            {product.features.map((feature, index) =&gt; (&#10;                              &lt;li&#10;                                key={index}&#10;                                className=&quot;text-gray-600 dark:text-gray-400&quot;&#10;                              &gt;&#10;                                {feature}&#10;                              &lt;/li&gt;&#10;                            ))}&#10;                          &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Nutrition Tab */}&#10;                  {activeTab === &quot;nutrition&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        Nutritional Information&#10;                      &lt;/h3&gt;&#10;&#10;                      {product.nutritionalInformation ? (&#10;                        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden&quot;&gt;&#10;                          &lt;div className=&quot;px-6 py-4 bg-gray-50 dark:bg-gray-700 border-b border-gray-200 dark:border-gray-600&quot;&gt;&#10;                            &lt;h4 className=&quot;text-lg font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                              Per{&quot; &quot;}&#10;                              {product.nutritionalInformation.servingSize ||&#10;                                &quot;100g&quot;}{&quot; &quot;}&#10;                              serving&#10;                            &lt;/h4&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          &lt;div className=&quot;p-6&quot;&gt;&#10;                            &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                              {/* Main nutrients */}&#10;                              &lt;div className=&quot;space-y-3&quot;&gt;&#10;                                {product.nutritionalInformation.calories &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;&#10;                                      Calories&#10;                                    &lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.calories}{&quot; &quot;}&#10;                                      kcal&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.protein &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;Protein&lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.protein}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation&#10;                                  .carbohydrates &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;&#10;                                      Carbohydrates&#10;                                    &lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {&#10;                                        product.nutritionalInformation&#10;                                          .carbohydrates&#10;                                      }&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.fiber &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;Fiber&lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.fiber}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.fat &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;Fat&lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.fat}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                              &lt;/div&gt;&#10;&#10;                              {/* Vitamins and Minerals */}&#10;                              &lt;div className=&quot;space-y-3&quot;&gt;&#10;                                {product.nutritionalInformation.iron &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;Iron&lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.iron}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.vitaminB1 &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;&#10;                                      Vitamin B1&#10;                                    &lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.vitaminB1}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.vitaminC &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium&quot;&gt;&#10;                                      Vitamin C&#10;                                    &lt;/span&gt;&#10;                                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      {product.nutritionalInformation.vitaminC}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                                {product.nutritionalInformation.gluten &amp;&amp; (&#10;                                  &lt;div className=&quot;flex justify-between py-2 border-b border-gray-100 dark:border-gray-600&quot;&gt;&#10;                                    &lt;span className=&quot;font-medium text-orange-600&quot;&gt;&#10;                                      Allergen Info&#10;                                    &lt;/span&gt;&#10;                                    &lt;span className=&quot;text-orange-600 dark:text-orange-400&quot;&gt;&#10;                                      {product.nutritionalInformation.gluten}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Nutritional information is not available for this&#10;                            product.&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Storage Instructions Tab */}&#10;                  {activeTab === &quot;storage&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        Storage Instructions&#10;                      &lt;/h3&gt;&#10;&#10;                      {product.storageInstructions ? (&#10;                        &lt;div className=&quot;bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-6&quot;&gt;&#10;                          &lt;div className=&quot;flex items-start gap-3&quot;&gt;&#10;                            &lt;div className=&quot;flex-shrink-0 mt-1&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-snowflake text-blue-600 dark:text-blue-400 text-xl&quot;&gt;&lt;/i&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;flex-1&quot;&gt;&#10;                              &lt;h4 className=&quot;text-lg font-medium text-blue-900 dark:text-blue-100 mb-3&quot;&gt;&#10;                                How to Store This Product&#10;                              &lt;/h4&gt;&#10;                              &lt;p className=&quot;text-blue-800 dark:text-blue-200 leading-relaxed&quot;&gt;&#10;                                {product.storageInstructions}&#10;                              &lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Storage instructions are not available for this&#10;                            product.&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* General storage tips */}&#10;                      &lt;div className=&quot;mt-8&quot;&gt;&#10;                        &lt;h4 className=&quot;text-lg font-medium mb-4&quot;&gt;&#10;                          General Storage Tips&#10;                        &lt;/h4&gt;&#10;                        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;                          &lt;div className=&quot;bg-gray-50 dark:bg-gray-800 rounded-lg p-4&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center gap-2 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-thermometer-half text-green-600&quot;&gt;&lt;/i&gt;&#10;                              &lt;span className=&quot;font-medium&quot;&gt;Temperature&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Keep at recommended temperature to maintain&#10;                              freshness&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          &lt;div className=&quot;bg-gray-50 dark:bg-gray-800 rounded-lg p-4&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center gap-2 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-tint text-blue-600&quot;&gt;&lt;/i&gt;&#10;                              &lt;span className=&quot;font-medium&quot;&gt;Moisture&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Control humidity levels to prevent spoilage&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          &lt;div className=&quot;bg-gray-50 dark:bg-gray-800 rounded-lg p-4&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center gap-2 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-sun text-yellow-600&quot;&gt;&lt;/i&gt;&#10;                              &lt;span className=&quot;font-medium&quot;&gt;Light&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Store away from direct sunlight when specified&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          &lt;div className=&quot;bg-gray-50 dark:bg-gray-800 rounded-lg p-4&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center gap-2 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-clock text-purple-600&quot;&gt;&lt;/i&gt;&#10;                              &lt;span className=&quot;font-medium&quot;&gt;Freshness&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Consume within recommended timeframe&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Reviews Tab */}&#10;                  {activeTab === &quot;reviews&quot; &amp;&amp; (&#10;                    &lt;div&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-8&quot;&gt;&#10;                        &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          Customer Reviews&#10;                        &lt;/h2&gt;&#10;                        {session &amp;&amp; (&#10;                          &lt;button&#10;                            onClick={() =&gt; setShowReviewForm(true)}&#10;                            className=&quot;bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg font-medium transition&quot;&#10;                          &gt;&#10;                            Write a Review&#10;                          &lt;/button&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Review Summary */}&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-6 mb-8&quot;&gt;&#10;                        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-8&quot;&gt;&#10;                          &lt;div&gt;&#10;                            &lt;div className=&quot;flex items-center space-x-2 mb-4&quot;&gt;&#10;                              &lt;span className=&quot;text-4xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                                {(() =&gt; {&#10;                                  // Use reviews from API call, which should contain the product's reviews array&#10;                                  const allReviews = reviews || [];&#10;                                  if (allReviews.length === 0) {&#10;                                    // Fallback to product's original rating if no reviews from API&#10;                                    return (&#10;                                      product.averageRating ||&#10;                                      product.rating ||&#10;                                      0&#10;                                    ).toFixed(1);&#10;                                  }&#10;                                  const totalRating = allReviews.reduce(&#10;                                    (sum, review) =&gt;&#10;                                      sum + Number(review.rating || 0),&#10;                                    0,&#10;                                  );&#10;                                  return (&#10;                                    totalRating / allReviews.length&#10;                                  ).toFixed(1);&#10;                                })()}&#10;                              &lt;/span&gt;&#10;                              &lt;div&gt;&#10;                                &lt;div className=&quot;flex text-yellow-400 mb-1&quot;&gt;&#10;                                  {[...Array(5)].map((_, i) =&gt; {&#10;                                    // Calculate average rating from API reviews or fallback to product rating&#10;                                    const allReviews = reviews || [];&#10;                                    let avgRating = 0;&#10;                                    if (allReviews.length &gt; 0) {&#10;                                      const totalRating = allReviews.reduce(&#10;                                        (sum, review) =&gt;&#10;                                          sum + Number(review.rating || 0),&#10;                                        0,&#10;                                      );&#10;                                      avgRating =&#10;                                        totalRating / allReviews.length;&#10;                                    } else {&#10;                                      avgRating =&#10;                                        product.averageRating ||&#10;                                        product.rating ||&#10;                                        0;&#10;                                    }&#10;&#10;                                    console.log(&#10;                                      &quot;Star rendering - Average rating:&quot;,&#10;                                      avgRating,&#10;                                      &quot;Star index:&quot;,&#10;                                      i,&#10;                                    );&#10;&#10;                                    return (&#10;                                      &lt;i&#10;                                        key={i}&#10;                                        className={`fas fa-star ${&#10;                                          i &lt; Math.round(avgRating)&#10;                                            ? &quot;text-yellow-400&quot;&#10;                                            : &quot;text-gray-300&quot;&#10;                                        }`}&#10;                                      &gt;&lt;/i&gt;&#10;                                    );&#10;                                  })}&#10;                                &lt;/div&gt;&#10;                                &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                  Based on{&quot; &quot;}&#10;                                  {reviews?.length ||&#10;                                    product.totalReviews ||&#10;                                    product.reviewCount ||&#10;                                    0}{&quot; &quot;}&#10;                                  reviews&#10;                                &lt;/p&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;space-y-2&quot;&gt;&#10;                            {/* Dynamic Rating breakdown using API reviews */}&#10;                            {[5, 4, 3, 2, 1].map((star) =&gt; {&#10;                              const allReviews = reviews || [];&#10;                              const totalReviews = allReviews.length;&#10;&#10;                              // Count reviews that fall within the star range (e.g., 4.0-4.9 for 4 stars)&#10;                              const starCount = allReviews.filter((review) =&gt; {&#10;                                const rating = Number(review.rating || 0);&#10;                                return rating &gt;= star &amp;&amp; rating &lt; star + 1;&#10;                              }).length;&#10;&#10;                              const percentage =&#10;                                totalReviews &gt; 0&#10;                                  ? (starCount / totalReviews) * 100&#10;                                  : 0;&#10;&#10;                              return (&#10;                                &lt;div&#10;                                  key={star}&#10;                                  className=&quot;flex items-center space-x-2&quot;&#10;                                &gt;&#10;                                  &lt;span className=&quot;text-sm w-8&quot;&gt;{star}★&lt;/span&gt;&#10;                                  &lt;div className=&quot;flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-2&quot;&gt;&#10;                                    &lt;div&#10;                                      className=&quot;bg-yellow-400 h-2 rounded-full transition-all duration-300&quot;&#10;                                      style={{ width: `${percentage}%` }}&#10;                                    &gt;&lt;/div&gt;&#10;                                  &lt;/div&gt;&#10;                                  &lt;span className=&quot;text-sm text-gray-500 dark:text-gray-400 w-8&quot;&gt;&#10;                                    {starCount}&#10;                                  &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                              );&#10;                            })}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Review Form Modal */}&#10;                      {showReviewForm &amp;&amp; (&#10;                        &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4&quot;&gt;&#10;                          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg max-w-md w-full p-6&quot;&gt;&#10;                            &lt;h4 className=&quot;text-lg font-semibold mb-4&quot;&gt;&#10;                              Write a Review&#10;                            &lt;/h4&gt;&#10;                            &lt;form onSubmit={handleSubmitReview}&gt;&#10;                              &lt;div className=&quot;mb-4&quot;&gt;&#10;                                &lt;label className=&quot;block text-sm font-medium mb-2&quot;&gt;&#10;                                  Rating&#10;                                &lt;/label&gt;&#10;                                &lt;div className=&quot;flex gap-1&quot;&gt;&#10;                                  {[1, 2, 3, 4, 5].map((star) =&gt; (&#10;                                    &lt;button&#10;                                      key={star}&#10;                                      type=&quot;button&quot;&#10;                                      onClick={() =&gt;&#10;                                        setReviewForm({&#10;                                          ...reviewForm,&#10;                                          rating: star,&#10;                                        })&#10;                                      }&#10;                                      className={`text-2xl transition-colors ${&#10;                                        star &lt;= reviewForm.rating&#10;                                          ? &quot;text-yellow-400 hover:text-yellow-500&quot;&#10;                                          : &quot;text-gray-300 hover:text-gray-400&quot;&#10;                                      }`}&#10;                                    &gt;&#10;                                      ★&#10;                                    &lt;/button&gt;&#10;                                  ))}&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;mb-4&quot;&gt;&#10;                                &lt;label className=&quot;block text-sm font-medium mb-2&quot;&gt;&#10;                                  Comment&#10;                                &lt;/label&gt;&#10;                                &lt;textarea&#10;                                  value={reviewForm.comment}&#10;                                  onChange={(e) =&gt;&#10;                                    setReviewForm({&#10;                                      ...reviewForm,&#10;                                      comment: e.target.value,&#10;                                    })&#10;                                  }&#10;                                  className=&quot;w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 dark:bg-gray-700&quot;&#10;                                  rows=&quot;4&quot;&#10;                                  placeholder=&quot;Share your experience with this product...&quot;&#10;                                  required&#10;                                /&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;flex gap-3&quot;&gt;&#10;                                &lt;button&#10;                                  type=&quot;button&quot;&#10;                                  onClick={() =&gt; setShowReviewForm(false)}&#10;                                  className=&quot;flex-1 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition&quot;&#10;                                &gt;&#10;                                  Cancel&#10;                                &lt;/button&gt;&#10;                                &lt;button&#10;                                  type=&quot;submit&quot;&#10;                                  disabled={&#10;                                    isSubmittingReview ||&#10;                                    !reviewForm.comment.trim()&#10;                                  }&#10;                                  className=&quot;flex-1 bg-primary-600 hover:bg-primary-700 text-white py-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed transition&quot;&#10;                                &gt;&#10;                                  {isSubmittingReview&#10;                                    ? &quot;Submitting...&quot;&#10;                                    : &quot;Submit Review&quot;}&#10;                                &lt;/button&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/form&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* Individual Reviews */}&#10;                      &lt;div className=&quot;space-y-6&quot;&gt;&#10;                        {/* Only display reviews from API call */}&#10;                        {(() =&gt; {&#10;                          const allReviews = reviews || [];&#10;&#10;                          if (allReviews.length === 0) {&#10;                            return (&#10;                              &lt;div className=&quot;text-center py-12&quot;&gt;&#10;                                &lt;div className=&quot;w-16 h-16 bg-gray-100 dark:bg-gray-800 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#10;                                  &lt;i className=&quot;fas fa-comment-alt text-2xl text-gray-400&quot;&gt;&lt;/i&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;h3 className=&quot;text-lg font-medium text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                                  No reviews yet&#10;                                &lt;/h3&gt;&#10;                                &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-6&quot;&gt;&#10;                                  Be the first to share your thoughts about this&#10;                                  product.&#10;                                &lt;/p&gt;&#10;                                {session &amp;&amp; (&#10;                                  &lt;button&#10;                                    onClick={() =&gt; setShowReviewForm(true)}&#10;                                    className=&quot;bg-primary-600 hover:bg-primary-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#10;                                  &gt;&#10;                                    Write the First Review&#10;                                  &lt;/button&gt;&#10;                                )}&#10;                              &lt;/div&gt;&#10;                            );&#10;                          }&#10;&#10;                          return allReviews.map((review, index) =&gt; (&#10;                            &lt;div&#10;                              key={review._id || index}&#10;                              className=&quot;bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm&quot;&#10;                            &gt;&#10;                              &lt;div className=&quot;flex items-start space-x-4&quot;&gt;&#10;                                &lt;div className=&quot;w-12 h-12 rounded-full bg-primary-100 dark:bg-primary-900 flex items-center justify-center&quot;&gt;&#10;                                  &lt;i className=&quot;fas fa-user text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div className=&quot;flex-1&quot;&gt;&#10;                                  &lt;div className=&quot;flex items-center justify-between mb-2&quot;&gt;&#10;                                    &lt;div&gt;&#10;                                      &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;                                        &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                                          {review.userName || &quot;Anonymous&quot;}&#10;                                        &lt;/h4&gt;&#10;                                        {review.isCurrentUser &amp;&amp; (&#10;                                          &lt;span className=&quot;bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 px-2 py-1 rounded text-xs&quot;&gt;&#10;                                            Your Review&#10;                                          &lt;/span&gt;&#10;                                        )}&#10;                                        &lt;span className=&quot;bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded text-xs&quot;&gt;&#10;                                          Verified Purchase&#10;                                        &lt;/span&gt;&#10;                                      &lt;/div&gt;&#10;                                      &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                                        &lt;div className=&quot;flex text-yellow-400 text-sm&quot;&gt;&#10;                                          {[...Array(5)].map((_, i) =&gt; {&#10;                                            const reviewRating = Number(&#10;                                              review.rating || 0,&#10;                                            );&#10;                                            console.log(&#10;                                              `Review by ${review.userName} - Rating: ${reviewRating}, Star ${i + 1}: ${i &lt; Math.floor(reviewRating) ? &quot;filled&quot; : &quot;empty&quot;}`,&#10;                                            );&#10;&#10;                                            return (&#10;                                              &lt;i&#10;                                                key={i}&#10;                                                className={`fas fa-star ${&#10;                                                  i &lt; Math.floor(reviewRating)&#10;                                                    ? &quot;text-yellow-400&quot;&#10;                                                    : &quot;text-gray-300&quot;&#10;                                                }`}&#10;                                              &gt;&lt;/i&gt;&#10;                                            );&#10;                                          })}&#10;                                        &lt;/div&gt;&#10;                                        &lt;span className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                          {review.createdAt&#10;                                            ? new Date(&#10;                                                review.createdAt,&#10;                                              ).toLocaleDateString()&#10;                                            : &quot;Unknown date&quot;}&#10;                                        &lt;/span&gt;&#10;                                      &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;button className=&quot;text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition&quot;&gt;&#10;                                      &lt;i className=&quot;fas fa-ellipsis-v&quot;&gt;&lt;/i&gt;&#10;                                    &lt;/button&gt;&#10;                                  &lt;/div&gt;&#10;                                  &lt;p className=&quot;text-gray-700 dark:text-gray-300 mb-3 leading-relaxed&quot;&gt;&#10;                                    {review.comment}&#10;                                  &lt;/p&gt;&#10;                                  &lt;div className=&quot;flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                    &lt;button className=&quot;hover:text-primary-600 dark:hover:text-primary-400 transition&quot;&gt;&#10;                                      &lt;i className=&quot;far fa-thumbs-up mr-1&quot;&gt;&lt;/i&gt;&#10;                                      Helpful (&#10;                                      {Math.floor(Math.random() * 15) + 1})&#10;                                    &lt;/button&gt;&#10;                                    &lt;button className=&quot;hover:text-primary-600 dark:hover:text-primary-400 transition&quot;&gt;&#10;                                      Reply&#10;                                    &lt;/button&gt;&#10;                                    {review.isCurrentUser &amp;&amp; (&#10;                                      &lt;button className=&quot;hover:text-red-600 dark:hover:text-red-400 transition&quot;&gt;&#10;                                        Edit&#10;                                      &lt;/button&gt;&#10;                                    )}&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          ));&#10;                        })()}&#10;&#10;                        {/* Load More Reviews Button */}&#10;                        {hasMoreReviews &amp;&amp; (&#10;                          &lt;div className=&quot;text-center mt-8&quot;&gt;&#10;                            &lt;button&#10;                              onClick={loadMoreReviews}&#10;                              className=&quot;bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white px-6 py-3 rounded-lg font-medium transition&quot;&#10;                            &gt;&#10;                              Load More Reviews&#10;                            &lt;/button&gt;&#10;                          &lt;/div&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Farmer Info Tab */}&#10;                  {activeTab === &quot;farmer&quot; &amp;&amp; (&#10;                    &lt;div&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        About the Farmer&#10;                      &lt;/h3&gt;&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg p-6 shadow-lg&quot;&gt;&#10;                        &lt;div className=&quot;flex items-start gap-4&quot;&gt;&#10;                          &lt;div className=&quot;w-16 h-16 bg-primary-100 dark:bg-primary-900 rounded-full flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-user text-2xl text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;flex-1&quot;&gt;&#10;                            &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;                              {product.farmer?.name || &quot;Unknown Farmer&quot;}&#10;                            &lt;/h4&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-3&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-map-marker-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                              {product.farmer?.location ||&#10;                                &quot;Location not specified&quot;}&#10;                            &lt;/p&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              {product.farmer?.bio ||&#10;                                &quot;No farmer information available.&quot;}&#10;                            &lt;/p&gt;&#10;&#10;                            {product.farmer?.experience &amp;&amp; (&#10;                              &lt;div className=&quot;mt-4&quot;&gt;&#10;                                &lt;span className=&quot;text-sm text-gray-500&quot;&gt;&#10;                                  Experience:{&quot; &quot;}&#10;                                &lt;/span&gt;&#10;                                &lt;span className=&quot;font-medium&quot;&gt;&#10;                                  {product.farmer.experience} years&#10;                                &lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Related Products */}&#10;              {relatedProducts.length &gt; 0 &amp;&amp; (&#10;                &lt;div className=&quot;mt-16&quot;&gt;&#10;                  &lt;h3 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-8&quot;&gt;&#10;                    Related Products&#10;                  &lt;/h3&gt;&#10;                  &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6&quot;&gt;&#10;                    {relatedProducts.map((relatedProduct) =&gt; (&#10;                      &lt;ProductCard&#10;                        key={relatedProduct._id}&#10;                        product={relatedProduct}&#10;                      /&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/products/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/products/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import Link from &quot;next/link&quot;;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { useSearchParams, useRouter } from &quot;next/navigation&quot;;&#10;import ProductCard from &quot;@/components/ProductCard&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;&#10;export default function Products() {&#10;  const searchParams = useSearchParams();&#10;  const router = useRouter();&#10;  const [products, setProducts] = useState([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [categories, setCategories] = useState([]);&#10;  const [pagination, setPagination] = useState({});&#10;&#10;  // Search and filter states&#10;  const [searchTerm, setSearchTerm] = useState(&#10;    searchParams.get(&quot;search&quot;) || &quot;&quot;,&#10;  );&#10;  const [selectedCategory, setSelectedCategory] = useState(&#10;    searchParams.get(&quot;category&quot;) || &quot;All Categories&quot;,&#10;  );&#10;  const [selectedPriceRanges, setSelectedPriceRanges] = useState([]);&#10;  const [selectedRatings, setSelectedRatings] = useState([]);&#10;  const [selectedFarmers, setSelectedFarmers] = useState([]);&#10;  const [selectedTags, setSelectedTags] = useState([]);&#10;  const [priceRangeSlider, setPriceRangeSlider] = useState([0, 10000]); // Increased default max to 10000&#10;  const [sortBy, setSortBy] = useState(&quot;newest&quot;);&#10;  const [currentPage, setCurrentPage] = useState(1);&#10;  const [showMobileFilters, setShowMobileFilters] = useState(false);&#10;  const [availableFarmers, setAvailableFarmers] = useState([]);&#10;&#10;  const categoryOptions = [&#10;    &quot;All Categories&quot;,&#10;    &quot;Vegetables&quot;,&#10;    &quot;Fruits&quot;,&#10;    &quot;Grains&quot;,&#10;    &quot;Dairy&quot;,&#10;    &quot;Honey&quot;,&#10;    &quot;Herbs&quot;,&#10;  ];&#10;&#10;  const priceRangeOptions = [&#10;    { label: &quot;Under ৳50&quot;, min: 0, max: 49 },&#10;    { label: &quot;৳50 - ৳100&quot;, min: 50, max: 100 },&#10;    { label: &quot;৳100 - ৳200&quot;, min: 101, max: 200 },&#10;    { label: &quot;৳200 - ৳500&quot;, min: 201, max: 500 },&#10;    { label: &quot;Above ৳500&quot;, min: 501, max: 9999 },&#10;  ];&#10;&#10;  const tagOptions = [&#10;    &quot;Organic&quot;,&#10;    &quot;Fresh&quot;,&#10;    &quot;Local&quot;,&#10;    &quot;Premium&quot;,&#10;    &quot;Seasonal&quot;,&#10;    &quot;Limited Stock&quot;,&#10;  ];&#10;&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; Products useEffect triggered:&quot;, {&#10;      searchTerm,&#10;      selectedCategory,&#10;      selectedPriceRanges,&#10;      selectedRatings,&#10;      selectedFarmers,&#10;      selectedTags,&#10;      priceRangeSlider,&#10;      sortBy,&#10;      currentPage,&#10;    });&#10;    fetchProducts();&#10;    // Remove fetchAvailableFarmers from here to prevent unnecessary calls&#10;  }, [&#10;    searchTerm,&#10;    selectedCategory,&#10;    selectedPriceRanges,&#10;    selectedRatings,&#10;    selectedFarmers,&#10;    selectedTags,&#10;    priceRangeSlider,&#10;    sortBy,&#10;    currentPage,&#10;  ]);&#10;&#10;  // Separate useEffect for fetching farmers (only once)&#10;  useEffect(() =&gt; {&#10;    fetchAvailableFarmers();&#10;  }, []); // Empty dependency array - only run once&#10;&#10;  // Update URL when category changes&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; Category changed, updating URL:&quot;, selectedCategory);&#10;    updateURLWithFilters({&#10;      selectedCategory: selectedCategory,&#10;    });&#10;  }, [selectedCategory]);&#10;&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; URL params changed, updating state:&quot;, {&#10;      searchParams: Object.fromEntries(searchParams.entries()),&#10;    });&#10;&#10;    // Update states from URL params&#10;    const newSearchTerm = searchParams.get(&quot;search&quot;) || &quot;&quot;;&#10;    const newCategory = searchParams.get(&quot;category&quot;) || &quot;All Categories&quot;;&#10;&#10;    console.log(&quot; Setting search term:&quot;, newSearchTerm);&#10;    console.log(&quot; Setting category:&quot;, newCategory);&#10;&#10;    setSearchTerm(newSearchTerm);&#10;    setSelectedCategory(newCategory);&#10;&#10;    // Restore price ranges from URL&#10;    const priceRanges = searchParams.get(&quot;priceRanges&quot;);&#10;    if (priceRanges) {&#10;      const newPriceRanges = priceRanges.split(&quot;,&quot;);&#10;      console.log(&quot; Setting price ranges:&quot;, newPriceRanges);&#10;      setSelectedPriceRanges(newPriceRanges);&#10;    } else {&#10;      console.log(&quot; Clearing price ranges&quot;);&#10;      setSelectedPriceRanges([]);&#10;    }&#10;&#10;    // Restore ratings from URL&#10;    const ratings = searchParams.get(&quot;ratings&quot;);&#10;    if (ratings) {&#10;      const newRatings = ratings.split(&quot;,&quot;).map(Number);&#10;      console.log(&quot;⭐ Setting ratings:&quot;, newRatings);&#10;      setSelectedRatings(newRatings);&#10;    } else {&#10;      console.log(&quot;⭐ Clearing ratings&quot;);&#10;      setSelectedRatings([]);&#10;    }&#10;&#10;    // Restore farmers from URL&#10;    const farmers = searchParams.get(&quot;farmers&quot;);&#10;    if (farmers) {&#10;      const newFarmers = farmers.split(&quot;,&quot;);&#10;      console.log(&quot;‍ Setting farmers:&quot;, newFarmers);&#10;      setSelectedFarmers(newFarmers);&#10;    } else {&#10;      console.log(&quot;‍ Clearing farmers&quot;);&#10;      setSelectedFarmers([]);&#10;    }&#10;&#10;    // Restore tags from URL&#10;    const tags = searchParams.get(&quot;tags&quot;);&#10;    if (tags) {&#10;      const newTags = tags.split(&quot;,&quot;);&#10;      console.log(&quot;️ Setting tags:&quot;, newTags);&#10;      setSelectedTags(newTags);&#10;    } else {&#10;      console.log(&quot;️ Clearing tags&quot;);&#10;      setSelectedTags([]);&#10;    }&#10;&#10;    // Restore price range slider from URL&#10;    const minPrice = searchParams.get(&quot;minPrice&quot;);&#10;    const maxPrice = searchParams.get(&quot;maxPrice&quot;);&#10;    if (minPrice &amp;&amp; maxPrice) {&#10;      const newPriceSlider = [Number(minPrice), Number(maxPrice)];&#10;      console.log(&quot;️ Setting price slider:&quot;, newPriceSlider);&#10;      setPriceRangeSlider(newPriceSlider);&#10;    } else {&#10;      console.log(&quot;️ Resetting price slider to default&quot;);&#10;      setPriceRangeSlider([0, 10000]);&#10;    }&#10;&#10;    // Restore sort option from URL&#10;    const newSort = searchParams.get(&quot;sort&quot;) || &quot;newest&quot;;&#10;    console.log(&quot; Setting sort:&quot;, newSort);&#10;    setSortBy(newSort);&#10;&#10;    // Restore page from URL&#10;    const newPage = Number(searchParams.get(&quot;page&quot;)) || 1;&#10;    console.log(&quot; Setting page:&quot;, newPage);&#10;    setCurrentPage(newPage);&#10;  }, [searchParams]);&#10;&#10;  const fetchAvailableFarmers = async () =&gt; {&#10;    try {&#10;      console.log(&quot; Starting comprehensive farmer fetch...&quot;);&#10;      const farmers = [];&#10;&#10;      // 1. Fetch from dedicated farmers API&#10;      try {&#10;        const response = await fetch(&quot;/api/farmers?limit=1000&quot;);&#10;        if (response.ok) {&#10;          const data = await response.json();&#10;          console.log(&quot; Fetched farmers from farmers API:&quot;, data);&#10;&#10;          if (data.farmers &amp;&amp; Array.isArray(data.farmers)) {&#10;            data.farmers.forEach((farmer) =&gt; {&#10;              if (farmer.name &amp;&amp; !farmers.includes(farmer.name)) {&#10;                farmers.push(farmer.name);&#10;              }&#10;            });&#10;          }&#10;        }&#10;      } catch (error) {&#10;        console.warn(&quot;⚠️ Farmers API failed:&quot;, error);&#10;      }&#10;&#10;      // 2. Fetch newly registered farmers from users collection&#10;      try {&#10;        const usersResponse = await fetch(&#10;          &quot;/api/auth/users?userType=farmer&amp;limit=1000&quot;,&#10;        );&#10;        if (usersResponse.ok) {&#10;          const usersData = await usersResponse.json();&#10;          console.log(&quot; Fetched farmers from users API:&quot;, usersData);&#10;&#10;          if (usersData.users &amp;&amp; Array.isArray(usersData.users)) {&#10;            usersData.users.forEach((user) =&gt; {&#10;              const farmerName =&#10;                user.farmDetails?.farmName ||&#10;                user.name ||&#10;                `${user.firstName} ${user.lastName}`;&#10;              if (farmerName &amp;&amp; !farmers.includes(farmerName)) {&#10;                farmers.push(farmerName);&#10;              }&#10;            });&#10;          }&#10;        } else {&#10;          console.warn(&#10;            &quot;⚠️ Users API not available, trying alternative approach&quot;,&#10;          );&#10;        }&#10;      } catch (error) {&#10;        console.warn(&quot;⚠️ Users API failed:&quot;, error);&#10;      }&#10;&#10;      // 3. Backup: get farmers from products API&#10;      try {&#10;        const productsResponse = await fetch(&quot;/api/products?limit=1000&quot;);&#10;        if (productsResponse.ok) {&#10;          const productsData = await productsResponse.json();&#10;          console.log(&#10;            &quot; Fetched farmers from products API:&quot;,&#10;            productsData.products?.length || 0,&#10;            &quot;products&quot;,&#10;          );&#10;&#10;          const productFarmers = [&#10;            ...new Set(&#10;              productsData.products.map((p) =&gt; p.farmer?.name).filter(Boolean),&#10;            ),&#10;          ];&#10;&#10;          // Merge farmers from products&#10;          productFarmers.forEach((farmerName) =&gt; {&#10;            if (!farmers.includes(farmerName)) {&#10;              farmers.push(farmerName);&#10;            }&#10;          });&#10;        }&#10;      } catch (error) {&#10;        console.warn(&quot;⚠️ Products API failed:&quot;, error);&#10;      }&#10;&#10;      // Sort farmers alphabetically and update state&#10;      farmers.sort();&#10;&#10;      console.log(&quot; Final comprehensive farmers list:&quot;, farmers);&#10;      console.log(&quot; Total farmers found:&quot;, farmers.length);&#10;      setAvailableFarmers(farmers);&#10;    } catch (error) {&#10;      console.error(&quot;❌ Error in comprehensive farmer fetch:&quot;, error);&#10;      // Ultimate fallback - at least try products API&#10;      try {&#10;        const response = await fetch(&quot;/api/products?limit=1000&quot;);&#10;        if (response.ok) {&#10;          const data = await response.json();&#10;          const farmers = [&#10;            ...new Set(&#10;              data.products.map((p) =&gt; p.farmer?.name).filter(Boolean),&#10;            ),&#10;          ];&#10;          farmers.sort();&#10;          setAvailableFarmers(farmers);&#10;          console.log(&quot; Fallback farmers loaded:&quot;, farmers.length);&#10;        }&#10;      } catch (fallbackError) {&#10;        console.error(&quot;❌ Complete failure in farmer fetch:&quot;, fallbackError);&#10;        setAvailableFarmers([]);&#10;      }&#10;    }&#10;  };&#10;&#10;  const fetchProducts = async () =&gt; {&#10;    console.log(&quot; fetchProducts called with current state:&quot;, {&#10;      searchTerm,&#10;      selectedCategory,&#10;      sortBy,&#10;      currentPage,&#10;    });&#10;&#10;    setLoading(true);&#10;    try {&#10;      const params = new URLSearchParams();&#10;      if (searchTerm) params.append(&quot;search&quot;, searchTerm);&#10;      if (selectedCategory !== &quot;All Categories&quot;)&#10;        params.append(&quot;category&quot;, selectedCategory);&#10;      // Add high limit to fetch all products for client-side pagination&#10;      params.append(&quot;limit&quot;, &quot;1000&quot;);&#10;      params.append(&quot;sortBy&quot;, sortBy);&#10;&#10;      const apiUrl = `/api/products?${params}`;&#10;      console.log(&quot; API call URL:&quot;, apiUrl);&#10;&#10;      const response = await fetch(apiUrl);&#10;      if (response.ok) {&#10;        let data = await response.json();&#10;        let allProducts = data.products;&#10;&#10;        console.log(&quot; Raw products from API:&quot;, allProducts.length);&#10;        console.log(&#10;          &quot; Sample of all products:&quot;,&#10;          allProducts.slice(0, 3).map((p) =&gt; ({&#10;            name: p.name,&#10;            _id: p._id,&#10;            farmerId: p.farmerId,&#10;            farmerEmail: p.farmerEmail,&#10;            category: p.category,&#10;            price: p.price,&#10;          })),&#10;        );&#10;&#10;        // Apply client-side filters to all products&#10;        let filteredProducts = applyFilters(allProducts);&#10;&#10;        console.log(&quot; Products after filtering:&quot;, filteredProducts.length);&#10;&#10;        // Always apply pagination regardless of filters&#10;        const itemsPerPage = 12;&#10;        const startIndex = (currentPage - 1) * itemsPerPage;&#10;        const endIndex = startIndex + itemsPerPage;&#10;        const paginatedProducts = filteredProducts.slice(startIndex, endIndex);&#10;&#10;        console.log(&quot; Paginated products:&quot;, {&#10;          startIndex,&#10;          endIndex,&#10;          paginatedCount: paginatedProducts.length,&#10;          totalFiltered: filteredProducts.length,&#10;        });&#10;&#10;        setProducts(paginatedProducts);&#10;        setPagination({&#10;          currentPage: currentPage,&#10;          totalPages: Math.ceil(filteredProducts.length / itemsPerPage),&#10;          totalProducts: filteredProducts.length,&#10;          hasNextPage:&#10;            currentPage &lt; Math.ceil(filteredProducts.length / itemsPerPage),&#10;          hasPrevPage: currentPage &gt; 1,&#10;        });&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot; Error fetching products:&quot;, error);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  const applyFilters = (products) =&gt; {&#10;    console.log(&quot; applyFilters called with:&quot;, {&#10;      totalProducts: products.length,&#10;      selectedPriceRanges,&#10;      selectedRatings,&#10;      selectedFarmers,&#10;      selectedTags,&#10;      priceRangeSlider,&#10;    });&#10;&#10;    let filtered = [...products];&#10;    const originalCount = filtered.length;&#10;&#10;    // Price range filters&#10;    if (selectedPriceRanges.length &gt; 0) {&#10;      const beforeFilter = filtered.length;&#10;      filtered = filtered.filter((product) =&gt; {&#10;        return selectedPriceRanges.some((range) =&gt; {&#10;          const option = priceRangeOptions.find((opt) =&gt; opt.label === range);&#10;          return product.price &gt;= option.min &amp;&amp; product.price &lt;= option.max;&#10;        });&#10;      });&#10;      console.log(&quot; Price range filter:&quot;, {&#10;        before: beforeFilter,&#10;        after: filtered.length,&#10;        ranges: selectedPriceRanges,&#10;      });&#10;    }&#10;&#10;    // Custom price range slider&#10;    const beforeSlider = filtered.length;&#10;    const filteredOutProducts = [];&#10;&#10;    filtered = filtered.filter((product) =&gt; {&#10;      const withinRange =&#10;        product.price &gt;= priceRangeSlider[0] &amp;&amp;&#10;        product.price &lt;= priceRangeSlider[1];&#10;&#10;      if (!withinRange) {&#10;        filteredOutProducts.push({&#10;          name: product.name,&#10;          price: product.price,&#10;          priceType: typeof product.price,&#10;        });&#10;      }&#10;&#10;      return withinRange;&#10;    });&#10;&#10;    console.log(&quot; Price slider filter:&quot;, {&#10;      before: beforeSlider,&#10;      after: filtered.length,&#10;      range: priceRangeSlider,&#10;      filteredOut: filteredOutProducts,&#10;    });&#10;&#10;    // Rating filters&#10;    if (selectedRatings.length &gt; 0) {&#10;      const beforeRating = filtered.length;&#10;      filtered = filtered.filter((product) =&gt; {&#10;        const productRating = product.averageRating || 0;&#10;        return selectedRatings.some((rating) =&gt; productRating &gt;= rating);&#10;      });&#10;      console.log(&quot; Rating filter:&quot;, {&#10;        before: beforeRating,&#10;        after: filtered.length,&#10;        ratings: selectedRatings,&#10;      });&#10;    }&#10;&#10;    // Farmer filters&#10;    if (selectedFarmers.length &gt; 0) {&#10;      const beforeFarmer = filtered.length;&#10;      filtered = filtered.filter((product) =&gt;&#10;        selectedFarmers.includes(product.farmer?.name),&#10;      );&#10;      console.log(&quot; Farmer filter:&quot;, {&#10;        before: beforeFarmer,&#10;        after: filtered.length,&#10;        farmers: selectedFarmers,&#10;      });&#10;    }&#10;&#10;    // Tag filters&#10;    if (selectedTags.length &gt; 0) {&#10;      const beforeTags = filtered.length;&#10;      filtered = filtered.filter((product) =&gt; {&#10;        return selectedTags.every((tag) =&gt; {&#10;          switch (tag) {&#10;            case &quot;Organic&quot;:&#10;              return product.isOrganic;&#10;            case &quot;Fresh&quot;:&#10;              return product.isFresh;&#10;            case &quot;Local&quot;:&#10;              return true; // Assuming all products are local&#10;            case &quot;Premium&quot;:&#10;              return product.price &gt; 200;&#10;            case &quot;Seasonal&quot;:&#10;              return product.stock &lt; 100;&#10;            case &quot;Limited Stock&quot;:&#10;              return product.stock &lt; 50;&#10;            default:&#10;              return false;&#10;          }&#10;        });&#10;      });&#10;      console.log(&quot; Tag filter:&quot;, {&#10;        before: beforeTags,&#10;        after: filtered.length,&#10;        tags: selectedTags,&#10;      });&#10;    }&#10;&#10;    // Apply sorting&#10;    const beforeSort = filtered.length;&#10;    switch (sortBy) {&#10;      case &quot;price-low&quot;:&#10;        filtered.sort((a, b) =&gt; a.price - b.price);&#10;        break;&#10;      case &quot;price-high&quot;:&#10;        filtered.sort((a, b) =&gt; b.price - a.price);&#10;        break;&#10;      case &quot;rating&quot;:&#10;        filtered.sort(&#10;          (a, b) =&gt; (b.averageRating || 0) - (a.averageRating || 0),&#10;        );&#10;        filtered.sort(&#10;          (a, b) =&gt; (b.purchaseCount || 0) - (a.purchaseCount || 0),&#10;        );&#10;        break;&#10;      case &quot;newest&quot;:&#10;        filtered.sort((a, b) =&gt; new Date(b.createdAt) - new Date(a.createdAt));&#10;        break;&#10;      case &quot;oldest&quot;:&#10;        filtered.sort((a, b) =&gt; new Date(a.createdAt) - new Date(b.createdAt));&#10;        break;&#10;    }&#10;    console.log(&quot; Sorting applied:&quot;, { sortBy, count: filtered.length });&#10;&#10;    console.log(&quot; Final filtering result:&quot;, {&#10;      original: originalCount,&#10;      final: filtered.length,&#10;      reduction: originalCount - filtered.length,&#10;    });&#10;&#10;    return filtered;&#10;  };&#10;&#10;  // Handle search functionality&#10;  const handleSearch = () =&gt; {&#10;    const params = new URLSearchParams();&#10;    if (searchTerm) params.append(&quot;search&quot;, searchTerm);&#10;    if (selectedCategory !== &quot;All Categories&quot;)&#10;      params.append(&quot;category&quot;, selectedCategory);&#10;    router.push(`/products?${params.toString()}`);&#10;    setCurrentPage(1);&#10;    fetchProducts();&#10;  };&#10;&#10;  const handleKeyPress = (e) =&gt; {&#10;    if (e.key === &quot;Enter&quot;) {&#10;      handleSearch();&#10;    }&#10;  };&#10;&#10;  const handleCategoryChange = (category) =&gt; {&#10;    console.log(&quot; Category change clicked:&quot;, category);&#10;    setSelectedCategory(category);&#10;    setCurrentPage(1);&#10;    // Don't call updateURL here - let the useEffect handle it&#10;  };&#10;&#10;  const handlePriceRangeChange = (range) =&gt; {&#10;    console.log(&quot; Price range clicked:&quot;, range);&#10;    console.log(&quot; Current selected price ranges:&quot;, selectedPriceRanges);&#10;&#10;    const newPriceRanges = selectedPriceRanges.includes(range)&#10;      ? selectedPriceRanges.filter((r) =&gt; r !== range)&#10;      : [...selectedPriceRanges, range];&#10;&#10;    console.log(&quot; New price ranges:&quot;, newPriceRanges);&#10;&#10;    setSelectedPriceRanges(newPriceRanges);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot; Updating URL with new price ranges:&quot;, newPriceRanges);&#10;    updateURLWithFilters({&#10;      selectedPriceRanges: newPriceRanges,&#10;    });&#10;  };&#10;&#10;  const handleRatingChange = (rating) =&gt; {&#10;    console.log(&quot;⭐ Rating clicked:&quot;, rating);&#10;    console.log(&quot;⭐ Current selected ratings:&quot;, selectedRatings);&#10;&#10;    const newRatings = selectedRatings.includes(rating)&#10;      ? selectedRatings.filter((r) =&gt; r !== rating)&#10;      : [...selectedRatings, rating];&#10;&#10;    console.log(&quot;⭐ New ratings:&quot;, newRatings);&#10;&#10;    setSelectedRatings(newRatings);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot;⭐ Updating URL with new ratings:&quot;, newRatings);&#10;    updateURLWithFilters({&#10;      selectedRatings: newRatings,&#10;    });&#10;  };&#10;&#10;  const handleFarmerChange = (farmer) =&gt; {&#10;    console.log(&quot;‍ Farmer clicked:&quot;, farmer);&#10;    console.log(&quot;‍ Current selected farmers:&quot;, selectedFarmers);&#10;&#10;    const newFarmers = selectedFarmers.includes(farmer)&#10;      ? selectedFarmers.filter((f) =&gt; f !== farmer)&#10;      : [...selectedFarmers, farmer];&#10;&#10;    console.log(&quot;‍ New farmers:&quot;, newFarmers);&#10;&#10;    setSelectedFarmers(newFarmers);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot;‍ Updating URL with new farmers:&quot;, newFarmers);&#10;    updateURLWithFilters({&#10;      selectedFarmers: newFarmers,&#10;    });&#10;  };&#10;&#10;  const handleTagChange = (tag) =&gt; {&#10;    console.log(&quot;️ Tag clicked:&quot;, tag);&#10;    console.log(&quot;️ Current selected tags:&quot;, selectedTags);&#10;&#10;    const newTags = selectedTags.includes(tag)&#10;      ? selectedTags.filter((t) =&gt; t !== tag)&#10;      : [...selectedTags, tag];&#10;&#10;    console.log(&quot;️ New tags:&quot;, newTags);&#10;&#10;    setSelectedTags(newTags);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot;️ Updating URL with new tags:&quot;, newTags);&#10;    updateURLWithFilters({&#10;      selectedTags: newTags,&#10;    });&#10;  };&#10;&#10;  const handlePriceSliderChange = (newPriceRange) =&gt; {&#10;    console.log(&quot;️ Price slider changed:&quot;, newPriceRange);&#10;    console.log(&quot;️ Current price slider:&quot;, priceRangeSlider);&#10;&#10;    setPriceRangeSlider(newPriceRange);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot;️ Updating URL with new price slider:&quot;, newPriceRange);&#10;    updateURLWithFilters({&#10;      priceRangeSlider: newPriceRange,&#10;    });&#10;  };&#10;&#10;  const handleSortChange = (newSort) =&gt; {&#10;    console.log(&quot; Sort changed:&quot;, newSort);&#10;    console.log(&quot; Current sort:&quot;, sortBy);&#10;&#10;    setSortBy(newSort);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot; Updating URL with new sort:&quot;, newSort);&#10;    updateURLWithFilters({&#10;      sortBy: newSort,&#10;    });&#10;  };&#10;&#10;  const clearAllFilters = () =&gt; {&#10;    setSelectedCategory(&quot;All Categories&quot;);&#10;    setSearchTerm(&quot;&quot;);&#10;    setSelectedPriceRanges([]);&#10;    setSelectedRatings([]);&#10;    setSelectedFarmers([]);&#10;    setSelectedTags([]);&#10;    setPriceRangeSlider([0, 10000]);&#10;    setCurrentPage(1);&#10;    updateURL();&#10;  };&#10;&#10;  const updateURL = () =&gt; {&#10;    console.log(&quot; updateURL called with current state:&quot;, {&#10;      searchTerm,&#10;      selectedCategory,&#10;      selectedPriceRanges,&#10;      selectedRatings,&#10;      selectedFarmers,&#10;      selectedTags,&#10;      priceRangeSlider,&#10;      sortBy,&#10;      currentPage,&#10;    });&#10;&#10;    const params = new URLSearchParams();&#10;&#10;    // Add search term&#10;    if (searchTerm) params.append(&quot;search&quot;, searchTerm);&#10;&#10;    // Add category&#10;    if (selectedCategory !== &quot;All Categories&quot;)&#10;      params.append(&quot;category&quot;, selectedCategory);&#10;&#10;    // Add price ranges&#10;    if (selectedPriceRanges.length &gt; 0) {&#10;      params.append(&quot;priceRanges&quot;, selectedPriceRanges.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add ratings&#10;    if (selectedRatings.length &gt; 0) {&#10;      params.append(&quot;ratings&quot;, selectedRatings.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add farmers&#10;    if (selectedFarmers.length &gt; 0) {&#10;      params.append(&quot;farmers&quot;, selectedFarmers.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add tags&#10;    if (selectedTags.length &gt; 0) {&#10;      params.append(&quot;tags&quot;, selectedTags.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add price range slider&#10;    if (priceRangeSlider[0] !== 0 || priceRangeSlider[1] !== 10000) {&#10;      params.append(&quot;minPrice&quot;, priceRangeSlider[0]);&#10;      params.append(&quot;maxPrice&quot;, priceRangeSlider[1]);&#10;    }&#10;&#10;    // Add sort option&#10;    if (sortBy !== &quot;newest&quot;) {&#10;      params.append(&quot;sort&quot;, sortBy);&#10;    }&#10;&#10;    // Add current page if not first page&#10;    if (currentPage &gt; 1) {&#10;      params.append(&quot;page&quot;, currentPage);&#10;    }&#10;&#10;    const newURL = `/products${params.toString() ? `?${params.toString()}` : &quot;&quot;}`;&#10;    console.log(&quot; Generated URL:&quot;, newURL);&#10;    router.push(newURL, { shallow: true });&#10;  };&#10;&#10;  const updateURLWithFilters = (overrides = {}) =&gt; {&#10;    console.log(&quot; updateURLWithFilters called with overrides:&quot;, overrides);&#10;    console.log(&quot; Current state before overrides:&quot;, {&#10;      searchTerm,&#10;      selectedCategory,&#10;      selectedPriceRanges,&#10;      selectedRatings,&#10;      selectedFarmers,&#10;      selectedTags,&#10;      priceRangeSlider,&#10;      sortBy,&#10;      currentPage,&#10;    });&#10;&#10;    const params = new URLSearchParams();&#10;&#10;    // Use current state values or overrides&#10;    const currentSearchTerm =&#10;      overrides.searchTerm !== undefined ? overrides.searchTerm : searchTerm;&#10;    const currentCategory =&#10;      overrides.selectedCategory !== undefined&#10;        ? overrides.selectedCategory&#10;        : selectedCategory;&#10;    const currentPriceRanges =&#10;      overrides.selectedPriceRanges !== undefined&#10;        ? overrides.selectedPriceRanges&#10;        : selectedPriceRanges;&#10;    const currentRatings =&#10;      overrides.selectedRatings !== undefined&#10;        ? overrides.selectedRatings&#10;        : selectedRatings;&#10;    const currentFarmers =&#10;      overrides.selectedFarmers !== undefined&#10;        ? overrides.selectedFarmers&#10;        : selectedFarmers;&#10;    const currentTags =&#10;      overrides.selectedTags !== undefined&#10;        ? overrides.selectedTags&#10;        : selectedTags;&#10;    const currentPriceSlider =&#10;      overrides.priceRangeSlider !== undefined&#10;        ? overrides.priceRangeSlider&#10;        : priceRangeSlider;&#10;    const currentSort =&#10;      overrides.sortBy !== undefined ? overrides.sortBy : sortBy;&#10;    const currentPageNumber =&#10;      overrides.currentPage !== undefined ? overrides.currentPage : 1; // Reset to page 1 for filters&#10;&#10;    console.log(&quot; Final values to use:&quot;, {&#10;      currentSearchTerm,&#10;      currentCategory,&#10;      currentPriceRanges,&#10;      currentRatings,&#10;      currentFarmers,&#10;      currentTags,&#10;      currentPriceSlider,&#10;      currentSort,&#10;      currentPageNumber,&#10;    });&#10;&#10;    // Add search term&#10;    if (currentSearchTerm) params.append(&quot;search&quot;, currentSearchTerm);&#10;&#10;    // Add category&#10;    if (currentCategory !== &quot;All Categories&quot;)&#10;      params.append(&quot;category&quot;, currentCategory);&#10;&#10;    // Add price ranges&#10;    if (currentPriceRanges.length &gt; 0) {&#10;      params.append(&quot;priceRanges&quot;, currentPriceRanges.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add ratings&#10;    if (currentRatings.length &gt; 0) {&#10;      params.append(&quot;ratings&quot;, currentRatings.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add farmers&#10;    if (currentFarmers.length &gt; 0) {&#10;      params.append(&quot;farmers&quot;, currentFarmers.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add tags&#10;    if (currentTags.length &gt; 0) {&#10;      params.append(&quot;tags&quot;, currentTags.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add price range slider&#10;    if (currentPriceSlider[0] !== 0 || currentPriceSlider[1] !== 10000) {&#10;      params.append(&quot;minPrice&quot;, currentPriceSlider[0]);&#10;      params.append(&quot;maxPrice&quot;, currentPriceSlider[1]);&#10;    }&#10;&#10;    // Add sort option&#10;    if (currentSort !== &quot;newest&quot;) {&#10;      params.append(&quot;sort&quot;, currentSort);&#10;    }&#10;&#10;    // Add current page if not first page&#10;    if (currentPageNumber &gt; 1) {&#10;      params.append(&quot;page&quot;, currentPageNumber);&#10;    }&#10;&#10;    const newURL = `/products${params.toString() ? `?${params.toString()}` : &quot;&quot;}`;&#10;    console.log(&quot; Generated URL with filters:&quot;, newURL);&#10;    router.push(newURL, { shallow: true });&#10;  };&#10;&#10;  const handlePageChange = (page) =&gt; {&#10;    console.log(&quot; Page change clicked:&quot;, page);&#10;    setCurrentPage(page);&#10;    // Update URL immediately for page changes&#10;    updateURLWithFilters({&#10;      currentPage: page,&#10;    });&#10;  };&#10;&#10;  const getActiveFilterCount = () =&gt; {&#10;    let count = 0;&#10;    if (selectedCategory !== &quot;All Categories&quot;) count++;&#10;    if (selectedPriceRanges.length &gt; 0) count++;&#10;    if (selectedRatings.length &gt; 0) count++;&#10;    if (selectedFarmers.length &gt; 0) count++;&#10;    if (selectedTags.length &gt; 0) count++;&#10;    if (priceRangeSlider[0] !== 0 || priceRangeSlider[1] !== 10000) count++;&#10;    return count;&#10;  };&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900&quot;&gt;&#10;        {/* Products Header */}&#10;        &lt;div className=&quot;bg-primary-600 text-white py-12&quot;&gt;&#10;          &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;            &lt;h1 className=&quot;text-4xl font-bold mb-4&quot;&gt;Fresh Products&lt;/h1&gt;&#10;            &lt;p className=&quot;text-xl text-primary-100&quot;&gt;&#10;              Discover fresh, locally-sourced produce from our trusted farmers&#10;            &lt;/p&gt;&#10;&#10;            {/* Search Results Info */}&#10;            {(searchTerm || selectedCategory !== &quot;All Categories&quot;) &amp;&amp; (&#10;              &lt;div className=&quot;mt-6 p-4 bg-primary-700 rounded-lg&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between flex-wrap gap-2&quot;&gt;&#10;                  &lt;div&gt;&#10;                    {searchTerm &amp;&amp; (&#10;                      &lt;p className=&quot;text-primary-100&quot;&gt;&#10;                        Search results for:{&quot; &quot;}&#10;                        &lt;span className=&quot;font-semibold text-white&quot;&gt;&#10;                          &quot;{searchTerm}&quot;&#10;                        &lt;/span&gt;&#10;                      &lt;/p&gt;&#10;                    )}&#10;                    {selectedCategory !== &quot;All Categories&quot; &amp;&amp; (&#10;                      &lt;p className=&quot;text-primary-100&quot;&gt;&#10;                        Category:{&quot; &quot;}&#10;                        &lt;span className=&quot;font-semibold text-white&quot;&gt;&#10;                          {selectedCategory}&#10;                        &lt;/span&gt;&#10;                      &lt;/p&gt;&#10;                    )}&#10;                    &lt;p className=&quot;text-sm text-primary-200&quot;&gt;&#10;                      {pagination.totalProducts} products found&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Search Bar in Results */}&#10;                  &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      placeholder=&quot;Search products...&quot;&#10;                      className=&quot;px-4 py-2 rounded-lg text-gray-900 focus:outline-none&quot;&#10;                      value={searchTerm}&#10;                      onChange={(e) =&gt; setSearchTerm(e.target.value)}&#10;                      onKeyPress={(e) =&gt; e.key === &quot;Enter&quot; &amp;&amp; handleSearch()}&#10;                    /&gt;&#10;                    &lt;button&#10;                      onClick={handleSearch}&#10;                      className=&quot;px-4 py-2 bg-primary-500 hover:bg-primary-400 rounded-lg transition&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-search&quot;&gt;&lt;/i&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Filters and Products */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8&quot;&gt;&#10;          {/* Mobile Filter Toggle */}&#10;          &lt;div className=&quot;lg:hidden mb-6&quot;&gt;&#10;            &lt;button&#10;              onClick={() =&gt; setShowMobileFilters(!showMobileFilters)}&#10;              className=&quot;w-full bg-white dark:bg-gray-800 text-gray-900 dark:text-white px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-between&quot;&#10;            &gt;&#10;              &lt;span className=&quot;flex items-center&quot;&gt;&#10;                &lt;i className=&quot;fas fa-filter mr-2&quot;&gt;&lt;/i&gt;&#10;                Filters&#10;                {getActiveFilterCount() &gt; 0 &amp;&amp; (&#10;                  &lt;span className=&quot;ml-2 bg-primary-600 text-white text-xs px-2 py-1 rounded-full&quot;&gt;&#10;                    {getActiveFilterCount()}&#10;                  &lt;/span&gt;&#10;                )}&#10;              &lt;/span&gt;&#10;              &lt;i&#10;                className={`fas fa-chevron-${showMobileFilters ? &quot;up&quot; : &quot;down&quot;}`}&#10;              &gt;&lt;/i&gt;&#10;            &lt;/button&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Active Filters Summary */}&#10;          {getActiveFilterCount() &gt; 0 &amp;&amp; (&#10;            &lt;div className=&quot;mb-6 p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;                &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Active Filters ({getActiveFilterCount()})&#10;                &lt;/h4&gt;&#10;                &lt;button&#10;                  onClick={clearAllFilters}&#10;                  className=&quot;text-sm text-primary-600 hover:text-primary-700 dark:text-primary-400&quot;&#10;                &gt;&#10;                  Clear All&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#10;                {selectedCategory !== &quot;All Categories&quot; &amp;&amp; (&#10;                  &lt;span className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-primary-100 text-primary-800 dark:bg-primary-900 dark:text-primary-200&quot;&gt;&#10;                    Category: {selectedCategory}&#10;                    &lt;button&#10;                      onClick={() =&gt; handleCategoryChange(&quot;All Categories&quot;)}&#10;                      className=&quot;ml-2 text-primary-600 hover:text-primary-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                )}&#10;                {selectedPriceRanges.map((range) =&gt; (&#10;                  &lt;span&#10;                    key={range}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200&quot;&#10;                  &gt;&#10;                    {range}&#10;                    &lt;button&#10;                      onClick={() =&gt; handlePriceRangeChange(range)}&#10;                      className=&quot;ml-2 text-green-600 hover:text-green-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {selectedRatings.map((rating) =&gt; (&#10;                  &lt;span&#10;                    key={rating}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200&quot;&#10;                  &gt;&#10;                    {rating}+ Stars&#10;                    &lt;button&#10;                      onClick={() =&gt; handleRatingChange(rating)}&#10;                      className=&quot;ml-2 text-yellow-600 hover:text-yellow-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {selectedFarmers.map((farmer) =&gt; (&#10;                  &lt;span&#10;                    key={farmer}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200&quot;&#10;                  &gt;&#10;                    {farmer}&#10;                    &lt;button&#10;                      onClick={() =&gt; handleFarmerChange(farmer)}&#10;                      className=&quot;ml-2 text-blue-600 hover:text-blue-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {selectedTags.map((tag) =&gt; (&#10;                  &lt;span&#10;                    key={tag}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200&quot;&#10;                  &gt;&#10;                    {tag}&#10;                    &lt;button&#10;                      onClick={() =&gt; handleTagChange(tag)}&#10;                      className=&quot;ml-2 text-purple-600 hover:text-purple-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {(priceRangeSlider[0] !== 0 ||&#10;                  priceRangeSlider[1] !== 10000) &amp;&amp; (&#10;                  &lt;span className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200&quot;&gt;&#10;                    ৳{priceRangeSlider[0]} - ৳{priceRangeSlider[1]}&#10;                    &lt;button&#10;                      onClick={() =&gt; setPriceRangeSlider([0, 10000])}&#10;                      className=&quot;ml-2 text-orange-600 hover:text-orange-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;&#10;          &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-4 gap-8&quot;&gt;&#10;            {/* Filters Sidebar */}&#10;            &lt;div&#10;              className={`lg:col-span-1 ${showMobileFilters ? &quot;block&quot; : &quot;hidden lg:block&quot;}`}&#10;            &gt;&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 sticky top-24&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                  &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                    Filters&#10;                  &lt;/h3&gt;&#10;                  {getActiveFilterCount() &gt; 0 &amp;&amp; (&#10;                    &lt;span className=&quot;bg-primary-600 text-white text-xs px-2 py-1 rounded-full&quot;&gt;&#10;                      {getActiveFilterCount()}&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;&#10;                {/* Category Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-th-large mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Category&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2 max-h-48 overflow-y-auto&quot;&gt;&#10;                    {categoryOptions.map((category) =&gt; (&#10;                      &lt;label&#10;                        key={category}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;radio&quot;&#10;                          name=&quot;category&quot;&#10;                          checked={selectedCategory === category}&#10;                          onChange={() =&gt; handleCategoryChange(category)}&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          {category}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Price Range */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-dollar-sign mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Price Range (৳)&#10;                  &lt;/h4&gt;&#10;&#10;                  {/* Custom Price Range Slider */}&#10;                  &lt;div className=&quot;mb-4&quot;&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;range&quot;&#10;                        min=&quot;0&quot;&#10;                        max=&quot;10000&quot;&#10;                        step=&quot;10&quot;&#10;                        value={priceRangeSlider[0]}&#10;                        onChange={(e) =&gt;&#10;                          handlePriceSliderChange([&#10;                            +e.target.value,&#10;                            priceRangeSlider[1],&#10;                          ])&#10;                        }&#10;                        className=&quot;absolute w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer&quot;&#10;                      /&gt;&#10;                      &lt;input&#10;                        type=&quot;range&quot;&#10;                        min=&quot;0&quot;&#10;                        max=&quot;10000&quot;&#10;                        step=&quot;10&quot;&#10;                        value={priceRangeSlider[1]}&#10;                        onChange={(e) =&gt;&#10;                          handlePriceSliderChange([&#10;                            priceRangeSlider[0],&#10;                            +e.target.value,&#10;                          ])&#10;                        }&#10;                        className=&quot;absolute w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer&quot;&#10;                      /&gt;&#10;                      &lt;div className=&quot;relative h-2 bg-gray-200 rounded-lg&quot;&gt;&#10;                        &lt;div&#10;                          className=&quot;absolute h-2 bg-primary-600 rounded-lg&quot;&#10;                          style={{&#10;                            left: `${(priceRangeSlider[0] / 10000) * 100}%`,&#10;                            width: `${((priceRangeSlider[1] - priceRangeSlider[0]) / 10000) * 100}%`,&#10;                          }}&#10;                        &gt;&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;flex justify-between text-sm text-gray-600 dark:text-gray-400 mt-2&quot;&gt;&#10;                      &lt;span&gt;৳{priceRangeSlider[0]}&lt;/span&gt;&#10;                      &lt;span&gt;৳{priceRangeSlider[1]}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#10;                    {priceRangeOptions.map((option) =&gt; (&#10;                      &lt;label&#10;                        key={option.label}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={selectedPriceRanges.includes(option.label)}&#10;                          onChange={() =&gt; handlePriceRangeChange(option.label)}&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          {option.label}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Rating Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-star mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Rating&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#10;                    {[5, 4, 3, 2, 1].map((rating) =&gt; (&#10;                      &lt;label&#10;                        key={rating}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={selectedRatings.includes(rating)}&#10;                          onChange={() =&gt; handleRatingChange(rating)}&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300 flex items-center&quot;&gt;&#10;                          {[...Array(rating)].map((_, i) =&gt; (&#10;                            &lt;i&#10;                              key={i}&#10;                              className=&quot;fas fa-star text-yellow-400 text-xs mr-1&quot;&#10;                            &gt;&lt;/i&gt;&#10;                          ))}&#10;                          {rating &lt; 5 &amp;&amp; &lt;span className=&quot;ml-1&quot;&gt;&amp; Up&lt;/span&gt;}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Farmer Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-user mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Farmer&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2 max-h-32 overflow-y-auto&quot;&gt;&#10;                    {availableFarmers.length &gt; 0 ? (&#10;                      availableFarmers.map((farmer) =&gt; (&#10;                        &lt;label&#10;                          key={farmer}&#10;                          className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                        &gt;&#10;                          &lt;input&#10;                            type=&quot;checkbox&quot;&#10;                            checked={selectedFarmers.includes(farmer)}&#10;                            onChange={() =&gt; handleFarmerChange(farmer)}&#10;                            className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                          /&gt;&#10;                          &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300 truncate&quot;&gt;&#10;                            {farmer}&#10;                          &lt;/span&gt;&#10;                        &lt;/label&gt;&#10;                      ))&#10;                    ) : (&#10;                      &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400 p-2&quot;&gt;&#10;                        Loading farmers...&#10;                      &lt;/p&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Tag Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-tags mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Tags&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#10;                    {tagOptions.map((tag) =&gt; (&#10;                      &lt;label&#10;                        key={tag}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={selectedTags.includes(tag)}&#10;                          onChange={() =&gt; handleTagChange(tag)}&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          {tag}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Clear Filters */}&#10;                &lt;div className=&quot;border-t border-gray-200 dark:border-gray-700 pt-4&quot;&gt;&#10;                  &lt;button&#10;                    onClick={clearAllFilters}&#10;                    disabled={getActiveFilterCount() === 0}&#10;                    className=&quot;w-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 py-2 rounded-lg font-medium hover:bg-gray-300 dark:hover:bg-gray-600 transition disabled:opacity-50 disabled:cursor-not-allowed&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-times mr-2&quot;&gt;&lt;/i&gt;&#10;                    Clear All Filters&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Products Grid */}&#10;            &lt;div className=&quot;lg:col-span-3&quot;&gt;&#10;              {/* Sort and View Options */}&#10;              &lt;div className=&quot;flex items-center justify-between mb-6 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm&quot;&gt;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;span className=&quot;text-gray-700 dark:text-gray-300 font-medium&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-box mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    {pagination.totalProducts} products&#10;                  &lt;/span&gt;&#10;                  {loading &amp;&amp; (&#10;                    &lt;div className=&quot;flex items-center text-primary-600&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                      &lt;span className=&quot;text-sm&quot;&gt;Loading...&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;label className=&quot;text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                    Sort by:&#10;                  &lt;/label&gt;&#10;                  &lt;select&#10;                    value={sortBy}&#10;                    onChange={(e) =&gt; handleSortChange(e.target.value)}&#10;                    className=&quot;border border-gray-300 dark:border-gray-600 rounded-lg px-3 py-2 bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary-500 text-sm&quot;&#10;                  &gt;&#10;                    &lt;option value=&quot;newest&quot;&gt;Newest First&lt;/option&gt;&#10;                    &lt;option value=&quot;oldest&quot;&gt;Oldest First&lt;/option&gt;&#10;                    &lt;option value=&quot;price-low&quot;&gt;Price: Low to High&lt;/option&gt;&#10;                    &lt;option value=&quot;price-high&quot;&gt;Price: High to Low&lt;/option&gt;&#10;                    &lt;option value=&quot;rating&quot;&gt;Highest Rated&lt;/option&gt;&#10;                    &lt;option value=&quot;popular&quot;&gt;Most Popular&lt;/option&gt;&#10;                  &lt;/select&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Products Grid */}&#10;              {loading ? (&#10;                &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#10;                  {[...Array(9)].map((_, index) =&gt; (&#10;                    &lt;div&#10;                      key={index}&#10;                      className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden animate-pulse&quot;&#10;                    &gt;&#10;                      &lt;div className=&quot;w-full h-48 bg-gray-300 dark:bg-gray-600&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;p-6&quot;&gt;&#10;                        &lt;div className=&quot;h-4 bg-gray-300 dark:bg-gray-600 rounded mb-2&quot;&gt;&lt;/div&gt;&#10;                        &lt;div className=&quot;h-3 bg-gray-300 dark:bg-gray-600 rounded mb-3 w-3/4&quot;&gt;&lt;/div&gt;&#10;                        &lt;div className=&quot;h-6 bg-gray-300 dark:bg-gray-600 rounded mb-4 w-1/2&quot;&gt;&lt;/div&gt;&#10;                        &lt;div className=&quot;h-8 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              ) : products.length &gt; 0 ? (&#10;                &lt;&gt;&#10;                  &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#10;                    {products.map((product) =&gt; (&#10;                      &lt;ProductCard key={product._id} product={product} /&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Pagination */}&#10;                  {pagination.totalPages &gt; 1 &amp;&amp; (&#10;                    &lt;div className=&quot;mt-8 flex justify-center&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; handlePageChange(currentPage - 1)}&#10;                          disabled={!pagination.hasPrevPage}&#10;                          className=&quot;px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          Previous&#10;                        &lt;/button&gt;&#10;&#10;                        {[...Array(Math.min(5, pagination.totalPages))].map(&#10;                          (_, index) =&gt; {&#10;                            const pageNum = index + 1;&#10;                            return (&#10;                              &lt;button&#10;                                key={pageNum}&#10;                                onClick={() =&gt; handlePageChange(pageNum)}&#10;                                className={`px-3 py-2 border rounded-lg ${&#10;                                  currentPage === pageNum&#10;                                    ? &quot;bg-primary-600 text-white border-primary-600&quot;&#10;                                    : &quot;border-gray-300 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                                }`}&#10;                              &gt;&#10;                                {pageNum}&#10;                              &lt;/button&gt;&#10;                            );&#10;                          },&#10;                        )}&#10;&#10;                        &lt;button&#10;                          onClick={() =&gt; handlePageChange(currentPage + 1)}&#10;                          disabled={!pagination.hasNextPage}&#10;                          className=&quot;px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          Next&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/&gt;&#10;              ) : (&#10;                &lt;div className=&quot;text-center py-12&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-search text-6xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                  &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                    No products found&#10;                  &lt;/h3&gt;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;                    Try adjusting your search criteria or browse all products&#10;                  &lt;/p&gt;&#10;                  &lt;Link&#10;                    href=&quot;/products&quot;&#10;                    className=&quot;inline-block bg-primary-600 hover:bg-primary-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#10;                  &gt;&#10;                    Browse All Products&#10;                  &lt;/Link&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import Link from &quot;next/link&quot;;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { useSearchParams, useRouter } from &quot;next/navigation&quot;;&#10;import ProductCard from &quot;@/components/ProductCard&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;&#10;export default function Products() {&#10;  const searchParams = useSearchParams();&#10;  const router = useRouter();&#10;  const [products, setProducts] = useState([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [categories, setCategories] = useState([]);&#10;  const [pagination, setPagination] = useState({});&#10;&#10;  // Search and filter states&#10;  const [searchTerm, setSearchTerm] = useState(&#10;    searchParams.get(&quot;search&quot;) || &quot;&quot;,&#10;  );&#10;  const [selectedCategory, setSelectedCategory] = useState(&#10;    searchParams.get(&quot;category&quot;) || &quot;All Categories&quot;,&#10;  );&#10;  const [selectedPriceRanges, setSelectedPriceRanges] = useState([]);&#10;  const [selectedRatings, setSelectedRatings] = useState([]);&#10;  const [selectedFarmers, setSelectedFarmers] = useState([]);&#10;  const [selectedTags, setSelectedTags] = useState([]);&#10;  const [priceRangeSlider, setPriceRangeSlider] = useState([0, 10000]); // Increased default max to 10000&#10;  const [sortBy, setSortBy] = useState(&quot;newest&quot;);&#10;  const [currentPage, setCurrentPage] = useState(1);&#10;  const [showMobileFilters, setShowMobileFilters] = useState(false);&#10;  const [availableFarmers, setAvailableFarmers] = useState([]);&#10;&#10;  const categoryOptions = [&#10;    &quot;All Categories&quot;,&#10;    &quot;Vegetables&quot;,&#10;    &quot;Fruits&quot;,&#10;    &quot;Grains&quot;,&#10;    &quot;Dairy&quot;,&#10;    &quot;Honey&quot;,&#10;    &quot;Herbs&quot;,&#10;  ];&#10;&#10;  const priceRangeOptions = [&#10;    { label: &quot;Under ৳50&quot;, min: 0, max: 49 },&#10;    { label: &quot;৳50 - ৳100&quot;, min: 50, max: 100 },&#10;    { label: &quot;৳100 - ৳200&quot;, min: 101, max: 200 },&#10;    { label: &quot;৳200 - ৳500&quot;, min: 201, max: 500 },&#10;    { label: &quot;Above ৳500&quot;, min: 501, max: 9999 },&#10;  ];&#10;&#10;  const tagOptions = [&#10;    &quot;Organic&quot;,&#10;    &quot;Fresh&quot;,&#10;    &quot;Local&quot;,&#10;    &quot;Premium&quot;,&#10;    &quot;Seasonal&quot;,&#10;    &quot;Limited Stock&quot;,&#10;  ];&#10;&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; Products useEffect triggered:&quot;, {&#10;      searchTerm,&#10;      selectedCategory,&#10;      selectedPriceRanges,&#10;      selectedRatings,&#10;      selectedFarmers,&#10;      selectedTags,&#10;      priceRangeSlider,&#10;      sortBy,&#10;      currentPage,&#10;    });&#10;    fetchProducts();&#10;    // Remove fetchAvailableFarmers from here to prevent unnecessary calls&#10;  }, [&#10;    searchTerm,&#10;    selectedCategory,&#10;    selectedPriceRanges,&#10;    selectedRatings,&#10;    selectedFarmers,&#10;    selectedTags,&#10;    priceRangeSlider,&#10;    sortBy,&#10;    currentPage,&#10;  ]);&#10;&#10;  // Separate useEffect for fetching farmers (only once)&#10;  useEffect(() =&gt; {&#10;    fetchAvailableFarmers();&#10;  }, []); // Empty dependency array - only run once&#10;&#10;  // Update URL when category changes&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; Category changed, updating URL:&quot;, selectedCategory);&#10;    updateURLWithFilters({&#10;      selectedCategory: selectedCategory,&#10;    });&#10;  }, [selectedCategory]);&#10;&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; URL params changed, updating state:&quot;, {&#10;      searchParams: Object.fromEntries(searchParams.entries()),&#10;    });&#10;&#10;    // Update states from URL params&#10;    const newSearchTerm = searchParams.get(&quot;search&quot;) || &quot;&quot;;&#10;    const newCategory = searchParams.get(&quot;category&quot;) || &quot;All Categories&quot;;&#10;&#10;    console.log(&quot; Setting search term:&quot;, newSearchTerm);&#10;    console.log(&quot; Setting category:&quot;, newCategory);&#10;&#10;    setSearchTerm(newSearchTerm);&#10;    setSelectedCategory(newCategory);&#10;&#10;    // Restore price ranges from URL&#10;    const priceRanges = searchParams.get(&quot;priceRanges&quot;);&#10;    if (priceRanges) {&#10;      const newPriceRanges = priceRanges.split(&quot;,&quot;);&#10;      console.log(&quot; Setting price ranges:&quot;, newPriceRanges);&#10;      setSelectedPriceRanges(newPriceRanges);&#10;    } else {&#10;      console.log(&quot; Clearing price ranges&quot;);&#10;      setSelectedPriceRanges([]);&#10;    }&#10;&#10;    // Restore ratings from URL&#10;    const ratings = searchParams.get(&quot;ratings&quot;);&#10;    if (ratings) {&#10;      const newRatings = ratings.split(&quot;,&quot;).map(Number);&#10;      console.log(&quot;⭐ Setting ratings:&quot;, newRatings);&#10;      setSelectedRatings(newRatings);&#10;    } else {&#10;      console.log(&quot;⭐ Clearing ratings&quot;);&#10;      setSelectedRatings([]);&#10;    }&#10;&#10;    // Restore farmers from URL&#10;    const farmers = searchParams.get(&quot;farmers&quot;);&#10;    if (farmers) {&#10;      const newFarmers = farmers.split(&quot;,&quot;);&#10;      console.log(&quot;‍ Setting farmers:&quot;, newFarmers);&#10;      setSelectedFarmers(newFarmers);&#10;    } else {&#10;      console.log(&quot;‍ Clearing farmers&quot;);&#10;      setSelectedFarmers([]);&#10;    }&#10;&#10;    // Restore tags from URL&#10;    const tags = searchParams.get(&quot;tags&quot;);&#10;    if (tags) {&#10;      const newTags = tags.split(&quot;,&quot;);&#10;      console.log(&quot;️ Setting tags:&quot;, newTags);&#10;      setSelectedTags(newTags);&#10;    } else {&#10;      console.log(&quot;️ Clearing tags&quot;);&#10;      setSelectedTags([]);&#10;    }&#10;&#10;    // Restore price range slider from URL&#10;    const minPrice = searchParams.get(&quot;minPrice&quot;);&#10;    const maxPrice = searchParams.get(&quot;maxPrice&quot;);&#10;    if (minPrice &amp;&amp; maxPrice) {&#10;      const newPriceSlider = [Number(minPrice), Number(maxPrice)];&#10;      console.log(&quot;️ Setting price slider:&quot;, newPriceSlider);&#10;      setPriceRangeSlider(newPriceSlider);&#10;    } else {&#10;      console.log(&quot;️ Resetting price slider to default&quot;);&#10;      setPriceRangeSlider([0, 10000]);&#10;    }&#10;&#10;    // Restore sort option from URL&#10;    const newSort = searchParams.get(&quot;sort&quot;) || &quot;newest&quot;;&#10;    console.log(&quot; Setting sort:&quot;, newSort);&#10;    setSortBy(newSort);&#10;&#10;    // Restore page from URL&#10;    const newPage = Number(searchParams.get(&quot;page&quot;)) || 1;&#10;    console.log(&quot; Setting page:&quot;, newPage);&#10;    setCurrentPage(newPage);&#10;  }, [searchParams]);&#10;&#10;  const fetchAvailableFarmers = async () =&gt; {&#10;    try {&#10;      console.log(&quot; Starting comprehensive farmer fetch...&quot;);&#10;      const farmers = [];&#10;&#10;      // 1. Fetch from dedicated farmers API&#10;      try {&#10;        const response = await fetch(&quot;/api/farmers?limit=1000&quot;);&#10;        if (response.ok) {&#10;          const data = await response.json();&#10;          console.log(&quot; Fetched farmers from farmers API:&quot;, data);&#10;&#10;          if (data.farmers &amp;&amp; Array.isArray(data.farmers)) {&#10;            data.farmers.forEach((farmer) =&gt; {&#10;              if (farmer.name &amp;&amp; !farmers.includes(farmer.name)) {&#10;                farmers.push(farmer.name);&#10;              }&#10;            });&#10;          }&#10;        }&#10;      } catch (error) {&#10;        console.warn(&quot;⚠️ Farmers API failed:&quot;, error);&#10;      }&#10;&#10;      // 2. Fetch newly registered farmers from users collection&#10;      try {&#10;        const usersResponse = await fetch(&#10;          &quot;/api/auth/users?userType=farmer&amp;limit=1000&quot;,&#10;        );&#10;        if (usersResponse.ok) {&#10;          const usersData = await usersResponse.json();&#10;          console.log(&quot; Fetched farmers from users API:&quot;, usersData);&#10;&#10;          if (usersData.users &amp;&amp; Array.isArray(usersData.users)) {&#10;            usersData.users.forEach((user) =&gt; {&#10;              // Prioritize farmer's personal name over farm name&#10;              const farmerName =&#10;                user.name || `${user.firstName} ${user.lastName}` || user.farmDetails?.farmName;&#10;              if (farmerName &amp;&amp; !farmers.includes(farmerName)) {&#10;                farmers.push(farmerName);&#10;                console.log(&quot; Added farmer from users:&quot;, farmerName);&#10;              }&#10;            });&#10;          }&#10;        } else {&#10;          console.warn(&#10;            &quot;⚠️ Users API not available, trying alternative approach&quot;,&#10;          );&#10;        }&#10;      } catch (error) {&#10;        console.warn(&quot;⚠️ Users API failed:&quot;, error);&#10;      }&#10;&#10;      // 3. Backup: get farmers from products API&#10;      try {&#10;        const productsResponse = await fetch(&quot;/api/products?limit=1000&quot;);&#10;        if (productsResponse.ok) {&#10;          const productsData = await productsResponse.json();&#10;          console.log(&#10;            &quot; Fetched farmers from products API:&quot;,&#10;            productsData.products?.length || 0,&#10;            &quot;products&quot;,&#10;          );&#10;&#10;          const productFarmers = [&#10;            ...new Set(&#10;              productsData.products.map((p) =&gt; p.farmer?.name).filter(Boolean),&#10;            ),&#10;          ];&#10;&#10;          // Merge farmers from products&#10;          productFarmers.forEach((farmerName) =&gt; {&#10;            if (!farmers.includes(farmerName)) {&#10;              farmers.push(farmerName);&#10;            }&#10;          });&#10;        }&#10;      } catch (error) {&#10;        console.warn(&quot;⚠️ Products API failed:&quot;, error);&#10;      }&#10;&#10;      // Sort farmers alphabetically and update state&#10;      farmers.sort();&#10;&#10;      console.log(&quot; Final comprehensive farmers list:&quot;, farmers);&#10;      console.log(&quot; Total farmers found:&quot;, farmers.length);&#10;      setAvailableFarmers(farmers);&#10;    } catch (error) {&#10;      console.error(&quot;❌ Error in comprehensive farmer fetch:&quot;, error);&#10;      // Ultimate fallback - at least try products API&#10;      try {&#10;        const response = await fetch(&quot;/api/products?limit=1000&quot;);&#10;        if (response.ok) {&#10;          const data = await response.json();&#10;          const farmers = [&#10;            ...new Set(&#10;              data.products.map((p) =&gt; p.farmer?.name).filter(Boolean),&#10;            ),&#10;          ];&#10;          farmers.sort();&#10;          setAvailableFarmers(farmers);&#10;          console.log(&quot; Fallback farmers loaded:&quot;, farmers.length);&#10;        }&#10;      } catch (fallbackError) {&#10;        console.error(&quot;❌ Complete failure in farmer fetch:&quot;, fallbackError);&#10;        setAvailableFarmers([]);&#10;      }&#10;    }&#10;  };&#10;&#10;  const fetchProducts = async () =&gt; {&#10;    console.log(&quot; fetchProducts called with current state:&quot;, {&#10;      searchTerm,&#10;      selectedCategory,&#10;      sortBy,&#10;      currentPage,&#10;    });&#10;&#10;    setLoading(true);&#10;    try {&#10;      const params = new URLSearchParams();&#10;      if (searchTerm) params.append(&quot;search&quot;, searchTerm);&#10;      if (selectedCategory !== &quot;All Categories&quot;)&#10;        params.append(&quot;category&quot;, selectedCategory);&#10;      // Add high limit to fetch all products for client-side pagination&#10;      params.append(&quot;limit&quot;, &quot;1000&quot;);&#10;      params.append(&quot;sortBy&quot;, sortBy);&#10;&#10;      const apiUrl = `/api/products?${params}`;&#10;      console.log(&quot; API call URL:&quot;, apiUrl);&#10;&#10;      const response = await fetch(apiUrl);&#10;      if (response.ok) {&#10;        let data = await response.json();&#10;        let allProducts = data.products;&#10;&#10;        console.log(&quot; Raw products from API:&quot;, allProducts.length);&#10;        console.log(&#10;          &quot; Sample of all products:&quot;,&#10;          allProducts.slice(0, 3).map((p) =&gt; ({&#10;            name: p.name,&#10;            _id: p._id,&#10;            farmerId: p.farmerId,&#10;            farmerEmail: p.farmerEmail,&#10;            category: p.category,&#10;            price: p.price,&#10;          })),&#10;        );&#10;&#10;        // Apply client-side filters to all products&#10;        let filteredProducts = applyFilters(allProducts);&#10;&#10;        console.log(&quot; Products after filtering:&quot;, filteredProducts.length);&#10;&#10;        // Always apply pagination regardless of filters&#10;        const itemsPerPage = 12;&#10;        const startIndex = (currentPage - 1) * itemsPerPage;&#10;        const endIndex = startIndex + itemsPerPage;&#10;        const paginatedProducts = filteredProducts.slice(startIndex, endIndex);&#10;&#10;        console.log(&quot; Paginated products:&quot;, {&#10;          startIndex,&#10;          endIndex,&#10;          paginatedCount: paginatedProducts.length,&#10;          totalFiltered: filteredProducts.length,&#10;        });&#10;&#10;        setProducts(paginatedProducts);&#10;        setPagination({&#10;          currentPage: currentPage,&#10;          totalPages: Math.ceil(filteredProducts.length / itemsPerPage),&#10;          totalProducts: filteredProducts.length,&#10;          hasNextPage:&#10;            currentPage &lt; Math.ceil(filteredProducts.length / itemsPerPage),&#10;          hasPrevPage: currentPage &gt; 1,&#10;        });&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot; Error fetching products:&quot;, error);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  const applyFilters = (products) =&gt; {&#10;    console.log(&quot; applyFilters called with:&quot;, {&#10;      totalProducts: products.length,&#10;      selectedPriceRanges,&#10;      selectedRatings,&#10;      selectedFarmers,&#10;      selectedTags,&#10;      priceRangeSlider,&#10;    });&#10;&#10;    let filtered = [...products];&#10;    const originalCount = filtered.length;&#10;&#10;    // Price range filters&#10;    if (selectedPriceRanges.length &gt; 0) {&#10;      const beforeFilter = filtered.length;&#10;      filtered = filtered.filter((product) =&gt; {&#10;        return selectedPriceRanges.some((range) =&gt; {&#10;          const option = priceRangeOptions.find((opt) =&gt; opt.label === range);&#10;          return product.price &gt;= option.min &amp;&amp; product.price &lt;= option.max;&#10;        });&#10;      });&#10;      console.log(&quot; Price range filter:&quot;, {&#10;        before: beforeFilter,&#10;        after: filtered.length,&#10;        ranges: selectedPriceRanges,&#10;      });&#10;    }&#10;&#10;    // Custom price range slider&#10;    const beforeSlider = filtered.length;&#10;    const filteredOutProducts = [];&#10;&#10;    filtered = filtered.filter((product) =&gt; {&#10;      const withinRange =&#10;        product.price &gt;= priceRangeSlider[0] &amp;&amp;&#10;        product.price &lt;= priceRangeSlider[1];&#10;&#10;      if (!withinRange) {&#10;        filteredOutProducts.push({&#10;          name: product.name,&#10;          price: product.price,&#10;          priceType: typeof product.price,&#10;        });&#10;      }&#10;&#10;      return withinRange;&#10;    });&#10;&#10;    console.log(&quot; Price slider filter:&quot;, {&#10;      before: beforeSlider,&#10;      after: filtered.length,&#10;      range: priceRangeSlider,&#10;      filteredOut: filteredOutProducts,&#10;    });&#10;&#10;    // Rating filters&#10;    if (selectedRatings.length &gt; 0) {&#10;      const beforeRating = filtered.length;&#10;      filtered = filtered.filter((product) =&gt; {&#10;        const productRating = product.averageRating || 0;&#10;        return selectedRatings.some((rating) =&gt; productRating &gt;= rating);&#10;      });&#10;      console.log(&quot; Rating filter:&quot;, {&#10;        before: beforeRating,&#10;        after: filtered.length,&#10;        ratings: selectedRatings,&#10;      });&#10;    }&#10;&#10;    // Farmer filters&#10;    if (selectedFarmers.length &gt; 0) {&#10;      const beforeFarmer = filtered.length;&#10;      filtered = filtered.filter((product) =&gt;&#10;        selectedFarmers.includes(product.farmer?.name),&#10;      );&#10;      console.log(&quot; Farmer filter:&quot;, {&#10;        before: beforeFarmer,&#10;        after: filtered.length,&#10;        farmers: selectedFarmers,&#10;      });&#10;    }&#10;&#10;    // Tag filters&#10;    if (selectedTags.length &gt; 0) {&#10;      const beforeTags = filtered.length;&#10;      filtered = filtered.filter((product) =&gt; {&#10;        return selectedTags.every((tag) =&gt; {&#10;          switch (tag) {&#10;            case &quot;Organic&quot;:&#10;              return product.isOrganic;&#10;            case &quot;Fresh&quot;:&#10;              return product.isFresh;&#10;            case &quot;Local&quot;:&#10;              return true; // Assuming all products are local&#10;            case &quot;Premium&quot;:&#10;              return product.price &gt; 200;&#10;            case &quot;Seasonal&quot;:&#10;              return product.stock &lt; 100;&#10;            case &quot;Limited Stock&quot;:&#10;              return product.stock &lt; 50;&#10;            default:&#10;              return false;&#10;          }&#10;        });&#10;      });&#10;      console.log(&quot; Tag filter:&quot;, {&#10;        before: beforeTags,&#10;        after: filtered.length,&#10;        tags: selectedTags,&#10;      });&#10;    }&#10;&#10;    // Apply sorting&#10;    const beforeSort = filtered.length;&#10;    switch (sortBy) {&#10;      case &quot;price-low&quot;:&#10;        filtered.sort((a, b) =&gt; a.price - b.price);&#10;        break;&#10;      case &quot;price-high&quot;:&#10;        filtered.sort((a, b) =&gt; b.price - a.price);&#10;        break;&#10;      case &quot;rating&quot;:&#10;        filtered.sort(&#10;          (a, b) =&gt; (b.averageRating || 0) - (a.averageRating || 0),&#10;        );&#10;        filtered.sort(&#10;          (a, b) =&gt; (b.purchaseCount || 0) - (a.purchaseCount || 0),&#10;        );&#10;        break;&#10;      case &quot;newest&quot;:&#10;        filtered.sort((a, b) =&gt; new Date(b.createdAt) - new Date(a.createdAt));&#10;        break;&#10;      case &quot;oldest&quot;:&#10;        filtered.sort((a, b) =&gt; new Date(a.createdAt) - new Date(b.createdAt));&#10;        break;&#10;    }&#10;    console.log(&quot; Sorting applied:&quot;, { sortBy, count: filtered.length });&#10;&#10;    console.log(&quot; Final filtering result:&quot;, {&#10;      original: originalCount,&#10;      final: filtered.length,&#10;      reduction: originalCount - filtered.length,&#10;    });&#10;&#10;    return filtered;&#10;  };&#10;&#10;  // Handle search functionality&#10;  const handleSearch = () =&gt; {&#10;    const params = new URLSearchParams();&#10;    if (searchTerm) params.append(&quot;search&quot;, searchTerm);&#10;    if (selectedCategory !== &quot;All Categories&quot;)&#10;      params.append(&quot;category&quot;, selectedCategory);&#10;    router.push(`/products?${params.toString()}`);&#10;    setCurrentPage(1);&#10;    fetchProducts();&#10;  };&#10;&#10;  const handleKeyPress = (e) =&gt; {&#10;    if (e.key === &quot;Enter&quot;) {&#10;      handleSearch();&#10;    }&#10;  };&#10;&#10;  const handleCategoryChange = (category) =&gt; {&#10;    console.log(&quot; Category change clicked:&quot;, category);&#10;    setSelectedCategory(category);&#10;    setCurrentPage(1);&#10;    // Don't call updateURL here - let the useEffect handle it&#10;  };&#10;&#10;  const handlePriceRangeChange = (range) =&gt; {&#10;    console.log(&quot; Price range clicked:&quot;, range);&#10;    console.log(&quot; Current selected price ranges:&quot;, selectedPriceRanges);&#10;&#10;    const newPriceRanges = selectedPriceRanges.includes(range)&#10;      ? selectedPriceRanges.filter((r) =&gt; r !== range)&#10;      : [...selectedPriceRanges, range];&#10;&#10;    console.log(&quot; New price ranges:&quot;, newPriceRanges);&#10;&#10;    setSelectedPriceRanges(newPriceRanges);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot; Updating URL with new price ranges:&quot;, newPriceRanges);&#10;    updateURLWithFilters({&#10;      selectedPriceRanges: newPriceRanges,&#10;    });&#10;  };&#10;&#10;  const handleRatingChange = (rating) =&gt; {&#10;    console.log(&quot;⭐ Rating clicked:&quot;, rating);&#10;    console.log(&quot;⭐ Current selected ratings:&quot;, selectedRatings);&#10;&#10;    const newRatings = selectedRatings.includes(rating)&#10;      ? selectedRatings.filter((r) =&gt; r !== rating)&#10;      : [...selectedRatings, rating];&#10;&#10;    console.log(&quot;⭐ New ratings:&quot;, newRatings);&#10;&#10;    setSelectedRatings(newRatings);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot;⭐ Updating URL with new ratings:&quot;, newRatings);&#10;    updateURLWithFilters({&#10;      selectedRatings: newRatings,&#10;    });&#10;  };&#10;&#10;  const handleFarmerChange = (farmer) =&gt; {&#10;    console.log(&quot;‍ Farmer clicked:&quot;, farmer);&#10;    console.log(&quot;‍ Current selected farmers:&quot;, selectedFarmers);&#10;&#10;    const newFarmers = selectedFarmers.includes(farmer)&#10;      ? selectedFarmers.filter((f) =&gt; f !== farmer)&#10;      : [...selectedFarmers, farmer];&#10;&#10;    console.log(&quot;‍ New farmers:&quot;, newFarmers);&#10;&#10;    setSelectedFarmers(newFarmers);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot;‍ Updating URL with new farmers:&quot;, newFarmers);&#10;    updateURLWithFilters({&#10;      selectedFarmers: newFarmers,&#10;    });&#10;  };&#10;&#10;  const handleTagChange = (tag) =&gt; {&#10;    console.log(&quot;️ Tag clicked:&quot;, tag);&#10;    console.log(&quot;️ Current selected tags:&quot;, selectedTags);&#10;&#10;    const newTags = selectedTags.includes(tag)&#10;      ? selectedTags.filter((t) =&gt; t !== tag)&#10;      : [...selectedTags, tag];&#10;&#10;    console.log(&quot;️ New tags:&quot;, newTags);&#10;&#10;    setSelectedTags(newTags);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot;️ Updating URL with new tags:&quot;, newTags);&#10;    updateURLWithFilters({&#10;      selectedTags: newTags,&#10;    });&#10;  };&#10;&#10;  const handlePriceSliderChange = (newPriceRange) =&gt; {&#10;    console.log(&quot;️ Price slider changed:&quot;, newPriceRange);&#10;    console.log(&quot;️ Current price slider:&quot;, priceRangeSlider);&#10;&#10;    setPriceRangeSlider(newPriceRange);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot;️ Updating URL with new price slider:&quot;, newPriceRange);&#10;    updateURLWithFilters({&#10;      priceRangeSlider: newPriceRange,&#10;    });&#10;  };&#10;&#10;  const handleSortChange = (newSort) =&gt; {&#10;    console.log(&quot; Sort changed:&quot;, newSort);&#10;    console.log(&quot; Current sort:&quot;, sortBy);&#10;&#10;    setSortBy(newSort);&#10;    setCurrentPage(1);&#10;&#10;    // Immediate URL update&#10;    console.log(&quot; Updating URL with new sort:&quot;, newSort);&#10;    updateURLWithFilters({&#10;      sortBy: newSort,&#10;    });&#10;  };&#10;&#10;  const clearAllFilters = () =&gt; {&#10;    setSelectedCategory(&quot;All Categories&quot;);&#10;    setSearchTerm(&quot;&quot;);&#10;    setSelectedPriceRanges([]);&#10;    setSelectedRatings([]);&#10;    setSelectedFarmers([]);&#10;    setSelectedTags([]);&#10;    setPriceRangeSlider([0, 10000]);&#10;    setCurrentPage(1);&#10;    updateURL();&#10;  };&#10;&#10;  const updateURL = () =&gt; {&#10;    console.log(&quot; updateURL called with current state:&quot;, {&#10;      searchTerm,&#10;      selectedCategory,&#10;      selectedPriceRanges,&#10;      selectedRatings,&#10;      selectedFarmers,&#10;      selectedTags,&#10;      priceRangeSlider,&#10;      sortBy,&#10;      currentPage,&#10;    });&#10;&#10;    const params = new URLSearchParams();&#10;&#10;    // Add search term&#10;    if (searchTerm) params.append(&quot;search&quot;, searchTerm);&#10;&#10;    // Add category&#10;    if (selectedCategory !== &quot;All Categories&quot;)&#10;      params.append(&quot;category&quot;, selectedCategory);&#10;&#10;    // Add price ranges&#10;    if (selectedPriceRanges.length &gt; 0) {&#10;      params.append(&quot;priceRanges&quot;, selectedPriceRanges.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add ratings&#10;    if (selectedRatings.length &gt; 0) {&#10;      params.append(&quot;ratings&quot;, selectedRatings.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add farmers&#10;    if (selectedFarmers.length &gt; 0) {&#10;      params.append(&quot;farmers&quot;, selectedFarmers.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add tags&#10;    if (selectedTags.length &gt; 0) {&#10;      params.append(&quot;tags&quot;, selectedTags.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add price range slider&#10;    if (priceRangeSlider[0] !== 0 || priceRangeSlider[1] !== 10000) {&#10;      params.append(&quot;minPrice&quot;, priceRangeSlider[0]);&#10;      params.append(&quot;maxPrice&quot;, priceRangeSlider[1]);&#10;    }&#10;&#10;    // Add sort option&#10;    if (sortBy !== &quot;newest&quot;) {&#10;      params.append(&quot;sort&quot;, sortBy);&#10;    }&#10;&#10;    // Add current page if not first page&#10;    if (currentPage &gt; 1) {&#10;      params.append(&quot;page&quot;, currentPage);&#10;    }&#10;&#10;    const newURL = `/products${params.toString() ? `?${params.toString()}` : &quot;&quot;}`;&#10;    console.log(&quot; Generated URL:&quot;, newURL);&#10;    router.push(newURL, { shallow: true });&#10;  };&#10;&#10;  const updateURLWithFilters = (overrides = {}) =&gt; {&#10;    console.log(&quot; updateURLWithFilters called with overrides:&quot;, overrides);&#10;    console.log(&quot; Current state before overrides:&quot;, {&#10;      searchTerm,&#10;      selectedCategory,&#10;      selectedPriceRanges,&#10;      selectedRatings,&#10;      selectedFarmers,&#10;      selectedTags,&#10;      priceRangeSlider,&#10;      sortBy,&#10;      currentPage,&#10;    });&#10;&#10;    const params = new URLSearchParams();&#10;&#10;    // Use current state values or overrides&#10;    const currentSearchTerm =&#10;      overrides.searchTerm !== undefined ? overrides.searchTerm : searchTerm;&#10;    const currentCategory =&#10;      overrides.selectedCategory !== undefined&#10;        ? overrides.selectedCategory&#10;        : selectedCategory;&#10;    const currentPriceRanges =&#10;      overrides.selectedPriceRanges !== undefined&#10;        ? overrides.selectedPriceRanges&#10;        : selectedPriceRanges;&#10;    const currentRatings =&#10;      overrides.selectedRatings !== undefined&#10;        ? overrides.selectedRatings&#10;        : selectedRatings;&#10;    const currentFarmers =&#10;      overrides.selectedFarmers !== undefined&#10;        ? overrides.selectedFarmers&#10;        : selectedFarmers;&#10;    const currentTags =&#10;      overrides.selectedTags !== undefined&#10;        ? overrides.selectedTags&#10;        : selectedTags;&#10;    const currentPriceSlider =&#10;      overrides.priceRangeSlider !== undefined&#10;        ? overrides.priceRangeSlider&#10;        : priceRangeSlider;&#10;    const currentSort =&#10;      overrides.sortBy !== undefined ? overrides.sortBy : sortBy;&#10;    const currentPageNumber =&#10;      overrides.currentPage !== undefined ? overrides.currentPage : 1; // Reset to page 1 for filters&#10;&#10;    console.log(&quot; Final values to use:&quot;, {&#10;      currentSearchTerm,&#10;      currentCategory,&#10;      currentPriceRanges,&#10;      currentRatings,&#10;      currentFarmers,&#10;      currentTags,&#10;      currentPriceSlider,&#10;      currentSort,&#10;      currentPageNumber,&#10;    });&#10;&#10;    // Add search term&#10;    if (currentSearchTerm) params.append(&quot;search&quot;, currentSearchTerm);&#10;&#10;    // Add category&#10;    if (currentCategory !== &quot;All Categories&quot;)&#10;      params.append(&quot;category&quot;, currentCategory);&#10;&#10;    // Add price ranges&#10;    if (currentPriceRanges.length &gt; 0) {&#10;      params.append(&quot;priceRanges&quot;, currentPriceRanges.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add ratings&#10;    if (currentRatings.length &gt; 0) {&#10;      params.append(&quot;ratings&quot;, currentRatings.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add farmers&#10;    if (currentFarmers.length &gt; 0) {&#10;      params.append(&quot;farmers&quot;, currentFarmers.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add tags&#10;    if (currentTags.length &gt; 0) {&#10;      params.append(&quot;tags&quot;, currentTags.join(&quot;,&quot;));&#10;    }&#10;&#10;    // Add price range slider&#10;    if (currentPriceSlider[0] !== 0 || currentPriceSlider[1] !== 10000) {&#10;      params.append(&quot;minPrice&quot;, currentPriceSlider[0]);&#10;      params.append(&quot;maxPrice&quot;, currentPriceSlider[1]);&#10;    }&#10;&#10;    // Add sort option&#10;    if (currentSort !== &quot;newest&quot;) {&#10;      params.append(&quot;sort&quot;, currentSort);&#10;    }&#10;&#10;    // Add current page if not first page&#10;    if (currentPageNumber &gt; 1) {&#10;      params.append(&quot;page&quot;, currentPageNumber);&#10;    }&#10;&#10;    const newURL = `/products${params.toString() ? `?${params.toString()}` : &quot;&quot;}`;&#10;    console.log(&quot; Generated URL with filters:&quot;, newURL);&#10;    router.push(newURL, { shallow: true });&#10;  };&#10;&#10;  const handlePageChange = (page) =&gt; {&#10;    console.log(&quot; Page change clicked:&quot;, page);&#10;    setCurrentPage(page);&#10;    // Update URL immediately for page changes&#10;    updateURLWithFilters({&#10;      currentPage: page,&#10;    });&#10;  };&#10;&#10;  const getActiveFilterCount = () =&gt; {&#10;    let count = 0;&#10;    if (selectedCategory !== &quot;All Categories&quot;) count++;&#10;    if (selectedPriceRanges.length &gt; 0) count++;&#10;    if (selectedRatings.length &gt; 0) count++;&#10;    if (selectedFarmers.length &gt; 0) count++;&#10;    if (selectedTags.length &gt; 0) count++;&#10;    if (priceRangeSlider[0] !== 0 || priceRangeSlider[1] !== 10000) count++;&#10;    return count;&#10;  };&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900&quot;&gt;&#10;        {/* Products Header */}&#10;        &lt;div className=&quot;bg-primary-600 text-white py-12&quot;&gt;&#10;          &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;            &lt;h1 className=&quot;text-4xl font-bold mb-4&quot;&gt;Fresh Products&lt;/h1&gt;&#10;            &lt;p className=&quot;text-xl text-primary-100&quot;&gt;&#10;              Discover fresh, locally-sourced produce from our trusted farmers&#10;            &lt;/p&gt;&#10;&#10;            {/* Search Results Info */}&#10;            {(searchTerm || selectedCategory !== &quot;All Categories&quot;) &amp;&amp; (&#10;              &lt;div className=&quot;mt-6 p-4 bg-primary-700 rounded-lg&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between flex-wrap gap-2&quot;&gt;&#10;                  &lt;div&gt;&#10;                    {searchTerm &amp;&amp; (&#10;                      &lt;p className=&quot;text-primary-100&quot;&gt;&#10;                        Search results for:{&quot; &quot;}&#10;                        &lt;span className=&quot;font-semibold text-white&quot;&gt;&#10;                          &quot;{searchTerm}&quot;&#10;                        &lt;/span&gt;&#10;                      &lt;/p&gt;&#10;                    )}&#10;                    {selectedCategory !== &quot;All Categories&quot; &amp;&amp; (&#10;                      &lt;p className=&quot;text-primary-100&quot;&gt;&#10;                        Category:{&quot; &quot;}&#10;                        &lt;span className=&quot;font-semibold text-white&quot;&gt;&#10;                          {selectedCategory}&#10;                        &lt;/span&gt;&#10;                      &lt;/p&gt;&#10;                    )}&#10;                    &lt;p className=&quot;text-sm text-primary-200&quot;&gt;&#10;                      {pagination.totalProducts} products found&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Search Bar in Results */}&#10;                  &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      placeholder=&quot;Search products...&quot;&#10;                      className=&quot;px-4 py-2 rounded-lg text-gray-900 focus:outline-none&quot;&#10;                      value={searchTerm}&#10;                      onChange={(e) =&gt; setSearchTerm(e.target.value)}&#10;                      onKeyPress={(e) =&gt; e.key === &quot;Enter&quot; &amp;&amp; handleSearch()}&#10;                    /&gt;&#10;                    &lt;button&#10;                      onClick={handleSearch}&#10;                      className=&quot;px-4 py-2 bg-primary-500 hover:bg-primary-400 rounded-lg transition&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-search&quot;&gt;&lt;/i&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Filters and Products */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8&quot;&gt;&#10;          {/* Mobile Filter Toggle */}&#10;          &lt;div className=&quot;lg:hidden mb-6&quot;&gt;&#10;            &lt;button&#10;              onClick={() =&gt; setShowMobileFilters(!showMobileFilters)}&#10;              className=&quot;w-full bg-white dark:bg-gray-800 text-gray-900 dark:text-white px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-between&quot;&#10;            &gt;&#10;              &lt;span className=&quot;flex items-center&quot;&gt;&#10;                &lt;i className=&quot;fas fa-filter mr-2&quot;&gt;&lt;/i&gt;&#10;                Filters&#10;                {getActiveFilterCount() &gt; 0 &amp;&amp; (&#10;                  &lt;span className=&quot;ml-2 bg-primary-600 text-white text-xs px-2 py-1 rounded-full&quot;&gt;&#10;                    {getActiveFilterCount()}&#10;                  &lt;/span&gt;&#10;                )}&#10;              &lt;/span&gt;&#10;              &lt;i&#10;                className={`fas fa-chevron-${showMobileFilters ? &quot;up&quot; : &quot;down&quot;}`}&#10;              &gt;&lt;/i&gt;&#10;            &lt;/button&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Active Filters Summary */}&#10;          {getActiveFilterCount() &gt; 0 &amp;&amp; (&#10;            &lt;div className=&quot;mb-6 p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;                &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Active Filters ({getActiveFilterCount()})&#10;                &lt;/h4&gt;&#10;                &lt;button&#10;                  onClick={clearAllFilters}&#10;                  className=&quot;text-sm text-primary-600 hover:text-primary-700 dark:text-primary-400&quot;&#10;                &gt;&#10;                  Clear All&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#10;                {selectedCategory !== &quot;All Categories&quot; &amp;&amp; (&#10;                  &lt;span className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-primary-100 text-primary-800 dark:bg-primary-900 dark:text-primary-200&quot;&gt;&#10;                    Category: {selectedCategory}&#10;                    &lt;button&#10;                      onClick={() =&gt; handleCategoryChange(&quot;All Categories&quot;)}&#10;                      className=&quot;ml-2 text-primary-600 hover:text-primary-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                )}&#10;                {selectedPriceRanges.map((range) =&gt; (&#10;                  &lt;span&#10;                    key={range}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200&quot;&#10;                  &gt;&#10;                    {range}&#10;                    &lt;button&#10;                      onClick={() =&gt; handlePriceRangeChange(range)}&#10;                      className=&quot;ml-2 text-green-600 hover:text-green-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {selectedRatings.map((rating) =&gt; (&#10;                  &lt;span&#10;                    key={rating}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200&quot;&#10;                  &gt;&#10;                    {rating}+ Stars&#10;                    &lt;button&#10;                      onClick={() =&gt; handleRatingChange(rating)}&#10;                      className=&quot;ml-2 text-yellow-600 hover:text-yellow-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {selectedFarmers.map((farmer) =&gt; (&#10;                  &lt;span&#10;                    key={farmer}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200&quot;&#10;                  &gt;&#10;                    {farmer}&#10;                    &lt;button&#10;                      onClick={() =&gt; handleFarmerChange(farmer)}&#10;                      className=&quot;ml-2 text-blue-600 hover:text-blue-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {selectedTags.map((tag) =&gt; (&#10;                  &lt;span&#10;                    key={tag}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200&quot;&#10;                  &gt;&#10;                    {tag}&#10;                    &lt;button&#10;                      onClick={() =&gt; handleTagChange(tag)}&#10;                      className=&quot;ml-2 text-purple-600 hover:text-purple-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {(priceRangeSlider[0] !== 0 ||&#10;                  priceRangeSlider[1] !== 10000) &amp;&amp; (&#10;                  &lt;span className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200&quot;&gt;&#10;                    ৳{priceRangeSlider[0]} - ৳{priceRangeSlider[1]}&#10;                    &lt;button&#10;                      onClick={() =&gt; setPriceRangeSlider([0, 10000])}&#10;                      className=&quot;ml-2 text-orange-600 hover:text-orange-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;&#10;          &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-4 gap-8&quot;&gt;&#10;            {/* Filters Sidebar */}&#10;            &lt;div&#10;              className={`lg:col-span-1 ${showMobileFilters ? &quot;block&quot; : &quot;hidden lg:block&quot;}`}&#10;            &gt;&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 sticky top-24&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                  &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                    Filters&#10;                  &lt;/h3&gt;&#10;                  {getActiveFilterCount() &gt; 0 &amp;&amp; (&#10;                    &lt;span className=&quot;bg-primary-600 text-white text-xs px-2 py-1 rounded-full&quot;&gt;&#10;                      {getActiveFilterCount()}&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;&#10;                {/* Category Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-th-large mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Category&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2 max-h-48 overflow-y-auto&quot;&gt;&#10;                    {categoryOptions.map((category) =&gt; (&#10;                      &lt;label&#10;                        key={category}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;radio&quot;&#10;                          name=&quot;category&quot;&#10;                          checked={selectedCategory === category}&#10;                          onChange={() =&gt; handleCategoryChange(category)}&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          {category}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Price Range */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-dollar-sign mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Price Range (৳)&#10;                  &lt;/h4&gt;&#10;&#10;                  {/* Custom Price Range Slider */}&#10;                  &lt;div className=&quot;mb-4&quot;&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;range&quot;&#10;                        min=&quot;0&quot;&#10;                        max=&quot;10000&quot;&#10;                        step=&quot;10&quot;&#10;                        value={priceRangeSlider[0]}&#10;                        onChange={(e) =&gt;&#10;                          handlePriceSliderChange([&#10;                            +e.target.value,&#10;                            priceRangeSlider[1],&#10;                          ])&#10;                        }&#10;                        className=&quot;absolute w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer&quot;&#10;                      /&gt;&#10;                      &lt;input&#10;                        type=&quot;range&quot;&#10;                        min=&quot;0&quot;&#10;                        max=&quot;10000&quot;&#10;                        step=&quot;10&quot;&#10;                        value={priceRangeSlider[1]}&#10;                        onChange={(e) =&gt;&#10;                          handlePriceSliderChange([&#10;                            priceRangeSlider[0],&#10;                            +e.target.value,&#10;                          ])&#10;                        }&#10;                        className=&quot;absolute w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer&quot;&#10;                      /&gt;&#10;                      &lt;div className=&quot;relative h-2 bg-gray-200 rounded-lg&quot;&gt;&#10;                        &lt;div&#10;                          className=&quot;absolute h-2 bg-primary-600 rounded-lg&quot;&#10;                          style={{&#10;                            left: `${(priceRangeSlider[0] / 10000) * 100}%`,&#10;                            width: `${((priceRangeSlider[1] - priceRangeSlider[0]) / 10000) * 100}%`,&#10;                          }}&#10;                        &gt;&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;flex justify-between text-sm text-gray-600 dark:text-gray-400 mt-2&quot;&gt;&#10;                      &lt;span&gt;৳{priceRangeSlider[0]}&lt;/span&gt;&#10;                      &lt;span&gt;৳{priceRangeSlider[1]}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#10;                    {priceRangeOptions.map((option) =&gt; (&#10;                      &lt;label&#10;                        key={option.label}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={selectedPriceRanges.includes(option.label)}&#10;                          onChange={() =&gt; handlePriceRangeChange(option.label)}&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          {option.label}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Rating Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-star mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Rating&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#10;                    {[5, 4, 3, 2, 1].map((rating) =&gt; (&#10;                      &lt;label&#10;                        key={rating}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={selectedRatings.includes(rating)}&#10;                          onChange={() =&gt; handleRatingChange(rating)}&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300 flex items-center&quot;&gt;&#10;                          {[...Array(rating)].map((_, i) =&gt; (&#10;                            &lt;i&#10;                              key={i}&#10;                              className=&quot;fas fa-star text-yellow-400 text-xs mr-1&quot;&#10;                            &gt;&lt;/i&gt;&#10;                          ))}&#10;                          {rating &lt; 5 &amp;&amp; &lt;span className=&quot;ml-1&quot;&gt;&amp; Up&lt;/span&gt;}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Farmer Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-user mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Farmer&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2 max-h-32 overflow-y-auto&quot;&gt;&#10;                    {availableFarmers.length &gt; 0 ? (&#10;                      availableFarmers.map((farmer) =&gt; (&#10;                        &lt;label&#10;                          key={farmer}&#10;                          className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                        &gt;&#10;                          &lt;input&#10;                            type=&quot;checkbox&quot;&#10;                            checked={selectedFarmers.includes(farmer)}&#10;                            onChange={() =&gt; handleFarmerChange(farmer)}&#10;                            className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                          /&gt;&#10;                          &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300 truncate&quot;&gt;&#10;                            {farmer}&#10;                          &lt;/span&gt;&#10;                        &lt;/label&gt;&#10;                      ))&#10;                    ) : (&#10;                      &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400 p-2&quot;&gt;&#10;                        Loading farmers...&#10;                      &lt;/p&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Tag Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-tags mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Tags&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#10;                    {tagOptions.map((tag) =&gt; (&#10;                      &lt;label&#10;                        key={tag}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={selectedTags.includes(tag)}&#10;                          onChange={() =&gt; handleTagChange(tag)}&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          {tag}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Clear Filters */}&#10;                &lt;div className=&quot;border-t border-gray-200 dark:border-gray-700 pt-4&quot;&gt;&#10;                  &lt;button&#10;                    onClick={clearAllFilters}&#10;                    disabled={getActiveFilterCount() === 0}&#10;                    className=&quot;w-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 py-2 rounded-lg font-medium hover:bg-gray-300 dark:hover:bg-gray-600 transition disabled:opacity-50 disabled:cursor-not-allowed&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-times mr-2&quot;&gt;&lt;/i&gt;&#10;                    Clear All Filters&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Products Grid */}&#10;            &lt;div className=&quot;lg:col-span-3&quot;&gt;&#10;              {/* Sort and View Options */}&#10;              &lt;div className=&quot;flex items-center justify-between mb-6 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm&quot;&gt;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;span className=&quot;text-gray-700 dark:text-gray-300 font-medium&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-box mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    {pagination.totalProducts} products&#10;                  &lt;/span&gt;&#10;                  {loading &amp;&amp; (&#10;                    &lt;div className=&quot;flex items-center text-primary-600&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                      &lt;span className=&quot;text-sm&quot;&gt;Loading...&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;label className=&quot;text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                    Sort by:&#10;                  &lt;/label&gt;&#10;                  &lt;select&#10;                    value={sortBy}&#10;                    onChange={(e) =&gt; handleSortChange(e.target.value)}&#10;                    className=&quot;border border-gray-300 dark:border-gray-600 rounded-lg px-3 py-2 bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary-500 text-sm&quot;&#10;                  &gt;&#10;                    &lt;option value=&quot;newest&quot;&gt;Newest First&lt;/option&gt;&#10;                    &lt;option value=&quot;oldest&quot;&gt;Oldest First&lt;/option&gt;&#10;                    &lt;option value=&quot;price-low&quot;&gt;Price: Low to High&lt;/option&gt;&#10;                    &lt;option value=&quot;price-high&quot;&gt;Price: High to Low&lt;/option&gt;&#10;                    &lt;option value=&quot;rating&quot;&gt;Highest Rated&lt;/option&gt;&#10;                    &lt;option value=&quot;popular&quot;&gt;Most Popular&lt;/option&gt;&#10;                  &lt;/select&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Products Grid */}&#10;              {loading ? (&#10;                &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#10;                  {[...Array(9)].map((_, index) =&gt; (&#10;                    &lt;div&#10;                      key={index}&#10;                      className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden animate-pulse&quot;&#10;                    &gt;&#10;                      &lt;div className=&quot;w-full h-48 bg-gray-300 dark:bg-gray-600&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;p-6&quot;&gt;&#10;                        &lt;div className=&quot;h-4 bg-gray-300 dark:bg-gray-600 rounded mb-2&quot;&gt;&lt;/div&gt;&#10;                        &lt;div className=&quot;h-3 bg-gray-300 dark:bg-gray-600 rounded mb-3 w-3/4&quot;&gt;&lt;/div&gt;&#10;                        &lt;div className=&quot;h-6 bg-gray-300 dark:bg-gray-600 rounded mb-4 w-1/2&quot;&gt;&lt;/div&gt;&#10;                        &lt;div className=&quot;h-8 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              ) : products.length &gt; 0 ? (&#10;                &lt;&gt;&#10;                  &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#10;                    {products.map((product) =&gt; (&#10;                      &lt;ProductCard key={product._id} product={product} /&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Pagination */}&#10;                  {pagination.totalPages &gt; 1 &amp;&amp; (&#10;                    &lt;div className=&quot;mt-8 flex justify-center&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; handlePageChange(currentPage - 1)}&#10;                          disabled={!pagination.hasPrevPage}&#10;                          className=&quot;px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          Previous&#10;                        &lt;/button&gt;&#10;&#10;                        {[...Array(Math.min(5, pagination.totalPages))].map(&#10;                          (_, index) =&gt; {&#10;                            const pageNum = index + 1;&#10;                            return (&#10;                              &lt;button&#10;                                key={pageNum}&#10;                                onClick={() =&gt; handlePageChange(pageNum)}&#10;                                className={`px-3 py-2 border rounded-lg ${&#10;                                  currentPage === pageNum&#10;                                    ? &quot;bg-primary-600 text-white border-primary-600&quot;&#10;                                    : &quot;border-gray-300 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                                }`}&#10;                              &gt;&#10;                                {pageNum}&#10;                              &lt;/button&gt;&#10;                            );&#10;                          },&#10;                        )}&#10;&#10;                        &lt;button&#10;                          onClick={() =&gt; handlePageChange(currentPage + 1)}&#10;                          disabled={!pagination.hasNextPage}&#10;                          className=&quot;px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          Next&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/&gt;&#10;              ) : (&#10;                &lt;div className=&quot;text-center py-12&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-search text-6xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                  &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                    No products found&#10;                  &lt;/h3&gt;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;                    Try adjusting your search criteria or browse all products&#10;                  &lt;/p&gt;&#10;                  &lt;Link&#10;                    href=&quot;/products&quot;&#10;                    className=&quot;inline-block bg-primary-600 hover:bg-primary-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#10;                  &gt;&#10;                    Browse All Products&#10;                  &lt;/Link&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/(auth)/layout.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/(auth)/layout.js" />
              <option name="updatedContent" value="export default function AuthLayout({ children, modal }) {&#10;  return (&#10;    &lt;&gt;&#10;      {children}&#10;      {modal}&#10;    &lt;/&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/@modal/default.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/@modal/default.js" />
              <option name="updatedContent" value="export default function Default() {&#10;  return null;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/about/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/about/page.js" />
              <option name="originalContent" value="import Navigation from &quot;@/components/Navigation&quot;;&#10;import Navigation from &quot;@/components/Navigation&quot;;&#10;import Navigation from &quot;@/components/Navigation&quot;;&#10;import Navigation from &quot;@/components/Navigation&quot;;&#10;import Navigation from &quot;@/components/Navigation&quot;;&#10;import Navigation from &quot;@/components/Navigation&quot;;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;Navigation /&gt;&#10;&#10;      {/* Hero Section */}&#10;      &lt;div className=&quot;bg-primary-600 text-white py-20&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center&quot;&gt;&#10;          &lt;h1 className=&quot;text-5xl font-bold mb-6&quot;&gt;About FarmFresh&lt;/h1&gt;&#10;          &lt;p className=&quot;text-xl text-primary-100 max-w-3xl mx-auto&quot;&gt;&#10;            We&amp;apos;re on a mission to connect communities with fresh, local&#10;            produce while supporting sustainable farming practices across&#10;            Bangladesh.&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Mission &amp; Vision */}&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16&quot;&gt;&#10;        &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12 items-center&quot;&gt;&#10;          &lt;div&gt;&#10;            &lt;h2 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-6&quot;&gt;&#10;              Our Mission&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;text-lg text-gray-700 dark:text-gray-300 mb-6&quot;&gt;&#10;              To revolutionize the way people access fresh, organic produce by&#10;              creating a direct connection between local farmers and consumers.&#10;              We believe in supporting sustainable agriculture while providing&#10;              communities with the freshest, most nutritious food possible.&#10;            &lt;/p&gt;&#10;            &lt;p className=&quot;text-lg text-gray-700 dark:text-gray-300&quot;&gt;&#10;              Through our platform, we empower farmers to reach wider markets,&#10;              earn fair prices for their produce, and build lasting&#10;              relationships with customers who value quality and sustainability.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;relative&quot;&gt;&#10;            &lt;img&#10;              src=&quot;https://images.unsplash.com/photo-1500937386664-56d1dfef3854?w=600&amp;h=400&amp;fit=crop&quot;&#10;              alt=&quot;Farm landscape&quot;&#10;              className=&quot;rounded-2xl shadow-lg&quot;&#10;            /&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Values */}&#10;      &lt;div className=&quot;bg-white dark:bg-gray-800 py-16&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;            &lt;h2 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;              Our Values&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto&quot;&gt;&#10;              These core values guide everything we do and shape our commitment&#10;              to farmers and customers alike.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8&quot;&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;bg-primary-100 dark:bg-primary-900 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#10;                &lt;i className=&quot;fas fa-leaf text-2xl text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                Sustainability&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                We promote eco-friendly farming practices that protect our&#10;                environment for future generations.&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;bg-primary-100 dark:bg-primary-900 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#10;                &lt;i className=&quot;fas fa-handshake text-2xl text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                Community&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                Building strong relationships between farmers and consumers to&#10;                create thriving local communities.&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;bg-primary-100 dark:bg-primary-900 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#10;                &lt;i className=&quot;fas fa-award text-2xl text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                Quality&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                Ensuring the highest standards of freshness, taste, and&#10;                nutritional value in every product.&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Stats */}&#10;      &lt;div className=&quot;bg-primary-600 text-white py-16&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;            &lt;h2 className=&quot;text-3xl font-bold mb-4&quot;&gt;Our Impact&lt;/h2&gt;&#10;            &lt;p className=&quot;text-xl text-primary-100&quot;&gt;&#10;              Making a difference in communities across Bangladesh&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;grid grid-cols-2 md:grid-cols-4 gap-8&quot;&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;text-4xl font-bold mb-2&quot;&gt;500+&lt;/div&gt;&#10;              &lt;div className=&quot;text-primary-200&quot;&gt;Active Farmers&lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;text-4xl font-bold mb-2&quot;&gt;10,000+&lt;/div&gt;&#10;              &lt;div className=&quot;text-primary-200&quot;&gt;Happy Customers&lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;text-4xl font-bold mb-2&quot;&gt;50+&lt;/div&gt;&#10;              &lt;div className=&quot;text-primary-200&quot;&gt;Districts Covered&lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;text-4xl font-bold mb-2&quot;&gt;2,000+&lt;/div&gt;&#10;              &lt;div className=&quot;text-primary-200&quot;&gt;Products Available&lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Team */}&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16&quot;&gt;&#10;        &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;          &lt;h2 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;            Meet Our Team&#10;          &lt;/h2&gt;&#10;          &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto&quot;&gt;&#10;            Passionate individuals working together to transform agriculture and&#10;            food distribution.&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8&quot;&gt;&#10;          &lt;div className=&quot;text-center&quot;&gt;&#10;            &lt;img&#10;              src=&quot;https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=200&amp;h=200&amp;fit=crop&amp;crop=face&quot;&#10;              alt=&quot;CEO&quot;&#10;              className=&quot;w-32 h-32 rounded-full mx-auto mb-4 object-cover&quot;&#10;            /&gt;&#10;            &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;              Ahmed Rahman&#10;            &lt;/h3&gt;&#10;            &lt;p className=&quot;text-primary-600 dark:text-primary-400 mb-2&quot;&gt;&#10;              CEO &amp; Founder&#10;            &lt;/p&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;              Former agricultural engineer with 15+ years of experience in&#10;              sustainable farming.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;text-center&quot;&gt;&#10;            &lt;img&#10;              src=&quot;https://images.unsplash.com/photo-1580489944761-15a19d654956?w=200&amp;h=200&amp;fit=crop&amp;crop=face&quot;&#10;              alt=&quot;CTO&quot;&#10;              className=&quot;w-32 h-32 rounded-full mx-auto mb-4 object-cover&quot;&#10;            /&gt;&#10;            &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;              Fatima Khan&#10;            &lt;/h3&gt;&#10;            &lt;p className=&quot;text-primary-600 dark:text-primary-400 mb-2&quot;&gt;CTO&lt;/p&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;              Technology leader passionate about using innovation to solve&#10;              agricultural challenges.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;text-center&quot;&gt;&#10;            &lt;img&#10;              src=&quot;https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=200&amp;h=200&amp;fit=crop&amp;crop=face&quot;&#10;              alt=&quot;Head of Operations&quot;&#10;              className=&quot;w-32 h-32 rounded-full mx-auto mb-4 object-cover&quot;&#10;            /&gt;&#10;            &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;              Karim Hassan&#10;            &lt;/h3&gt;&#10;            &lt;p className=&quot;text-primary-600 dark:text-primary-400 mb-2&quot;&gt;&#10;              Head of Operations&#10;            &lt;/p&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;              Supply chain expert ensuring efficient delivery from farm to&#10;              table.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Contact CTA */}&#10;      &lt;div className=&quot;bg-gray-100 dark:bg-gray-800 py-16&quot;&gt;&#10;        &lt;div className=&quot;max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center&quot;&gt;&#10;          &lt;h2 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;            Get in Touch&#10;          &lt;/h2&gt;&#10;          &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400 mb-8&quot;&gt;&#10;            Have questions about our platform or want to learn more about&#10;            partnering with us?&#10;          &lt;/p&gt;&#10;          &lt;div className=&quot;flex flex-col sm:flex-row gap-4 justify-center&quot;&gt;&#10;            &lt;a&#10;              href=&quot;mailto:info@farmfresh.com&quot;&#10;              className=&quot;inline-flex items-center justify-center px-6 py-3 bg-primary-600 hover:bg-primary-700 text-white rounded-lg font-medium transition&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-envelope mr-2&quot;&gt;&lt;/i&gt;&#10;              Contact Us&#10;            &lt;/a&gt;&#10;            &lt;a&#10;              href=&quot;/farmers&quot;&#10;              className=&quot;inline-flex items-center justify-center px-6 py-3 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-lg font-medium transition&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-users mr-2&quot;&gt;&lt;/i&gt;&#10;              Join as Farmer&#10;            &lt;/a&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Footer */}&#10;      &lt;footer className=&quot;bg-gray-900 text-white&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12&quot;&gt;&#10;          &lt;div className=&quot;grid grid-cols-1 md:grid-cols-4 gap-8&quot;&gt;&#10;            &lt;div&gt;&#10;              &lt;div className=&quot;flex items-center space-x-3 mb-4&quot;&gt;&#10;                &lt;div className=&quot;bg-primary-500 p-2 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-seedling text-white text-xl&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold&quot;&gt;FarmFresh&lt;/h3&gt;&#10;                  &lt;p className=&quot;text-sm text-gray-400&quot;&gt;Local Farmer Booking&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;p className=&quot;text-gray-400 mb-4&quot;&gt;&#10;                Connecting communities with fresh, local produce directly from&#10;                farmers.&#10;              &lt;/p&gt;&#10;              &lt;div className=&quot;flex space-x-4&quot;&gt;&#10;                &lt;a href=&quot;#&quot; className=&quot;text-gray-400 hover:text-white&quot;&gt;&#10;                  &lt;i className=&quot;fab fa-facebook&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;#&quot; className=&quot;text-gray-400 hover:text-white&quot;&gt;&#10;                  &lt;i className=&quot;fab fa-twitter&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;#&quot; className=&quot;text-gray-400 hover:text-white&quot;&gt;&#10;                  &lt;i className=&quot;fab fa-instagram&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div&gt;&#10;              &lt;h4 className=&quot;font-semibold mb-4&quot;&gt;Quick Links&lt;/h4&gt;&#10;              &lt;ul className=&quot;space-y-2 text-gray-400&quot;&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link href=&quot;/&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Home&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link href=&quot;/products&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Products&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link href=&quot;/farmers&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Farmers&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link href=&quot;/about&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    About Us&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;              &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div&gt;&#10;              &lt;h4 className=&quot;font-semibold mb-4&quot;&gt;For Farmers&lt;/h4&gt;&#10;              &lt;ul className=&quot;space-y-2 text-gray-400&quot;&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link href=&quot;/register&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Join as Farmer&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Add Products&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Manage Listings&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Farmer Support&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;              &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div&gt;&#10;              &lt;h4 className=&quot;font-semibold mb-4&quot;&gt;Support&lt;/h4&gt;&#10;              &lt;ul className=&quot;space-y-2 text-gray-400&quot;&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Help Center&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Contact Us&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Terms of Service&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Privacy Policy&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;              &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;border-t border-gray-800 mt-8 pt-8 text-center text-gray-400&quot;&gt;&#10;            &lt;p&gt;&#10;              &amp;copy; 2025 FarmFresh - Local Farmer Booking. All rights reserved&#10;              by LWS.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/footer&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="import Link from &quot;next/link&quot;;&#10;&#10;export default function About() {&#10;  return (&#10;    &lt;&gt;&#10;      {/* Remove Navigation component - use global Navigation from layout instead */}&#10;&#10;      {/* Hero Section */}&#10;      &lt;div className=&quot;bg-primary-600 text-white py-20&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center&quot;&gt;&#10;          &lt;h1 className=&quot;text-5xl font-bold mb-6&quot;&gt;About FarmFresh&lt;/h1&gt;&#10;          &lt;p className=&quot;text-xl text-primary-100 max-w-3xl mx-auto&quot;&gt;&#10;            We&amp;apos;re on a mission to connect communities with fresh, local&#10;            produce while supporting sustainable farming practices across&#10;            Bangladesh.&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Mission &amp; Vision */}&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16&quot;&gt;&#10;        &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12 items-center&quot;&gt;&#10;          &lt;div&gt;&#10;            &lt;h2 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-6&quot;&gt;&#10;              Our Mission&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;text-lg text-gray-700 dark:text-gray-300 mb-6&quot;&gt;&#10;              To revolutionize the way people access fresh, organic produce by&#10;              creating a direct connection between local farmers and consumers.&#10;              We believe in supporting sustainable agriculture while providing&#10;              communities with the freshest, most nutritious food possible.&#10;            &lt;/p&gt;&#10;            &lt;p className=&quot;text-lg text-gray-700 dark:text-gray-300&quot;&gt;&#10;              Through our platform, we empower farmers to reach wider markets,&#10;              earn fair prices for their produce, and build lasting&#10;              relationships with customers who value quality and sustainability.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;relative&quot;&gt;&#10;            &lt;img&#10;              src=&quot;https://images.unsplash.com/photo-1500937386664-56d1dfef3854?w=600&amp;h=400&amp;fit=crop&quot;&#10;              alt=&quot;Farm landscape&quot;&#10;              className=&quot;rounded-2xl shadow-lg&quot;&#10;            /&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Values */}&#10;      &lt;div className=&quot;bg-white dark:bg-gray-800 py-16&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;            &lt;h2 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;              Our Values&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto&quot;&gt;&#10;              These core values guide everything we do and shape our commitment&#10;              to farmers and customers alike.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8&quot;&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;bg-primary-100 dark:bg-primary-900 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#10;                &lt;i className=&quot;fas fa-leaf text-2xl text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                Sustainability&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                We promote eco-friendly farming practices that protect our&#10;                environment for future generations.&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;bg-primary-100 dark:bg-primary-900 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#10;                &lt;i className=&quot;fas fa-handshake text-2xl text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                Community&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                Building strong relationships between farmers and consumers to&#10;                create thriving local communities.&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;bg-primary-100 dark:bg-primary-900 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#10;                &lt;i className=&quot;fas fa-award text-2xl text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                Quality&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                Ensuring the highest standards of freshness, taste, and&#10;                nutritional value in every product.&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Stats */}&#10;      &lt;div className=&quot;bg-primary-600 text-white py-16&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;            &lt;h2 className=&quot;text-3xl font-bold mb-4&quot;&gt;Our Impact&lt;/h2&gt;&#10;            &lt;p className=&quot;text-xl text-primary-100&quot;&gt;&#10;              Making a difference in communities across Bangladesh&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;grid grid-cols-2 md:grid-cols-4 gap-8&quot;&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;text-4xl font-bold mb-2&quot;&gt;500+&lt;/div&gt;&#10;              &lt;div className=&quot;text-primary-200&quot;&gt;Active Farmers&lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;text-4xl font-bold mb-2&quot;&gt;10,000+&lt;/div&gt;&#10;              &lt;div className=&quot;text-primary-200&quot;&gt;Happy Customers&lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;text-4xl font-bold mb-2&quot;&gt;50+&lt;/div&gt;&#10;              &lt;div className=&quot;text-primary-200&quot;&gt;Districts Covered&lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;div className=&quot;text-4xl font-bold mb-2&quot;&gt;2,000+&lt;/div&gt;&#10;              &lt;div className=&quot;text-primary-200&quot;&gt;Products Available&lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Team */}&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16&quot;&gt;&#10;        &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;          &lt;h2 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;            Meet Our Team&#10;          &lt;/h2&gt;&#10;          &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto&quot;&gt;&#10;            Passionate individuals working together to transform agriculture and&#10;            food distribution.&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8&quot;&gt;&#10;          &lt;div className=&quot;text-center&quot;&gt;&#10;            &lt;img&#10;              src=&quot;https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=200&amp;h=200&amp;fit=crop&amp;crop=face&quot;&#10;              alt=&quot;CEO&quot;&#10;              className=&quot;w-32 h-32 rounded-full mx-auto mb-4 object-cover&quot;&#10;            /&gt;&#10;            &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;              Ahmed Rahman&#10;            &lt;/h3&gt;&#10;            &lt;p className=&quot;text-primary-600 dark:text-primary-400 mb-2&quot;&gt;&#10;              CEO &amp; Founder&#10;            &lt;/p&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;              Former agricultural engineer with 15+ years of experience in&#10;              sustainable farming.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;text-center&quot;&gt;&#10;            &lt;img&#10;              src=&quot;https://images.unsplash.com/photo-1580489944761-15a19d654956?w=200&amp;h=200&amp;fit=crop&amp;crop=face&quot;&#10;              alt=&quot;CTO&quot;&#10;              className=&quot;w-32 h-32 rounded-full mx-auto mb-4 object-cover&quot;&#10;            /&gt;&#10;            &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;              Fatima Khan&#10;            &lt;/h3&gt;&#10;            &lt;p className=&quot;text-primary-600 dark:text-primary-400 mb-2&quot;&gt;CTO&lt;/p&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;              Technology leader passionate about using innovation to solve&#10;              agricultural challenges.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;text-center&quot;&gt;&#10;            &lt;img&#10;              src=&quot;https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=200&amp;h=200&amp;fit=crop&amp;crop=face&quot;&#10;              alt=&quot;Head of Operations&quot;&#10;              className=&quot;w-32 h-32 rounded-full mx-auto mb-4 object-cover&quot;&#10;            /&gt;&#10;            &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;              Karim Hassan&#10;            &lt;/h3&gt;&#10;            &lt;p className=&quot;text-primary-600 dark:text-primary-400 mb-2&quot;&gt;&#10;              Head of Operations&#10;            &lt;/p&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;              Supply chain expert ensuring efficient delivery from farm to&#10;              table.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Contact CTA */}&#10;      &lt;div className=&quot;bg-gray-100 dark:bg-gray-800 py-16&quot;&gt;&#10;        &lt;div className=&quot;max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center&quot;&gt;&#10;          &lt;h2 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;            Get in Touch&#10;          &lt;/h2&gt;&#10;          &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400 mb-8&quot;&gt;&#10;            Have questions about our platform or want to learn more about&#10;            partnering with us?&#10;          &lt;/p&gt;&#10;          &lt;div className=&quot;flex flex-col sm:flex-row gap-4 justify-center&quot;&gt;&#10;            &lt;a&#10;              href=&quot;mailto:info@farmfresh.com&quot;&#10;              className=&quot;inline-flex items-center justify-center px-6 py-3 bg-primary-600 hover:bg-primary-700 text-white rounded-lg font-medium transition&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-envelope mr-2&quot;&gt;&lt;/i&gt;&#10;              Contact Us&#10;            &lt;/a&gt;&#10;            &lt;a&#10;              href=&quot;/farmers&quot;&#10;              className=&quot;inline-flex items-center justify-center px-6 py-3 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-lg font-medium transition&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-users mr-2&quot;&gt;&lt;/i&gt;&#10;              Join as Farmer&#10;            &lt;/a&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Footer */}&#10;      &lt;footer className=&quot;bg-gray-900 text-white&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12&quot;&gt;&#10;          &lt;div className=&quot;grid grid-cols-1 md:grid-cols-4 gap-8&quot;&gt;&#10;            &lt;div&gt;&#10;              &lt;div className=&quot;flex items-center space-x-3 mb-4&quot;&gt;&#10;                &lt;div className=&quot;bg-primary-500 p-2 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-seedling text-white text-xl&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold&quot;&gt;FarmFresh&lt;/h3&gt;&#10;                  &lt;p className=&quot;text-sm text-gray-400&quot;&gt;Local Farmer Booking&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;p className=&quot;text-gray-400 mb-4&quot;&gt;&#10;                Connecting communities with fresh, local produce directly from&#10;                farmers.&#10;              &lt;/p&gt;&#10;              &lt;div className=&quot;flex space-x-4&quot;&gt;&#10;                &lt;a href=&quot;#&quot; className=&quot;text-gray-400 hover:text-white&quot;&gt;&#10;                  &lt;i className=&quot;fab fa-facebook&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;#&quot; className=&quot;text-gray-400 hover:text-white&quot;&gt;&#10;                  &lt;i className=&quot;fab fa-twitter&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;#&quot; className=&quot;text-gray-400 hover:text-white&quot;&gt;&#10;                  &lt;i className=&quot;fab fa-instagram&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div&gt;&#10;              &lt;h4 className=&quot;font-semibold mb-4&quot;&gt;Quick Links&lt;/h4&gt;&#10;              &lt;ul className=&quot;space-y-2 text-gray-400&quot;&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link href=&quot;/&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Home&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link href=&quot;/products&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Products&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link href=&quot;/farmers&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Farmers&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link href=&quot;/about&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    About Us&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;              &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div&gt;&#10;              &lt;h4 className=&quot;font-semibold mb-4&quot;&gt;For Farmers&lt;/h4&gt;&#10;              &lt;ul className=&quot;space-y-2 text-gray-400&quot;&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link href=&quot;/register&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Join as Farmer&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Add Products&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Manage Listings&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Farmer Support&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;              &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div&gt;&#10;              &lt;h4 className=&quot;font-semibold mb-4&quot;&gt;Support&lt;/h4&gt;&#10;              &lt;ul className=&quot;space-y-2 text-gray-400&quot;&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Help Center&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Contact Us&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Terms of Service&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;a href=&quot;#&quot; className=&quot;hover:text-white&quot;&gt;&#10;                    Privacy Policy&#10;                  &lt;/a&gt;&#10;                &lt;/li&gt;&#10;              &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;border-t border-gray-800 mt-8 pt-8 text-center text-gray-400&quot;&gt;&#10;            &lt;p&gt;&#10;              &amp;copy; 2025 FarmFresh - Local Farmer Booking. All rights reserved&#10;              by LWS.&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/footer&gt;&#10;    &lt;/&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/auth/[...nextauth]/route.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/auth/[...nextauth]/route.js" />
              <option name="originalContent" value="import NextAuth from &quot;next-auth&quot;;&#10;import GoogleProvider from &quot;next-auth/providers/google&quot;;&#10;import CredentialsProvider from &quot;next-auth/providers/credentials&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;import bcrypt from &quot;bcryptjs&quot;;&#10;import { generateTokens } from &quot;@/lib/jwt&quot;;&#10;&#10;export const authOptions = {&#10;  providers: [&#10;    GoogleProvider({&#10;      clientId: process.env.GOOGLE_CLIENT_ID,&#10;      clientSecret: process.env.GOOGLE_CLIENT_SECRET,&#10;      allowDangerousEmailAccountLinking: true,&#10;" />
              <option name="updatedContent" value="import NextAuth from &quot;next-auth&quot;;&#10;import GoogleProvider from &quot;next-auth/providers/google&quot;;&#10;import CredentialsProvider from &quot;next-auth/providers/credentials&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;import bcrypt from &quot;bcryptjs&quot;;&#10;import { generateTokens } from &quot;@/lib/jwt&quot;;&#10;&#10;export const authOptions = {&#10;  providers: [&#10;    GoogleProvider({&#10;      clientId: process.env.GOOGLE_CLIENT_ID,&#10;      clientSecret: process.env.GOOGLE_CLIENT_SECRET,&#10;      allowDangerousEmailAccountLinking: true,&#10;      authorization: {&#10;        params: {&#10;          prompt: &quot;select_account&quot;,&#10;        },&#10;      },&#10;    }),&#10;    CredentialsProvider({&#10;      name: &quot;credentials&quot;,&#10;      credentials: {&#10;        email: { label: &quot;Email&quot;, type: &quot;email&quot; },&#10;        password: { label: &quot;Password&quot;, type: &quot;password&quot; },&#10;      },&#10;      async authorize(credentials) {&#10;        try {&#10;          const client = await clientPromise;&#10;          const db = client.db(&quot;farmfresh&quot;);&#10;          const users = db.collection(&quot;users&quot;);&#10;&#10;          const user = await users.findOne({ email: credentials.email });&#10;&#10;          if (&#10;            user &amp;&amp;&#10;            (await bcrypt.compare(credentials.password, user.password))&#10;          ) {&#10;            return {&#10;              id: user._id,&#10;              email: user.email,&#10;              name: user.name,&#10;              userType: user.userType,&#10;              image: user.image,&#10;            };&#10;          }&#10;          return null;&#10;        } catch (error) {&#10;          return null;&#10;        }&#10;      },&#10;    }),&#10;  ],&#10;  session: {&#10;    strategy: &quot;jwt&quot;,&#10;    maxAge: 30 * 24 * 60 * 60, // 30 days&#10;  },&#10;  callbacks: {&#10;    async jwt({ token, user, account }) {&#10;      if (user) {&#10;        token.userType = user.userType;&#10;        token.userId = user.id;&#10;&#10;        const tokens = generateTokens(user);&#10;        token.accessToken = tokens.accessToken;&#10;        token.refreshToken = tokens.refreshToken;&#10;      }&#10;      return token;&#10;    },&#10;    async session({ session, token }) {&#10;      session.user.userType = token.userType;&#10;      session.user.userId = token.userId;&#10;      session.accessToken = token.accessToken;&#10;      session.refreshToken = token.refreshToken;&#10;      return session;&#10;    },&#10;    async signIn({ user, account, profile }) {&#10;      if (account.provider === &quot;google&quot;) {&#10;        try {&#10;          const client = await clientPromise;&#10;          const db = client.db(&quot;farmfresh&quot;);&#10;          const users = db.collection(&quot;users&quot;);&#10;&#10;          const existingUser = await users.findOne({ email: user.email });&#10;&#10;          if (!existingUser) {&#10;            const newUser = {&#10;              email: user.email,&#10;              name: user.name,&#10;              firstName: user.name?.split(&quot; &quot;)[0] || &quot;&quot;,&#10;              lastName: user.name?.split(&quot; &quot;).slice(1).join(&quot; &quot;) || &quot;&quot;,&#10;              image: user.image,&#10;              userType: &quot;customer&quot;,&#10;              provider: &quot;google&quot;,&#10;              googleId: profile.sub,&#10;              phone: &quot;&quot;,&#10;              address: &quot;&quot;,&#10;              bio: &quot;&quot;,&#10;              emailVerified: true,&#10;              createdAt: new Date(),&#10;              updatedAt: new Date(),&#10;            };&#10;&#10;            const result = await users.insertOne(newUser);&#10;            user.id = result.insertedId.toString();&#10;            user.userType = &quot;customer&quot;;&#10;          } else {&#10;            if (!existingUser.googleId) {&#10;              await users.updateOne(&#10;                { email: user.email },&#10;                {&#10;                  $set: {&#10;                    googleId: profile.sub,&#10;                    provider: &quot;google&quot;,&#10;                    image: user.image || existingUser.image,&#10;                    emailVerified: true,&#10;                    updatedAt: new Date(),&#10;                  },&#10;                },&#10;              );&#10;            }&#10;            user.id = existingUser._id.toString();&#10;            user.userType = existingUser.userType;&#10;          }&#10;        } catch (error) {&#10;          return false;&#10;        }&#10;      }&#10;      return true;&#10;    },&#10;  },&#10;  pages: {&#10;    signIn: &quot;/login&quot;,&#10;    signUp: &quot;/register&quot;,&#10;    error: &quot;/login&quot;,&#10;  },&#10;  secret: process.env.NEXTAUTH_SECRET,&#10;};&#10;&#10;const handler = NextAuth(authOptions);&#10;export { handler as GET, handler as POST };" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/create/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/create/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useRouter, useSearchParams } from &quot;next/navigation&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import Image from &quot;next/image&quot;;&#10;&#10;export default function CreateProduct() {&#10;  const { data: session, status } = useSession();&#10;  const router = useRouter();&#10;  const searchParams = useSearchParams();&#10;  const [loading, setLoading] = useState(false);&#10;  const [isEditMode, setIsEditMode] = useState(false);&#10;  const [editProductId, setEditProductId] = useState(null);&#10;  const [imagePreview, setImagePreview] = useState(null);&#10;  const [imageFile, setImageFile] = useState(null);&#10;  const [formData, setFormData] = useState({&#10;    name: &quot;&quot;,&#10;    category: &quot;&quot;,&#10;    description: &quot;&quot;,&#10;    price: &quot;&quot;,&#10;    stock: &quot;&quot;,&#10;    unit: &quot;&quot;,&#10;    features: [],&#10;    image: &quot;&quot;,&#10;  });&#10;&#10;  useEffect(() =&gt; {&#10;    if (status === &quot;unauthenticated&quot;) {&#10;      router.push(&quot;/login&quot;);&#10;      return;&#10;    }&#10;&#10;    if (status === &quot;authenticated&quot; &amp;&amp; session?.user) {&#10;      // Check if user is a farmer&#10;      const userType = session.user.userType || session.user.role || &quot;user&quot;;&#10;      if (userType !== &quot;farmer&quot;) {&#10;        router.push(&quot;/&quot;);&#10;        return;&#10;      }&#10;&#10;      // Check if we're in edit mode&#10;      const editId = searchParams.get(&quot;edit&quot;);&#10;      if (editId) {&#10;        setIsEditMode(true);&#10;        setEditProductId(editId);&#10;        fetchProductForEdit(editId);&#10;      }&#10;    }&#10;  }, [session, status, router, searchParams]);&#10;&#10;  const fetchProductForEdit = async (productId) =&gt; {&#10;    try {&#10;      setLoading(true);&#10;      const response = await fetch(`/api/products/${productId}`);&#10;&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;        const product = data.product;&#10;&#10;        // Pre-populate form with existing product data&#10;        setFormData({&#10;          name: product.name || &quot;&quot;,&#10;          category: product.category || &quot;&quot;,&#10;          description: product.description || &quot;&quot;,&#10;          price: product.price?.toString() || &quot;&quot;,&#10;          stock: product.stock?.toString() || &quot;&quot;,&#10;          unit: product.unit || &quot;&quot;,&#10;          features: product.features || [],&#10;        });&#10;      } else {&#10;        console.error(&quot;Failed to fetch product for editing&quot;);&#10;        alert(&#10;          &quot;Failed to load product data. Redirecting to create new product.&quot;,&#10;        );&#10;        // Reset to create mode&#10;        setIsEditMode(false);&#10;        setEditProductId(null);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching product for edit:&quot;, error);&#10;      alert(&quot;Error loading product data. Redirecting to create new product.&quot;);&#10;      setIsEditMode(false);&#10;      setEditProductId(null);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  const handleInputChange = (e) =&gt; {&#10;    const { name, value } = e.target;&#10;    setFormData((prev) =&gt; ({&#10;      ...prev,&#10;      [name]: value,&#10;    }));&#10;  };&#10;&#10;  const handleFeatureChange = (e) =&gt; {&#10;    const { value, checked } = e.target;&#10;    setFormData((prev) =&gt; ({&#10;      ...prev,&#10;      features: checked&#10;        ? [...prev.features, value]&#10;        : prev.features.filter((feature) =&gt; feature !== value),&#10;    }));&#10;  };&#10;&#10;  const handleImageChange = (e) =&gt; {&#10;    const file = e.target.files[0];&#10;    if (file) {&#10;      setImageFile(file);&#10;      setImagePreview(URL.createObjectURL(file));&#10;    }&#10;  };&#10;&#10;  const validateForm = () =&gt; {&#10;    if (!formData.name.trim()) {&#10;      alert(&quot;Product name is required&quot;);&#10;      return false;&#10;    }&#10;    if (!formData.category) {&#10;      alert(&quot;Category is required&quot;);&#10;      return false;&#10;    }&#10;    if (!formData.description.trim()) {&#10;      alert(&quot;Description is required&quot;);&#10;      return false;&#10;    }&#10;    if (!formData.price || parseFloat(formData.price) &lt;= 0) {&#10;      alert(&quot;Valid price is required&quot;);&#10;      return false;&#10;    }&#10;    if (!formData.stock || parseInt(formData.stock) &lt; 0) {&#10;      alert(&quot;Valid stock quantity is required&quot;);&#10;      return false;&#10;    }&#10;    if (!formData.unit) {&#10;      alert(&quot;Unit is required&quot;);&#10;      return false;&#10;    }&#10;    return true;&#10;  };&#10;&#10;  const handleSubmit = async (e) =&gt; {&#10;    e.preventDefault();&#10;&#10;    if (!validateForm()) return;&#10;&#10;    setLoading(true);&#10;    try {&#10;      // Use the same user ID logic as in manage page&#10;      const userId = session.user.userId || session.user.id || session.user._id;&#10;      const userEmail = session.user.email;&#10;&#10;      const productData = {&#10;        ...formData,&#10;        price: parseFloat(formData.price),&#10;        stock: parseInt(formData.stock),&#10;        farmerId: userId,&#10;        farmerEmail: userEmail,&#10;        farmer: {&#10;          id: userId,&#10;          email: userEmail,&#10;          name: session.user.name,&#10;        },&#10;        status: &quot;active&quot;,&#10;        updatedAt: new Date().toISOString(),&#10;      };&#10;&#10;      // Only add createdAt for new products&#10;      if (!isEditMode) {&#10;        productData.createdAt = new Date().toISOString();&#10;      }&#10;&#10;      console.log(&#10;        isEditMode ? &quot;Updating product:&quot; : &quot;Creating product:&quot;,&#10;        productData,&#10;      );&#10;&#10;      const url = isEditMode&#10;        ? `/api/products/${editProductId}`&#10;        : &quot;/api/products&quot;;&#10;      const method = isEditMode ? &quot;PUT&quot; : &quot;POST&quot;;&#10;&#10;      const response = await fetch(url, {&#10;        method,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify(productData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        const result = await response.json();&#10;        console.log(&#10;          isEditMode&#10;            ? &quot;Product updated successfully:&quot;&#10;            : &quot;Product created successfully:&quot;,&#10;          result,&#10;        );&#10;&#10;        alert(&#10;          isEditMode&#10;            ? &quot;Product updated successfully!&quot;&#10;            : &quot;Product added successfully!&quot;,&#10;        );&#10;&#10;        // Reset form only for new products&#10;        if (!isEditMode) {&#10;          setFormData({&#10;            name: &quot;&quot;,&#10;            category: &quot;&quot;,&#10;            description: &quot;&quot;,&#10;            price: &quot;&quot;,&#10;            stock: &quot;&quot;,&#10;            unit: &quot;&quot;,&#10;            features: [],&#10;          });&#10;        }&#10;&#10;        // Redirect to manage products page&#10;        router.push(&quot;/manage&quot;);&#10;      } else {&#10;        const errorData = await response.json();&#10;        console.error(&#10;          isEditMode&#10;            ? &quot;Failed to update product:&quot;&#10;            : &quot;Failed to create product:&quot;,&#10;          errorData,&#10;        );&#10;        alert(&#10;          `Failed to ${isEditMode ? &quot;update&quot; : &quot;add&quot;} product: ${&#10;            errorData.error || &quot;Unknown error&quot;&#10;          }`,&#10;        );&#10;      }&#10;    } catch (error) {&#10;      console.error(&#10;        isEditMode ? &quot;Error updating product:&quot; : &quot;Error creating product:&quot;,&#10;        error,&#10;      );&#10;      alert(&#10;        `Failed to ${isEditMode ? &quot;update&quot; : &quot;add&quot;} product. Please try again.`,&#10;      );&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  if (status === &quot;loading&quot;) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#10;          &lt;i className=&quot;fas fa-spinner fa-spin text-4xl text-primary-600 mb-4&quot;&gt;&lt;/i&gt;&#10;          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;Loading...&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      {/* Navigation */}&#10;      &lt;nav className=&quot;bg-white dark:bg-gray-800 shadow-lg sticky top-0 z-50&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;flex justify-between items-center h-16&quot;&gt;&#10;            {/* Logo */}&#10;            &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;              &lt;Link href=&quot;/&quot; className=&quot;flex items-center space-x-3&quot;&gt;&#10;                &lt;div className=&quot;bg-green-500 p-2 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-seedling text-white text-xl&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div&gt;&#10;                  &lt;h1 className=&quot;text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                    FarmFresh&#10;                  &lt;/h1&gt;&#10;                  &lt;p className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                    Local Farmer Booking&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/Link&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Desktop Navigation */}&#10;            &lt;div className=&quot;hidden md:flex items-center space-x-8&quot;&gt;&#10;              &lt;Link&#10;                href=&quot;/&quot;&#10;                className=&quot;text-gray-700 dark:text-gray-300 hover:text-green-600 dark:hover:text-green-400 transition&quot;&#10;              &gt;&#10;                Home&#10;              &lt;/Link&gt;&#10;              &lt;Link&#10;                href=&quot;/products&quot;&#10;                className=&quot;text-gray-700 dark:text-gray-300 hover:text-green-600 dark:hover:text-green-400 transition&quot;&#10;              &gt;&#10;                Products&#10;              &lt;/Link&gt;&#10;              &lt;Link&#10;                href=&quot;/farmers&quot;&#10;                className=&quot;text-gray-700 dark:text-gray-300 hover:text-green-600 dark:hover:text-green-400 transition&quot;&#10;              &gt;&#10;                Farmers&#10;              &lt;/Link&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/nav&gt;&#10;&#10;      {/* Main Content */}&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-2xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8&quot;&gt;&#10;            &lt;h1 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-8&quot;&gt;&#10;              {isEditMode ? &quot;Edit Product&quot; : &quot;Add New Product&quot;}&#10;            &lt;/h1&gt;&#10;&#10;            &lt;form onSubmit={handleSubmit} className=&quot;space-y-6&quot;&gt;&#10;              {/* Product Name */}&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;name&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Product Name *&#10;                &lt;/label&gt;&#10;                &lt;input&#10;                  type=&quot;text&quot;&#10;                  id=&quot;name&quot;&#10;                  name=&quot;name&quot;&#10;                  value={formData.name}&#10;                  onChange={handleInputChange}&#10;                  required&#10;                  className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                  placeholder=&quot;Enter product name&quot;&#10;                /&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Category */}&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;category&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Category *&#10;                &lt;/label&gt;&#10;                &lt;select&#10;                  id=&quot;category&quot;&#10;                  name=&quot;category&quot;&#10;                  value={formData.category}&#10;                  onChange={handleInputChange}&#10;                  required&#10;                  className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                &gt;&#10;                  &lt;option value=&quot;&quot;&gt;Select Category&lt;/option&gt;&#10;                  &lt;option value=&quot;Vegetables&quot;&gt;Vegetables&lt;/option&gt;&#10;                  &lt;option value=&quot;Fruits&quot;&gt;Fruits&lt;/option&gt;&#10;                  &lt;option value=&quot;Grains&quot;&gt;Grains&lt;/option&gt;&#10;                  &lt;option value=&quot;Dairy&quot;&gt;Dairy&lt;/option&gt;&#10;                  &lt;option value=&quot;Honey&quot;&gt;Honey&lt;/option&gt;&#10;                  &lt;option value=&quot;Herbs&quot;&gt;Herbs&lt;/option&gt;&#10;                &lt;/select&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Description */}&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;description&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Description *&#10;                &lt;/label&gt;&#10;                &lt;textarea&#10;                  id=&quot;description&quot;&#10;                  name=&quot;description&quot;&#10;                  rows={4}&#10;                  value={formData.description}&#10;                  onChange={handleInputChange}&#10;                  required&#10;                  className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                  placeholder=&quot;Describe your product...&quot;&#10;                /&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Price and Stock */}&#10;              &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                &lt;div&gt;&#10;                  &lt;label&#10;                    htmlFor=&quot;price&quot;&#10;                    className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                  &gt;&#10;                    Price (৳) *&#10;                  &lt;/label&gt;&#10;                  &lt;input&#10;                    type=&quot;number&quot;&#10;                    id=&quot;price&quot;&#10;                    name=&quot;price&quot;&#10;                    min=&quot;0&quot;&#10;                    step=&quot;0.01&quot;&#10;                    value={formData.price}&#10;                    onChange={handleInputChange}&#10;                    required&#10;                    className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                    placeholder=&quot;0.00&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div&gt;&#10;                  &lt;label&#10;                    htmlFor=&quot;stock&quot;&#10;                    className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                  &gt;&#10;                    Stock Quantity *&#10;                  &lt;/label&gt;&#10;                  &lt;input&#10;                    type=&quot;number&quot;&#10;                    id=&quot;stock&quot;&#10;                    name=&quot;stock&quot;&#10;                    min=&quot;0&quot;&#10;                    value={formData.stock}&#10;                    onChange={handleInputChange}&#10;                    required&#10;                    className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                    placeholder=&quot;0&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Unit */}&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;unit&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Unit *&#10;                &lt;/label&gt;&#10;                &lt;select&#10;                  id=&quot;unit&quot;&#10;                  name=&quot;unit&quot;&#10;                  value={formData.unit}&#10;                  onChange={handleInputChange}&#10;                  required&#10;                  className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                &gt;&#10;                  &lt;option value=&quot;&quot;&gt;Select Unit&lt;/option&gt;&#10;                  &lt;option value=&quot;kg&quot;&gt;Kilogram (kg)&lt;/option&gt;&#10;                  &lt;option value=&quot;g&quot;&gt;Gram (g)&lt;/option&gt;&#10;                  &lt;option value=&quot;piece&quot;&gt;Piece&lt;/option&gt;&#10;                  &lt;option value=&quot;bunch&quot;&gt;Bunch&lt;/option&gt;&#10;                  &lt;option value=&quot;liter&quot;&gt;Liter&lt;/option&gt;&#10;                  &lt;option value=&quot;ml&quot;&gt;Milliliter (ml)&lt;/option&gt;&#10;                &lt;/select&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Image Upload */}&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;images&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Product Images&#10;                &lt;/label&gt;&#10;                &lt;input&#10;                  type=&quot;file&quot;&#10;                  id=&quot;images&quot;&#10;                  name=&quot;images&quot;&#10;                  multiple&#10;                  accept=&quot;image/*&quot;&#10;                  onChange={handleImageChange}&#10;                  className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                /&gt;&#10;                &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400 mt-1&quot;&gt;&#10;                  Upload up to 5 images (JPG, PNG, WebP)&#10;                &lt;/p&gt;&#10;&#10;                {/* Image Preview */}&#10;                {imagePreview &amp;&amp; (&#10;                  &lt;div className=&quot;mt-4&quot;&gt;&#10;                    &lt;Image&#10;                      src={imagePreview}&#10;                      alt=&quot;Image Preview&quot;&#10;                      width={500}&#10;                      height={300}&#10;                      className=&quot;rounded-lg object-cover&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;&#10;              {/* Features */}&#10;              &lt;div&gt;&#10;                &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                  Features&#10;                &lt;/label&gt;&#10;                &lt;div className=&quot;grid grid-cols-2 md:grid-cols-3 gap-4&quot;&gt;&#10;                  {[&quot;organic&quot;, &quot;fresh&quot;, &quot;local&quot;, &quot;seasonal&quot;, &quot;premium&quot;].map(&#10;                    (feature) =&gt; (&#10;                      &lt;label key={feature} className=&quot;flex items-center&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          name=&quot;features&quot;&#10;                          value={feature}&#10;                          checked={formData.features.includes(feature)}&#10;                          onChange={handleFeatureChange}&#10;                          className=&quot;mr-2 text-green-600 focus:ring-green-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;text-gray-700 dark:text-gray-300 capitalize&quot;&gt;&#10;                          {feature}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ),&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Action Buttons */}&#10;              &lt;div className=&quot;flex space-x-4 pt-6&quot;&gt;&#10;                &lt;button&#10;                  type=&quot;submit&quot;&#10;                  disabled={loading}&#10;                  className={`flex-1 py-3 px-6 rounded-lg font-medium transition ${&#10;                    loading&#10;                      ? &quot;bg-gray-400 cursor-not-allowed text-white&quot;&#10;                      : &quot;bg-green-600 hover:bg-green-700 text-white&quot;&#10;                  }`}&#10;                &gt;&#10;                  {loading ? (&#10;                    &lt;&gt;&#10;                      &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                      {isEditMode ? &quot;Updating Product...&quot; : &quot;Adding Product...&quot;}&#10;                    &lt;/&gt;&#10;                  ) : (&#10;                    &lt;&gt;&#10;                      &lt;i className=&quot;fas fa-plus mr-2&quot;&gt;&lt;/i&gt;&#10;                      {isEditMode ? &quot;Update Product&quot; : &quot;Add Product&quot;}&#10;                    &lt;/&gt;&#10;                  )}&#10;                &lt;/button&gt;&#10;&#10;                &lt;Link&#10;                  href=&quot;/manage&quot;&#10;                  className=&quot;flex-1 bg-gray-600 hover:bg-gray-700 text-white py-3 px-6 rounded-lg font-medium text-center transition&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-list mr-2&quot;&gt;&lt;/i&gt;&#10;                  Manage Products&#10;                &lt;/Link&gt;&#10;              &lt;/div&gt;&#10;            &lt;/form&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useRouter, useSearchParams } from &quot;next/navigation&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import Image from &quot;next/image&quot;;&#10;&#10;export default function CreateProduct() {&#10;  const { data: session, status } = useSession();&#10;  const router = useRouter();&#10;  const searchParams = useSearchParams();&#10;  const [loading, setLoading] = useState(false);&#10;  const [isEditMode, setIsEditMode] = useState(false);&#10;  const [editProductId, setEditProductId] = useState(null);&#10;  const [imagePreview, setImagePreview] = useState(null);&#10;  const [imageFile, setImageFile] = useState(null);&#10;  const [formData, setFormData] = useState({&#10;    name: &quot;&quot;,&#10;    category: &quot;&quot;,&#10;    description: &quot;&quot;,&#10;    price: &quot;&quot;,&#10;    stock: &quot;&quot;,&#10;    unit: &quot;&quot;,&#10;    features: [],&#10;    image: &quot;&quot;,&#10;  });&#10;&#10;  useEffect(() =&gt; {&#10;    if (status === &quot;unauthenticated&quot;) {&#10;      router.push(&quot;/login&quot;);&#10;      return;&#10;    }&#10;&#10;    if (status === &quot;authenticated&quot; &amp;&amp; session?.user) {&#10;      // Check if user is a farmer&#10;      const userType = session.user.userType || session.user.role || &quot;user&quot;;&#10;      if (userType !== &quot;farmer&quot;) {&#10;        router.push(&quot;/&quot;);&#10;        return;&#10;      }&#10;&#10;      // Check if we're in edit mode&#10;      const editId = searchParams.get(&quot;edit&quot;);&#10;      if (editId) {&#10;        setIsEditMode(true);&#10;        setEditProductId(editId);&#10;        fetchProductForEdit(editId);&#10;      }&#10;    }&#10;  }, [session, status, router, searchParams]);&#10;&#10;  const fetchProductForEdit = async (productId) =&gt; {&#10;    try {&#10;      setLoading(true);&#10;      const response = await fetch(`/api/products/${productId}`);&#10;&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;        const product = data.product;&#10;&#10;        // Pre-populate form with existing product data&#10;        setFormData({&#10;          name: product.name || &quot;&quot;,&#10;          category: product.category || &quot;&quot;,&#10;          description: product.description || &quot;&quot;,&#10;          price: product.price?.toString() || &quot;&quot;,&#10;          stock: product.stock?.toString() || &quot;&quot;,&#10;          unit: product.unit || &quot;&quot;,&#10;          features: product.features || [],&#10;          image: product.image || &quot;&quot;,&#10;        });&#10;&#10;        // Set image preview if product has an image&#10;        if (product.image) {&#10;          setImagePreview(product.image);&#10;        }&#10;      } else {&#10;        console.error(&quot;Failed to fetch product for editing&quot;);&#10;        alert(&#10;          &quot;Failed to load product data. Redirecting to create new product.&quot;,&#10;        );&#10;        // Reset to create mode&#10;        setIsEditMode(false);&#10;        setEditProductId(null);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching product for edit:&quot;, error);&#10;      alert(&quot;Error loading product data. Redirecting to create new product.&quot;);&#10;      setIsEditMode(false);&#10;      setEditProductId(null);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  const handleInputChange = (e) =&gt; {&#10;    const { name, value } = e.target;&#10;    setFormData((prev) =&gt; ({&#10;      ...prev,&#10;      [name]: value,&#10;    }));&#10;  };&#10;&#10;  const handleFeatureChange = (e) =&gt; {&#10;    const { value, checked } = e.target;&#10;    setFormData((prev) =&gt; ({&#10;      ...prev,&#10;      features: checked&#10;        ? [...prev.features, value]&#10;        : prev.features.filter((feature) =&gt; feature !== value),&#10;    }));&#10;  };&#10;&#10;  const handleImageChange = (e) =&gt; {&#10;    const file = e.target.files[0];&#10;    if (file) {&#10;      // Validate file size (max 5MB)&#10;      if (file.size &gt; 5 * 1024 * 1024) {&#10;        alert(&quot;Image size must be less than 5MB&quot;);&#10;        return;&#10;      }&#10;&#10;      // Validate file type&#10;      if (!file.type.startsWith(&quot;image/&quot;)) {&#10;        alert(&quot;Please select a valid image file&quot;);&#10;        return;&#10;      }&#10;&#10;      setImageFile(file);&#10;      setImagePreview(URL.createObjectURL(file));&#10;&#10;      // Convert image to base64 for storage&#10;      const reader = new FileReader();&#10;      reader.onload = (event) =&gt; {&#10;        const base64String = event.target.result;&#10;        setFormData((prev) =&gt; ({&#10;          ...prev,&#10;          image: base64String,&#10;        }));&#10;      };&#10;      reader.readAsDataURL(file);&#10;    }&#10;  };&#10;&#10;  const validateForm = () =&gt; {&#10;    if (!formData.name.trim()) {&#10;      alert(&quot;Product name is required&quot;);&#10;      return false;&#10;    }&#10;    if (!formData.category) {&#10;      alert(&quot;Category is required&quot;);&#10;      return false;&#10;    }&#10;    if (!formData.description.trim()) {&#10;      alert(&quot;Description is required&quot;);&#10;      return false;&#10;    }&#10;    if (!formData.price || parseFloat(formData.price) &lt;= 0) {&#10;      alert(&quot;Valid price is required&quot;);&#10;      return false;&#10;    }&#10;    if (!formData.stock || parseInt(formData.stock) &lt; 0) {&#10;      alert(&quot;Valid stock quantity is required&quot;);&#10;      return false;&#10;    }&#10;    if (!formData.unit) {&#10;      alert(&quot;Unit is required&quot;);&#10;      return false;&#10;    }&#10;    return true;&#10;  };&#10;&#10;  const handleSubmit = async (e) =&gt; {&#10;    e.preventDefault();&#10;&#10;    if (!validateForm()) return;&#10;&#10;    setLoading(true);&#10;    try {&#10;      // Use the same user ID logic as in manage page&#10;      const userId = session.user.userId || session.user.id || session.user._id;&#10;      const userEmail = session.user.email;&#10;&#10;      const productData = {&#10;        ...formData,&#10;        price: parseFloat(formData.price),&#10;        stock: parseInt(formData.stock),&#10;        farmerId: userId,&#10;        farmerEmail: userEmail,&#10;        farmer: {&#10;          id: userId,&#10;          email: userEmail,&#10;          name: session.user.name,&#10;        },&#10;        status: &quot;active&quot;,&#10;        updatedAt: new Date().toISOString(),&#10;      };&#10;&#10;      // Only add createdAt for new products&#10;      if (!isEditMode) {&#10;        productData.createdAt = new Date().toISOString();&#10;      }&#10;&#10;      console.log(&#10;        isEditMode ? &quot;Updating product:&quot; : &quot;Creating product:&quot;,&#10;        productData,&#10;      );&#10;&#10;      const url = isEditMode&#10;        ? `/api/products/${editProductId}`&#10;        : &quot;/api/products&quot;;&#10;      const method = isEditMode ? &quot;PUT&quot; : &quot;POST&quot;;&#10;&#10;      const response = await fetch(url, {&#10;        method,&#10;        headers: {&#10;          &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;        },&#10;        body: JSON.stringify(productData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        const result = await response.json();&#10;        console.log(&#10;          isEditMode&#10;            ? &quot;Product updated successfully:&quot;&#10;            : &quot;Product created successfully:&quot;,&#10;          result,&#10;        );&#10;&#10;        alert(&#10;          isEditMode&#10;            ? &quot;Product updated successfully!&quot;&#10;            : &quot;Product added successfully!&quot;,&#10;        );&#10;&#10;        // Reset form only for new products&#10;        if (!isEditMode) {&#10;          setFormData({&#10;            name: &quot;&quot;,&#10;            category: &quot;&quot;,&#10;            description: &quot;&quot;,&#10;            price: &quot;&quot;,&#10;            stock: &quot;&quot;,&#10;            unit: &quot;&quot;,&#10;            features: [],&#10;            image: &quot;&quot;,&#10;          });&#10;          setImagePreview(null);&#10;          setImageFile(null);&#10;        }&#10;&#10;        // Redirect to manage products page&#10;        router.push(&quot;/manage&quot;);&#10;      } else {&#10;        const errorData = await response.json();&#10;        console.error(&#10;          isEditMode&#10;            ? &quot;Failed to update product:&quot;&#10;            : &quot;Failed to create product:&quot;,&#10;          errorData,&#10;        );&#10;        alert(&#10;          `Failed to ${isEditMode ? &quot;update&quot; : &quot;add&quot;} product: ${&#10;            errorData.error || &quot;Unknown error&quot;&#10;          }`,&#10;        );&#10;      }&#10;    } catch (error) {&#10;      console.error(&#10;        isEditMode ? &quot;Error updating product:&quot; : &quot;Error creating product:&quot;,&#10;        error,&#10;      );&#10;      alert(&#10;        `Failed to ${isEditMode ? &quot;update&quot; : &quot;add&quot;} product. Please try again.`,&#10;      );&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  if (status === &quot;loading&quot;) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#10;          &lt;i className=&quot;fas fa-spinner fa-spin text-4xl text-primary-600 mb-4&quot;&gt;&lt;/i&gt;&#10;          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;Loading...&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      {/* Navigation */}&#10;      &lt;nav className=&quot;bg-white dark:bg-gray-800 shadow-lg sticky top-0 z-50&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;flex justify-between items-center h-16&quot;&gt;&#10;            {/* Logo */}&#10;            &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;              &lt;Link href=&quot;/&quot; className=&quot;flex items-center space-x-3&quot;&gt;&#10;                &lt;div className=&quot;bg-green-500 p-2 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-seedling text-white text-xl&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div&gt;&#10;                  &lt;h1 className=&quot;text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                    FarmFresh&#10;                  &lt;/h1&gt;&#10;                  &lt;p className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                    Local Farmer Booking&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/Link&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Desktop Navigation */}&#10;            &lt;div className=&quot;hidden md:flex items-center space-x-8&quot;&gt;&#10;              &lt;Link&#10;                href=&quot;/&quot;&#10;                className=&quot;text-gray-700 dark:text-gray-300 hover:text-green-600 dark:hover:text-green-400 transition&quot;&#10;              &gt;&#10;                Home&#10;              &lt;/Link&gt;&#10;              &lt;Link&#10;                href=&quot;/products&quot;&#10;                className=&quot;text-gray-700 dark:text-gray-300 hover:text-green-600 dark:hover:text-green-400 transition&quot;&#10;              &gt;&#10;                Products&#10;              &lt;/Link&gt;&#10;              &lt;Link&#10;                href=&quot;/farmers&quot;&#10;                className=&quot;text-gray-700 dark:text-gray-300 hover:text-green-600 dark:hover:text-green-400 transition&quot;&#10;              &gt;&#10;                Farmers&#10;              &lt;/Link&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/nav&gt;&#10;&#10;      {/* Main Content */}&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-2xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8&quot;&gt;&#10;            &lt;h1 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-8&quot;&gt;&#10;              {isEditMode ? &quot;Edit Product&quot; : &quot;Add New Product&quot;}&#10;            &lt;/h1&gt;&#10;&#10;            &lt;form onSubmit={handleSubmit} className=&quot;space-y-6&quot;&gt;&#10;              {/* Product Name */}&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;name&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Product Name *&#10;                &lt;/label&gt;&#10;                &lt;input&#10;                  type=&quot;text&quot;&#10;                  id=&quot;name&quot;&#10;                  name=&quot;name&quot;&#10;                  value={formData.name}&#10;                  onChange={handleInputChange}&#10;                  required&#10;                  className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                  placeholder=&quot;Enter product name&quot;&#10;                /&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Category */}&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;category&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Category *&#10;                &lt;/label&gt;&#10;                &lt;select&#10;                  id=&quot;category&quot;&#10;                  name=&quot;category&quot;&#10;                  value={formData.category}&#10;                  onChange={handleInputChange}&#10;                  required&#10;                  className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                &gt;&#10;                  &lt;option value=&quot;&quot;&gt;Select Category&lt;/option&gt;&#10;                  &lt;option value=&quot;Vegetables&quot;&gt;Vegetables&lt;/option&gt;&#10;                  &lt;option value=&quot;Fruits&quot;&gt;Fruits&lt;/option&gt;&#10;                  &lt;option value=&quot;Grains&quot;&gt;Grains&lt;/option&gt;&#10;                  &lt;option value=&quot;Dairy&quot;&gt;Dairy&lt;/option&gt;&#10;                  &lt;option value=&quot;Honey&quot;&gt;Honey&lt;/option&gt;&#10;                  &lt;option value=&quot;Herbs&quot;&gt;Herbs&lt;/option&gt;&#10;                &lt;/select&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Description */}&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;description&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Description *&#10;                &lt;/label&gt;&#10;                &lt;textarea&#10;                  id=&quot;description&quot;&#10;                  name=&quot;description&quot;&#10;                  rows={4}&#10;                  value={formData.description}&#10;                  onChange={handleInputChange}&#10;                  required&#10;                  className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                  placeholder=&quot;Describe your product...&quot;&#10;                /&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Price and Stock */}&#10;              &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                &lt;div&gt;&#10;                  &lt;label&#10;                    htmlFor=&quot;price&quot;&#10;                    className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                  &gt;&#10;                    Price (৳) *&#10;                  &lt;/label&gt;&#10;                  &lt;input&#10;                    type=&quot;number&quot;&#10;                    id=&quot;price&quot;&#10;                    name=&quot;price&quot;&#10;                    min=&quot;0&quot;&#10;                    step=&quot;0.01&quot;&#10;                    value={formData.price}&#10;                    onChange={handleInputChange}&#10;                    required&#10;                    className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                    placeholder=&quot;0.00&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div&gt;&#10;                  &lt;label&#10;                    htmlFor=&quot;stock&quot;&#10;                    className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                  &gt;&#10;                    Stock Quantity *&#10;                  &lt;/label&gt;&#10;                  &lt;input&#10;                    type=&quot;number&quot;&#10;                    id=&quot;stock&quot;&#10;                    name=&quot;stock&quot;&#10;                    min=&quot;0&quot;&#10;                    value={formData.stock}&#10;                    onChange={handleInputChange}&#10;                    required&#10;                    className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                    placeholder=&quot;0&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Unit */}&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;unit&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Unit *&#10;                &lt;/label&gt;&#10;                &lt;select&#10;                  id=&quot;unit&quot;&#10;                  name=&quot;unit&quot;&#10;                  value={formData.unit}&#10;                  onChange={handleInputChange}&#10;                  required&#10;                  className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                &gt;&#10;                  &lt;option value=&quot;&quot;&gt;Select Unit&lt;/option&gt;&#10;                  &lt;option value=&quot;kg&quot;&gt;Kilogram (kg)&lt;/option&gt;&#10;                  &lt;option value=&quot;g&quot;&gt;Gram (g)&lt;/option&gt;&#10;                  &lt;option value=&quot;piece&quot;&gt;Piece&lt;/option&gt;&#10;                  &lt;option value=&quot;bunch&quot;&gt;Bunch&lt;/option&gt;&#10;                  &lt;option value=&quot;liter&quot;&gt;Liter&lt;/option&gt;&#10;                  &lt;option value=&quot;ml&quot;&gt;Milliliter (ml)&lt;/option&gt;&#10;                &lt;/select&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Image Upload */}&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;images&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Product Images&#10;                &lt;/label&gt;&#10;                &lt;input&#10;                  type=&quot;file&quot;&#10;                  id=&quot;images&quot;&#10;                  name=&quot;images&quot;&#10;                  multiple&#10;                  accept=&quot;image/*&quot;&#10;                  onChange={handleImageChange}&#10;                  className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                /&gt;&#10;                &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400 mt-1&quot;&gt;&#10;                  Upload up to 5 images (JPG, PNG, WebP)&#10;                &lt;/p&gt;&#10;&#10;                {/* Image Preview */}&#10;                {imagePreview &amp;&amp; (&#10;                  &lt;div className=&quot;mt-4&quot;&gt;&#10;                    &lt;Image&#10;                      src={imagePreview}&#10;                      alt=&quot;Image Preview&quot;&#10;                      width={500}&#10;                      height={300}&#10;                      className=&quot;rounded-lg object-cover&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;&#10;              {/* Features */}&#10;              &lt;div&gt;&#10;                &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                  Features&#10;                &lt;/label&gt;&#10;                &lt;div className=&quot;grid grid-cols-2 md:grid-cols-3 gap-4&quot;&gt;&#10;                  {[&quot;organic&quot;, &quot;fresh&quot;, &quot;local&quot;, &quot;seasonal&quot;, &quot;premium&quot;].map(&#10;                    (feature) =&gt; (&#10;                      &lt;label key={feature} className=&quot;flex items-center&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          name=&quot;features&quot;&#10;                          value={feature}&#10;                          checked={formData.features.includes(feature)}&#10;                          onChange={handleFeatureChange}&#10;                          className=&quot;mr-2 text-green-600 focus:ring-green-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;text-gray-700 dark:text-gray-300 capitalize&quot;&gt;&#10;                          {feature}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ),&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Action Buttons */}&#10;              &lt;div className=&quot;flex space-x-4 pt-6&quot;&gt;&#10;                &lt;button&#10;                  type=&quot;submit&quot;&#10;                  disabled={loading}&#10;                  className={`flex-1 py-3 px-6 rounded-lg font-medium transition ${&#10;                    loading&#10;                      ? &quot;bg-gray-400 cursor-not-allowed text-white&quot;&#10;                      : &quot;bg-green-600 hover:bg-green-700 text-white&quot;&#10;                  }`}&#10;                &gt;&#10;                  {loading ? (&#10;                    &lt;&gt;&#10;                      &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                      {isEditMode ? &quot;Updating Product...&quot; : &quot;Adding Product...&quot;}&#10;                    &lt;/&gt;&#10;                  ) : (&#10;                    &lt;&gt;&#10;                      &lt;i className=&quot;fas fa-plus mr-2&quot;&gt;&lt;/i&gt;&#10;                      {isEditMode ? &quot;Update Product&quot; : &quot;Add Product&quot;}&#10;                    &lt;/&gt;&#10;                  )}&#10;                &lt;/button&gt;&#10;&#10;                &lt;Link&#10;                  href=&quot;/manage&quot;&#10;                  className=&quot;flex-1 bg-gray-600 hover:bg-gray-700 text-white py-3 px-6 rounded-lg font-medium text-center transition&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-list mr-2&quot;&gt;&lt;/i&gt;&#10;                  Manage Products&#10;                &lt;/Link&gt;&#10;              &lt;/div&gt;&#10;            &lt;/form&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/farmer-orders/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/farmer-orders/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useRouter } from &quot;next/navigation&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;&#10;export default function FarmerOrders() {&#10;  const { data: session, status } = useSession();&#10;  const router = useRouter();&#10;  const [orders, setOrders] = useState([]);&#10;  const [filteredOrders, setFilteredOrders] = useState([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [statusFilter, setStatusFilter] = useState(&quot;All Orders&quot;);&#10;  const [searchTerm, setSearchTerm] = useState(&quot;&quot;);&#10;  const [currentPage, setCurrentPage] = useState(1);&#10;  const [refreshing, setRefreshing] = useState(false);&#10;  const ordersPerPage = 10;&#10;&#10;  useEffect(() =&gt; {&#10;    if (status === &quot;unauthenticated&quot;) {&#10;      router.push(&quot;/login&quot;);&#10;      return;&#10;    }&#10;&#10;    if (status === &quot;authenticated&quot; &amp;&amp; session?.user) {&#10;      // Check if user is a farmer&#10;      const userType = session.user.userType || session.user.role || &quot;user&quot;;&#10;      if (userType !== &quot;farmer&quot;) {&#10;        router.push(&quot;/&quot;);&#10;        return;&#10;      }&#10;      fetchOrders();&#10;    }&#10;  }, [session, status, router]);&#10;&#10;  useEffect(() =&gt; {&#10;    filterOrders();&#10;  }, [orders, statusFilter, searchTerm]);&#10;&#10;  const fetchOrders = async () =&gt; {&#10;    setLoading(true);&#10;    try {&#10;      const userId = session.user.userId || session.user.id || session.user._id;&#10;      const userEmail = session.user.email;&#10;&#10;      if (!userId &amp;&amp; !userEmail) {&#10;        console.error(&quot;No user ID or email found in session&quot;);&#10;        setLoading(false);&#10;        return;&#10;      }&#10;&#10;      // Fetch orders for this farmer using farmerId and farmerEmail parameters&#10;      const params = new URLSearchParams();&#10;      if (userId) params.append(&quot;farmerId&quot;, userId);&#10;      if (userEmail) params.append(&quot;farmerEmail&quot;, userEmail);&#10;&#10;      console.log(&quot;Farmer orders page - fetching with params:&quot;, {&#10;        farmerId: userId,&#10;        farmerEmail: userEmail,&#10;        url: `/api/orders?${params.toString()}`,&#10;      });&#10;&#10;      const response = await fetch(`/api/orders?${params.toString()}`, {&#10;        cache: &quot;no-store&quot;,&#10;        headers: {&#10;          &quot;Cache-Control&quot;: &quot;no-cache&quot;,&#10;          Pragma: &quot;no-cache&quot;,&#10;        },&#10;      });&#10;&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;        console.log(&quot;Farmer orders API response:&quot;, data);&#10;        console.log(&quot;Farmer orders fetched:&quot;, data.orders?.length || 0);&#10;        console.log(&quot;Sample orders:&quot;, data.orders?.slice(0, 2));&#10;&#10;        // Log the structure of orders to see what data we have&#10;        if (data.orders &amp;&amp; data.orders.length &gt; 0) {&#10;          console.log(&quot;First order structure:&quot;, {&#10;            _id: data.orders[0]._id,&#10;            customerName: data.orders[0].customerName,&#10;            customerEmail: data.orders[0].customerEmail,&#10;            status: data.orders[0].status,&#10;            items: data.orders[0].items?.length || 0,&#10;            farmerIds: data.orders[0].farmerIds,&#10;            farmerEmails: data.orders[0].farmerEmails,&#10;            createdAt: data.orders[0].createdAt,&#10;          });&#10;        }&#10;&#10;        setOrders(data.orders || []);&#10;      } else {&#10;        console.error(&quot;Failed to fetch orders&quot;);&#10;        setOrders([]);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching orders:&quot;, error);&#10;      setOrders([]);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  const filterOrders = () =&gt; {&#10;    let filtered = [...orders];&#10;&#10;    // Apply status filter&#10;    if (statusFilter !== &quot;All Orders&quot;) {&#10;      filtered = filtered.filter(&#10;        (order) =&gt; order.status.toLowerCase() === statusFilter.toLowerCase(),&#10;      );&#10;    }&#10;&#10;    // Apply search filter&#10;    if (searchTerm) {&#10;      const searchRegex = new RegExp(searchTerm, &quot;i&quot;);&#10;      filtered = filtered.filter((order) =&gt; {&#10;        const orderItemsMatch = order.items?.some(&#10;          (item) =&gt;&#10;            searchRegex.test(item.name) || searchRegex.test(item.productName),&#10;        );&#10;        const customerMatch =&#10;          searchRegex.test(order.customerName) ||&#10;          searchRegex.test(order.customerEmail);&#10;        const orderIdMatch = searchRegex.test(order._id);&#10;&#10;        return orderItemsMatch || customerMatch || orderIdMatch;&#10;      });&#10;    }&#10;&#10;    setFilteredOrders(filtered);&#10;    setCurrentPage(1);&#10;  };&#10;&#10;  const handleStatusChange = (e) =&gt; {&#10;    setStatusFilter(e.target.value);&#10;  };&#10;&#10;  const handleSearchChange = (e) =&gt; {&#10;    setSearchTerm(e.target.value);&#10;  };&#10;&#10;  const handleUpdateOrderStatus = async (orderId, newStatus) =&gt; {&#10;    // More descriptive confirmation messages based on status transition&#10;    const statusMessages = {&#10;      confirmed:&#10;        &quot;confirm this order? This will notify the customer that their order has been accepted.&quot;,&#10;      shipped:&#10;        &quot;mark this order as shipped? This will notify the customer that their order is on the way.&quot;,&#10;      delivered:&#10;        &quot;mark this order as delivered? This will complete the order and notify the customer.&quot;,&#10;      cancelled:&#10;        &quot;cancel this order? This action cannot be undone and will notify the customer.&quot;,&#10;    };&#10;&#10;    const confirmMessage =&#10;      statusMessages[newStatus] || `mark this order as ${newStatus}?`;&#10;&#10;    if (!confirm(`Are you sure you want to ${confirmMessage}`)) {&#10;      return;&#10;    }&#10;&#10;    try {&#10;      const updateData = {&#10;        status: newStatus,&#10;        statusHistory: {&#10;          status: newStatus,&#10;          timestamp: new Date().toISOString(),&#10;          updatedBy: session.user.email || session.user.name,&#10;        },&#10;      };&#10;&#10;      // Add estimated delivery date for shipped status&#10;      if (newStatus === &quot;shipped&quot;) {&#10;        const estimatedDelivery = new Date();&#10;        estimatedDelivery.setDate(estimatedDelivery.getDate() + 3); // 3 days from ship date&#10;        updateData.estimatedDeliveryDate = estimatedDelivery.toISOString();&#10;      }&#10;&#10;      const response = await fetch(`/api/orders/${orderId}`, {&#10;        method: &quot;PATCH&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify(updateData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        setOrders((prev) =&gt;&#10;          prev.map((order) =&gt;&#10;            order._id === orderId&#10;              ? {&#10;                  ...order,&#10;                  status: newStatus,&#10;                  estimatedDeliveryDate:&#10;                    updateData.estimatedDeliveryDate ||&#10;                    order.estimatedDeliveryDate,&#10;                  statusHistory: [&#10;                    ...(Array.isArray(order.statusHistory)&#10;                      ? order.statusHistory&#10;                      : []),&#10;                    updateData.statusHistory,&#10;                  ],&#10;                }&#10;              : order,&#10;          ),&#10;        );&#10;&#10;        // More specific success messages&#10;        const successMessages = {&#10;          confirmed: &quot;Order confirmed! Customer has been notified.&quot;,&#10;          shipped:&#10;            &quot;Order marked as shipped! Customer has been notified with tracking information.&quot;,&#10;          delivered:&#10;            &quot;Order completed! Customer has been notified of successful delivery.&quot;,&#10;          cancelled: &quot;Order cancelled. Customer has been notified.&quot;,&#10;        };&#10;&#10;        alert(&#10;          successMessages[newStatus] ||&#10;            `Order status updated to ${newStatus} successfully!`,&#10;        );&#10;      } else {&#10;        const errorData = await response.json();&#10;        throw new Error(errorData.error || &quot;Failed to update order status&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error updating order status:&quot;, error);&#10;      alert(`Failed to update order status: ${error.message}`);&#10;    }&#10;  };&#10;&#10;  const handleRefresh = async () =&gt; {&#10;    setRefreshing(true);&#10;    await fetchOrders();&#10;    setRefreshing(false);&#10;  };&#10;&#10;  const formatPrice = (price) =&gt; {&#10;    return new Intl.NumberFormat(&quot;en-BD&quot;, {&#10;      style: &quot;currency&quot;,&#10;      currency: &quot;BDT&quot;,&#10;      minimumFractionDigits: 0,&#10;    }).format(price);&#10;  };&#10;&#10;  const formatDate = (dateString) =&gt; {&#10;    return new Date(dateString).toLocaleDateString(&quot;en-US&quot;, {&#10;      year: &quot;numeric&quot;,&#10;      month: &quot;short&quot;,&#10;      day: &quot;numeric&quot;,&#10;      hour: &quot;2-digit&quot;,&#10;      minute: &quot;2-digit&quot;,&#10;    });&#10;  };&#10;&#10;  const getStatusBadge = (status) =&gt; {&#10;    const statusConfig = {&#10;      pending: {&#10;        bg: &quot;bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200&quot;,&#10;        icon: &quot;fas fa-clock&quot;,&#10;      },&#10;      confirmed: {&#10;        bg: &quot;bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200&quot;,&#10;        icon: &quot;fas fa-check&quot;,&#10;      },&#10;      shipped: {&#10;        bg: &quot;bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200&quot;,&#10;        icon: &quot;fas fa-truck&quot;,&#10;      },&#10;      delivered: {&#10;        bg: &quot;bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200&quot;,&#10;        icon: &quot;fas fa-check-circle&quot;,&#10;      },&#10;      cancelled: {&#10;        bg: &quot;bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200&quot;,&#10;        icon: &quot;fas fa-times-circle&quot;,&#10;      },&#10;    };&#10;&#10;    const config = statusConfig[status?.toLowerCase()] || statusConfig.pending;&#10;&#10;    return (&#10;      &lt;span&#10;        className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${config.bg}`}&#10;      &gt;&#10;        &lt;i className={`${config.icon} mr-1`}&gt;&lt;/i&gt;&#10;        {status?.charAt(0).toUpperCase() + status?.slice(1) || &quot;Pending&quot;}&#10;      &lt;/span&gt;&#10;    );&#10;  };&#10;&#10;  const getOrderActions = (order) =&gt; {&#10;    const actions = [];&#10;&#10;    switch (order.status.toLowerCase()) {&#10;      case &quot;pending&quot;:&#10;        actions.push(&#10;          &lt;button&#10;            key=&quot;confirm&quot;&#10;            onClick={() =&gt; handleUpdateOrderStatus(order._id, &quot;confirmed&quot;)}&#10;            className=&quot;bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg text-sm font-medium transition&quot;&#10;          &gt;&#10;            &lt;i className=&quot;fas fa-check mr-1&quot;&gt;&lt;/i&gt;&#10;            Confirm Order&#10;          &lt;/button&gt;,&#10;        );&#10;        actions.push(&#10;          &lt;button&#10;            key=&quot;cancel&quot;&#10;            onClick={() =&gt; handleUpdateOrderStatus(order._id, &quot;cancelled&quot;)}&#10;            className=&quot;bg-red-600 hover:bg-red-700 text-white py-2 px-4 rounded-lg text-sm font-medium transition&quot;&#10;          &gt;&#10;            &lt;i className=&quot;fas fa-times mr-1&quot;&gt;&lt;/i&gt;&#10;            Cancel Order&#10;          &lt;/button&gt;,&#10;        );&#10;        break;&#10;      case &quot;confirmed&quot;:&#10;        actions.push(&#10;          &lt;button&#10;            key=&quot;ship&quot;&#10;            onClick={() =&gt; handleUpdateOrderStatus(order._id, &quot;shipped&quot;)}&#10;            className=&quot;bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg text-sm font-medium transition&quot;&#10;          &gt;&#10;            &lt;i className=&quot;fas fa-truck mr-1&quot;&gt;&lt;/i&gt;&#10;            Mark as Shipped&#10;          &lt;/button&gt;,&#10;        );&#10;        break;&#10;      case &quot;shipped&quot;:&#10;        actions.push(&#10;          &lt;button&#10;            key=&quot;deliver&quot;&#10;            onClick={() =&gt; handleUpdateOrderStatus(order._id, &quot;delivered&quot;)}&#10;            className=&quot;bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded-lg text-sm font-medium transition&quot;&#10;          &gt;&#10;            &lt;i className=&quot;fas fa-check-circle mr-1&quot;&gt;&lt;/i&gt;&#10;            Mark as Delivered&#10;          &lt;/button&gt;,&#10;        );&#10;        break;&#10;    }&#10;&#10;    return actions;&#10;  };&#10;&#10;  // Pagination&#10;  const indexOfLastOrder = currentPage * ordersPerPage;&#10;  const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;&#10;  const currentOrders = filteredOrders.slice(&#10;    indexOfFirstOrder,&#10;    indexOfLastOrder,&#10;  );&#10;  const totalPages = Math.ceil(filteredOrders.length / ordersPerPage);&#10;&#10;  const getOrderSummary = () =&gt; {&#10;    const summary = {&#10;      total: orders.length,&#10;      pending: orders.filter((o) =&gt; o.status === &quot;pending&quot;).length,&#10;      confirmed: orders.filter((o) =&gt; o.status === &quot;confirmed&quot;).length,&#10;      shipped: orders.filter((o) =&gt; o.status === &quot;shipped&quot;).length,&#10;      delivered: orders.filter((o) =&gt; o.status === &quot;delivered&quot;).length,&#10;      cancelled: orders.filter((o) =&gt; o.status === &quot;cancelled&quot;).length,&#10;    };&#10;    return summary;&#10;  };&#10;&#10;  if (status === &quot;loading&quot; || loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#10;          &lt;i className=&quot;fas fa-spinner fa-spin text-4xl text-green-600 mb-4&quot;&gt;&lt;/i&gt;&#10;          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;            Loading your orders...&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  const orderSummary = getOrderSummary();&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        {/* Breadcrumb */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4&quot;&gt;&#10;          &lt;nav className=&quot;flex&quot; aria-label=&quot;Breadcrumb&quot;&gt;&#10;            &lt;ol className=&quot;flex items-center space-x-2 text-sm&quot;&gt;&#10;              &lt;li&gt;&#10;                &lt;Link href=&quot;/&quot; className=&quot;text-gray-500 hover:text-green-600&quot;&gt;&#10;                  Home&#10;                &lt;/Link&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;Link&#10;                  href=&quot;/manage&quot;&#10;                  className=&quot;text-gray-500 hover:text-green-600&quot;&#10;                &gt;&#10;                  Manage&#10;                &lt;/Link&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;              &lt;/li&gt;&#10;              &lt;li className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                Order Management&#10;              &lt;/li&gt;&#10;            &lt;/ol&gt;&#10;          &lt;/nav&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Page Header */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8&quot;&gt;&#10;          &lt;div className=&quot;flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8&quot;&gt;&#10;            &lt;div&gt;&#10;              &lt;h1 className=&quot;text-3xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                Order Management&#10;              &lt;/h1&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400 mt-2&quot;&gt;&#10;                Manage and track all orders for your products&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;mt-4 sm:mt-0 flex space-x-3&quot;&gt;&#10;              &lt;button&#10;                onClick={handleRefresh}&#10;                disabled={refreshing}&#10;                className=&quot;inline-flex items-center px-4 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg font-medium transition&quot;&#10;              &gt;&#10;                &lt;i&#10;                  className={`fas fa-sync-alt mr-2 ${refreshing ? &quot;fa-spin&quot; : &quot;&quot;}`}&#10;                &gt;&lt;/i&gt;&#10;                Refresh&#10;              &lt;/button&gt;&#10;              &lt;Link&#10;                href=&quot;/manage&quot;&#10;                className=&quot;inline-flex items-center px-6 py-3 bg-green-600 hover:bg-green-700 text-white rounded-lg font-medium transition&quot;&#10;              &gt;&#10;                &lt;i className=&quot;fas fa-arrow-left mr-2&quot;&gt;&lt;/i&gt;&#10;                Back to Manage&#10;              &lt;/Link&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Order Summary Cards */}&#10;          &lt;div className=&quot;grid grid-cols-2 md:grid-cols-6 gap-4 mb-8&quot;&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-gray-100 dark:bg-gray-700 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-shopping-cart text-gray-600 dark:text-gray-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Total&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                    {orderSummary.total}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-yellow-100 dark:bg-yellow-900 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-clock text-yellow-600 dark:text-yellow-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Pending&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-yellow-600 dark:text-yellow-400&quot;&gt;&#10;                    {orderSummary.pending}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-blue-100 dark:bg-blue-900 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-check text-blue-600 dark:text-blue-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Confirmed&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                    {orderSummary.confirmed}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-purple-100 dark:bg-purple-900 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-truck text-purple-600 dark:text-purple-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Shipped&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-purple-600 dark:text-purple-400&quot;&gt;&#10;                    {orderSummary.shipped}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-green-100 dark:bg-green-900 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-check-circle text-green-600 dark:text-green-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Delivered&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                    {orderSummary.delivered}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-red-100 dark:bg-red-900 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-times-circle text-red-600 dark:text-red-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Cancelled&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-red-600 dark:text-red-400&quot;&gt;&#10;                    {orderSummary.cancelled}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Filters and Search */}&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 mb-8&quot;&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-4&quot;&gt;&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;search&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Search Orders&#10;                &lt;/label&gt;&#10;                &lt;div className=&quot;relative&quot;&gt;&#10;                  &lt;input&#10;                    type=&quot;text&quot;&#10;                    id=&quot;search&quot;&#10;                    placeholder=&quot;Search by customer name, email, or order ID...&quot;&#10;                    value={searchTerm}&#10;                    onChange={handleSearchChange}&#10;                    className=&quot;w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                  /&gt;&#10;                  &lt;i className=&quot;fas fa-search absolute left-3 top-3 text-gray-400&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;status-filter&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Filter by Status&#10;                &lt;/label&gt;&#10;                &lt;select&#10;                  id=&quot;status-filter&quot;&#10;                  value={statusFilter}&#10;                  onChange={handleStatusChange}&#10;                  className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                &gt;&#10;                  &lt;option value=&quot;All Orders&quot;&gt;All Orders&lt;/option&gt;&#10;                  &lt;option value=&quot;pending&quot;&gt;Pending&lt;/option&gt;&#10;                  &lt;option value=&quot;confirmed&quot;&gt;Confirmed&lt;/option&gt;&#10;                  &lt;option value=&quot;shipped&quot;&gt;Shipped&lt;/option&gt;&#10;                  &lt;option value=&quot;delivered&quot;&gt;Delivered&lt;/option&gt;&#10;                  &lt;option value=&quot;cancelled&quot;&gt;Cancelled&lt;/option&gt;&#10;                &lt;/select&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;flex items-end&quot;&gt;&#10;                &lt;button&#10;                  onClick={() =&gt; {&#10;                    setSearchTerm(&quot;&quot;);&#10;                    setStatusFilter(&quot;All Orders&quot;);&#10;                  }}&#10;                  className=&quot;w-full bg-gray-600 hover:bg-gray-700 text-white py-2 rounded-lg font-medium transition&quot;&#10;                &gt;&#10;                  Clear Filters&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Orders List */}&#10;          {currentOrders.length === 0 ? (&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-12 text-center&quot;&gt;&#10;              &lt;i className=&quot;fas fa-shopping-bag text-6xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#10;              &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                No orders found&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-6&quot;&gt;&#10;                {statusFilter === &quot;All Orders&quot;&#10;                  ? &quot;You haven't received any orders yet.&quot;&#10;                  : `No ${statusFilter.toLowerCase()} orders found.`}&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;          ) : (&#10;            &lt;div className=&quot;space-y-6&quot;&gt;&#10;              {currentOrders.map((order) =&gt; (&#10;                &lt;div&#10;                  key={order._id}&#10;                  className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden&quot;&#10;                &gt;&#10;                  &lt;div className=&quot;p-6&quot;&gt;&#10;                    {/* Order Header */}&#10;                    &lt;div className=&quot;flex flex-col lg:flex-row lg:items-center justify-between mb-6&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center space-x-4 mb-4 lg:mb-0&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                            Order #&#10;                            {order._id?.slice(-8)?.toUpperCase() || &quot;N/A&quot;}&#10;                          &lt;/h3&gt;&#10;                          &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Placed on {formatDate(order.createdAt)}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                        {getStatusBadge(order.status)}&#10;                        &lt;span className=&quot;text-lg font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          {formatPrice(&#10;                            order.farmerSubtotal || order.total || 0,&#10;                          )}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Customer Information */}&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6 mb-6&quot;&gt;&#10;                      &lt;div className=&quot;bg-gray-50 dark:bg-gray-700 rounded-lg p-4&quot;&gt;&#10;                        &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                          Customer Information&#10;                        &lt;/h4&gt;&#10;                        &lt;div className=&quot;space-y-2 text-sm&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            &lt;span className=&quot;font-medium&quot;&gt;Name:&lt;/span&gt;{&quot; &quot;}&#10;                            {order.customerName || order.userName || &quot;Customer&quot;}&#10;                          &lt;/p&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            &lt;span className=&quot;font-medium&quot;&gt;Email:&lt;/span&gt;{&quot; &quot;}&#10;                            {order.customerEmail ||&#10;                              order.userEmail ||&#10;                              &quot;Not available&quot;}&#10;                          &lt;/p&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            &lt;span className=&quot;font-medium&quot;&gt;Phone:&lt;/span&gt;{&quot; &quot;}&#10;                            {order.customerPhone ||&#10;                              order.userPhone ||&#10;                              &quot;Not available&quot;}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;bg-gray-50 dark:bg-gray-700 rounded-lg p-4&quot;&gt;&#10;                        &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                          Delivery Information&#10;                        &lt;/h4&gt;&#10;                        &lt;div className=&quot;space-y-2 text-sm&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            &lt;span className=&quot;font-medium&quot;&gt;Address:&lt;/span&gt;{&quot; &quot;}&#10;                            {typeof order.deliveryAddress === &quot;object&quot; &amp;&amp;&#10;                            order.deliveryAddress&#10;                              ? `${order.deliveryAddress.address || &quot;&quot;}, ${order.deliveryAddress.city || &quot;&quot;} ${order.deliveryAddress.postalCode || &quot;&quot;}`&#10;                                  .replace(/^,\s*/, &quot;&quot;)&#10;                                  .replace(/,\s*$/, &quot;&quot;) || &quot;Not provided&quot;&#10;                              : order.deliveryAddress || &quot;Not provided&quot;}&#10;                          &lt;/p&gt;&#10;                          {typeof order.deliveryAddress === &quot;object&quot; &amp;&amp;&#10;                            order.deliveryAddress?.name &amp;&amp; (&#10;                              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                &lt;span className=&quot;font-medium&quot;&gt;Recipient:&lt;/span&gt;{&quot; &quot;}&#10;                                {order.deliveryAddress.name}&#10;                              &lt;/p&gt;&#10;                            )}&#10;                          {typeof order.deliveryAddress === &quot;object&quot; &amp;&amp;&#10;                            order.deliveryAddress?.phone &amp;&amp; (&#10;                              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                &lt;span className=&quot;font-medium&quot;&gt;Contact:&lt;/span&gt;{&quot; &quot;}&#10;                                {order.deliveryAddress.phone}&#10;                              &lt;/p&gt;&#10;                            )}&#10;                          {typeof order.deliveryAddress === &quot;object&quot; &amp;&amp;&#10;                            order.deliveryAddress?.instructions &amp;&amp; (&#10;                              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                &lt;span className=&quot;font-medium&quot;&gt;&#10;                                  Instructions:&#10;                                &lt;/span&gt;{&quot; &quot;}&#10;                                {order.deliveryAddress.instructions}&#10;                              &lt;/p&gt;&#10;                            )}&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            &lt;span className=&quot;font-medium&quot;&gt;Payment Method:&lt;/span&gt;{&quot; &quot;}&#10;                            {order.paymentMethod || &quot;Cash on Delivery&quot;}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Order Items */}&#10;                    &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6 mb-6&quot;&gt;&#10;                      &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                        Order Items ({order.items?.length || 0})&#10;                      &lt;/h4&gt;&#10;                      &lt;div className=&quot;space-y-3&quot;&gt;&#10;                        {order.items?.map((item, index) =&gt; (&#10;                          &lt;div&#10;                            key={index}&#10;                            className=&quot;flex items-center justify-between py-3 px-4 bg-gray-50 dark:bg-gray-700 rounded-lg&quot;&#10;                          &gt;&#10;                            &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                              &lt;img&#10;                                src={&#10;                                  item.image ||&#10;                                  &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=80&amp;h=80&amp;fit=crop&quot;&#10;                                }&#10;                                alt={item.name || item.productName}&#10;                                className=&quot;w-16 h-16 rounded-lg object-cover&quot;&#10;                              /&gt;&#10;                              &lt;div&gt;&#10;                                &lt;h5 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                                  {item.name || item.productName}&#10;                                &lt;/h5&gt;&#10;                                &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                  Quantity: {item.quantity} {item.unit || &quot;kg&quot;}&#10;                                &lt;/p&gt;&#10;                                &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                  Unit Price: {formatPrice(item.price)}&#10;                                &lt;/p&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;text-right&quot;&gt;&#10;                              &lt;p className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                                {formatPrice(item.price * item.quantity)}&#10;                              &lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        ))}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Action Buttons */}&#10;                    &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-4&quot;&gt;&#10;                      &lt;div className=&quot;flex flex-wrap gap-3&quot;&gt;&#10;                        {getOrderActions(order)}&#10;                        &lt;Link&#10;                          href={`/farmer-orders/${order._id}`}&#10;                          className=&quot;bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded-lg text-sm font-medium transition&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-eye mr-1&quot;&gt;&lt;/i&gt;&#10;                          View Details&#10;                        &lt;/Link&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          )}&#10;&#10;          {/* Pagination */}&#10;          {totalPages &gt; 1 &amp;&amp; (&#10;            &lt;div className=&quot;flex justify-center mt-12&quot;&gt;&#10;              &lt;nav aria-label=&quot;Pagination&quot;&gt;&#10;                &lt;ul className=&quot;inline-flex items-center -space-x-px text-gray-600 dark:text-gray-300&quot;&gt;&#10;                  &lt;li&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt;&#10;                        setCurrentPage((prev) =&gt; Math.max(prev - 1, 1))&#10;                      }&#10;                      disabled={currentPage === 1}&#10;                      className=&quot;block px-3 py-2 ml-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white disabled:opacity-50&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-chevron-left&quot;&gt;&lt;/i&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/li&gt;&#10;                  {[...Array(totalPages)].map((_, index) =&gt; (&#10;                    &lt;li key={index}&gt;&#10;                      &lt;button&#10;                        onClick={() =&gt; setCurrentPage(index + 1)}&#10;                        className={`px-3 py-2 leading-tight border ${&#10;                          currentPage === index + 1&#10;                            ? &quot;text-white bg-green-600 border-green-600 hover:bg-green-700&quot;&#10;                            : &quot;text-gray-500 bg-white border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {index + 1}&#10;                      &lt;/button&gt;&#10;                    &lt;/li&gt;&#10;                  ))}&#10;                  &lt;li&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt;&#10;                        setCurrentPage((prev) =&gt; Math.min(prev + 1, totalPages))&#10;                      }&#10;                      disabled={currentPage === totalPages}&#10;                      className=&quot;block px-3 py-2 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white disabled:opacity-50&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/li&gt;&#10;                &lt;/ul&gt;&#10;              &lt;/nav&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useEffect, useCallback } from &quot;react&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useRouter } from &quot;next/navigation&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;&#10;export default function FarmerOrders() {&#10;  const { data: session, status } = useSession();&#10;  const router = useRouter();&#10;  const [orders, setOrders] = useState([]);&#10;  const [filteredOrders, setFilteredOrders] = useState([]);&#10;  const [loading, setLoading] = useState(true);&#10;  const [statusFilter, setStatusFilter] = useState(&quot;All Orders&quot;);&#10;  const [searchTerm, setSearchTerm] = useState(&quot;&quot;);&#10;  const [currentPage, setCurrentPage] = useState(1);&#10;  const [refreshing, setRefreshing] = useState(false);&#10;  const ordersPerPage = 10;&#10;&#10;  // Memoize the filterOrders function to prevent infinite re-renders&#10;  const filterOrders = useCallback(() =&gt; {&#10;    let filtered = [...orders];&#10;&#10;    // Apply status filter&#10;    if (statusFilter !== &quot;All Orders&quot;) {&#10;      filtered = filtered.filter(&#10;        (order) =&gt; order.status.toLowerCase() === statusFilter.toLowerCase(),&#10;      );&#10;    }&#10;&#10;    // Apply search filter&#10;    if (searchTerm) {&#10;      const searchRegex = new RegExp(searchTerm, &quot;i&quot;);&#10;      filtered = filtered.filter((order) =&gt; {&#10;        const orderItemsMatch = order.items?.some(&#10;          (item) =&gt;&#10;            searchRegex.test(item.name) || searchRegex.test(item.productName),&#10;        );&#10;        const customerMatch =&#10;          searchRegex.test(order.customerName) ||&#10;          searchRegex.test(order.customerEmail);&#10;        const orderIdMatch = searchRegex.test(order._id);&#10;&#10;        return orderItemsMatch || customerMatch || orderIdMatch;&#10;      });&#10;    }&#10;&#10;    setFilteredOrders(filtered);&#10;    setCurrentPage(1);&#10;  }, [orders, statusFilter, searchTerm]);&#10;&#10;  // Apply filters whenever dependencies change&#10;  useEffect(() =&gt; {&#10;    filterOrders();&#10;  }, [filterOrders]);&#10;&#10;  const fetchOrders = useCallback(async () =&gt; {&#10;    if (!session?.user) return;&#10;&#10;    try {&#10;      const userId = session.user.userId || session.user.id || session.user._id;&#10;      const userEmail = session.user.email;&#10;&#10;      // Fetch orders for this farmer using farmerId and farmerEmail parameters&#10;      const params = new URLSearchParams();&#10;      if (userId) params.append(&quot;farmerId&quot;, userId);&#10;      if (userEmail) params.append(&quot;farmerEmail&quot;, userEmail);&#10;&#10;      console.log(&quot;Farmer orders page - fetching with params:&quot;, {&#10;        farmerId: userId,&#10;        farmerEmail: userEmail,&#10;        url: `/api/orders?${params.toString()}`,&#10;      });&#10;&#10;      const response = await fetch(`/api/orders?${params.toString()}`, {&#10;        cache: &quot;no-store&quot;,&#10;        headers: {&#10;          &quot;Cache-Control&quot;: &quot;no-cache&quot;,&#10;          Pragma: &quot;no-cache&quot;,&#10;        },&#10;      });&#10;&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;        console.log(&quot;Farmer orders API response:&quot;, data);&#10;        console.log(&quot;Farmer orders fetched:&quot;, data.orders?.length || 0);&#10;        console.log(&quot;Sample orders:&quot;, data.orders?.slice(0, 2));&#10;&#10;        // Log the structure of orders to see what data we have&#10;        if (data.orders &amp;&amp; data.orders.length &gt; 0) {&#10;          console.log(&quot;First order structure:&quot;, {&#10;            _id: data.orders[0]._id,&#10;            customerName: data.orders[0].customerName,&#10;            customerEmail: data.orders[0].customerEmail,&#10;            status: data.orders[0].status,&#10;            items: data.orders[0].items?.length || 0,&#10;            farmerIds: data.orders[0].farmerIds,&#10;            farmerEmails: data.orders[0].farmerEmails,&#10;            createdAt: data.orders[0].createdAt,&#10;          });&#10;        }&#10;&#10;        setOrders(data.orders || []);&#10;      } else {&#10;        console.error(&quot;Failed to fetch orders&quot;);&#10;        setOrders([]);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching orders:&quot;, error);&#10;      setOrders([]);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  }, [session]);&#10;&#10;  useEffect(() =&gt; {&#10;    fetchOrders();&#10;  }, [fetchOrders]);&#10;&#10;  const handleStatusChange = (e) =&gt; {&#10;    setStatusFilter(e.target.value);&#10;  };&#10;&#10;  const handleSearchChange = (e) =&gt; {&#10;    setSearchTerm(e.target.value);&#10;  };&#10;&#10;  const handleUpdateOrderStatus = async (orderId, newStatus) =&gt; {&#10;    // More descriptive confirmation messages based on status transition&#10;    const statusMessages = {&#10;      confirmed:&#10;        &quot;confirm this order? This will notify the customer that their order has been accepted.&quot;,&#10;      shipped:&#10;        &quot;mark this order as shipped? This will notify the customer that their order is on the way.&quot;,&#10;      delivered:&#10;        &quot;mark this order as delivered? This will complete the order and notify the customer.&quot;,&#10;      cancelled:&#10;        &quot;cancel this order? This action cannot be undone and will notify the customer.&quot;,&#10;    };&#10;&#10;    const confirmMessage =&#10;      statusMessages[newStatus] || `mark this order as ${newStatus}?`;&#10;&#10;    if (!confirm(`Are you sure you want to ${confirmMessage}`)) {&#10;      return;&#10;    }&#10;&#10;    try {&#10;      const updateData = {&#10;        status: newStatus,&#10;        statusHistory: {&#10;          status: newStatus,&#10;          timestamp: new Date().toISOString(),&#10;          updatedBy: session.user.email || session.user.name,&#10;        },&#10;      };&#10;&#10;      // Add estimated delivery date for shipped status&#10;      if (newStatus === &quot;shipped&quot;) {&#10;        const estimatedDelivery = new Date();&#10;        estimatedDelivery.setDate(estimatedDelivery.getDate() + 3); // 3 days from ship date&#10;        updateData.estimatedDeliveryDate = estimatedDelivery.toISOString();&#10;      }&#10;&#10;      const response = await fetch(`/api/orders/${orderId}`, {&#10;        method: &quot;PATCH&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify(updateData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        setOrders((prev) =&gt;&#10;          prev.map((order) =&gt;&#10;            order._id === orderId&#10;              ? {&#10;                  ...order,&#10;                  status: newStatus,&#10;                  estimatedDeliveryDate:&#10;                    updateData.estimatedDeliveryDate ||&#10;                    order.estimatedDeliveryDate,&#10;                  statusHistory: [&#10;                    ...(Array.isArray(order.statusHistory)&#10;                      ? order.statusHistory&#10;                      : []),&#10;                    updateData.statusHistory,&#10;                  ],&#10;                }&#10;              : order,&#10;          ),&#10;        );&#10;&#10;        // More specific success messages&#10;        const successMessages = {&#10;          confirmed: &quot;Order confirmed! Customer has been notified.&quot;,&#10;          shipped:&#10;            &quot;Order marked as shipped! Customer has been notified with tracking information.&quot;,&#10;          delivered:&#10;            &quot;Order completed! Customer has been notified of successful delivery.&quot;,&#10;          cancelled: &quot;Order cancelled. Customer has been notified.&quot;,&#10;        };&#10;&#10;        alert(&#10;          successMessages[newStatus] ||&#10;            `Order status updated to ${newStatus} successfully!`,&#10;        );&#10;      } else {&#10;        const errorData = await response.json();&#10;        throw new Error(errorData.error || &quot;Failed to update order status&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error updating order status:&quot;, error);&#10;      alert(`Failed to update order status: ${error.message}`);&#10;    }&#10;  };&#10;&#10;  const handleRefresh = async () =&gt; {&#10;    setRefreshing(true);&#10;    await fetchOrders();&#10;    setRefreshing(false);&#10;  };&#10;&#10;  const formatPrice = (price) =&gt; {&#10;    return new Intl.NumberFormat(&quot;en-BD&quot;, {&#10;      style: &quot;currency&quot;,&#10;      currency: &quot;BDT&quot;,&#10;      minimumFractionDigits: 0,&#10;    }).format(price);&#10;  };&#10;&#10;  const formatDate = (dateString) =&gt; {&#10;    return new Date(dateString).toLocaleDateString(&quot;en-US&quot;, {&#10;      year: &quot;numeric&quot;,&#10;      month: &quot;short&quot;,&#10;      day: &quot;numeric&quot;,&#10;      hour: &quot;2-digit&quot;,&#10;      minute: &quot;2-digit&quot;,&#10;    });&#10;  };&#10;&#10;  const getStatusBadge = (status) =&gt; {&#10;    const statusConfig = {&#10;      pending: {&#10;        bg: &quot;bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200&quot;,&#10;        icon: &quot;fas fa-clock&quot;,&#10;      },&#10;      confirmed: {&#10;        bg: &quot;bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200&quot;,&#10;        icon: &quot;fas fa-check&quot;,&#10;      },&#10;      shipped: {&#10;        bg: &quot;bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200&quot;,&#10;        icon: &quot;fas fa-truck&quot;,&#10;      },&#10;      delivered: {&#10;        bg: &quot;bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200&quot;,&#10;        icon: &quot;fas fa-check-circle&quot;,&#10;      },&#10;      cancelled: {&#10;        bg: &quot;bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200&quot;,&#10;        icon: &quot;fas fa-times-circle&quot;,&#10;      },&#10;    };&#10;&#10;    const config = statusConfig[status?.toLowerCase()] || statusConfig.pending;&#10;&#10;    return (&#10;      &lt;span&#10;        className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${config.bg}`}&#10;      &gt;&#10;        &lt;i className={`${config.icon} mr-1`}&gt;&lt;/i&gt;&#10;        {status?.charAt(0).toUpperCase() + status?.slice(1) || &quot;Pending&quot;}&#10;      &lt;/span&gt;&#10;    );&#10;  };&#10;&#10;  const getOrderActions = (order) =&gt; {&#10;    const actions = [];&#10;&#10;    switch (order.status.toLowerCase()) {&#10;      case &quot;pending&quot;:&#10;        actions.push(&#10;          &lt;button&#10;            key=&quot;confirm&quot;&#10;            onClick={() =&gt; handleUpdateOrderStatus(order._id, &quot;confirmed&quot;)}&#10;            className=&quot;bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg text-sm font-medium transition&quot;&#10;          &gt;&#10;            &lt;i className=&quot;fas fa-check mr-1&quot;&gt;&lt;/i&gt;&#10;            Confirm Order&#10;          &lt;/button&gt;,&#10;        );&#10;        actions.push(&#10;          &lt;button&#10;            key=&quot;cancel&quot;&#10;            onClick={() =&gt; handleUpdateOrderStatus(order._id, &quot;cancelled&quot;)}&#10;            className=&quot;bg-red-600 hover:bg-red-700 text-white py-2 px-4 rounded-lg text-sm font-medium transition&quot;&#10;          &gt;&#10;            &lt;i className=&quot;fas fa-times mr-1&quot;&gt;&lt;/i&gt;&#10;            Cancel Order&#10;          &lt;/button&gt;,&#10;        );&#10;        break;&#10;      case &quot;confirmed&quot;:&#10;        actions.push(&#10;          &lt;button&#10;            key=&quot;ship&quot;&#10;            onClick={() =&gt; handleUpdateOrderStatus(order._id, &quot;shipped&quot;)}&#10;            className=&quot;bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg text-sm font-medium transition&quot;&#10;          &gt;&#10;            &lt;i className=&quot;fas fa-truck mr-1&quot;&gt;&lt;/i&gt;&#10;            Mark as Shipped&#10;          &lt;/button&gt;,&#10;        );&#10;        break;&#10;      case &quot;shipped&quot;:&#10;        actions.push(&#10;          &lt;button&#10;            key=&quot;deliver&quot;&#10;            onClick={() =&gt; handleUpdateOrderStatus(order._id, &quot;delivered&quot;)}&#10;            className=&quot;bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded-lg text-sm font-medium transition&quot;&#10;          &gt;&#10;            &lt;i className=&quot;fas fa-check-circle mr-1&quot;&gt;&lt;/i&gt;&#10;            Mark as Delivered&#10;          &lt;/button&gt;,&#10;        );&#10;        break;&#10;    }&#10;&#10;    return actions;&#10;  };&#10;&#10;  // Pagination&#10;  const indexOfLastOrder = currentPage * ordersPerPage;&#10;  const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;&#10;  const currentOrders = filteredOrders.slice(&#10;    indexOfFirstOrder,&#10;    indexOfLastOrder,&#10;  );&#10;  const totalPages = Math.ceil(filteredOrders.length / ordersPerPage);&#10;&#10;  const getOrderSummary = () =&gt; {&#10;    const summary = {&#10;      total: orders.length,&#10;      pending: orders.filter((o) =&gt; o.status === &quot;pending&quot;).length,&#10;      confirmed: orders.filter((o) =&gt; o.status === &quot;confirmed&quot;).length,&#10;      shipped: orders.filter((o) =&gt; o.status === &quot;shipped&quot;).length,&#10;      delivered: orders.filter((o) =&gt; o.status === &quot;delivered&quot;).length,&#10;      cancelled: orders.filter((o) =&gt; o.status === &quot;cancelled&quot;).length,&#10;    };&#10;    return summary;&#10;  };&#10;&#10;  if (status === &quot;loading&quot; || loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#10;          &lt;i className=&quot;fas fa-spinner fa-spin text-4xl text-green-600 mb-4&quot;&gt;&lt;/i&gt;&#10;          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;            Loading your orders...&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  const orderSummary = getOrderSummary();&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        {/* Breadcrumb */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4&quot;&gt;&#10;          &lt;nav className=&quot;flex&quot; aria-label=&quot;Breadcrumb&quot;&gt;&#10;            &lt;ol className=&quot;flex items-center space-x-2 text-sm&quot;&gt;&#10;              &lt;li&gt;&#10;                &lt;Link href=&quot;/&quot; className=&quot;text-gray-500 hover:text-green-600&quot;&gt;&#10;                  Home&#10;                &lt;/Link&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;Link&#10;                  href=&quot;/manage&quot;&#10;                  className=&quot;text-gray-500 hover:text-green-600&quot;&#10;                &gt;&#10;                  Manage&#10;                &lt;/Link&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;              &lt;/li&gt;&#10;              &lt;li className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                Order Management&#10;              &lt;/li&gt;&#10;            &lt;/ol&gt;&#10;          &lt;/nav&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Page Header */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8&quot;&gt;&#10;          &lt;div className=&quot;flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8&quot;&gt;&#10;            &lt;div&gt;&#10;              &lt;h1 className=&quot;text-3xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                Order Management&#10;              &lt;/h1&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400 mt-2&quot;&gt;&#10;                Manage and track all orders for your products&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;mt-4 sm:mt-0 flex space-x-3&quot;&gt;&#10;              &lt;button&#10;                onClick={handleRefresh}&#10;                disabled={refreshing}&#10;                className=&quot;inline-flex items-center px-4 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg font-medium transition&quot;&#10;              &gt;&#10;                &lt;i&#10;                  className={`fas fa-sync-alt mr-2 ${refreshing ? &quot;fa-spin&quot; : &quot;&quot;}`}&#10;                &gt;&lt;/i&gt;&#10;                Refresh&#10;              &lt;/button&gt;&#10;              &lt;Link&#10;                href=&quot;/manage&quot;&#10;                className=&quot;inline-flex items-center px-6 py-3 bg-green-600 hover:bg-green-700 text-white rounded-lg font-medium transition&quot;&#10;              &gt;&#10;                &lt;i className=&quot;fas fa-arrow-left mr-2&quot;&gt;&lt;/i&gt;&#10;                Back to Manage&#10;              &lt;/Link&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Order Summary Cards */}&#10;          &lt;div className=&quot;grid grid-cols-2 md:grid-cols-6 gap-4 mb-8&quot;&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-gray-100 dark:bg-gray-700 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-shopping-cart text-gray-600 dark:text-gray-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Total&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                    {orderSummary.total}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-yellow-100 dark:bg-yellow-900 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-clock text-yellow-600 dark:text-yellow-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Pending&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-yellow-600 dark:text-yellow-400&quot;&gt;&#10;                    {orderSummary.pending}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-blue-100 dark:bg-blue-900 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-check text-blue-600 dark:text-blue-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Confirmed&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                    {orderSummary.confirmed}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-purple-100 dark:bg-purple-900 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-truck text-purple-600 dark:text-purple-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Shipped&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-purple-600 dark:text-purple-400&quot;&gt;&#10;                    {orderSummary.shipped}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-green-100 dark:bg-green-900 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-check-circle text-green-600 dark:text-green-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Delivered&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                    {orderSummary.delivered}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;div className=&quot;p-2 bg-red-100 dark:bg-red-900 rounded-lg&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-times-circle text-red-600 dark:text-red-300&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;p className=&quot;text-sm font-medium text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    Cancelled&#10;                  &lt;/p&gt;&#10;                  &lt;p className=&quot;text-2xl font-bold text-red-600 dark:text-red-400&quot;&gt;&#10;                    {orderSummary.cancelled}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Filters and Search */}&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 mb-8&quot;&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-4&quot;&gt;&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;search&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Search Orders&#10;                &lt;/label&gt;&#10;                &lt;div className=&quot;relative&quot;&gt;&#10;                  &lt;input&#10;                    type=&quot;text&quot;&#10;                    id=&quot;search&quot;&#10;                    placeholder=&quot;Search by customer name, email, or order ID...&quot;&#10;                    value={searchTerm}&#10;                    onChange={handleSearchChange}&#10;                    className=&quot;w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                  /&gt;&#10;                  &lt;i className=&quot;fas fa-search absolute left-3 top-3 text-gray-400&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div&gt;&#10;                &lt;label&#10;                  htmlFor=&quot;status-filter&quot;&#10;                  className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&#10;                &gt;&#10;                  Filter by Status&#10;                &lt;/label&gt;&#10;                &lt;select&#10;                  id=&quot;status-filter&quot;&#10;                  value={statusFilter}&#10;                  onChange={handleStatusChange}&#10;                  className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                &gt;&#10;                  &lt;option value=&quot;All Orders&quot;&gt;All Orders&lt;/option&gt;&#10;                  &lt;option value=&quot;pending&quot;&gt;Pending&lt;/option&gt;&#10;                  &lt;option value=&quot;confirmed&quot;&gt;Confirmed&lt;/option&gt;&#10;                  &lt;option value=&quot;shipped&quot;&gt;Shipped&lt;/option&gt;&#10;                  &lt;option value=&quot;delivered&quot;&gt;Delivered&lt;/option&gt;&#10;                  &lt;option value=&quot;cancelled&quot;&gt;Cancelled&lt;/option&gt;&#10;                &lt;/select&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;flex items-end&quot;&gt;&#10;                &lt;button&#10;                  onClick={() =&gt; {&#10;                    setSearchTerm(&quot;&quot;);&#10;                    setStatusFilter(&quot;All Orders&quot;);&#10;                  }}&#10;                  className=&quot;w-full bg-gray-600 hover:bg-gray-700 text-white py-2 rounded-lg font-medium transition&quot;&#10;                &gt;&#10;                  Clear Filters&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Orders List */}&#10;          {currentOrders.length === 0 ? (&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-12 text-center&quot;&gt;&#10;              &lt;i className=&quot;fas fa-shopping-bag text-6xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#10;              &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                No orders found&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-6&quot;&gt;&#10;                {statusFilter === &quot;All Orders&quot;&#10;                  ? &quot;You haven't received any orders yet.&quot;&#10;                  : `No ${statusFilter.toLowerCase()} orders found.`}&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;          ) : (&#10;            &lt;div className=&quot;space-y-6&quot;&gt;&#10;              {currentOrders.map((order) =&gt; (&#10;                &lt;div&#10;                  key={order._id}&#10;                  className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden&quot;&#10;                &gt;&#10;                  &lt;div className=&quot;p-6&quot;&gt;&#10;                    {/* Order Header */}&#10;                    &lt;div className=&quot;flex flex-col lg:flex-row lg:items-center justify-between mb-6&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center space-x-4 mb-4 lg:mb-0&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                            Order #&#10;                            {order._id?.slice(-8)?.toUpperCase() || &quot;N/A&quot;}&#10;                          &lt;/h3&gt;&#10;                          &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Placed on {formatDate(order.createdAt)}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                        {getStatusBadge(order.status)}&#10;                        &lt;span className=&quot;text-lg font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          {formatPrice(&#10;                            order.farmerSubtotal || order.total || 0,&#10;                          )}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Customer Information */}&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6 mb-6&quot;&gt;&#10;                      &lt;div className=&quot;bg-gray-50 dark:bg-gray-700 rounded-lg p-4&quot;&gt;&#10;                        &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                          Customer Information&#10;                        &lt;/h4&gt;&#10;                        &lt;div className=&quot;space-y-2 text-sm&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            &lt;span className=&quot;font-medium&quot;&gt;Name:&lt;/span&gt;{&quot; &quot;}&#10;                            {order.customerName || order.userName || &quot;Customer&quot;}&#10;                          &lt;/p&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            &lt;span className=&quot;font-medium&quot;&gt;Email:&lt;/span&gt;{&quot; &quot;}&#10;                            {order.customerEmail ||&#10;                              order.userEmail ||&#10;                              &quot;Not available&quot;}&#10;                          &lt;/p&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            &lt;span className=&quot;font-medium&quot;&gt;Phone:&lt;/span&gt;{&quot; &quot;}&#10;                            {order.customerPhone ||&#10;                              order.userPhone ||&#10;                              &quot;Not available&quot;}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;bg-gray-50 dark:bg-gray-700 rounded-lg p-4&quot;&gt;&#10;                        &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                          Delivery Information&#10;                        &lt;/h4&gt;&#10;                        &lt;div className=&quot;space-y-2 text-sm&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            &lt;span className=&quot;font-medium&quot;&gt;Address:&lt;/span&gt;{&quot; &quot;}&#10;                            {typeof order.deliveryAddress === &quot;object&quot; &amp;&amp;&#10;                            order.deliveryAddress&#10;                              ? `${order.deliveryAddress.address || &quot;&quot;}, ${order.deliveryAddress.city || &quot;&quot;} ${order.deliveryAddress.postalCode || &quot;&quot;}`&#10;                                  .replace(/^,\s*/, &quot;&quot;)&#10;                                  .replace(/,\s*$/, &quot;&quot;) || &quot;Not provided&quot;&#10;                              : order.deliveryAddress || &quot;Not provided&quot;}&#10;                          &lt;/p&gt;&#10;                          {typeof order.deliveryAddress === &quot;object&quot; &amp;&amp;&#10;                            order.deliveryAddress?.name &amp;&amp; (&#10;                              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                &lt;span className=&quot;font-medium&quot;&gt;Recipient:&lt;/span&gt;{&quot; &quot;}&#10;                                {order.deliveryAddress.name}&#10;                              &lt;/p&gt;&#10;                            )}&#10;                          {typeof order.deliveryAddress === &quot;object&quot; &amp;&amp;&#10;                            order.deliveryAddress?.phone &amp;&amp; (&#10;                              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                &lt;span className=&quot;font-medium&quot;&gt;Contact:&lt;/span&gt;{&quot; &quot;}&#10;                                {order.deliveryAddress.phone}&#10;                              &lt;/p&gt;&#10;                            )}&#10;                          {typeof order.deliveryAddress === &quot;object&quot; &amp;&amp;&#10;                            order.deliveryAddress?.instructions &amp;&amp; (&#10;                              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                &lt;span className=&quot;font-medium&quot;&gt;&#10;                                  Instructions:&#10;                                &lt;/span&gt;{&quot; &quot;}&#10;                                {order.deliveryAddress.instructions}&#10;                              &lt;/p&gt;&#10;                            )}&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            &lt;span className=&quot;font-medium&quot;&gt;Payment Method:&lt;/span&gt;{&quot; &quot;}&#10;                            {order.paymentMethod || &quot;Cash on Delivery&quot;}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Order Items */}&#10;                    &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6 mb-6&quot;&gt;&#10;                      &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                        Order Items ({order.items?.length || 0})&#10;                      &lt;/h4&gt;&#10;                      &lt;div className=&quot;space-y-3&quot;&gt;&#10;                        {order.items?.map((item, index) =&gt; (&#10;                          &lt;div&#10;                            key={index}&#10;                            className=&quot;flex items-center justify-between py-3 px-4 bg-gray-50 dark:bg-gray-700 rounded-lg&quot;&#10;                          &gt;&#10;                            &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                              &lt;img&#10;                                src={&#10;                                  item.image ||&#10;                                  &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=80&amp;h=80&amp;fit=crop&quot;&#10;                                }&#10;                                alt={item.name || item.productName}&#10;                                className=&quot;w-16 h-16 rounded-lg object-cover&quot;&#10;                              /&gt;&#10;                              &lt;div&gt;&#10;                                &lt;h5 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                                  {item.name || item.productName}&#10;                                &lt;/h5&gt;&#10;                                &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                  Quantity: {item.quantity} {item.unit || &quot;kg&quot;}&#10;                                &lt;/p&gt;&#10;                                &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                  Unit Price: {formatPrice(item.price)}&#10;                                &lt;/p&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;text-right&quot;&gt;&#10;                              &lt;p className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                                {formatPrice(item.price * item.quantity)}&#10;                              &lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        ))}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Action Buttons */}&#10;                    &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-4&quot;&gt;&#10;                      &lt;div className=&quot;flex flex-wrap gap-3&quot;&gt;&#10;                        {getOrderActions(order)}&#10;                        &lt;Link&#10;                          href={`/farmer-orders/${order._id}`}&#10;                          className=&quot;bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded-lg text-sm font-medium transition&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-eye mr-1&quot;&gt;&lt;/i&gt;&#10;                          View Details&#10;                        &lt;/Link&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          )}&#10;&#10;          {/* Pagination */}&#10;          {totalPages &gt; 1 &amp;&amp; (&#10;            &lt;div className=&quot;flex justify-center mt-12&quot;&gt;&#10;              &lt;nav aria-label=&quot;Pagination&quot;&gt;&#10;                &lt;ul className=&quot;inline-flex items-center -space-x-px text-gray-600 dark:text-gray-300&quot;&gt;&#10;                  &lt;li&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt;&#10;                        setCurrentPage((prev) =&gt; Math.max(prev - 1, 1))&#10;                      }&#10;                      disabled={currentPage === 1}&#10;                      className=&quot;block px-3 py-2 ml-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white disabled:opacity-50&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-chevron-left&quot;&gt;&lt;/i&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/li&gt;&#10;                  {[...Array(totalPages)].map((_, index) =&gt; (&#10;                    &lt;li key={index}&gt;&#10;                      &lt;button&#10;                        onClick={() =&gt; setCurrentPage(index + 1)}&#10;                        className={`px-3 py-2 leading-tight border ${&#10;                          currentPage === index + 1&#10;                            ? &quot;text-white bg-green-600 border-green-600 hover:bg-green-700&quot;&#10;                            : &quot;text-gray-500 bg-white border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {index + 1}&#10;                      &lt;/button&gt;&#10;                    &lt;/li&gt;&#10;                  ))}&#10;                  &lt;li&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt;&#10;                        setCurrentPage((prev) =&gt; Math.min(prev + 1, totalPages))&#10;                      }&#10;                      disabled={currentPage === totalPages}&#10;                      className=&quot;block px-3 py-2 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white disabled:opacity-50&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/li&gt;&#10;                &lt;/ul&gt;&#10;              &lt;/nav&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/layout-new.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/layout-new.js" />
              <option name="updatedContent" value="import localFont from &quot;next/font/local&quot;;&#10;          rel=&quot;stylesheet&quot;&#10;        /&gt;&#10;      &lt;/head&gt;&#10;      &lt;body&#10;        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300`}&#10;      &gt;&#10;        &lt;Providers&gt;&#10;          {children}&#10;          {modal}&#10;        &lt;/Providers&gt;&#10;      &lt;/body&gt;&#10;    &lt;/html&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/products-complete.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/products-complete.json" />
              <option name="updatedContent" value="{&#10;  &quot;data&quot;: [&#10;    {&#10;      &quot;_id&quot;: &quot;688725de224d2f673382eac1&quot;,&#10;      &quot;name&quot;: &quot;Golden Wheat&quot;,&#10;      &quot;category&quot;: &quot;Grains&quot;,&#10;      &quot;price&quot;: 117,&#10;      &quot;unit&quot;: &quot;bundle&quot;,&#10;      &quot;description&quot;: &quot;Golden Wheat is premium-grade, sun-ripened whole grain harvested from the fertile fields of Rajshahi. With a naturally rich golden hue and high protein content, it's ideal for baking, grinding into flour, or preparing nutritious traditional meals. Grown organically by Abdul Rahman at Farm 35, this wheat is free from synthetic chemicals and processed with care to retain its wholesome quality. Whether you're making rotis, bread, or porridges, it ensures both taste and nourishment.&quot;,&#10;      &quot;farmer&quot;: {&#10;        &quot;name&quot;: &quot;Abdul Rahman&quot;,&#10;        &quot;farmName&quot;: &quot;Farm 35&quot;,&#10;        &quot;location&quot;: &quot;Rajshahi, Bangladesh&quot;&#10;      },&#10;      &quot;images&quot;: [&#10;        &quot;https://images.unsplash.com/photo-1689118398153-d24137d57e12?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8N3x8Z29sZGVuJTIwd2hlYXR8ZW58MHx8MHx8fDA%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1689118402130-ad5a13556b75?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;,&#10;        &quot;https://images.unsplash.com/photo-1553673324-aad5dc09f90f?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MjJ8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;,&#10;        &quot;https://plus.unsplash.com/premium_photo-1730191648801-51dda0c95368?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDF8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;,&#10;        &quot;https://images.unsplash.com/photo-1588274061514-fe2fe8e9d645?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Njd8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;&#10;      ],&#10;      &quot;stock&quot;: 182,&#10;      &quot;features&quot;: [&#10;        &quot;100% organically grown without chemical fertilizers&quot;,&#10;        &quot;Sun-dried and hand-harvested for maximum nutrient retention&quot;,&#10;        &quot;Naturally high in protein and dietary fiber&quot;,&#10;        &quot;Ideal for grinding into whole wheat flour (atta)&quot;,&#10;        &quot;Supports local farmers and sustainable agriculture&quot;,&#10;        &quot;Packed fresh and delivered with zero preservatives&quot;,&#10;        &quot;Perfect for traditional recipes like roti, bread, and porridge&quot;&#10;      ],&#10;      &quot;rating&quot;: 5,&#10;      &quot;reviewCount&quot;: 49,&#10;      &quot;isOrganic&quot;: true,&#10;      &quot;purchaseCount&quot;: 306,&#10;      &quot;storageInstructions&quot;: &quot;Store in a cool, dry place in an airtight container to preserve freshness. Avoid exposure to moisture and direct sunlight. Shelf life is up to 12 months if stored properly.&quot;,&#10;      &quot;nutritionalInformation&quot;: {&#10;        &quot;servingSize&quot;: &quot;100g&quot;,&#10;        &quot;calories&quot;: 340,&#10;        &quot;protein&quot;: &quot;13g&quot;,&#10;        &quot;carbohydrates&quot;: &quot;72g&quot;,&#10;        &quot;fiber&quot;: &quot;10g&quot;,&#10;        &quot;fat&quot;: &quot;2.5g&quot;,&#10;        &quot;iron&quot;: &quot;3.6mg&quot;,&#10;        &quot;vitaminB1&quot;: &quot;0.5mg&quot;,&#10;        &quot;gluten&quot;: &quot;Contains gluten&quot;&#10;      },&#10;      &quot;createdAt&quot;: &quot;2025-07-28T02:30:53.328Z&quot;,&#10;      &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;      &quot;reviews&quot;: [&#10;        {&#10;          &quot;reviewer&quot;: &quot;Ayesha Siddique&quot;,&#10;          &quot;date&quot;: &quot;2025-07-20&quot;,&#10;          &quot;rating&quot;: 5,&#10;          &quot;comment&quot;: &quot;Excellent quality wheat! The flour made from this wheat is fresh and perfect for traditional breads.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Tanvir Hasan&quot;,&#10;          &quot;date&quot;: &quot;2025-07-22&quot;,&#10;          &quot;rating&quot;: 5,&#10;          &quot;comment&quot;: &quot;I love that it's organic and locally sourced. The grain is full of flavor and cooks well.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Sabina Rahman&quot;,&#10;          &quot;date&quot;: &quot;2025-07-25&quot;,&#10;          &quot;rating&quot;: 4,&#10;          &quot;comment&quot;: &quot;Very good wheat. The texture is great and it stays fresh longer than other brands.&quot;&#10;        }&#10;      ]&#10;    },&#10;    {&#10;      &quot;_id&quot;: &quot;688725de224d2f673382eab9&quot;,&#10;      &quot;name&quot;: &quot;Green Cauliflower&quot;,&#10;      &quot;category&quot;: &quot;Vegetables&quot;,&#10;      &quot;price&quot;: 108,&#10;      &quot;unit&quot;: &quot;kg&quot;,&#10;      &quot;description&quot;: &quot;Green Cauliflower is a vibrant, nutrient-dense vegetable known for its unique color and slightly sweeter, nuttier taste compared to white cauliflower. Grown locally by farmer Fatema Begum at Farm 27 in Dhaka, this hybrid variety is not only rich in antioxidants but also versatile in cooking. Whether steamed, roasted, stir-fried, or blended into soups, it delivers both flavor and health benefits. A fresh pick straight from local soil to your kitchen, this cauliflower is a colorful addition to healthy diets and plant-based recipes.&quot;,&#10;      &quot;farmer&quot;: {&#10;        &quot;name&quot;: &quot;Fatema Begum&quot;,&#10;        &quot;farmName&quot;: &quot;Farm 27&quot;,&#10;        &quot;location&quot;: &quot;Dhaka, Bangladesh&quot;&#10;      },&#10;      &quot;images&quot;: [&#10;        &quot;https://plus.unsplash.com/premium_photo-1675365835662-3980c9fdbbc3?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8R3JlZW4lMjBDYXVsaWZsb3dlcnxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1645105664407-96f439f752eb?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8N3x8R3JlZW4lMjBDYXVsaWZsb3dlcnxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://plus.unsplash.com/premium_photo-1675365836465-ebdbf821cda0?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NXx8R3JlZW4lMjBDYXVsaWZsb3dlcnxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://plus.unsplash.com/premium_photo-1702313776847-b90ae4bd048a?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTN8fEdyZWVuJTIwQ2F1bGlmbG93ZXJ8ZW58MHx8MHx8fDA%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1683723616147-44545defdc9e?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTh8fEdyZWVuJTIwQ2F1bGlmbG93ZXJ8ZW58MHx8MHx8fDA%3D&quot;&#10;      ],&#10;      &quot;stock&quot;: 86,&#10;      &quot;features&quot;: [&#10;        &quot;Naturally grown in local soil with minimal pesticide use&quot;,&#10;        &quot;Rich in vitamins C, K, and folate for immune and bone health&quot;,&#10;        &quot;Bright green florets add visual appeal to meals&quot;,&#10;        &quot;Perfect for keto, vegan, and low-carb diets&quot;,&#10;        &quot;Slightly nutty flavor ideal for both raw and cooked dishes&quot;,&#10;        &quot;Hand-harvested for maximum freshness and quality&quot;,&#10;        &quot;Packed and delivered fresh within 24 hours of harvesting&quot;&#10;      ],&#10;      &quot;rating&quot;: 4,&#10;      &quot;reviewCount&quot;: 17,&#10;      &quot;isOrganic&quot;: false,&#10;      &quot;purchaseCount&quot;: 208,&#10;      &quot;storageInstructions&quot;: &quot;Keep refrigerated at 0–4°C in a loosely closed bag or container. Do not wash until ready to use. Best consumed within 4–5 days of purchase.&quot;,&#10;      &quot;nutritionalInformation&quot;: {&#10;        &quot;servingSize&quot;: &quot;100g&quot;,&#10;        &quot;calories&quot;: 25,&#10;        &quot;protein&quot;: &quot;2g&quot;,&#10;        &quot;carbohydrates&quot;: &quot;5g&quot;,&#10;        &quot;fiber&quot;: &quot;2g&quot;,&#10;        &quot;fat&quot;: &quot;0.3g&quot;,&#10;        &quot;vitaminC&quot;: &quot;80mg (89% DV)&quot;,&#10;        &quot;vitaminK&quot;: &quot;15.5µg (13% DV)&quot;,&#10;        &quot;folate&quot;: &quot;57µg (14% DV)&quot;,&#10;        &quot;calcium&quot;: &quot;22mg&quot;,&#10;        &quot;potassium&quot;: &quot;299mg&quot;&#10;      },&#10;      &quot;createdAt&quot;: &quot;2025-07-27T19:33:10.918Z&quot;,&#10;      &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;      &quot;reviews&quot;: [&#10;        {&#10;          &quot;reviewer&quot;: &quot;Nusrat Jahan&quot;,&#10;          &quot;date&quot;: &quot;2025-07-28&quot;,&#10;          &quot;rating&quot;: 4,&#10;          &quot;comment&quot;: &quot;Loved the unique taste and vibrant color. Great for salads and roasting!&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Imran Khan&quot;,&#10;          &quot;date&quot;: &quot;2025-07-26&quot;,&#10;          &quot;rating&quot;: 4,&#10;          &quot;comment&quot;: &quot;Fresh and high quality, but a bit pricier than white cauliflower.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Farhana Ahmed&quot;,&#10;          &quot;date&quot;: &quot;2025-07-24&quot;,&#10;          &quot;rating&quot;: 3,&#10;          &quot;comment&quot;: &quot;Good quality, but I prefer the taste of regular cauliflower more.&quot;&#10;        }&#10;      ]&#10;    },&#10;    {&#10;      &quot;_id&quot;: &quot;688725de224d2f673382eacb&quot;,&#10;      &quot;name&quot;: &quot;Fresh Broccoli&quot;,&#10;      &quot;category&quot;: &quot;Vegetables&quot;,&#10;      &quot;price&quot;: 85,&#10;      &quot;unit&quot;: &quot;bundle&quot;,&#10;      &quot;description&quot;: &quot;Fresh Broccoli is a nutrient-rich green vegetable grown organically in the fertile lands of Rajshahi by Mohammad Ali at Farm 45. Known for its vibrant green florets and crisp stalks, this broccoli is ideal for steaming, roasting, stir-frying, or adding to salads. Packed with fiber, vitamins, and antioxidants, it's a staple in healthy diets and a go-to ingredient for fitness enthusiasts and home cooks alike. With no chemical pesticides or additives, every bundle brings freshness and wellness straight to your kitchen.&quot;,&#10;      &quot;farmer&quot;: {&#10;        &quot;name&quot;: &quot;Mohammad Ali&quot;,&#10;        &quot;farmName&quot;: &quot;Farm 45&quot;,&#10;        &quot;location&quot;: &quot;Rajshahi, Bangladesh&quot;&#10;      },&#10;      &quot;images&quot;: [&#10;        &quot;https://images.unsplash.com/photo-1594885270039-f8871b502f7f?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8RnJlc2glMjBCcm9jY29saXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1580391536506-a2864b8dae29?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fEZyZXNoJTIwQnJvY2NvbGl8ZW58MHx8MHx8fDA%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1622484964723-d1456419fcb0?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MjZ8fEZyZXNoJTIwQnJvY2NvbGl8ZW58MHx8MHx8fDA%3D&quot;,&#10;        &quot;https://plus.unsplash.com/premium_photo-1724849301852-e32aa67fd1c7?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDV8fEZyZXNoJTIwQnJvY2NvbGl8ZW58MHx8MHx8fDA%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1748017079162-01d97c0789ea?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NzZ8fEZyZXNoJTIwQnJvY2NvbGl8ZW58MHx8MHx8fDA%3D&quot;&#10;      ],&#10;      &quot;stock&quot;: 83,&#10;      &quot;features&quot;: [&#10;        &quot;Organically grown without synthetic pesticides or chemicals&quot;,&#10;        &quot;Packed with vitamin C, K, fiber, and antioxidants&quot;,&#10;        &quot;Ideal for steaming, roasting, stir-frying, or salads&quot;,&#10;        &quot;Crisp stalks and tightly packed florets ensure freshness&quot;,&#10;        &quot;Harvested and packed within 24 hours of cutting&quot;,&#10;        &quot;Supports heart health, immune function, and digestion&quot;,&#10;        &quot;Suitable for vegan, keto, and low-calorie diets&quot;&#10;      ],&#10;      &quot;rating&quot;: 4.7,&#10;      &quot;reviewCount&quot;: 86,&#10;      &quot;isOrganic&quot;: true,&#10;      &quot;purchaseCount&quot;: 303,&#10;      &quot;storageInstructions&quot;: &quot;Store unwashed in the refrigerator in a breathable bag or loosely wrapped in a paper towel. Best consumed within 4–6 days. Wash thoroughly before cooking.&quot;,&#10;      &quot;nutritionalInformation&quot;: {&#10;        &quot;servingSize&quot;: &quot;100g&quot;,&#10;        &quot;calories&quot;: 34,&#10;        &quot;protein&quot;: &quot;2.8g&quot;,&#10;        &quot;carbohydrates&quot;: &quot;6.6g&quot;,&#10;        &quot;fiber&quot;: &quot;2.6g&quot;,&#10;        &quot;fat&quot;: &quot;0.4g&quot;,&#10;        &quot;vitaminC&quot;: &quot;89mg (99% DV)&quot;,&#10;        &quot;vitaminK&quot;: &quot;101.6µg (85% DV)&quot;,&#10;        &quot;folate&quot;: &quot;63µg (16% DV)&quot;,&#10;        &quot;calcium&quot;: &quot;47mg&quot;,&#10;        &quot;iron&quot;: &quot;0.7mg&quot;&#10;      },&#10;      &quot;createdAt&quot;: &quot;2025-07-27T15:04:33.198Z&quot;,&#10;      &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;      &quot;reviews&quot;: [&#10;        {&#10;          &quot;reviewer&quot;: &quot;Sadia Rahman&quot;,&#10;          &quot;date&quot;: &quot;2025-07-27&quot;,&#10;          &quot;rating&quot;: 5,&#10;          &quot;comment&quot;: &quot;Extremely fresh and crunchy! Perfect for my salads and stir-fry dishes.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Tariq Ahmed&quot;,&#10;          &quot;date&quot;: &quot;2025-07-26&quot;,&#10;          &quot;rating&quot;: 4.5,&#10;          &quot;comment&quot;: &quot;Good quality broccoli, organic and flavorful. Would buy again.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Laila Chowdhury&quot;,&#10;          &quot;date&quot;: &quot;2025-07-25&quot;,&#10;          &quot;rating&quot;: 4,&#10;          &quot;comment&quot;: &quot;Nice texture and taste, but slightly smaller bundles than expected.&quot;&#10;        }&#10;      ]&#10;    },&#10;    {&#10;      &quot;_id&quot;: &quot;688725de224d2f673382eac3&quot;,&#10;      &quot;name&quot;: &quot;Wildflower Honey&quot;,&#10;      &quot;category&quot;: &quot;Honey&quot;,&#10;      &quot;price&quot;: 116,&#10;      &quot;unit&quot;: &quot;kg&quot;,&#10;      &quot;description&quot;: &quot;Wildflower Honey is a rich, aromatic natural sweetener harvested from the nectar of a diverse blend of wildflowers. Sourced directly from Dhaka's local apiaries, this golden honey is collected with care by Shahnaz Parvin at Farm 37. Its deep flavor, floral notes, and smooth texture make it perfect for drizzling over toast, mixing into tea, or using in healthy baking recipes. Raw and unfiltered, this honey retains its natural enzymes, antioxidants, and antibacterial properties, making it not just a treat but a wellness booster.&quot;,&#10;      &quot;farmer&quot;: {&#10;        &quot;name&quot;: &quot;Shahnaz Parvin&quot;,&#10;        &quot;farmName&quot;: &quot;Farm 37&quot;,&#10;        &quot;location&quot;: &quot;Dhaka, Bangladesh&quot;&#10;      },&#10;      &quot;images&quot;: [&#10;        &quot;https://images.unsplash.com/photo-1551492020-7630c76eb6c6?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8V2lsZGZsb3dlciUyMEhvbmV5fGVufDB8fDB8fHww&quot;,&#10;        &quot;https://images.unsplash.com/photo-1542216172-de344e12b7a1?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8V2lsZGZsb3dlciUyMEhvbmV5fGVufDB8fDB8fHww&quot;,&#10;        &quot;https://images.unsplash.com/photo-1598404743808-57e03035136b?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fFdpbGRmbG93ZXIlMjBIb25leXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1630138235049-4997a4e29c76?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MjB8fFdpbGRmbG93ZXIlMjBIb25leXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://plus.unsplash.com/premium_photo-1723795242530-3e061c86c5a3?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mjl8fFdpbGRmbG93ZXIlMjBIb25leXxlbnwwfHwwfHx8MA%3D%3D&quot;&#10;      ],&#10;      &quot;stock&quot;: 205,&#10;      &quot;features&quot;: [&#10;        &quot;Harvested from diverse seasonal wildflowers&quot;,&#10;        &quot;Raw, unpasteurized, and unfiltered to retain nutrients&quot;,&#10;        &quot;Rich in antioxidants and natural antibacterial properties&quot;,&#10;        &quot;Smooth texture and naturally sweet floral flavor&quot;,&#10;        &quot;No added sugar, colors, or preservatives&quot;,&#10;        &quot;Perfect for tea, toast, yogurt, desserts, and baking&quot;,&#10;        &quot;Supports local beekeeping and eco-friendly farming&quot;&#10;      ],&#10;      &quot;rating&quot;: 4.9,&#10;      &quot;reviewCount&quot;: 124,&#10;      &quot;isOrganic&quot;: false,&#10;      &quot;purchaseCount&quot;: 189,&#10;      &quot;storageInstructions&quot;: &quot;Store in a cool, dry place away from direct sunlight. Do not refrigerate. Crystallization is natural—place the jar in warm water to liquefy.&quot;,&#10;      &quot;nutritionalInformation&quot;: {&#10;        &quot;servingSize&quot;: &quot;1 tbsp (21g)&quot;,&#10;        &quot;calories&quot;: 64,&#10;        &quot;protein&quot;: &quot;0g&quot;,&#10;        &quot;carbohydrates&quot;: &quot;17g&quot;,&#10;        &quot;sugars&quot;: &quot;17g (natural)&quot;,&#10;        &quot;fat&quot;: &quot;0g&quot;,&#10;        &quot;fiber&quot;: &quot;0g&quot;,&#10;        &quot;iron&quot;: &quot;0.1mg&quot;,&#10;        &quot;potassium&quot;: &quot;11mg&quot;&#10;      },&#10;      &quot;createdAt&quot;: &quot;2025-07-27T09:12:26.719Z&quot;,&#10;      &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;      &quot;reviews&quot;: [&#10;        {&#10;          &quot;reviewer&quot;: &quot;Ayesha Khan&quot;,&#10;          &quot;date&quot;: &quot;2025-07-26&quot;,&#10;          &quot;rating&quot;: 5,&#10;          &quot;comment&quot;: &quot;Absolutely love the rich floral taste and smooth texture. Perfect for my morning tea.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Imran Hossain&quot;,&#10;          &quot;date&quot;: &quot;2025-07-25&quot;,&#10;          &quot;rating&quot;: 4.8,&#10;          &quot;comment&quot;: &quot;Great quality honey, very natural and pure. No added sweetness, just perfect.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Nabila Faruq&quot;,&#10;          &quot;date&quot;: &quot;2025-07-24&quot;,&#10;          &quot;rating&quot;: 4.7,&#10;          &quot;comment&quot;: &quot;Good honey with lovely aroma. Crystallized a bit but that's natural and easy to fix.&quot;&#10;        }&#10;      ]&#10;    },&#10;    {&#10;      &quot;_id&quot;: &quot;688725de224d2f673382eaa1&quot;,&#10;      &quot;name&quot;: &quot;Red Onions&quot;,&#10;      &quot;category&quot;: &quot;Vegetables&quot;,&#10;      &quot;price&quot;: 25,&#10;      &quot;unit&quot;: &quot;kg&quot;,&#10;      &quot;description&quot;: &quot;These vibrant, fresh Red Onions are harvested from fertile lands in Jessore by local grower Karim Uddin at Sunrise Farm. Known for their bold flavor, crispy texture, and deep purplish-red color, these onions are a staple in Bengali cooking. Perfect for curries, salads, biryanis, and chutneys, red onions bring sharp taste and color to any dish. They are hand-picked, naturally grown, and delivered fresh to preserve their pungency and shelf life. A must-have in every kitchen.&quot;,&#10;      &quot;farmer&quot;: {&#10;        &quot;name&quot;: &quot;Karim Uddin&quot;,&#10;        &quot;farmName&quot;: &quot;Sunrise Farm&quot;,&#10;        &quot;location&quot;: &quot;Jessore, Bangladesh&quot;&#10;      },&#10;      &quot;images&quot;: [&#10;        &quot;https://images.unsplash.com/photo-1668295037469-8b0e8d11cd2a?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8UmVkJTIwT25pb25zfGVufDB8fDB8fHww&quot;,&#10;        &quot;https://plus.unsplash.com/premium_photo-1723708958105-09e29205e551?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTN8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1534383346555-6cff1eaca960?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTh8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1588613000160-2b766dd44779?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzJ8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1588613000151-4d3c77943c98?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDJ8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;&#10;      ],&#10;      &quot;stock&quot;: 200,&#10;      &quot;features&quot;: [&#10;        &quot;Locally grown with care by smallholder farmers&quot;,&#10;        &quot;Bold, pungent flavor ideal for savory dishes&quot;,&#10;        &quot;Crisp texture and vibrant red-purple layers&quot;,&#10;        &quot;Freshly harvested and hand-selected&quot;,&#10;        &quot;Essential in Bengali, Indian, and Middle Eastern cuisine&quot;,&#10;        &quot;Chemical-free and naturally matured&quot;,&#10;        &quot;Long shelf life when stored properly&quot;&#10;      ],&#10;      &quot;rating&quot;: 4.4,&#10;      &quot;reviewCount&quot;: 89,&#10;      &quot;isOrganic&quot;: false,&#10;      &quot;purchaseCount&quot;: 203,&#10;      &quot;storageInstructions&quot;: &quot;Store in a cool, dry, well-ventilated place. Avoid refrigeration to prevent softening. Do not store in plastic bags.&quot;,&#10;      &quot;nutritionalInformation&quot;: {&#10;        &quot;servingSize&quot;: &quot;100g&quot;,&#10;        &quot;calories&quot;: 40,&#10;        &quot;protein&quot;: &quot;1.1g&quot;,&#10;        &quot;carbohydrates&quot;: &quot;9.3g&quot;,&#10;        &quot;sugars&quot;: &quot;4.2g&quot;,&#10;        &quot;fat&quot;: &quot;0.1g&quot;,&#10;        &quot;fiber&quot;: &quot;1.7g&quot;,&#10;        &quot;vitaminC&quot;: &quot;7.4mg&quot;,&#10;        &quot;potassium&quot;: &quot;146mg&quot;&#10;      },&#10;      &quot;createdAt&quot;: &quot;2025-07-27T08:14:15.707Z&quot;,&#10;      &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;      &quot;reviews&quot;: [&#10;        {&#10;          &quot;reviewer&quot;: &quot;Sadia Rahman&quot;,&#10;          &quot;date&quot;: &quot;2025-07-20&quot;,&#10;          &quot;rating&quot;: 4.5,&#10;          &quot;comment&quot;: &quot;Very fresh and flavorful onions. Perfect for my daily cooking needs.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Jahid Islam&quot;,&#10;          &quot;date&quot;: &quot;2025-07-22&quot;,&#10;          &quot;rating&quot;: 4.3,&#10;          &quot;comment&quot;: &quot;Good quality onions with nice crispness. Lasted well without softening.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Moushumi Akter&quot;,&#10;          &quot;date&quot;: &quot;2025-07-24&quot;,&#10;          &quot;rating&quot;: 4.4,&#10;          &quot;comment&quot;: &quot;Loved the deep red color and strong flavor. Great for salads and biryanis.&quot;&#10;        }&#10;      ]&#10;    },&#10;    {&#10;      &quot;_id&quot;: &quot;688725de224d2f673382eab5&quot;,&#10;      &quot;name&quot;: &quot;Farm Fresh Eggs&quot;,&#10;      &quot;category&quot;: &quot;Dairy&quot;,&#10;      &quot;price&quot;: 120,&#10;      &quot;unit&quot;: &quot;dozen&quot;,&#10;      &quot;description&quot;: &quot;Our Farm Fresh Eggs come from healthy, free-range hens raised on open pastures at Free Range Poultry in Kishoreganj. These organic, protein-rich eggs are laid by hens that roam freely, enjoying natural feed and clean environments. Each egg boasts a rich golden yolk, firm white, and superior flavor—perfect for frying, boiling, baking, or scrambling. Rich in nutrients and free from antibiotics or hormones, these eggs offer natural taste and nutrition with every bite.&quot;,&#10;      &quot;farmer&quot;: {&#10;        &quot;name&quot;: &quot;Rahima Khatun&quot;,&#10;        &quot;farmName&quot;: &quot;Free Range Poultry&quot;,&#10;        &quot;location&quot;: &quot;Kishoreganj, Bangladesh&quot;&#10;      },&#10;      &quot;images&quot;: [&#10;        &quot;https://plus.unsplash.com/premium_photo-1708715380817-31e20c61b18d?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8RmFybSUyMEZyZXNoJTIwRWdnc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1552418322-3855ef830d11?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1586802990181-a5771596eaea?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzR8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1576522488962-332e43c2ca12?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDZ8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;,&#10;        &quot;https://plus.unsplash.com/premium_photo-1661630529381-68dccadb0b50?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDl8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;&#10;      ],&#10;      &quot;stock&quot;: 200,&#10;      &quot;features&quot;: [&#10;        &quot;Free-range raised hens with natural diets&quot;,&#10;        &quot;No hormones or antibiotics&quot;,&#10;        &quot;Golden yolks with superior taste&quot;,&#10;        &quot;High in protein and essential vitamins&quot;,&#10;        &quot;Perfect for all types of cooking and baking&quot;,&#10;        &quot;Collected fresh daily and hand-packed&quot;,&#10;        &quot;Ethically farmed and 100% organic certified&quot;&#10;      ],&#10;      &quot;rating&quot;: 4.9,&#10;      &quot;reviewCount&quot;: 189,&#10;      &quot;isOrganic&quot;: true,&#10;      &quot;purchaseCount&quot;: 267,&#10;      &quot;storageInstructions&quot;: &quot;Store eggs in the refrigerator at 4°C or below. Keep in original carton to retain freshness. Consume within 3 weeks of purchase for best taste and safety.&quot;,&#10;      &quot;nutritionalInformation&quot;: {&#10;        &quot;servingSize&quot;: &quot;1 egg (50g)&quot;,&#10;        &quot;calories&quot;: 70,&#10;        &quot;protein&quot;: &quot;6g&quot;,&#10;        &quot;fat&quot;: &quot;5g&quot;,&#10;        &quot;saturatedFat&quot;: &quot;1.5g&quot;,&#10;        &quot;cholesterol&quot;: &quot;185mg&quot;,&#10;        &quot;carbohydrates&quot;: &quot;0.6g&quot;,&#10;        &quot;vitaminD&quot;: &quot;41 IU&quot;,&#10;        &quot;vitaminB12&quot;: &quot;0.6 mcg&quot;,&#10;        &quot;selenium&quot;: &quot;15.4 mcg&quot;&#10;      },&#10;      &quot;createdAt&quot;: &quot;2025-07-27T00:33:19.370Z&quot;,&#10;      &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;      &quot;reviews&quot;: [&#10;        {&#10;          &quot;reviewer&quot;: &quot;Tanvir Ahmed&quot;,&#10;          &quot;date&quot;: &quot;2025-07-22&quot;,&#10;          &quot;rating&quot;: 5,&#10;          &quot;comment&quot;: &quot;Best eggs I've had in a long time. Fresh, tasty, and perfect for all my cooking needs.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Nusrat Jahan&quot;,&#10;          &quot;date&quot;: &quot;2025-07-23&quot;,&#10;          &quot;rating&quot;: 4.8,&#10;          &quot;comment&quot;: &quot;Love that these are free-range and organic. The yolks are bright and flavorful.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Md. Faisal&quot;,&#10;          &quot;date&quot;: &quot;2025-07-25&quot;,&#10;          &quot;rating&quot;: 4.9,&#10;          &quot;comment&quot;: &quot;Great quality eggs, firm whites, and they stay fresh longer than others I've bought.&quot;&#10;        }&#10;      ]&#10;    },&#10;    {&#10;      &quot;_id&quot;: &quot;688725de224d2f673382eac0&quot;,&#10;      &quot;name&quot;: &quot;Ripe Mangoes&quot;,&#10;      &quot;category&quot;: &quot;Fruits&quot;,&#10;      &quot;price&quot;: 87,&#10;      &quot;unit&quot;: &quot;kg&quot;,&#10;      &quot;description&quot;: &quot;Delicious, sun-ripened mangoes freshly harvested from the lush orchards of Sylhet. Carefully handpicked at peak ripeness by local farmer Sufia Begum, these mangoes are bursting with tropical sweetness, rich aroma, and soft, juicy flesh. Perfect for eating fresh, making smoothies, or preparing desserts, our organic mangoes are naturally grown without any synthetic chemicals, preserving their authentic taste and nutrition.&quot;,&#10;      &quot;farmer&quot;: {&#10;        &quot;name&quot;: &quot;Sufia Begum&quot;,&#10;        &quot;farmName&quot;: &quot;Farm 34&quot;,&#10;        &quot;location&quot;: &quot;Sylhet, Bangladesh&quot;&#10;      },&#10;      &quot;images&quot;: [&#10;        &quot;https://images.unsplash.com/photo-1622955658214-d05c1c6fcf84?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8UmlwZSUyME1hbmdvZXN8ZW58MHx8MHx8fDA%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1734163075572-8948e799e42c?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8UmlwZSUyME1hbmdvZXN8ZW58MHx8MHx8fDA%3D&quot;,&#10;        &quot;https://plus.unsplash.com/premium_photo-1724849318956-c17403245ce4?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTN8fFJpcGUlMjBNYW5nb2VzfGVufDB8fDB8fHww&quot;,&#10;        &quot;https://plus.unsplash.com/premium_photo-1723126209079-02171b5bcd86?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDV8fHJpcGUlMjBtYW5nb2VzfGVufDB8fDB8fHww&quot;,&#10;        &quot;https://images.unsplash.com/photo-1699721977299-b96bfe26cee7?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NjN8fHJpcGUlMjBtYW5nb2VzfGVufDB8fDB8fHww&quot;&#10;      ],&#10;      &quot;stock&quot;: 140,&#10;      &quot;features&quot;: [&#10;        &quot;Naturally ripened under the sun&quot;,&#10;        &quot;Sweet and fiberless flesh&quot;,&#10;        &quot;Handpicked from local orchards&quot;,&#10;        &quot;No artificial ripening agents used&quot;,&#10;        &quot;Ideal for juicing, smoothies, or direct consumption&quot;,&#10;        &quot;Locally sourced and ethically grown&quot;,&#10;        &quot;100% organic certified&quot;&#10;      ],&#10;      &quot;rating&quot;: 3.7,&#10;      &quot;reviewCount&quot;: 202,&#10;      &quot;isOrganic&quot;: true,&#10;      &quot;purchaseCount&quot;: 59,&#10;      &quot;storageInstructions&quot;: &quot;Store in a cool, dry place. Once ripe, refrigerate to extend freshness. Best consumed within 5–7 days after ripening.&quot;,&#10;      &quot;nutritionalInformation&quot;: {&#10;        &quot;servingSize&quot;: &quot;1 cup (165g)&quot;,&#10;        &quot;calories&quot;: 99,&#10;        &quot;protein&quot;: &quot;1.4g&quot;,&#10;        &quot;fat&quot;: &quot;0.6g&quot;,&#10;        &quot;carbohydrates&quot;: &quot;25g&quot;,&#10;        &quot;fiber&quot;: &quot;2.6g&quot;,&#10;        &quot;sugars&quot;: &quot;23g&quot;,&#10;        &quot;vitaminC&quot;: &quot;60mg&quot;,&#10;        &quot;vitaminA&quot;: &quot;89 mcg&quot;,&#10;        &quot;potassium&quot;: &quot;277mg&quot;&#10;      },&#10;      &quot;createdAt&quot;: &quot;2025-07-26T04:45:43.739Z&quot;,&#10;      &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;      &quot;reviews&quot;: [&#10;        {&#10;          &quot;reviewer&quot;: &quot;Ayesha Rahman&quot;,&#10;          &quot;date&quot;: &quot;2025-07-20&quot;,&#10;          &quot;rating&quot;: 4,&#10;          &quot;comment&quot;: &quot;Sweet and juicy mangoes, though a bit softer than I expected. Perfect for smoothies!&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Jamil Khan&quot;,&#10;          &quot;date&quot;: &quot;2025-07-21&quot;,&#10;          &quot;rating&quot;: 3.5,&#10;          &quot;comment&quot;: &quot;Good flavor but some were slightly underripe. Overall a decent buy for the price.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Fatima Noor&quot;,&#10;          &quot;date&quot;: &quot;2025-07-23&quot;,&#10;          &quot;rating&quot;: 4.2,&#10;          &quot;comment&quot;: &quot;Lovely aroma and taste, great for desserts. Wish they lasted a bit longer after ripening.&quot;&#10;        }&#10;      ]&#10;    },&#10;    {&#10;      &quot;_id&quot;: &quot;688725de224d2f673382eab1&quot;,&#10;      &quot;name&quot;: &quot;Sweet Corn&quot;,&#10;      &quot;category&quot;: &quot;Vegetables&quot;,&#10;      &quot;price&quot;: 40,&#10;      &quot;unit&quot;: &quot;kg&quot;,&#10;      &quot;description&quot;: &quot;Crisp, golden-yellow sweet corn grown in the fertile lands of Rangpur. Harvested at peak ripeness, each kernel bursts with juicy sweetness and flavor. Whether grilled, boiled, or added to soups and salads, this non-GMO corn is a delicious and versatile addition to any meal. Carefully grown by Anwar Hossain of Sweet Valley Farm using natural farming practices.&quot;,&#10;      &quot;farmer&quot;: {&#10;        &quot;name&quot;: &quot;Anwar Hossain&quot;,&#10;        &quot;farmName&quot;: &quot;Sweet Valley&quot;,&#10;        &quot;location&quot;: &quot;Rangpur, Bangladesh&quot;&#10;      },&#10;      &quot;images&quot;: [&#10;        &quot;https://plus.unsplash.com/premium_photo-1667047165840-803e47970128?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8U3dlZXQlMjBDb3JufGVufDB8fDB8fHww&quot;,&#10;        &quot;https://images.unsplash.com/photo-1683543124257-1d214be3a366?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8U3dlZXQlMjBDb3JufGVufDB8fDB8fHww&quot;,&#10;        &quot;https://images.unsplash.com/photo-1633345817529-cca176575d34?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTV8fFN3ZWV0JTIwQ29ybnxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1635843105990-4f08403ecc12?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzB8fFN3ZWV0JTIwQ29ybnxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://plus.unsplash.com/premium_photo-1725619403774-8a32ceb2d0c1?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzN8fFN3ZWV0JTIwQ29ybnxlbnwwfHwwfHx8MA%3D%3D&quot;&#10;      ],&#10;      &quot;stock&quot;: 90,&#10;      &quot;features&quot;: [&#10;        &quot;Naturally sweet and juicy kernels&quot;,&#10;        &quot;Bright golden-yellow color&quot;,&#10;        &quot;Ideal for boiling, roasting, or salads&quot;,&#10;        &quot;Harvested fresh from local farms&quot;,&#10;        &quot;Non-GMO&quot;,&#10;        &quot;High in dietary fiber&quot;,&#10;        &quot;Versatile cooking ingredient&quot;&#10;      ],&#10;      &quot;rating&quot;: 4.6,&#10;      &quot;reviewCount&quot;: 78,&#10;      &quot;isOrganic&quot;: false,&#10;      &quot;purchaseCount&quot;: 112,&#10;      &quot;storageInstructions&quot;: &quot;Store unshucked corn in the refrigerator and use within 3–5 days. For best flavor, cook soon after harvest.&quot;,&#10;      &quot;nutritionalInformation&quot;: {&#10;        &quot;servingSize&quot;: &quot;100g&quot;,&#10;        &quot;calories&quot;: 86,&#10;        &quot;protein&quot;: &quot;3.2g&quot;,&#10;        &quot;fat&quot;: &quot;1.2g&quot;,&#10;        &quot;carbohydrates&quot;: &quot;19g&quot;,&#10;        &quot;fiber&quot;: &quot;2.7g&quot;,&#10;        &quot;sugars&quot;: &quot;6.3g&quot;,&#10;        &quot;vitaminC&quot;: &quot;6.8mg&quot;,&#10;        &quot;iron&quot;: &quot;0.5mg&quot;,&#10;        &quot;magnesium&quot;: &quot;37mg&quot;&#10;      },&#10;      &quot;createdAt&quot;: &quot;2025-07-26T00:48:50.266Z&quot;,&#10;      &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;      &quot;reviews&quot;: [&#10;        {&#10;          &quot;reviewer&quot;: &quot;Jahanara&quot;,&#10;          &quot;date&quot;: &quot;2025-07-20&quot;,&#10;          &quot;rating&quot;: 5,&#10;          &quot;comment&quot;: &quot;Sweet and fresh! Perfect for grilling and salads. Definitely a pantry staple now.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Rahim&quot;,&#10;          &quot;date&quot;: &quot;2025-07-22&quot;,&#10;          &quot;rating&quot;: 4,&#10;          &quot;comment&quot;: &quot;Good quality corn, very juicy kernels but slightly smaller than expected.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Nadia&quot;,&#10;          &quot;date&quot;: &quot;2025-07-24&quot;,&#10;          &quot;rating&quot;: 4.5,&#10;          &quot;comment&quot;: &quot;Loved the natural sweetness and freshness. Cooked it as boiled corn and it was delicious!&quot;&#10;        }&#10;      ]&#10;    },&#10;    {&#10;      &quot;_id&quot;: &quot;688725de224d2f673382eac7&quot;,&#10;      &quot;name&quot;: &quot;Brown Rice&quot;,&#10;      &quot;category&quot;: &quot;Grains&quot;,&#10;      &quot;price&quot;: 102,&#10;      &quot;unit&quot;: &quot;kg&quot;,&#10;      &quot;description&quot;: &quot;Naturally grown brown rice with its nutritious bran layer intact. This whole grain rice is rich in fiber, essential minerals, and antioxidants. Grown by Jahanara Begum at Farm 41 in Khulna, this rice is minimally processed to retain its natural texture and nutty flavor. Ideal for health-conscious diets and perfect for making wholesome meals like khichuri, biryani, or grain bowls.&quot;,&#10;      &quot;farmer&quot;: {&#10;        &quot;name&quot;: &quot;Jahanara Begum&quot;,&#10;        &quot;farmName&quot;: &quot;Farm 41&quot;,&#10;        &quot;location&quot;: &quot;Khulna, Bangladesh&quot;&#10;      },&#10;      &quot;images&quot;: [&#10;        &quot;https://images.unsplash.com/photo-1603133872878-684f208fb84b?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8QnJvd24lMjBSaWNlfGVufDB8fDB8fHww&quot;,&#10;        &quot;https://images.unsplash.com/photo-1669563794789-2412eeb7e62d?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTB8fEJyb3duJTIwUmljZXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1561767782-d8e3aa77ef77?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fEJyb3duJTIwUmljZXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1606728099646-68d5a0a4d423?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzV8fEJyb3duJTIwUmljZXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;        &quot;https://images.unsplash.com/photo-1719670712556-638018bd8238?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDR8fEJyb3duJTIwUmljZXxlbnwwfHwwfHx8MA%3D%3D&quot;&#10;      ],&#10;      &quot;stock&quot;: 61,&#10;      &quot;features&quot;: [&#10;        &quot;Whole grain and high in fiber&quot;,&#10;        &quot;Unpolished for maximum nutrients&quot;,&#10;        &quot;Naturally gluten-free&quot;,&#10;        &quot;Locally grown and minimally processed&quot;,&#10;        &quot;Ideal for diabetic and heart-healthy diets&quot;,&#10;        &quot;Nutty flavor and chewy texture&quot;,&#10;        &quot;Eco-friendly farming practices&quot;&#10;      ],&#10;      &quot;rating&quot;: 3.7,&#10;      &quot;reviewCount&quot;: 207,&#10;      &quot;isOrganic&quot;: true,&#10;      &quot;purchaseCount&quot;: 275,&#10;      &quot;storageInstructions&quot;: &quot;Store in an airtight container in a cool, dry place. Best used within 6 months for optimal freshness.&quot;,&#10;      &quot;nutritionalInformation&quot;: {&#10;        &quot;servingSize&quot;: &quot;100g&quot;,&#10;        &quot;calories&quot;: 111,&#10;        &quot;protein&quot;: &quot;2.6g&quot;,&#10;        &quot;fat&quot;: &quot;0.9g&quot;,&#10;        &quot;carbohydrates&quot;: &quot;23g&quot;,&#10;        &quot;fiber&quot;: &quot;1.8g&quot;,&#10;        &quot;iron&quot;: &quot;0.4mg&quot;,&#10;        &quot;magnesium&quot;: &quot;43mg&quot;,&#10;        &quot;vitaminB6&quot;: &quot;0.1mg&quot;&#10;      },&#10;      &quot;createdAt&quot;: &quot;2025-07-25T00:39:25.618Z&quot;,&#10;      &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;      &quot;reviews&quot;: [&#10;        {&#10;          &quot;reviewer&quot;: &quot;Farida&quot;,&#10;          &quot;date&quot;: &quot;2025-07-15&quot;,&#10;          &quot;rating&quot;: 4,&#10;          &quot;comment&quot;: &quot;Good quality rice with a nice nutty flavor. Takes a bit longer to cook but worth the health benefits.&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Rafiq&quot;,&#10;          &quot;date&quot;: &quot;2025-07-18&quot;,&#10;          &quot;rating&quot;: 3.5,&#10;          &quot;comment&quot;: &quot;Healthy option but the texture is a bit chewy for my liking. Great for biryani though!&quot;&#10;        },&#10;        {&#10;          &quot;reviewer&quot;: &quot;Sumaiya&quot;,&#10;          &quot;date&quot;: &quot;2025-07-21&quot;,&#10;          &quot;rating&quot;: 3.8,&#10;          &quot;comment&quot;: &quot;Organic and fresh, but I wish it was a little softer after cooking. Overall, a good choice.&quot;&#10;        }&#10;      ]&#10;    }&#10;  ]&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/products-data.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/products-data.json" />
              <option name="originalContent" value="{&#10;  &quot;data&quot;: [&#10;    {&#10;      &quot;success&quot;: true,&#10;      &quot;products&quot;: [&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eac1&quot;,&#10;          &quot;name&quot;: &quot;Golden Wheat&quot;,&#10;          &quot;category&quot;: &quot;Grains&quot;,&#10;          &quot;price&quot;: 117,&#10;          &quot;unit&quot;: &quot;bundle&quot;,&#10;          &quot;description&quot;: &quot;Golden Wheat is premium-grade, sun-ripened whole grain harvested from the fertile fields of Rajshahi. With a naturally rich golden hue and high protein content, it's ideal for baking, grinding into flour, or preparing nutritious traditional meals. Grown organically by Abdul Rahman at Farm 35, this wheat is free from synthetic chemicals and processed with care to retain its wholesome quality. Whether you're making rotis, bread, or porridges, it ensures both taste and nourishment.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Abdul Rahman&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 35&quot;,&#10;            &quot;location&quot;: &quot;Rajshahi, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1689118398153-d24137d57e12?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8N3x8Z29sZGVuJTIwd2hlYXR8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1689118402130-ad5a13556b75?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1553673324-aad5dc09f90f?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MjJ8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1730191648801-51dda0c95368?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDF8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1588274061514-fe2fe8e9d645?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Njd8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;&#10;          ],&#10;          &quot;stock&quot;: 182,&#10;          &quot;features&quot;: [&#10;            &quot;100% organically grown without chemical fertilizers&quot;,&#10;            &quot;Sun-dried and hand-harvested for maximum nutrient retention&quot;,&#10;            &quot;Naturally high in protein and dietary fiber&quot;,&#10;            &quot;Ideal for grinding into whole wheat flour (atta)&quot;,&#10;            &quot;Supports local farmers and sustainable agriculture&quot;,&#10;            &quot;Packed fresh and delivered with zero preservatives&quot;,&#10;            &quot;Perfect for traditional recipes like roti, bread, and porridge&quot;&#10;          ],&#10;          &quot;rating&quot;: 5,&#10;          &quot;reviewCount&quot;: 49,&#10;          &quot;isOrganic&quot;: true,&#10;          &quot;purchaseCount&quot;: 306,&#10;          &quot;storageInstructions&quot;: &quot;Store in a cool, dry place in an airtight container to preserve freshness. Avoid exposure to moisture and direct sunlight. Shelf life is up to 12 months if stored properly.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 340,&#10;            &quot;protein&quot;: &quot;13g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;72g&quot;,&#10;            &quot;fiber&quot;: &quot;10g&quot;,&#10;            &quot;fat&quot;: &quot;2.5g&quot;,&#10;            &quot;iron&quot;: &quot;3.6mg&quot;,&#10;            &quot;vitaminB1&quot;: &quot;0.5mg&quot;,&#10;            &quot;gluten&quot;: &quot;Contains gluten&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-28T02:30:53.328Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Ayesha Siddique&quot;,&#10;              &quot;date&quot;: &quot;2025-07-20&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;Excellent quality wheat! The flour made from this wheat is fresh and perfect for traditional breads.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Tanvir Hasan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-22&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;I love that it's organic and locally sourced. The grain is full of flavor and cooks well.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Sabina Rahman&quot;,&#10;              &quot;date&quot;: &quot;2025-07-25&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Very good wheat. The texture is great and it stays fresh longer than other brands.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eab9&quot;,&#10;          &quot;name&quot;: &quot;Green Cauliflower&quot;,&#10;          &quot;category&quot;: &quot;Vegetables&quot;,&#10;          &quot;price&quot;: 108,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;Green Cauliflower is a vibrant, nutrient-dense vegetable known for its unique color and slightly sweeter, nuttier taste compared to white cauliflower. Grown locally by farmer Fatema Begum at Farm 27 in Dhaka, this hybrid variety is not only rich in antioxidants but also versatile in cooking. Whether steamed, roasted, stir-fried, or blended into soups, it delivers both flavor and health benefits. A fresh pick straight from local soil to your kitchen, this cauliflower is a colorful addition to healthy diets and plant-based recipes.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Fatema Begum&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 27&quot;,&#10;            &quot;location&quot;: &quot;Dhaka, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://plus.unsplash.com/premium_photo-1675365835662-3980c9fdbbc3?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8R3JlZW4lMjBDYXVsaWZsb3dlcnxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1645105664407-96f439f752eb?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8N3x8R3JlZW4lMjBDYXVsaWZsb3dlcnxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1675365836465-ebdbf821cda0?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NXx8R3JlZW4lMjBDYXVsaWZsb3dlcnxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1702313776847-b90ae4bd048a?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTN8fEdyZWVuJTIwQ2F1bGlmbG93ZXJ8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1683723616147-44545defdc9e?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTh8fEdyZWVuJTIwQ2F1bGlmbG93ZXJ8ZW58MHx8MHx8fDA%3D&quot;&#10;          ],&#10;          &quot;stock&quot;: 86,&#10;          &quot;features&quot;: [&#10;            &quot;Naturally grown in local soil with minimal pesticide use&quot;,&#10;            &quot;Rich in vitamins C, K, and folate for immune and bone health&quot;,&#10;            &quot;Bright green florets add visual appeal to meals&quot;,&#10;            &quot;Perfect for keto, vegan, and low-carb diets&quot;,&#10;            &quot;Slightly nutty flavor ideal for both raw and cooked dishes&quot;,&#10;            &quot;Hand-harvested for maximum freshness and quality&quot;,&#10;            &quot;Packed and delivered fresh within 24 hours of harvesting&quot;&#10;          ],&#10;          &quot;rating&quot;: 4,&#10;          &quot;reviewCount&quot;: 17,&#10;          &quot;isOrganic&quot;: false,&#10;          &quot;purchaseCount&quot;: 208,&#10;          &quot;storageInstructions&quot;: &quot;Keep refrigerated at 0–4°C in a loosely closed bag or container. Do not wash until ready to use. Best consumed within 4–5 days of purchase.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 25,&#10;            &quot;protein&quot;: &quot;2g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;5g&quot;,&#10;            &quot;fiber&quot;: &quot;2g&quot;,&#10;            &quot;fat&quot;: &quot;0.3g&quot;,&#10;            &quot;vitaminC&quot;: &quot;80mg (89% DV)&quot;,&#10;            &quot;vitaminK&quot;: &quot;15.5µg (13% DV)&quot;,&#10;            &quot;folate&quot;: &quot;57µg (14% DV)&quot;,&#10;            &quot;calcium&quot;: &quot;22mg&quot;,&#10;            &quot;potassium&quot;: &quot;299mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-27T19:33:10.918Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Nusrat Jahan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-28&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Loved the unique taste and vibrant color. Great for salads and roasting!&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Imran Khan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-26&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Fresh and high quality, but a bit pricier than white cauliflower.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Farhana Ahmed&quot;,&#10;              &quot;date&quot;: &quot;2025-07-24&quot;,&#10;              &quot;rating&quot;: 3,&#10;              &quot;comment&quot;: &quot;Good quality, but I prefer the taste of regular cauliflower more.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eacb&quot;,&#10;          &quot;name&quot;: &quot;Fresh Broccoli&quot;,&#10;          &quot;category&quot;: &quot;Vegetables&quot;,&#10;          &quot;price&quot;: 85,&#10;          &quot;unit&quot;: &quot;bundle&quot;,&#10;          &quot;description&quot;: &quot;Fresh Broccoli is a nutrient-rich green vegetable grown organically in the fertile lands of Rajshahi by Mohammad Ali at Farm 45. Known for its vibrant green florets and crisp stalks, this broccoli is ideal for steaming, roasting, stir-frying, or adding to salads. Packed with fiber, vitamins, and antioxidants, it's a staple in healthy diets and a go-to ingredient for fitness enthusiasts and home cooks alike. With no chemical pesticides or additives, every bundle brings freshness and wellness straight to your kitchen.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Mohammad Ali&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 45&quot;,&#10;            &quot;location&quot;: &quot;Rajshahi, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1594885270039-f8871b502f7f?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8RnJlc2glMjBCcm9jY29saXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1580391536506-a2864b8dae29?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fEZyZXNoJTIwQnJvY2NvbGl8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1622484964723-d1456419fcb0?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MjZ8fEZyZXNoJTIwQnJvY2NvbGl8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1724849301852-e32aa67fd1c7?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDV8fEZyZXNoJTIwQnJvY2NvbGl8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1748017079162-01d97c0789ea?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NzZ8fEZyZXNoJTIwQnJvY2NvbGl8ZW58MHx8MHx8fDA%3D&quot;&#10;          ],&#10;          &quot;stock&quot;: 83,&#10;          &quot;features&quot;: [&#10;            &quot;Organically grown without synthetic pesticides or chemicals&quot;,&#10;            &quot;Packed with vitamin C, K, fiber, and antioxidants&quot;,&#10;            &quot;Ideal for steaming, roasting, stir-frying, or salads&quot;,&#10;            &quot;Crisp stalks and tightly packed florets ensure freshness&quot;,&#10;            &quot;Harvested and packed within 24 hours of cutting&quot;,&#10;            &quot;Supports heart health, immune function, and digestion&quot;,&#10;            &quot;Suitable for vegan, keto, and low-calorie diets&quot;&#10;          ],&#10;          &quot;rating&quot;: 4.7,&#10;          &quot;reviewCount&quot;: 86,&#10;          &quot;isOrganic&quot;: true,&#10;          &quot;purchaseCount&quot;: 303,&#10;          &quot;storageInstructions&quot;: &quot;Store unwashed in the refrigerator in a breathable bag or loosely wrapped in a paper towel. Best consumed within 4–6 days. Wash thoroughly before cooking.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 34,&#10;            &quot;protein&quot;: &quot;2.8g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;6.6g&quot;,&#10;            &quot;fiber&quot;: &quot;2.6g&quot;,&#10;            &quot;fat&quot;: &quot;0.4g&quot;,&#10;            &quot;vitaminC&quot;: &quot;89mg (99% DV)&quot;,&#10;            &quot;vitaminK&quot;: &quot;101.6µg (85% DV)&quot;,&#10;            &quot;folate&quot;: &quot;63µg (16% DV)&quot;,&#10;            &quot;calcium&quot;: &quot;47mg&quot;,&#10;            &quot;iron&quot;: &quot;0.7mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-27T15:04:33.198Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Sadia Rahman&quot;,&#10;              &quot;date&quot;: &quot;2025-07-27&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;Extremely fresh and crunchy! Perfect for my salads and stir-fry dishes.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Tariq Ahmed&quot;,&#10;              &quot;date&quot;: &quot;2025-07-26&quot;,&#10;              &quot;rating&quot;: 4.5,&#10;              &quot;comment&quot;: &quot;Good quality broccoli, organic and flavorful. Would buy again.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Laila Chowdhury&quot;,&#10;              &quot;date&quot;: &quot;2025-07-25&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Nice texture and taste, but slightly smaller bundles than expected.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eac3&quot;,&#10;          &quot;name&quot;: &quot;Wildflower Honey&quot;,&#10;          &quot;category&quot;: &quot;Honey&quot;,&#10;          &quot;price&quot;: 116,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;Wildflower Honey is a rich, aromatic natural sweetener harvested from the nectar of a diverse blend of wildflowers. Sourced directly from Dhaka's local apiaries, this golden honey is collected with care by Shahnaz Parvin at Farm 37. Its deep flavor, floral notes, and smooth texture make it perfect for drizzling over toast, mixing into tea, or using in healthy baking recipes. Raw and unfiltered, this honey retains its natural enzymes, antioxidants, and antibacterial properties, making it not just a treat but a wellness booster.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Shahnaz Parvin&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 37&quot;,&#10;            &quot;location&quot;: &quot;Dhaka, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1551492020-7630c76eb6c6?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8V2lsZGZsb3dlciUyMEhvbmV5fGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1542216172-de344e12b7a1?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8V2lsZGZsb3dlciUyMEhvbmV5fGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1598404743808-57e03035136b?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHhzZWFyY2h8MTZ8fFdpbGRmbG93ZXIlMjBIb25leXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1630138235049-4997a4e29c76?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MjB8fFdpbGRmbG93ZXIlMjBIb25leXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1723795242530-3e061c86c5a3?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mjl8fFdpbGRmbG93ZXIlMjBIb25leXxlbnwwfHwwfHx8MA%3D%3D&quot;&#10;          ],&#10;          &quot;stock&quot;: 205,&#10;          &quot;features&quot;: [&#10;            &quot;Harvested from diverse seasonal wildflowers&quot;,&#10;            &quot;Raw, unpasteurized, and unfiltered to retain nutrients&quot;,&#10;            &quot;Rich in antioxidants and natural antibacterial properties&quot;,&#10;            &quot;Smooth texture and naturally sweet floral flavor&quot;,&#10;            &quot;No added sugar, colors, or preservatives&quot;,&#10;            &quot;Perfect for tea, toast, yogurt, desserts, and baking&quot;,&#10;            &quot;Supports local beekeeping and eco-friendly farming&quot;&#10;          ],&#10;          &quot;rating&quot;: 4.9,&#10;          &quot;reviewCount&quot;: 124,&#10;          &quot;isOrganic&quot;: false,&#10;          &quot;purchaseCount&quot;: 189,&#10;          &quot;storageInstructions&quot;: &quot;Store in a cool, dry place away from direct sunlight. Do not refrigerate. Crystallization is natural—place the jar in warm water to liquefy.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;1 tbsp (21g)&quot;,&#10;            &quot;calories&quot;: 64,&#10;            &quot;protein&quot;: &quot;0g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;17g&quot;,&#10;            &quot;sugars&quot;: &quot;17g (natural)&quot;,&#10;            &quot;fat&quot;: &quot;0g&quot;,&#10;            &quot;fiber&quot;: &quot;0g&quot;,&#10;            &quot;iron&quot;: &quot;0.1mg&quot;,&#10;            &quot;potassium&quot;: &quot;11mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-27T09:12:26.719Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Ayesha Khan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-26&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;Absolutely love the rich floral taste and smooth texture. Perfect for my morning tea.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Imran Hossain&quot;,&#10;              &quot;date&quot;: &quot;2025-07-25&quot;,&#10;              &quot;rating&quot;: 4.8,&#10;              &quot;comment&quot;: &quot;Great quality honey, very natural and pure. No added sweetness, just perfect.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Nabila Faruq&quot;,&#10;              &quot;date&quot;: &quot;2025-07-24&quot;,&#10;              &quot;rating&quot;: 4.7,&#10;              &quot;comment&quot;: &quot;Good honey with lovely aroma. Crystallized a bit but that's natural and easy to fix.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eaa1&quot;,&#10;          &quot;name&quot;: &quot;Red Onions&quot;,&#10;          &quot;category&quot;: &quot;Vegetables&quot;,&#10;          &quot;price&quot;: 25,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;These vibrant, fresh Red Onions are harvested from fertile lands in Jessore by local grower Karim Uddin at Sunrise Farm. Known for their bold flavor, crispy texture, and deep purplish-red color, these onions are a staple in Bengali cooking. Perfect for curries, salads, biryanis, and chutneys, red onions bring sharp taste and color to any dish. They are hand-picked, naturally grown, and delivered fresh to preserve their pungency and shelf life. A must-have in every kitchen.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Karim Uddin&quot;,&#10;            &quot;farmName&quot;: &quot;Sunrise Farm&quot;,&#10;            &quot;location&quot;: &quot;Jessore, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1668295037469-8b0e8d11cd2a?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8UmVkJTIwT25pb25zfGVufDB8fDB8fHww&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1723708958105-09e29205e551?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTN8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1534383346555-6cff1eaca960?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTh8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1588613000160-2b766dd44779?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzJ8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1588613000151-4d3c77943c98?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDJ8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;&#10;          ],&#10;          &quot;stock&quot;: 200,&#10;          &quot;features&quot;: [&#10;            &quot;Locally grown with care by smallholder farmers&quot;,&#10;            &quot;Bold, pungent flavor ideal for savory dishes&quot;,&#10;            &quot;Crisp texture and vibrant red-purple layers&quot;,&#10;            &quot;Freshly harvested and hand-selected&quot;,&#10;            &quot;Essential in Bengali, Indian, and Middle Eastern cuisine&quot;,&#10;            &quot;Chemical-free and naturally matured&quot;,&#10;            &quot;Long shelf life when stored properly&quot;&#10;          ],&#10;          &quot;rating&quot;: 4.4,&#10;          &quot;reviewCount&quot;: 89,&#10;          &quot;isOrganic&quot;: false,&#10;          &quot;purchaseCount&quot;: 203,&#10;          &quot;storageInstructions&quot;: &quot;Store in a cool, dry, well-ventilated place. Avoid refrigeration to prevent softening. Do not store in plastic bags.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 40,&#10;            &quot;protein&quot;: &quot;1.1g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;9.3g&quot;,&#10;            &quot;sugars&quot;: &quot;4.2g&quot;,&#10;            &quot;fat&quot;: &quot;0.1g&quot;,&#10;            &quot;fiber&quot;: &quot;1.7g&quot;,&#10;            &quot;vitaminC&quot;: &quot;7.4mg&quot;,&#10;            &quot;potassium&quot;: &quot;146mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-27T08:14:15.707Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Sadia Rahman&quot;,&#10;              &quot;date&quot;: &quot;2025-07-20&quot;,&#10;              &quot;rating&quot;: 4.5,&#10;              &quot;comment&quot;: &quot;Very fresh and flavorful onions. Perfect for my daily cooking needs.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Jahid Islam&quot;,&#10;              &quot;date&quot;: &quot;2025-07-22&quot;,&#10;              &quot;rating&quot;: 4.3,&#10;              &quot;comment&quot;: &quot;Good quality onions with nice crispness. Lasted well without softening.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Moushumi Akter&quot;,&#10;              &quot;date&quot;: &quot;2025-07-24&quot;,&#10;              &quot;rating&quot;: 4.4,&#10;              &quot;comment&quot;: &quot;Loved the deep red color and strong flavor. Great for salads and biryanis.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eab5&quot;,&#10;          &quot;name&quot;: &quot;Farm Fresh Eggs&quot;,&#10;          &quot;category&quot;: &quot;Dairy&quot;,&#10;          &quot;price&quot;: 120,&#10;          &quot;unit&quot;: &quot;dozen&quot;,&#10;          &quot;description&quot;: &quot;Our Farm Fresh Eggs come from healthy, free-range hens raised on open pastures at Free Range Poultry in Kishoreganj. These organic, protein-rich eggs are laid by hens that roam freely, enjoying natural feed and clean environments. Each egg boasts a rich golden yolk, firm white, and superior flavor—perfect for frying, boiling, baking, or scrambling. Rich in nutrients and free from antibiotics or hormones, these eggs offer natural taste and nutrition with every bite.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Rahima Khatun&quot;,&#10;            &quot;farmName&quot;: &quot;Free Range Poultry&quot;,&#10;            &quot;location&quot;: &quot;Kishoreganj, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://plus.unsplash.com/premium_photo-1708715380817-31e20c61b18d?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8RmFybSUyMEZyZXNoJTIwRWdnc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1552418322-3855ef830d11?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1586802990181-a5771596eaea?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzR8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1576522488962-332e43c2ca12?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDZ8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1661630529381-68dccadb0b50?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDl8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;&#10;          ],&#10;          &quot;stock&quot;: 200,&#10;          &quot;features&quot;: [&#10;            &quot;Free-range raised hens with natural diets&quot;,&#10;            &quot;No hormones or antibiotics&quot;,&#10;            &quot;Golden yolks with superior taste&quot;,&#10;            &quot;High in protein and essential vitamins&quot;,&#10;            &quot;Perfect for all types of cooking and baking&quot;,&#10;            &quot;Collected fresh daily and hand-packed&quot;,&#10;            &quot;Ethically farmed and 100% organic certified&quot;&#10;          ],&#10;          &quot;rating&quot;: 4.9,&#10;          &quot;reviewCount&quot;: 189,&#10;          &quot;isOrganic&quot;: true,&#10;          &quot;purchaseCount&quot;: 267,&#10;          &quot;storageInstructions&quot;: &quot;Store eggs in the refrigerator at 4°C or below. Keep in original carton to retain freshness. Consume within 3 weeks of purchase for best taste and safety.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;1 egg (50g)&quot;,&#10;            &quot;calories&quot;: 70,&#10;            &quot;protein&quot;: &quot;6g&quot;,&#10;            &quot;fat&quot;: &quot;5g&quot;,&#10;            &quot;saturatedFat&quot;: &quot;1.5g&quot;,&#10;            &quot;cholesterol&quot;: &quot;185mg&quot;,&#10;            &quot;carbohydrates&quot;: &quot;0.6g&quot;,&#10;            &quot;vitaminD&quot;: &quot;41 IU&quot;,&#10;            &quot;vitaminB12&quot;: &quot;0.6 mcg&quot;,&#10;            &quot;selenium&quot;: &quot;15.4 mcg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-27T00:33:19.370Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Tanvir Ahmed&quot;,&#10;              &quot;date&quot;: &quot;2025-07-22&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;Best eggs I've had in a long time. Fresh, tasty, and perfect for all my cooking needs.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Nusrat Jahan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-23&quot;,&#10;              &quot;rating&quot;: 4.8,&#10;              &quot;comment&quot;: &quot;Love that these are free-range and organic. The yolks are bright and flavorful.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Md. Faisal&quot;,&#10;              &quot;date&quot;: &quot;2025-07-25&quot;,&#10;              &quot;rating&quot;: 4.9,&#10;              &quot;comment&quot;: &quot;Great quality eggs, firm whites, and they stay fresh longer than others I've bought.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eac0&quot;,&#10;          &quot;name&quot;: &quot;Ripe Mangoes&quot;,&#10;          &quot;category&quot;: &quot;Fruits&quot;,&#10;          &quot;price&quot;: 87,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;Delicious, sun-ripened mangoes freshly harvested from the lush orchards of Sylhet. Carefully handpicked at peak ripeness by local farmer Sufia Begum, these mangoes are bursting with tropical sweetness, rich aroma, and soft, juicy flesh. Perfect for eating fresh, making smoothies, or preparing desserts, our organic mangoes are naturally grown without any synthetic chemicals, preserving their authentic taste and nutrition.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Sufia Begum&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 34&quot;,&#10;            &quot;location&quot;: &quot;Sylhet, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1622955658214-d05c1c6fcf84?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8UmlwZSUyME1hbmdvZXN8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1734163075572-8948e799e42c?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8UmlwZSUyME1hbmdvZXN8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1724849318956-c17403245ce4?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTN8fFJpcGUlMjBNYW5nb2VzfGVufDB8fDB8fHww&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1723126209079-02171b5bcd86?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDV8fHJpcGUlMjBtYW5nb2VzfGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1699721977299-b96bfe26cee7?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NjN8fHJpcGUlMjBtYW5nb2VzfGVufDB8fDB8fHww&quot;&#10;          ],&#10;          &quot;stock&quot;: 140,&#10;          &quot;features&quot;: [&#10;            &quot;Naturally ripened under the sun&quot;,&#10;            &quot;Sweet and fiberless flesh&quot;,&#10;            &quot;Handpicked from local orchards&quot;,&#10;            &quot;No artificial ripening agents used&quot;,&#10;            &quot;Ideal for juicing, smoothies, or direct consumption&quot;,&#10;            &quot;Locally sourced and ethically grown&quot;,&#10;            &quot;100% organic certified&quot;&#10;          ],&#10;          &quot;rating&quot;: 3.7,&#10;          &quot;reviewCount&quot;: 202,&#10;          &quot;isOrganic&quot;: true,&#10;          &quot;purchaseCount&quot;: 59,&#10;          &quot;storageInstructions&quot;: &quot;Store in a cool, dry place. Once ripe, refrigerate to extend freshness. Best consumed within 5–7 days after ripening.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;1 cup (165g)&quot;,&#10;            &quot;calories&quot;: 99,&#10;            &quot;protein&quot;: &quot;1.4g&quot;,&#10;            &quot;fat&quot;: &quot;0.6g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;25g&quot;,&#10;            &quot;fiber&quot;: &quot;2.6g&quot;,&#10;            &quot;sugars&quot;: &quot;23g&quot;,&#10;            &quot;vitaminC&quot;: &quot;60mg&quot;,&#10;            &quot;vitaminA&quot;: &quot;89 mcg&quot;,&#10;            &quot;potassium&quot;: &quot;277mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-26T04:45:43.739Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Ayesha Rahman&quot;,&#10;              &quot;date&quot;: &quot;2025-07-20&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Sweet and juicy mangoes, though a bit softer than I expected. Perfect for smoothies!&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Jamil Khan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-21&quot;,&#10;              &quot;rating&quot;: 3.5,&#10;              &quot;comment&quot;: &quot;Good flavor but some were slightly underripe. Overall a decent buy for the price.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Fatima Noor&quot;,&#10;              &quot;date&quot;: &quot;2025-07-23&quot;,&#10;              &quot;rating&quot;: 4.2,&#10;              &quot;comment&quot;: &quot;Lovely aroma and taste, great for desserts. Wish they lasted a bit longer after ripening.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eab1&quot;,&#10;          &quot;name&quot;: &quot;Sweet Corn&quot;,&#10;          &quot;category&quot;: &quot;Vegetables&quot;,&#10;          &quot;price&quot;: 40,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;Crisp, golden-yellow sweet corn grown in the fertile lands of Rangpur. Harvested at peak ripeness, each kernel bursts with juicy sweetness and flavor. Whether grilled, boiled, or added to soups and salads, this non-GMO corn is a delicious and versatile addition to any meal. Carefully grown by Anwar Hossain of Sweet Valley Farm using natural farming practices.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Anwar Hossain&quot;,&#10;            &quot;farmName&quot;: &quot;Sweet Valley&quot;,&#10;            &quot;location&quot;: &quot;Rangpur, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://plus.unsplash.com/premium_photo-1667047165840-803e47970128?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8U3dlZXQlMjBDb3JufGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1683543124257-1d214be3a366?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8U3dlZXQlMjBDb3JufGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1633345817529-cca176575d34?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTV8fFN3ZWV0JTIwQ29ybnxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1635843105990-4f08403ecc12?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzB8fFN3ZWV0JTIwQ29ybnxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1725619403774-8a32ceb2d0c1?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzN8fFN3ZWV0JTIwQ29ybnxlbnwwfHwwfHx8MA%3D%3D&quot;&#10;          ],&#10;          &quot;stock&quot;: 90,&#10;          &quot;features&quot;: [&#10;            &quot;Naturally sweet and juicy kernels&quot;,&#10;            &quot;Bright golden-yellow color&quot;,&#10;            &quot;Ideal for boiling, roasting, or salads&quot;,&#10;            &quot;Harvested fresh from local farms&quot;,&#10;            &quot;Non-GMO&quot;,&#10;            &quot;High in dietary fiber&quot;,&#10;            &quot;Versatile cooking ingredient&quot;&#10;          ],&#10;          &quot;rating&quot;: 4.6,&#10;          &quot;reviewCount&quot;: 78,&#10;          &quot;isOrganic&quot;: false,&#10;          &quot;purchaseCount&quot;: 112,&#10;          &quot;storageInstructions&quot;: &quot;Store unshucked corn in the refrigerator and use within 3–5 days. For best flavor, cook soon after harvest.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 86,&#10;            &quot;protein&quot;: &quot;3.2g&quot;,&#10;            &quot;fat&quot;: &quot;1.2g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;19g&quot;,&#10;            &quot;fiber&quot;: &quot;2.7g&quot;,&#10;            &quot;sugars&quot;: &quot;6.3g&quot;,&#10;            &quot;vitaminC&quot;: &quot;6.8mg&quot;,&#10;            &quot;iron&quot;: &quot;0.5mg&quot;,&#10;            &quot;magnesium&quot;: &quot;37mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-26T00:48:50.266Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Jahanara&quot;,&#10;              &quot;date&quot;: &quot;2025-07-20&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;Sweet and fresh! Perfect for grilling and salads. Definitely a pantry staple now.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Rahim&quot;,&#10;              &quot;date&quot;: &quot;2025-07-22&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Good quality corn, very juicy kernels but slightly smaller than expected.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Nadia&quot;,&#10;              &quot;date&quot;: &quot;2025-07-24&quot;,&#10;              &quot;rating&quot;: 4.5,&#10;              &quot;comment&quot;: &quot;Loved the natural sweetness and freshness. Cooked it as boiled corn and it was delicious!&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Shakil&quot;,&#10;              &quot;date&quot;: &quot;2025-07-25&quot;,&#10;              &quot;rating&quot;: 4.8,&#10;              &quot;comment&quot;: &quot;Crisp, juicy, and very fresh. Great for making corn soup. Highly recommend.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eac7&quot;,&#10;          &quot;name&quot;: &quot;Brown Rice&quot;,&#10;          &quot;category&quot;: &quot;Grains&quot;,&#10;          &quot;price&quot;: 102,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;Naturally grown brown rice with its nutritious bran layer intact. This whole grain rice is rich in fiber, essential minerals, and antioxidants. Grown by Jahanara Begum at Farm 41 in Khulna, this rice is minimally processed to retain its natural texture and nutty flavor. Ideal for health-conscious diets and perfect for making wholesome meals like khichuri, biryani, or grain bowls.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Jahanara Begum&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 41&quot;,&#10;            &quot;location&quot;: &quot;Khulna, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1603133872878-684f208fb84b?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8QnJvd24lMjBSaWNlfGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1669563794789-2412eeb7e62d?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTB8fEJyb3duJTIwUmljZXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1561767782-d8e3aa77ef77?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fEJyb3duJTIwUmljZXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1606728099646-68d5a0a4d423?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzV8fEJyb3duJTIwUmljZXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1719670712556-638018bd8238?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDR8fEJyb3duJTIwUmljZXxlbnwwfHwwfHx8MA%3D%3D&quot;&#10;          ],&#10;          &quot;stock&quot;: 61,&#10;          &quot;features&quot;: [&#10;            &quot;Whole grain and high in fiber&quot;,&#10;            &quot;Unpolished for maximum nutrients&quot;,&#10;            &quot;Naturally gluten-free&quot;,&#10;            &quot;Locally grown and minimally processed&quot;,&#10;            &quot;Ideal for diabetic and heart-healthy diets&quot;,&#10;            &quot;Nutty flavor and chewy texture&quot;,&#10;            &quot;Eco-friendly farming practices&quot;&#10;          ],&#10;          &quot;rating&quot;: 3.7,&#10;          &quot;reviewCount&quot;: 207,&#10;          &quot;isOrganic&quot;: true,&#10;          &quot;purchaseCount&quot;: 275,&#10;          &quot;storageInstructions&quot;: &quot;Store in an airtight container in a cool, dry place. Best used within 6 months for optimal freshness.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 111,&#10;            &quot;protein&quot;: &quot;2.6g&quot;,&#10;            &quot;fat&quot;: &quot;0.9g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;23g&quot;,&#10;            &quot;fiber&quot;: &quot;1.8g&quot;,&#10;            &quot;iron&quot;: &quot;0.4mg&quot;,&#10;            &quot;magnesium&quot;: &quot;43mg&quot;,&#10;            &quot;vitaminB6&quot;: &quot;0.1mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-25T00:39:25.618Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Farida&quot;,&#10;              &quot;date&quot;: &quot;2025-07-15&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Good quality rice with a nice nutty flavor. Takes a bit longer to cook but worth the health benefits.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Rafiq&quot;,&#10;              &quot;date&quot;: &quot;2025-07-18&quot;,&#10;              &quot;rating&quot;: 3.5,&#10;              &quot;comment&quot;: &quot;Healthy option but the texture is a bit chewy for my liking. Great for biryani though!&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Sumaiya&quot;,&#10;              &quot;date&quot;: &quot;2025-07-21&quot;,&#10;              &quot;rating&quot;: 3.8,&#10;              &quot;comment&quot;: &quot;Organic and fresh, but I wish it was a little softer after cooking. Overall, a good choice.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Habib&quot;,&#10;              &quot;date&quot;: &quot;2025-07-24&quot;,&#10;              &quot;rating&quot;: 4.2,&#10;              &quot;comment&quot;: &quot;Perfect for healthy meals and has a nice natural flavor. I use it regularly for my family.&quot;&#10;            }&#10;          ]&#10;        }&#10;        // Continue with remaining 30+ products...&#10;      ]&#10;    }&#10;  ]&#10;}&#10;&#10;" />
              <option name="updatedContent" value="{&#10;  &quot;data&quot;: [&#10;    {&#10;      &quot;success&quot;: true,&#10;      &quot;products&quot;: [&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eac1&quot;,&#10;          &quot;name&quot;: &quot;Golden Wheat&quot;,&#10;          &quot;category&quot;: &quot;Grains&quot;,&#10;          &quot;price&quot;: 117,&#10;          &quot;unit&quot;: &quot;bundle&quot;,&#10;          &quot;description&quot;: &quot;Golden Wheat is premium-grade, sun-ripened whole grain harvested from the fertile fields of Rajshahi. With a naturally rich golden hue and high protein content, it's ideal for baking, grinding into flour, or preparing nutritious traditional meals. Grown organically by Abdul Rahman at Farm 35, this wheat is free from synthetic chemicals and processed with care to retain its wholesome quality. Whether you're making rotis, bread, or porridges, it ensures both taste and nourishment.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Abdul Rahman&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 35&quot;,&#10;            &quot;location&quot;: &quot;Rajshahi, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1689118398153-d24137d57e12?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8N3x8Z29sZGVuJTIwd2hlYXR8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1689118402130-ad5a13556b75?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1553673324-aad5dc09f90f?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MjJ8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1730191648801-51dda0c95368?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDF8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1588274061514-fe2fe8e9d645?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Njd8fGdvbGRlbiUyMHdoZWF0fGVufDB8fDB8fHww&quot;&#10;          ],&#10;          &quot;stock&quot;: 182,&#10;          &quot;features&quot;: [&#10;            &quot;100% organically grown without chemical fertilizers&quot;,&#10;            &quot;Sun-dried and hand-harvested for maximum nutrient retention&quot;,&#10;            &quot;Naturally high in protein and dietary fiber&quot;,&#10;            &quot;Ideal for grinding into whole wheat flour (atta)&quot;,&#10;            &quot;Supports local farmers and sustainable agriculture&quot;,&#10;            &quot;Packed fresh and delivered with zero preservatives&quot;,&#10;            &quot;Perfect for traditional recipes like roti, bread, and porridge&quot;&#10;          ],&#10;          &quot;rating&quot;: 5,&#10;          &quot;reviewCount&quot;: 49,&#10;          &quot;isOrganic&quot;: true,&#10;          &quot;purchaseCount&quot;: 306,&#10;          &quot;storageInstructions&quot;: &quot;Store in a cool, dry place in an airtight container to preserve freshness. Avoid exposure to moisture and direct sunlight. Shelf life is up to 12 months if stored properly.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 340,&#10;            &quot;protein&quot;: &quot;13g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;72g&quot;,&#10;            &quot;fiber&quot;: &quot;10g&quot;,&#10;            &quot;fat&quot;: &quot;2.5g&quot;,&#10;            &quot;iron&quot;: &quot;3.6mg&quot;,&#10;            &quot;vitaminB1&quot;: &quot;0.5mg&quot;,&#10;            &quot;gluten&quot;: &quot;Contains gluten&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-28T02:30:53.328Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Ayesha Siddique&quot;,&#10;              &quot;date&quot;: &quot;2025-07-20&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;Excellent quality wheat! The flour made from this wheat is fresh and perfect for traditional breads.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Tanvir Hasan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-22&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;I love that it's organic and locally sourced. The grain is full of flavor and cooks well.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Sabina Rahman&quot;,&#10;              &quot;date&quot;: &quot;2025-07-25&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Very good wheat. The texture is great and it stays fresh longer than other brands.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eab9&quot;,&#10;          &quot;name&quot;: &quot;Green Cauliflower&quot;,&#10;          &quot;category&quot;: &quot;Vegetables&quot;,&#10;          &quot;price&quot;: 108,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;Green Cauliflower is a vibrant, nutrient-dense vegetable known for its unique color and slightly sweeter, nuttier taste compared to white cauliflower. Grown locally by farmer Fatema Begum at Farm 27 in Dhaka, this hybrid variety is not only rich in antioxidants but also versatile in cooking. Whether steamed, roasted, stir-fried, or blended into soups, it delivers both flavor and health benefits. A fresh pick straight from local soil to your kitchen, this cauliflower is a colorful addition to healthy diets and plant-based recipes.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Fatema Begum&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 27&quot;,&#10;            &quot;location&quot;: &quot;Dhaka, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://plus.unsplash.com/premium_photo-1675365835662-3980c9fdbbc3?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1645105664407-96f439f752eb?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1675365836465-ebdbf821cda0?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1702313776847-b90ae4bd048a?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1683723616147-44545defdc9e?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;&#10;          ],&#10;          &quot;stock&quot;: 86,&#10;          &quot;features&quot;: [&#10;            &quot;Naturally grown in local soil with minimal pesticide use&quot;,&#10;            &quot;Rich in vitamins C, K, and folate for immune and bone health&quot;,&#10;            &quot;Bright green florets add visual appeal to meals&quot;,&#10;            &quot;Perfect for keto, vegan, and low-carb diets&quot;,&#10;            &quot;Slightly nutty flavor ideal for both raw and cooked dishes&quot;,&#10;            &quot;Hand-harvested for maximum freshness and quality&quot;,&#10;            &quot;Packed and delivered fresh within 24 hours of harvesting&quot;&#10;          ],&#10;          &quot;rating&quot;: 4,&#10;          &quot;reviewCount&quot;: 17,&#10;          &quot;isOrganic&quot;: false,&#10;          &quot;purchaseCount&quot;: 208,&#10;          &quot;storageInstructions&quot;: &quot;Keep refrigerated at 0–4°C in a loosely closed bag or container. Do not wash until ready to use. Best consumed within 4–5 days of purchase.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 25,&#10;            &quot;protein&quot;: &quot;2g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;5g&quot;,&#10;            &quot;fiber&quot;: &quot;2g&quot;,&#10;            &quot;fat&quot;: &quot;0.3g&quot;,&#10;            &quot;vitaminC&quot;: &quot;80mg&quot;,&#10;            &quot;vitaminK&quot;: &quot;15.5µg&quot;,&#10;            &quot;calcium&quot;: &quot;22mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-27T19:33:10.918Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Nusrat Jahan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-28&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Loved the unique taste and vibrant color. Great for salads and roasting!&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Imran Khan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-26&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Fresh and high quality, but a bit pricier than white cauliflower.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Farhana Ahmed&quot;,&#10;              &quot;date&quot;: &quot;2025-07-24&quot;,&#10;              &quot;rating&quot;: 3,&#10;              &quot;comment&quot;: &quot;Good quality, but I prefer the taste of regular cauliflower more.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eacb&quot;,&#10;          &quot;name&quot;: &quot;Fresh Broccoli&quot;,&#10;          &quot;category&quot;: &quot;Vegetables&quot;,&#10;          &quot;price&quot;: 85,&#10;          &quot;unit&quot;: &quot;bundle&quot;,&#10;          &quot;description&quot;: &quot;Fresh Broccoli is a nutrient-rich green vegetable grown organically in the fertile lands of Rajshahi by Mohammad Ali at Farm 45. Known for its vibrant green florets and crisp stalks, this broccoli is ideal for steaming, roasting, stir-frying, or adding to salads. Packed with fiber, vitamins, and antioxidants, it's a staple in healthy diets and a go-to ingredient for fitness enthusiasts and home cooks alike. With no chemical pesticides or additives, every bundle brings freshness and wellness straight to your kitchen.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Mohammad Ali&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 45&quot;,&#10;            &quot;location&quot;: &quot;Rajshahi, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1594885270039-f8871b502f7f?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1580391536506-a2864b8dae29?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1622484964723-d1456419fcb0?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1724849301852-e32aa67fd1c7?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1748017079162-01d97c0789ea?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;&#10;          ],&#10;          &quot;stock&quot;: 83,&#10;          &quot;features&quot;: [&#10;            &quot;Organically grown without synthetic pesticides or chemicals&quot;,&#10;            &quot;Packed with vitamin C, K, fiber, and antioxidants&quot;,&#10;            &quot;Ideal for steaming, roasting, stir-frying, or salads&quot;,&#10;            &quot;Harvested and packed within 24 hours of cutting&quot;,&#10;            &quot;Suitable for vegan, keto, and low-calorie diets&quot;&#10;          ],&#10;          &quot;rating&quot;: 4.7,&#10;          &quot;reviewCount&quot;: 86,&#10;          &quot;isOrganic&quot;: true,&#10;          &quot;purchaseCount&quot;: 303,&#10;          &quot;storageInstructions&quot;: &quot;Store unwashed in the refrigerator in a breathable bag or loosely wrapped in a paper towel. Best consumed within 4–6 days.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 34,&#10;            &quot;protein&quot;: &quot;2.8g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;6.6g&quot;,&#10;            &quot;fiber&quot;: &quot;2.6g&quot;,&#10;            &quot;fat&quot;: &quot;0.4g&quot;,&#10;            &quot;vitaminC&quot;: &quot;89mg&quot;,&#10;            &quot;calcium&quot;: &quot;47mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-27T15:04:33.198Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Sadia Rahman&quot;,&#10;              &quot;date&quot;: &quot;2025-07-27&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;Extremely fresh and crunchy! Perfect for my salads and stir-fry dishes.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Tariq Ahmed&quot;,&#10;              &quot;date&quot;: &quot;2025-07-26&quot;,&#10;              &quot;rating&quot;: 4.5,&#10;              &quot;comment&quot;: &quot;Good quality broccoli, organic and flavorful. Would buy again.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Laila Chowdhury&quot;,&#10;              &quot;date&quot;: &quot;2025-07-25&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Nice texture and taste, but slightly smaller bundles than expected.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eac3&quot;,&#10;          &quot;name&quot;: &quot;Wildflower Honey&quot;,&#10;          &quot;category&quot;: &quot;Honey&quot;,&#10;          &quot;price&quot;: 116,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;Wildflower Honey is a rich, aromatic natural sweetener harvested from the nectar of a diverse blend of wildflowers. Sourced directly from Dhaka's local apiaries, this golden honey is collected with care by Shahnaz Parvin at Farm 37. Its deep flavor, floral notes, and smooth texture make it perfect for drizzling over toast, mixing into tea, or using in healthy baking recipes. Raw and unfiltered, this honey retains its natural enzymes, antioxidants, and antibacterial properties, making it not just a treat but a wellness booster.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Shahnaz Parvin&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 37&quot;,&#10;            &quot;location&quot;: &quot;Dhaka, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1551492020-7630c76eb6c6?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8V2lsZGZsb3dlciUyMEhvbmV5fGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1542216172-de344e12b7a1?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8V2lsZGZsb3dlciUyMEhvbmV5fGVufDB8fDB8fHww&quot;,&#10;            &quot;https://images.unsplash.com/photo-1598404743808-57e03035136b?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHhzZWFyY2h8MTZ8fFdpbGRmbG93ZXIlMjBIb25leXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1630138235049-4997a4e29c76?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MjB8fFdpbGRmbG93ZXIlMjBIb25leXxlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1723795242530-3e061c86c5a3?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mjl8fFdpbGRmbG93ZXIlMjBIb25leXxlbnwwfHwwfHx8MA%3D%3D&quot;&#10;          ],&#10;          &quot;stock&quot;: 205,&#10;          &quot;features&quot;: [&#10;            &quot;Harvested from diverse seasonal wildflowers&quot;,&#10;            &quot;Raw, unpasteurized, and unfiltered to retain nutrients&quot;,&#10;            &quot;Rich in antioxidants and natural antibacterial properties&quot;,&#10;            &quot;Smooth texture and naturally sweet floral flavor&quot;,&#10;            &quot;No added sugar, colors, or preservatives&quot;,&#10;            &quot;Perfect for tea, toast, yogurt, desserts, and baking&quot;,&#10;            &quot;Supports local beekeeping and eco-friendly farming&quot;&#10;          ],&#10;          &quot;rating&quot;: 4.9,&#10;          &quot;reviewCount&quot;: 124,&#10;          &quot;isOrganic&quot;: false,&#10;          &quot;purchaseCount&quot;: 189,&#10;          &quot;storageInstructions&quot;: &quot;Store in a cool, dry place away from direct sunlight. Do not refrigerate. Crystallization is natural—place the jar in warm water to liquefy.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;1 tbsp (21g)&quot;,&#10;            &quot;calories&quot;: 64,&#10;            &quot;protein&quot;: &quot;0g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;17g&quot;,&#10;            &quot;sugars&quot;: &quot;17g (natural)&quot;,&#10;            &quot;fat&quot;: &quot;0g&quot;,&#10;            &quot;fiber&quot;: &quot;0g&quot;,&#10;            &quot;iron&quot;: &quot;0.1mg&quot;,&#10;            &quot;potassium&quot;: &quot;11mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-27T09:12:26.719Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Ayesha Khan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-26&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;Absolutely love the rich floral taste and smooth texture. Perfect for my morning tea.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Imran Hossain&quot;,&#10;              &quot;date&quot;: &quot;2025-07-25&quot;,&#10;              &quot;rating&quot;: 4.8,&#10;              &quot;comment&quot;: &quot;Great quality honey, very natural and pure. No added sweetness, just perfect.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Nabila Faruq&quot;,&#10;              &quot;date&quot;: &quot;2025-07-24&quot;,&#10;              &quot;rating&quot;: 4.7,&#10;              &quot;comment&quot;: &quot;Good honey with lovely aroma. Crystallized a bit but that's natural and easy to fix.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eaa1&quot;,&#10;          &quot;name&quot;: &quot;Red Onions&quot;,&#10;          &quot;category&quot;: &quot;Vegetables&quot;,&#10;          &quot;price&quot;: 25,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;These vibrant, fresh Red Onions are harvested from fertile lands in Jessore by local grower Karim Uddin at Sunrise Farm. Known for their bold flavor, crispy texture, and deep purplish-red color, these onions are a staple in Bengali cooking. Perfect for curries, salads, biryanis, and chutneys, red onions bring sharp taste and color to any dish. They are hand-picked, naturally grown, and delivered fresh to preserve their pungency and shelf life. A must-have in every kitchen.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Karim Uddin&quot;,&#10;            &quot;farmName&quot;: &quot;Sunrise Farm&quot;,&#10;            &quot;location&quot;: &quot;Jessore, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1668295037469-8b0e8d11cd2a?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8UmVkJTIwT25pb25zfGVufDB8fDB8fHww&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1723708958105-09e29205e551?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTN8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1534383346555-6cff1eaca960?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTh8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1588613000160-2b766dd44779?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzJ8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1588613000151-4d3c77943c98?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDJ8fFJlZCUyME9uaW9uc3xlbnwwfHwwfHx8MA%3D%3D&quot;&#10;          ],&#10;          &quot;stock&quot;: 200,&#10;          &quot;features&quot;: [&#10;            &quot;Locally grown with care by smallholder farmers&quot;,&#10;            &quot;Bold, pungent flavor ideal for savory dishes&quot;,&#10;            &quot;Crisp texture and vibrant red-purple layers&quot;,&#10;            &quot;Freshly harvested and hand-selected&quot;,&#10;            &quot;Essential in Bengali, Indian, and Middle Eastern cuisine&quot;,&#10;            &quot;Chemical-free and naturally matured&quot;,&#10;            &quot;Long shelf life when stored properly&quot;&#10;          ],&#10;          &quot;rating&quot;: 4.4,&#10;          &quot;reviewCount&quot;: 89,&#10;          &quot;isOrganic&quot;: false,&#10;          &quot;purchaseCount&quot;: 203,&#10;          &quot;storageInstructions&quot;: &quot;Store in a cool, dry, well-ventilated place. Avoid refrigeration to prevent softening. Do not store in plastic bags.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 40,&#10;            &quot;protein&quot;: &quot;1.1g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;9.3g&quot;,&#10;            &quot;sugars&quot;: &quot;4.2g&quot;,&#10;            &quot;fat&quot;: &quot;0.1g&quot;,&#10;            &quot;fiber&quot;: &quot;1.7g&quot;,&#10;            &quot;vitaminC&quot;: &quot;7.4mg&quot;,&#10;            &quot;potassium&quot;: &quot;146mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-27T08:14:15.707Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Sadia Rahman&quot;,&#10;              &quot;date&quot;: &quot;2025-07-20&quot;,&#10;              &quot;rating&quot;: 4.5,&#10;              &quot;comment&quot;: &quot;Very fresh and flavorful onions. Perfect for my daily cooking needs.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Jahid Islam&quot;,&#10;              &quot;date&quot;: &quot;2025-07-22&quot;,&#10;              &quot;rating&quot;: 4.3,&#10;              &quot;comment&quot;: &quot;Good quality onions with nice crispness. Lasted well without softening.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Moushumi Akter&quot;,&#10;              &quot;date&quot;: &quot;2025-07-24&quot;,&#10;              &quot;rating&quot;: 4.4,&#10;              &quot;comment&quot;: &quot;Loved the deep red color and strong flavor. Great for salads and biryanis.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eab5&quot;,&#10;          &quot;name&quot;: &quot;Farm Fresh Eggs&quot;,&#10;          &quot;category&quot;: &quot;Dairy&quot;,&#10;          &quot;price&quot;: 120,&#10;          &quot;unit&quot;: &quot;dozen&quot;,&#10;          &quot;description&quot;: &quot;Our Farm Fresh Eggs come from healthy, free-range hens raised on open pastures at Free Range Poultry in Kishoreganj. These organic, protein-rich eggs are laid by hens that roam freely, enjoying natural feed and clean environments. Each egg boasts a rich golden yolk, firm white, and superior flavor—perfect for frying, boiling, baking, or scrambling. Rich in nutrients and free from antibiotics or hormones, these eggs offer natural taste and nutrition with every bite.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Rahima Khatun&quot;,&#10;            &quot;farmName&quot;: &quot;Free Range Poultry&quot;,&#10;            &quot;location&quot;: &quot;Kishoreganj, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://plus.unsplash.com/premium_photo-1708715380817-31e20c61b18d?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8RmFybSUyMEZyZXNoJTIwRWdnc3xlbnwwfHwwfHx8MA%3D%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1552418322-3855ef830d11?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1586802990181-a5771596eaea?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8MzR8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://images.unsplash.com/photo-1576522488962-332e43c2ca12?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDZ8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1661630529381-68dccadb0b50?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&amp;ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDl8fEZhcm0lMjBGcmVzaCUyMEVnZ3N8ZW58MHx8MHx8fDA%3D&quot;&#10;          ],&#10;          &quot;stock&quot;: 200,&#10;          &quot;features&quot;: [&#10;            &quot;Free-range raised hens with natural diets&quot;,&#10;            &quot;No hormones or antibiotics&quot;,&#10;            &quot;Golden yolks with superior taste&quot;,&#10;            &quot;High in protein and essential vitamins&quot;,&#10;            &quot;Perfect for all types of cooking and baking&quot;,&#10;            &quot;Collected fresh daily and hand-packed&quot;,&#10;            &quot;Ethically farmed and 100% organic certified&quot;&#10;          ],&#10;          &quot;rating&quot;: 4.9,&#10;          &quot;reviewCount&quot;: 189,&#10;          &quot;isOrganic&quot;: true,&#10;          &quot;purchaseCount&quot;: 267,&#10;          &quot;storageInstructions&quot;: &quot;Store eggs in the refrigerator at 4°C or below. Keep in original carton to retain freshness. Consume within 3 weeks of purchase for best taste and safety.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;1 egg (50g)&quot;,&#10;            &quot;calories&quot;: 70,&#10;            &quot;protein&quot;: &quot;6g&quot;,&#10;            &quot;fat&quot;: &quot;5g&quot;,&#10;            &quot;saturatedFat&quot;: &quot;1.5g&quot;,&#10;            &quot;cholesterol&quot;: &quot;185mg&quot;,&#10;            &quot;carbohydrates&quot;: &quot;0.6g&quot;,&#10;            &quot;vitaminD&quot;: &quot;41 IU&quot;,&#10;            &quot;vitaminB12&quot;: &quot;0.6 mcg&quot;,&#10;            &quot;selenium&quot;: &quot;15.4 mcg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-27T00:33:19.370Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Tanvir Ahmed&quot;,&#10;              &quot;date&quot;: &quot;2025-07-22&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;Best eggs I've had in a long time. Fresh, tasty, and perfect for all my cooking needs.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Nusrat Jahan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-23&quot;,&#10;              &quot;rating&quot;: 4.8,&#10;              &quot;comment&quot;: &quot;Love that these are free-range and organic. The yolks are bright and flavorful.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Md. Faisal&quot;,&#10;              &quot;date&quot;: &quot;2025-07-25&quot;,&#10;              &quot;rating&quot;: 4.9,&#10;              &quot;comment&quot;: &quot;Great quality eggs, firm whites, and they stay fresh longer than others I've bought.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eac0&quot;,&#10;          &quot;name&quot;: &quot;Ripe Mangoes&quot;,&#10;          &quot;category&quot;: &quot;Fruits&quot;,&#10;          &quot;price&quot;: 87,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;Delicious, sun-ripened mangoes freshly harvested from the lush orchards of Sylhet. Carefully handpicked at peak ripeness by local farmer Sufia Begum, these mangoes are bursting with tropical sweetness, rich aroma, and soft, juicy flesh. Perfect for eating fresh, making smoothies, or preparing desserts, our organic mangoes are naturally grown without any synthetic chemicals, preserving their authentic taste and nutrition.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Sufia Begum&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 34&quot;,&#10;            &quot;location&quot;: &quot;Sylhet, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1622955658214-d05c1c6fcf84?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1734163075572-8948e799e42c?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1724849318956-c17403245ce4?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1723126209079-02171b5bcd86?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1699721977299-b96bfe26cee7?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;&#10;          ],&#10;          &quot;stock&quot;: 140,&#10;          &quot;features&quot;: [&#10;            &quot;Naturally ripened under the sun&quot;,&#10;            &quot;Sweet and fiberless flesh&quot;,&#10;            &quot;Handpicked from local orchards&quot;,&#10;            &quot;No artificial ripening agents used&quot;,&#10;            &quot;Ideal for juicing, smoothies, or direct consumption&quot;,&#10;            &quot;Locally sourced and ethically grown&quot;,&#10;            &quot;100% organic certified&quot;&#10;          ],&#10;          &quot;rating&quot;: 3.7,&#10;          &quot;reviewCount&quot;: 202,&#10;          &quot;isOrganic&quot;: true,&#10;          &quot;purchaseCount&quot;: 59,&#10;          &quot;storageInstructions&quot;: &quot;Store in a cool, dry place. Once ripe, refrigerate to extend freshness. Best consumed within 5–7 days after ripening.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;1 cup (165g)&quot;,&#10;            &quot;calories&quot;: 99,&#10;            &quot;protein&quot;: &quot;1.4g&quot;,&#10;            &quot;fat&quot;: &quot;0.6g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;25g&quot;,&#10;            &quot;fiber&quot;: &quot;2.6g&quot;,&#10;            &quot;sugars&quot;: &quot;23g&quot;,&#10;            &quot;vitaminC&quot;: &quot;60mg&quot;,&#10;            &quot;vitaminA&quot;: &quot;89 mcg&quot;,&#10;            &quot;potassium&quot;: &quot;277mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-26T04:45:43.739Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Ayesha Rahman&quot;,&#10;              &quot;date&quot;: &quot;2025-07-20&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Sweet and juicy mangoes, though a bit softer than I expected. Perfect for smoothies!&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Jamil Khan&quot;,&#10;              &quot;date&quot;: &quot;2025-07-21&quot;,&#10;              &quot;rating&quot;: 3.5,&#10;              &quot;comment&quot;: &quot;Good flavor but some were slightly underripe. Overall a decent buy for the price.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Fatima Noor&quot;,&#10;              &quot;date&quot;: &quot;2025-07-23&quot;,&#10;              &quot;rating&quot;: 4.2,&#10;              &quot;comment&quot;: &quot;Lovely aroma and taste, great for desserts. Wish they lasted a bit longer after ripening.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eab1&quot;,&#10;          &quot;name&quot;: &quot;Sweet Corn&quot;,&#10;          &quot;category&quot;: &quot;Vegetables&quot;,&#10;          &quot;price&quot;: 40,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;Crisp, golden-yellow sweet corn grown in the fertile lands of Rangpur. Harvested at peak ripeness, each kernel bursts with juicy sweetness and flavor. Whether grilled, boiled, or added to soups and salads, this non-GMO corn is a delicious and versatile addition to any meal. Carefully grown by Anwar Hossain of Sweet Valley Farm using natural farming practices.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Anwar Hossain&quot;,&#10;            &quot;farmName&quot;: &quot;Sweet Valley&quot;,&#10;            &quot;location&quot;: &quot;Rangpur, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://plus.unsplash.com/premium_photo-1667047165840-803e47970128?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1683543124257-1d214be3a366?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1633345817529-cca176575d34?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1635843105990-4f08403ecc12?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://plus.unsplash.com/premium_photo-1725619403774-8a32ceb2d0c1?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;&#10;          ],&#10;          &quot;stock&quot;: 90,&#10;          &quot;features&quot;: [&#10;            &quot;Naturally sweet and juicy kernels&quot;,&#10;            &quot;Bright golden-yellow color&quot;,&#10;            &quot;Ideal for boiling, roasting, or salads&quot;,&#10;            &quot;Harvested fresh from local farms&quot;,&#10;            &quot;Non-GMO&quot;,&#10;            &quot;High in dietary fiber&quot;,&#10;            &quot;Versatile cooking ingredient&quot;&#10;          ],&#10;          &quot;rating&quot;: 4.6,&#10;          &quot;reviewCount&quot;: 78,&#10;          &quot;isOrganic&quot;: false,&#10;          &quot;purchaseCount&quot;: 112,&#10;          &quot;storageInstructions&quot;: &quot;Store unshucked corn in the refrigerator and use within 3–5 days. For best flavor, cook soon after harvest.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 86,&#10;            &quot;protein&quot;: &quot;3.2g&quot;,&#10;            &quot;fat&quot;: &quot;1.2g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;19g&quot;,&#10;            &quot;fiber&quot;: &quot;2.7g&quot;,&#10;            &quot;sugars&quot;: &quot;6.3g&quot;,&#10;            &quot;vitaminC&quot;: &quot;6.8mg&quot;,&#10;            &quot;iron&quot;: &quot;0.5mg&quot;,&#10;            &quot;magnesium&quot;: &quot;37mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-26T00:48:50.266Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Jahanara&quot;,&#10;              &quot;date&quot;: &quot;2025-07-20&quot;,&#10;              &quot;rating&quot;: 5,&#10;              &quot;comment&quot;: &quot;Sweet and fresh! Perfect for grilling and salads. Definitely a pantry staple now.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Rahim&quot;,&#10;              &quot;date&quot;: &quot;2025-07-22&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Good quality corn, very juicy kernels but slightly smaller than expected.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Nadia&quot;,&#10;              &quot;date&quot;: &quot;2025-07-24&quot;,&#10;              &quot;rating&quot;: 4.5,&#10;              &quot;comment&quot;: &quot;Loved the natural sweetness and freshness. Cooked it as boiled corn and it was delicious!&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Shakil&quot;,&#10;              &quot;date&quot;: &quot;2025-07-25&quot;,&#10;              &quot;rating&quot;: 4.8,&#10;              &quot;comment&quot;: &quot;Crisp, juicy, and very fresh. Great for making corn soup. Highly recommend.&quot;&#10;            }&#10;          ]&#10;        },&#10;        {&#10;          &quot;_id&quot;: &quot;688725de224d2f673382eac7&quot;,&#10;          &quot;name&quot;: &quot;Brown Rice&quot;,&#10;          &quot;category&quot;: &quot;Grains&quot;,&#10;          &quot;price&quot;: 102,&#10;          &quot;unit&quot;: &quot;kg&quot;,&#10;          &quot;description&quot;: &quot;Naturally grown brown rice with its nutritious bran layer intact. This whole grain rice is rich in fiber, essential minerals, and antioxidants. Grown by Jahanara Begum at Farm 41 in Khulna, this rice is minimally processed to retain its natural texture and nutty flavor. Ideal for health-conscious diets and perfect for making wholesome meals like khichuri, biryani, or grain bowls.&quot;,&#10;          &quot;farmer&quot;: {&#10;            &quot;name&quot;: &quot;Jahanara Begum&quot;,&#10;            &quot;farmName&quot;: &quot;Farm 41&quot;,&#10;            &quot;location&quot;: &quot;Khulna, Bangladesh&quot;&#10;          },&#10;          &quot;images&quot;: [&#10;            &quot;https://images.unsplash.com/photo-1603133872878-684f208fb84b?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1669563794789-2412eeb7e62d?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1561767782-d8e3aa77ef77?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1606728099646-68d5a0a4d423?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;,&#10;            &quot;https://images.unsplash.com/photo-1719670712556-638018bd8238?w=600&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.1.0&quot;&#10;          ],&#10;          &quot;stock&quot;: 61,&#10;          &quot;features&quot;: [&#10;            &quot;Whole grain and high in fiber&quot;,&#10;            &quot;Unpolished for maximum nutrients&quot;,&#10;            &quot;Naturally gluten-free&quot;,&#10;            &quot;Locally grown and minimally processed&quot;,&#10;            &quot;Ideal for diabetic and heart-healthy diets&quot;,&#10;            &quot;Nutty flavor and chewy texture&quot;,&#10;            &quot;Eco-friendly farming practices&quot;&#10;          ],&#10;          &quot;rating&quot;: 3.7,&#10;          &quot;reviewCount&quot;: 207,&#10;          &quot;isOrganic&quot;: true,&#10;          &quot;purchaseCount&quot;: 275,&#10;          &quot;storageInstructions&quot;: &quot;Store in an airtight container in a cool, dry place. Best used within 6 months for optimal freshness.&quot;,&#10;          &quot;nutritionalInformation&quot;: {&#10;            &quot;servingSize&quot;: &quot;100g&quot;,&#10;            &quot;calories&quot;: 111,&#10;            &quot;protein&quot;: &quot;2.6g&quot;,&#10;            &quot;fat&quot;: &quot;0.9g&quot;,&#10;            &quot;carbohydrates&quot;: &quot;23g&quot;,&#10;            &quot;fiber&quot;: &quot;1.8g&quot;,&#10;            &quot;iron&quot;: &quot;0.4mg&quot;,&#10;            &quot;magnesium&quot;: &quot;43mg&quot;,&#10;            &quot;vitaminB6&quot;: &quot;0.1mg&quot;&#10;          },&#10;          &quot;createdAt&quot;: &quot;2025-07-25T00:39:25.618Z&quot;,&#10;          &quot;updatedAt&quot;: &quot;2025-07-28T14:39:00.000Z&quot;,&#10;          &quot;reviews&quot;: [&#10;            {&#10;              &quot;reviewer&quot;: &quot;Farida&quot;,&#10;              &quot;date&quot;: &quot;2025-07-15&quot;,&#10;              &quot;rating&quot;: 4,&#10;              &quot;comment&quot;: &quot;Good quality rice with a nice nutty flavor. Takes a bit longer to cook but worth the health benefits.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Rafiq&quot;,&#10;              &quot;date&quot;: &quot;2025-07-18&quot;,&#10;              &quot;rating&quot;: 3.5,&#10;              &quot;comment&quot;: &quot;Healthy option but the texture is a bit chewy for my liking. Great for biryani though!&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Sumaiya&quot;,&#10;              &quot;date&quot;: &quot;2025-07-21&quot;,&#10;              &quot;rating&quot;: 3.8,&#10;              &quot;comment&quot;: &quot;Organic and fresh, but I wish it was a little softer after cooking. Overall, a good choice.&quot;&#10;            },&#10;            {&#10;              &quot;reviewer&quot;: &quot;Habib&quot;,&#10;              &quot;date&quot;: &quot;2025-07-24&quot;,&#10;              &quot;rating&quot;: 4.2,&#10;              &quot;comment&quot;: &quot;Perfect for healthy meals and has a nice natural flavor. I use it regularly for my family.&quot;&#10;            }&#10;          ]&#10;        }&#10;        // Continue with remaining 30+ products...&#10;      ]&#10;    }&#10;  ]&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/scripts/import-products.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/scripts/import-products.js" />
              <option name="updatedContent" value="// Import script to upload products to MongoDB&#10;const { MongoClient } = require('mongodb');&#10;const fs = require('fs');&#10;const path = require('path');&#10;&#10;// Read your connection string from environment or replace with your actual connection string&#10;const MONGODB_URI = process.env.MONGODB_URI || 'your-mongodb-connection-string-here';&#10;&#10;async function importProducts() {&#10;  try {&#10;    // Read the products JSON file&#10;    const productsPath = path.join(__dirname, '..', 'products.json');&#10;    const productsData = JSON.parse(fs.readFileSync(productsPath, 'utf8'));&#10;    &#10;    console.log(`Found ${productsData.length} products to import`);&#10;&#10;    // Connect to MongoDB&#10;    const client = new MongoClient(MONGODB_URI);&#10;    await client.connect();&#10;    &#10;    const db = client.db('farmfresh');&#10;    const collection = db.collection('products');&#10;    &#10;    // Clear existing products (optional - remove this line if you want to keep existing data)&#10;    await collection.deleteMany({});&#10;    console.log('Cleared existing products');&#10;    &#10;    // Insert all products&#10;    const result = await collection.insertMany(productsData);&#10;    console.log(`Successfully imported ${result.insertedCount} products`);&#10;    &#10;    await client.close();&#10;    console.log('Import completed successfully!');&#10;    &#10;  } catch (error) {&#10;    console.error('Error importing products:', error);&#10;  }&#10;}&#10;&#10;importProducts();" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>