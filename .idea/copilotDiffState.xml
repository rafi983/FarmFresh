<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/add-farming-methods-to-all.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/add-farming-methods-to-all.js" />
              <option name="originalContent" value="&#10;    });&#10;&#10;    console.log(`\n5.  SUMMARY:`);&#10;    console.log(`Total farmers: ${allFarmers.length}`);&#10;    console.log(`Successfully updated: ${successCount}`);&#10;    console.log(`Errors: ${errorCount}`);&#10;    console.log(&#10;      `Farmers with methods: ${farmersWithMethods.length} (${((farmersWithMethods.length / allFarmers.length) * 100).toFixed(1)}%)`,&#10;    );&#10;&#10;    if (farmersWithMethods.length === allFarmers.length) {&#10;      console.log(&#10;        `\n SUCCESS! All farmers now have farming methods defined!`,&#10;      );&#10;    }&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;addFarmingMethodsToAllFarmers().catch(console.error);&#10;" />
              <option name="updatedContent" value="const { MongoClient, ObjectId } = require(&quot;mongodb&quot;);&#10;&#10;async function addFarmingMethodsToAllFarmers() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017/farmfresh&quot;);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot; ADDING FARMING METHODS TO FARMERS WITHOUT THEM\n&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Define appropriate farming methods for each farmer based on their specializations and farm type&#10;    const farmerMethods = {&#10;      // Farmers without farmInfo.farmingMethods currently&#10;      &quot;688b5723287e9adbc28801dc&quot;: [&quot;Sustainable&quot;, &quot;Traditional&quot;], // unnamed farmer&#10;      &quot;6888b23e626cff1716f3353c&quot;: [&quot;Organic&quot;, &quot;Sustainable&quot;, &quot;Traditional&quot;], // kazi abrar (vegetables)&#10;      &quot;688b3f4f37eade0f39f64de2&quot;: [&#10;        &quot;Traditional&quot;,&#10;        &quot;Sustainable&quot;,&#10;        &quot;Mixed Farming&quot;,&#10;      ], // chashi jashim (mixed)&#10;      &quot;689054bb0f308009e3dd8225&quot;: [&#10;        &quot;Free-range&quot;,&#10;        &quot;Animal Welfare&quot;,&#10;        &quot;Sustainable&quot;,&#10;      ], // sharif hossain (poultry)&#10;      &quot;6898578b2fcd466685f715f5&quot;: [&#10;        &quot;Traditional&quot;,&#10;        &quot;Grain Cultivation&quot;,&#10;        &quot;Sustainable&quot;,&#10;      ], // kashem ali (grains)&#10;      farmer_001: [&quot;Traditional&quot;, &quot;Grain Production&quot;, &quot;Natural Beekeeping&quot;], // Abdul fakir (Grains, Honey)&#10;      farmer_002: [&quot;Organic&quot;, &quot;Fruit Cultivation&quot;, &quot;Herb Growing&quot;], // Sufia akhter (Fruits, Herbs)&#10;      farmer_006: [&quot;Hydroponic&quot;, &quot;Organic&quot;, &quot;Sustainable&quot;], // Mostafa Kabir (hydroponic farm)&#10;    };&#10;&#10;    console.log(&quot;1.  FARMERS TO UPDATE:&quot;);&#10;    for (const [farmerId, methods] of Object.entries(farmerMethods)) {&#10;      console.log(`- ${farmerId}: [${methods.join(&quot;, &quot;)}]`);&#10;    }&#10;&#10;    console.log(&quot;\n2.  UPDATING FARMERS WITH FARMING METHODS...&quot;);&#10;&#10;    let successCount = 0;&#10;    let errorCount = 0;&#10;&#10;    for (const [farmerId, methods] of Object.entries(farmerMethods)) {&#10;      try {&#10;        // Check if farmer exists first&#10;        const farmer = await db.collection(&quot;farmers&quot;).findOne({&#10;          _id: farmerId.startsWith('688') || farmerId.startsWith('689') ? new ObjectId(farmerId) : farmerId&#10;        });&#10;&#10;        if (!farmer) {&#10;          console.log(`⚠️  Farmer ${farmerId} not found, skipping...`);&#10;          continue;&#10;        }&#10;&#10;        console.log(`\nUpdating ${farmer.name || &quot;unnamed&quot;} (${farmerId})...`);&#10;&#10;        // Prepare update data&#10;        const updateData = {&#10;          $set: {&#10;            &quot;farmInfo.farmingMethods&quot;: methods,&#10;            updatedAt: new Date(),&#10;          },&#10;        };&#10;&#10;        // If farmInfo doesn't exist, create it&#10;        if (!farmer.farmInfo) {&#10;          updateData.$set.farmInfo = {&#10;            farmName: farmer.farmName || `Farm ${farmerId}`,&#10;            farmDescription: &quot;&quot;,&#10;            farmSize: farmer.farmSize || null,&#10;            farmType: farmer.farmType || &quot;Mixed Farming&quot;,&#10;            certifications: [],&#10;            establishedYear: null,&#10;            farmingMethods: methods,&#10;          };&#10;        }&#10;&#10;        const result = await db&#10;          .collection(&quot;farmers&quot;)&#10;          .updateOne({ _id: farmer._id }, updateData);&#10;&#10;        if (result.modifiedCount &gt; 0) {&#10;          console.log(`  ✅ Updated successfully`);&#10;          successCount++;&#10;        } else {&#10;          console.log(`  ⚠️  No changes made`);&#10;        }&#10;      } catch (error) {&#10;        console.log(`  ❌ Error updating ${farmerId}: ${error.message}`);&#10;        errorCount++;&#10;      }&#10;    }&#10;&#10;    console.log(&quot;\n3.  VERIFYING UPDATES...&quot;);&#10;&#10;    // Verify all farmers now have farming methods&#10;    const allFarmers = await db.collection(&quot;farmers&quot;).find({}).toArray();&#10;&#10;    const farmersWithMethods = [];&#10;    const farmersWithoutMethods = [];&#10;&#10;    allFarmers.forEach((farmer) =&gt; {&#10;      const hasMethods =&#10;        farmer.farmInfo?.farmingMethods &amp;&amp;&#10;        Array.isArray(farmer.farmInfo.farmingMethods) &amp;&amp;&#10;        farmer.farmInfo.farmingMethods.length &gt; 0;&#10;&#10;      if (hasMethods) {&#10;        farmersWithMethods.push(farmer);&#10;      } else {&#10;        farmersWithoutMethods.push(farmer);&#10;      }&#10;    });&#10;&#10;    console.log(`\n4.  FINAL RESULTS:`);&#10;    console.log(&#10;      `✅ Farmers with farming methods: ${farmersWithMethods.length}`,&#10;    );&#10;    farmersWithMethods.forEach((farmer) =&gt; {&#10;      console.log(&#10;        `  - ${farmer.name || &quot;unnamed&quot;}: [${farmer.farmInfo.farmingMethods.join(&quot;, &quot;)}]`,&#10;      );&#10;    });&#10;&#10;    console.log(&#10;      `\n❌ Farmers still without farming methods: ${farmersWithoutMethods.length}`,&#10;    );&#10;    farmersWithoutMethods.forEach((farmer) =&gt; {&#10;      console.log(`  - ${farmer.name || &quot;unnamed&quot;} (${farmer._id})`);&#10;    });&#10;&#10;    console.log(`\n5.  SUMMARY:`);&#10;    console.log(`Total farmers: ${allFarmers.length}`);&#10;    console.log(`Successfully updated: ${successCount}`);&#10;    console.log(`Errors: ${errorCount}`);&#10;    console.log(&#10;      `Farmers with methods: ${farmersWithMethods.length} (${((farmersWithMethods.length / allFarmers.length) * 100).toFixed(1)}%)`,&#10;    );&#10;&#10;    if (farmersWithMethods.length === allFarmers.length) {&#10;      console.log(&#10;        `\n SUCCESS! All farmers now have farming methods defined!`,&#10;      );&#10;    }&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;addFarmingMethodsToAllFarmers().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/add-reviews-to-all.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/add-reviews-to-all.js" />
              <option name="updatedContent" value="// Add reviews to ALL products that don't have any reviews&#10;const { MongoClient, ObjectId } = require('mongodb');&#10;&#10;async function addReviewsToAllProducts() {&#10;  const client = new MongoClient('mongodb://localhost:27017');&#10;  await client.connect();&#10;  const db = client.db('farmfresh');&#10;  &#10;  // Get ALL products&#10;  const allProducts = await db.collection('products').find({}).toArray();&#10;  console.log(`Found ${allProducts.length} total products`);&#10;  &#10;  // Get all existing reviews&#10;  const existingReviews = await db.collection('reviews').find({}).toArray();&#10;  const reviewedProductIds = [...new Set(existingReviews.map(r =&gt; r.productId))];&#10;  console.log(`Found ${existingReviews.length} existing reviews for ${reviewedProductIds.length} products`);&#10;  &#10;  // Find products that have NO reviews&#10;  const productsWithoutReviews = allProducts.filter(product =&gt; &#10;    !reviewedProductIds.includes(product._id.toString())&#10;  );&#10;  &#10;  console.log(`Found ${productsWithoutReviews.length} products WITHOUT reviews`);&#10;  console.log('Products without reviews:');&#10;  productsWithoutReviews.forEach(p =&gt; console.log(`- ${p.name} (ID: ${p._id})`));&#10;  &#10;  // Add sample reviews to products without reviews&#10;  for (const product of productsWithoutReviews) {&#10;    const ratings = [4, 4.5, 5, 3.5, 4.5]; // Random good ratings&#10;    const numReviews = Math.floor(Math.random() * 3) + 2; // 2-4 reviews per product&#10;    &#10;    const sampleReviews = [];&#10;    for (let i = 0; i &lt; numReviews; i++) {&#10;      const rating = ratings[Math.floor(Math.random() * ratings.length)];&#10;      sampleReviews.push({&#10;        productId: product._id.toString(),&#10;        userId: `sample-user-${i + 1}`,&#10;        reviewer: ['John Doe', 'Jane Smith', 'Mike Johnson', 'Sarah Wilson', 'David Brown'][i] || 'Anonymous',&#10;        rating: rating,&#10;        comment: [&#10;          `Great quality ${product.name}! Fresh and delicious.`,&#10;          `Excellent ${product.name}. Highly recommended!`,&#10;          `Good quality ${product.name}. Will buy again.`,&#10;          `Amazing ${product.name}! Worth every penny.`,&#10;          `Perfect ${product.name}. Fast delivery too!`&#10;        ][i] || `Nice ${product.name}!`,&#10;        createdAt: new Date(Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000), // Random date within last 30 days&#10;        updatedAt: new Date()&#10;      });&#10;    }&#10;    &#10;    await db.collection('reviews').insertMany(sampleReviews);&#10;    console.log(`✅ Added ${numReviews} reviews for ${product.name}`);&#10;  }&#10;  &#10;  console.log(`✅ Successfully added reviews to ${productsWithoutReviews.length} products!`);&#10;  await client.close();&#10;}&#10;&#10;addReviewsToAllProducts().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/add-reviews-to-old.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/add-reviews-to-old.js" />
              <option name="updatedContent" value="// Add sample reviews to some old products that currently have no reviews&#10;const { MongoClient, ObjectId } = require('mongodb');&#10;&#10;async function addReviewsToOldProducts() {&#10;  const client = new MongoClient('mongodb://localhost:27017');&#10;  await client.connect();&#10;  const db = client.db('farmfresh');&#10;  &#10;  // Get old products that have no reviews (excluding mango and top grain)&#10;  const oldProducts = await db.collection('products').find({&#10;    _id: { &#10;      $nin: [&#10;        new ObjectId('6889cb7ab6d22dd651140bee'), // mango&#10;        new ObjectId('688affa63c35c3c0ff9c4925')  // top grain&#10;      ]&#10;    }&#10;  }).limit(5).toArray(); // Just add reviews to first 5 old products&#10;  &#10;  console.log(`Adding sample reviews to ${oldProducts.length} old products...\n`);&#10;  &#10;  const sampleReviewers = [&#10;    'Alice Johnson', 'Bob Smith', 'Carol Davis', 'David Wilson', 'Emma Brown',&#10;    'Frank Miller', 'Grace Lee', 'Henry Taylor', 'Ivy Chen', 'Jack Anderson'&#10;  ];&#10;  &#10;  const sampleComments = [&#10;    'Excellent quality! Fresh and delicious.',&#10;    'Great product, will buy again.',&#10;    'Very satisfied with the freshness.',&#10;    'Good value for money.',&#10;    'Highly recommended!',&#10;    'Perfect quality, as expected.',&#10;    'Fresh and tasty!',&#10;    'Amazing product quality.',&#10;    'Will definitely order again.',&#10;    'Best quality I\'ve found!'&#10;  ];&#10;  &#10;  for (const product of oldProducts) {&#10;    const numReviews = Math.floor(Math.random() * 4) + 2; // 2-5 reviews per product&#10;    const reviews = [];&#10;    &#10;    for (let i = 0; i &lt; numReviews; i++) {&#10;      const rating = [4, 4.5, 5, 3.5, 4.5][Math.floor(Math.random() * 5)]; // Good ratings&#10;      const reviewer = sampleReviewers[Math.floor(Math.random() * sampleReviewers.length)];&#10;      const comment = sampleComments[Math.floor(Math.random() * sampleComments.length)];&#10;      &#10;      reviews.push({&#10;        productId: product._id.toString(),&#10;        userId: `sample-user-${i + 1}`,&#10;        reviewer: reviewer,&#10;        rating: rating,&#10;        comment: `${comment} ${product.name} exceeded my expectations!`,&#10;        createdAt: new Date(Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000), // Random date within last 30 days&#10;        updatedAt: new Date()&#10;      });&#10;    }&#10;    &#10;    await db.collection('reviews').insertMany(reviews);&#10;    console.log(`✅ Added ${numReviews} reviews to ${product.name}`);&#10;  }&#10;  &#10;  console.log(`\n Successfully added reviews to ${oldProducts.length} old products!`);&#10;  console.log('Now refresh your products page - these products should show star ratings!');&#10;  &#10;  await client.close();&#10;}&#10;&#10;addReviewsToOldProducts().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/add-sample-reviews.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/add-sample-reviews.js" />
              <option name="updatedContent" value="// Add sample reviews to existing products&#10;const { MongoClient, ObjectId } = require('mongodb');&#10;&#10;async function addSampleReviews() {&#10;  const client = new MongoClient('mongodb://localhost:27017');&#10;  await client.connect();&#10;  const db = client.db('farmfresh');&#10;  &#10;  // Get the first 3 existing products&#10;  const products = await db.collection('products').find({}).limit(3).toArray();&#10;  &#10;  console.log('Adding sample reviews to existing products...');&#10;  &#10;  for (const product of products) {&#10;    // Add 2-3 sample reviews for each product&#10;    const sampleReviews = [&#10;      {&#10;        productId: product._id.toString(),&#10;        userId: 'sample-user-1',&#10;        reviewer: 'John Doe',&#10;        rating: 4.5,&#10;        comment: `Great quality ${product.name}! Fresh and delicious.`,&#10;        createdAt: new Date(),&#10;        updatedAt: new Date()&#10;      },&#10;      {&#10;        productId: product._id.toString(),&#10;        userId: 'sample-user-2', &#10;        reviewer: 'Jane Smith',&#10;        rating: 5,&#10;        comment: `Excellent ${product.name}. Highly recommended!`,&#10;        createdAt: new Date(),&#10;        updatedAt: new Date()&#10;      },&#10;      {&#10;        productId: product._id.toString(),&#10;        userId: 'sample-user-3',&#10;        reviewer: 'Mike Johnson', &#10;        rating: 4,&#10;        comment: `Good quality ${product.name}. Will buy again.`,&#10;        createdAt: new Date(),&#10;        updatedAt: new Date()&#10;      }&#10;    ];&#10;    &#10;    await db.collection('reviews').insertMany(sampleReviews);&#10;    console.log(`✅ Added 3 reviews for ${product.name}`);&#10;  }&#10;  &#10;  console.log('✅ Sample reviews added successfully!');&#10;  await client.close();&#10;}&#10;&#10;addSampleReviews().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/analyze-fatema-issue.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/analyze-fatema-issue.js" />
              <option name="originalContent" value="&#10;    // Summary and recommendations&#10;    console.log(&quot;\n SUMMARY &amp; RECOMMENDATIONS:&quot;);&#10;&#10;    if (sweetCorn.farmerId !== fatema._id) {&#10;      console.log(&quot;⚠️  Issue: Product farmerId doesn't match Fatema's ID&quot;);&#10;    }&#10;&#10;    if (sweetCorn.farmerEmail !== fatema.email) {&#10;      console.log(&#10;        &quot;⚠️  Issue: Product farmerEmail doesn't match Fatema's email&quot;,&#10;      );&#10;    }&#10;&#10;    if (&#10;      sweetCorn.category === &quot;Vegetables&quot; &amp;&amp;&#10;      sweetCorn.farmerId === fatema._id&#10;    ) {&#10;      console.log(&quot;✅ Product is correctly categorized and linked to Fatema&quot;);&#10;      console.log(&#10;        &quot;❓ Issue might be in the frontend filtering or display logic&quot;,&#10;      );&#10;      console.log(&quot;   Check farmer details page filtering logic for products&quot;);&#10;      console.log(&quot;   Check analytics tab category filtering&quot;);&#10;    }&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;  }&#10;}&#10;&#10;analyzeFatemaIssue().catch(console.error);&#10;" />
              <option name="updatedContent" value="&#10;    // Summary and recommendations&#10;    console.log(&quot;\n SUMMARY &amp; RECOMMENDATIONS:&quot;);&#10;&#10;    if (sweetCorn.farmerId !== fatema._id) {&#10;      console.log(&quot;⚠️  Issue: Product farmerId doesn't match Fatema's ID&quot;);&#10;    }&#10;&#10;    if (sweetCorn.farmerEmail !== fatema.email) {&#10;      console.log(&#10;        &quot;⚠️  Issue: Product farmerEmail doesn't match Fatema's email&quot;,&#10;      );&#10;    }&#10;&#10;    if (&#10;      sweetCorn.category === &quot;Vegetables&quot; &amp;&amp;&#10;      sweetCorn.farmerId === fatema._id&#10;    ) {&#10;      console.log(&quot;✅ Product is correctly categorized and linked to Fatema&quot;);&#10;      console.log(&#10;        &quot;❓ Issue might be in the frontend filtering or display logic&quot;,&#10;      );&#10;      console.log(&quot;   Check farmer details page filtering logic for products&quot;);&#10;      console.log(&quot;   Check analytics tab category filtering&quot;);&#10;    }&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;  }&#10;}&#10;&#10;analyzeFatemaIssue().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/debug/clear-cache/route.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/debug/clear-cache/route.js" />
              <option name="updatedContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;import { responseCache, clearProductsCache, clearAllProductsCaches } from &quot;@/app/api/products/route&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;&#10;export async function POST() {&#10;  try {&#10;    console.log(' Starting cache clear process...');&#10;    &#10;    // Clear all product caches&#10;    clearAllProductsCaches();&#10;    console.log('✅ Cleared all products caches');&#10;    &#10;    // Also clear the response cache directly&#10;    if (responseCache &amp;&amp; typeof responseCache.clear === 'function') {&#10;      responseCache.clear();&#10;      console.log('✅ Cleared response cache');&#10;    }&#10;    &#10;    // Verify current Green Beans data from database&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;    &#10;    console.log('\n VERIFYING CURRENT GREEN BEANS DATA:');&#10;    const greenBeans = await db.collection('products').findOne({&#10;      name: 'Green Beans'&#10;    });&#10;    &#10;    let greenBeansInfo = null;&#10;    if (greenBeans) {&#10;      greenBeansInfo = {&#10;        name: greenBeans.name,&#10;        farmerId: greenBeans.farmerId,&#10;        farmerEmail: greenBeans.farmerEmail,&#10;        farmerName: greenBeans.farmerName,&#10;        embeddedFarmerId: greenBeans.farmer?._id,&#10;        embeddedFarmerName: greenBeans.farmer?.name,&#10;        embeddedFarmerEmail: greenBeans.farmer?.email&#10;      };&#10;      console.log('Green Beans current data:', greenBeansInfo);&#10;    }&#10;    &#10;    // Check Mostafa's current products&#10;    console.log('\n CHECKING MOSTAFA\'S CURRENT PRODUCTS:');&#10;    const mostafaProducts = await db.collection('products').find({&#10;      $or: [&#10;        { farmerId: 'farmer_006' },&#10;        { 'farmer._id': 'farmer_006' },&#10;        { farmerName: 'Mostafa Kabir' }&#10;      ]&#10;    }).toArray();&#10;    &#10;    const mostafaProductsList = mostafaProducts.map(product =&gt; ({&#10;      name: product.name,&#10;      farmerId: product.farmerId,&#10;      farmerName: product.farmerName || product.farmer?.name&#10;    }));&#10;    &#10;    console.log(`Found ${mostafaProducts.length} products for Mostafa Kabir:`, mostafaProductsList);&#10;    &#10;    // Check Mizanur's current products  &#10;    console.log('\n CHECKING MIZANUR\'S CURRENT PRODUCTS:');&#10;    const mizanurProducts = await db.collection('products').find({&#10;      $or: [&#10;        { farmerId: 'farmer_005' },&#10;        { 'farmer._id': 'farmer_005' },&#10;        { farmerName: 'Mizanur Rahman' }&#10;      ]&#10;    }).toArray();&#10;    &#10;    const mizanurProductsList = mizanurProducts.map(product =&gt; ({&#10;      name: product.name,&#10;      farmerId: product.farmerId,&#10;      farmerName: product.farmerName || product.farmer?.name&#10;    }));&#10;    &#10;    console.log(`Found ${mizanurProducts.length} products for Mizanur Rahman:`, mizanurProductsList);&#10;    &#10;    return NextResponse.json({&#10;      success: true,&#10;      message: 'Cache cleared successfully',&#10;      data: {&#10;        greenBeansInfo,&#10;        mostafaProductsCount: mostafaProducts.length,&#10;        mostafaProducts: mostafaProductsList,&#10;        mizanurProductsCount: mizanurProducts.length,&#10;        mizanurProducts: mizanurProductsList,&#10;        cacheCleared: true,&#10;        timestamp: new Date().toISOString()&#10;      }&#10;    });&#10;    &#10;  } catch (error) {&#10;    console.error('❌ Error clearing cache:', error);&#10;    return NextResponse.json({&#10;      success: false,&#10;      error: error.message,&#10;      message: 'Failed to clear cache'&#10;    }, { status: 500 });&#10;  }&#10;}&#10;&#10;export async function GET() {&#10;  try {&#10;    // Just return current cache status and data verification&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;    &#10;    const greenBeans = await db.collection('products').findOne({&#10;      name: 'Green Beans'&#10;    });&#10;    &#10;    const mostafaProducts = await db.collection('products').find({&#10;      $or: [&#10;        { farmerId: 'farmer_006' },&#10;        { 'farmer._id': 'farmer_006' },&#10;        { farmerName: 'Mostafa Kabir' }&#10;      ]&#10;    }).toArray();&#10;    &#10;    return NextResponse.json({&#10;      success: true,&#10;      data: {&#10;        greenBeansCurrentOwner: greenBeans ? {&#10;          farmerId: greenBeans.farmerId,&#10;          farmerName: greenBeans.farmerName,&#10;          embeddedFarmerId: greenBeans.farmer?._id,&#10;          embeddedFarmerName: greenBeans.farmer?.name&#10;        } : null,&#10;        mostafaProductsCount: mostafaProducts.length,&#10;        mostafaProducts: mostafaProducts.map(p =&gt; p.name),&#10;        cacheStatus: 'Active (5 minute TTL)',&#10;        timestamp: new Date().toISOString()&#10;      }&#10;    });&#10;    &#10;  } catch (error) {&#10;    return NextResponse.json({&#10;      success: false,&#10;      error: error.message&#10;    }, { status: 500 });&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/debug/clear-react-query-cache/route.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/debug/clear-react-query-cache/route.js" />
              <option name="updatedContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;&#10;export async function POST() {&#10;  try {&#10;    // This endpoint can be called to signal cache clearing&#10;    // The actual cache clearing happens on the client side&#10;    return NextResponse.json({&#10;      success: true,&#10;      message: &quot;Cache clear signal sent&quot;,&#10;      timestamp: new Date().toISOString()&#10;    });&#10;  } catch (error) {&#10;    return NextResponse.json({&#10;      success: false,&#10;      error: error.message&#10;    }, { status: 500 });&#10;  }&#10;}&#10;&#10;export async function GET() {&#10;  return NextResponse.json({&#10;    message: &quot;Cache clearing endpoint&quot;,&#10;    instructions: &quot;Use POST method to signal cache clearing&quot;&#10;  });&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/farmers/migrate/route.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/farmers/migrate/route.js" />
              <option name="updatedContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;&#10;export async function POST(request) {&#10;  try {&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;    const usersCollection = db.collection(&quot;users&quot;);&#10;    const farmersCollection = db.collection(&quot;farmers&quot;);&#10;&#10;    // Find all users with userType &quot;farmer&quot;&#10;    const farmerUsers = await usersCollection.find({ userType: &quot;farmer&quot; }).toArray();&#10;    &#10;    console.log(`Found ${farmerUsers.length} farmer users to migrate`);&#10;&#10;    let migratedCount = 0;&#10;    let skippedCount = 0;&#10;&#10;    for (const user of farmerUsers) {&#10;      // Check if farmer already exists in farmers collection&#10;      const existingFarmer = await farmersCollection.findOne({ _id: user._id });&#10;      &#10;      if (!existingFarmer) {&#10;        // Create farmer document&#10;        const farmerData = {&#10;          _id: user._id,&#10;          name: user.name || `${user.firstName} ${user.lastName}`,&#10;          email: user.email,&#10;          phone: user.phone || &quot;&quot;,&#10;          location: user.address || &quot;&quot;,&#10;          farmName: user.farmDetails?.farmName || `${user.name}'s Farm`,&#10;          specializations: user.farmDetails?.specialization ? &#10;            Array.isArray(user.farmDetails.specialization) ? &#10;              user.farmDetails.specialization : &#10;              [user.farmDetails.specialization] : &#10;            [&quot;General Farming&quot;],&#10;          farmSize: user.farmDetails?.farmSize || null,&#10;          farmSizeUnit: user.farmDetails?.farmSizeUnit || &quot;acres&quot;,&#10;          bio: user.bio || &quot;&quot;,&#10;          profilePicture: user.profilePicture || null,&#10;          rating: 0,&#10;          totalReviews: 0,&#10;          verified: false,&#10;          joinedDate: user.createdAt || new Date(),&#10;          products: [],&#10;          orders: [],&#10;          availability: {&#10;            status: &quot;available&quot;,&#10;            schedule: {&#10;              monday: { start: &quot;09:00&quot;, end: &quot;17:00&quot;, available: true },&#10;              tuesday: { start: &quot;09:00&quot;, end: &quot;17:00&quot;, available: true },&#10;              wednesday: { start: &quot;09:00&quot;, end: &quot;17:00&quot;, available: true },&#10;              thursday: { start: &quot;09:00&quot;, end: &quot;17:00&quot;, available: true },&#10;              friday: { start: &quot;09:00&quot;, end: &quot;17:00&quot;, available: true },&#10;              saturday: { start: &quot;09:00&quot;, end: &quot;15:00&quot;, available: true },&#10;              sunday: { start: &quot;10:00&quot;, end: &quot;14:00&quot;, available: false }&#10;            }&#10;          },&#10;          socialMedia: {&#10;            facebook: &quot;&quot;,&#10;            instagram: &quot;&quot;,&#10;            twitter: &quot;&quot;,&#10;            website: &quot;&quot;&#10;          },&#10;          certifications: [],&#10;          deliveryOptions: {&#10;            farmPickup: true,&#10;            localDelivery: false,&#10;            shipping: false,&#10;            deliveryRadius: 0&#10;          },&#10;          createdAt: user.createdAt || new Date(),&#10;          updatedAt: new Date()&#10;        };&#10;&#10;        // Insert farmer&#10;        await farmersCollection.insertOne(farmerData);&#10;        console.log(`✅ Migrated farmer: ${farmerData.name}`);&#10;        migratedCount++;&#10;      } else {&#10;        console.log(`⚠️  Farmer ${user.name} already exists in farmers collection`);&#10;        skippedCount++;&#10;      }&#10;    }&#10;&#10;    // Get final count&#10;    const totalFarmers = await farmersCollection.countDocuments();&#10;    &#10;    return NextResponse.json({&#10;      success: true,&#10;      message: &quot;Farmer migration completed&quot;,&#10;      results: {&#10;        farmersFound: farmerUsers.length,&#10;        migrated: migratedCount,&#10;        skipped: skippedCount,&#10;        totalFarmersInCollection: totalFarmers&#10;      }&#10;    });&#10;    &#10;  } catch (error) {&#10;    console.error(&quot;Migration error:&quot;, error);&#10;    return NextResponse.json(&#10;      { &#10;        success: false, &#10;        error: &quot;Failed to migrate farmers&quot;,&#10;        message: error.message &#10;      },&#10;      { status: 500 }&#10;    );&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/api/messages/[conversationId]/read/route.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/messages/[conversationId]/read/route.js" />
              <option name="originalContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;import { ObjectId } from &quot;mongodb&quot;;&#10;import { getServerSession } from &quot;next-auth/next&quot;;&#10;import { authOptions } from &quot;../../auth/[...nextauth]/route&quot;;&#10;&#10;export async function PUT(request, { params }) {&#10;  try {&#10;    const session = await getServerSession(authOptions);&#10;    if (!session) {&#10;      return NextResponse.json({ error: &quot;Unauthorized&quot; }, { status: 401 });&#10;    }&#10;&#10;    const conversationId = params.conversationId;&#10;" />
              <option name="updatedContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;import { ObjectId } from &quot;mongodb&quot;;&#10;import { getServerSession } from &quot;next-auth/next&quot;;&#10;import { authOptions } from &quot;../../../auth/[...nextauth]/route&quot;;&#10;&#10;export async function PUT(request, { params }) {&#10;  try {&#10;    const session = await getServerSession(authOptions);&#10;    if (!session) {&#10;      return NextResponse.json({ error: &quot;Unauthorized&quot; }, { status: 401 });&#10;    }&#10;&#10;    // Await params before using its properties&#10;    const { conversationId } = await params;&#10;    if (!conversationId) {&#10;      return NextResponse.json(&#10;        { error: &quot;Conversation ID required&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    // Enhanced user ID detection&#10;    const currentUser = session.user;&#10;    const userId =&#10;      currentUser?.id ||&#10;      currentUser?._id ||&#10;      currentUser?.userId ||&#10;      currentUser?.sub ||&#10;      currentUser?.email;&#10;&#10;    if (!userId) {&#10;      console.error(&quot;❌ No user ID found for marking conversation as read&quot;);&#10;      return NextResponse.json(&#10;        { error: &quot;Invalid user session&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farm-fresh&quot;);&#10;&#10;    // Mark all messages in this conversation as read for the current user&#10;    const result = await db.collection(&quot;messages&quot;).updateMany(&#10;      {&#10;        conversationId: new ObjectId(conversationId),&#10;        receiverId: new ObjectId(userId),&#10;        isRead: false,&#10;      },&#10;      {&#10;        $set: {&#10;          isRead: true,&#10;          readAt: new Date(),&#10;        },&#10;      },&#10;    );&#10;&#10;    return NextResponse.json({&#10;      success: true,&#10;      markedAsRead: result.modifiedCount,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error marking conversation as read:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Internal server error&quot; },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/bookings/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/bookings/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useMemo, useCallback, useEffect } from &quot;react&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useRouter } from &quot;next/navigation&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;import ReorderModal from &quot;@/components/ReorderModal&quot;;&#10;import { useReorder } from &quot;@/hooks/useReorder&quot;;&#10;import { useOrdersQuery, useOrdersCache } from &quot;@/hooks/useOrdersQuery&quot;;&#10;&#10;// Constants for better maintainability&#10;const ORDER_STATUSES = {&#10;  ALL: &quot;All Orders&quot;,&#10;  PENDING: &quot;pending&quot;,&#10;  CONFIRMED: &quot;confirmed&quot;,&#10;  SHIPPED: &quot;shipped&quot;,&#10;  DELIVERED: &quot;delivered&quot;,&#10;  CANCELLED: &quot;cancelled&quot;,&#10;};&#10;&#10;const DATE_FILTERS = {&#10;  ALL: &quot;all&quot;,&#10;  TODAY: &quot;today&quot;,&#10;  WEEK: &quot;week&quot;,&#10;  MONTH: &quot;month&quot;,&#10;};&#10;&#10;const SORT_OPTIONS = {&#10;  NEWEST: &quot;newest&quot;,&#10;  OLDEST: &quot;oldest&quot;,&#10;  HIGHEST: &quot;highest&quot;,&#10;  LOWEST: &quot;lowest&quot;,&#10;};&#10;&#10;const VIEW_MODES = {&#10;  CARDS: &quot;cards&quot;,&#10;  LIST: &quot;list&quot;,&#10;};&#10;&#10;// Custom hooks for better code organization&#10;const useOrderStats = (orders) =&gt; {&#10;  return useMemo(() =&gt; {&#10;    const total = orders.length;&#10;    const delivered = orders.filter(&#10;      (order) =&gt; order.status === &quot;delivered&quot;,&#10;    ).length;&#10;    const pending = orders.filter((order) =&gt; order.status === &quot;pending&quot;).length;&#10;    const totalSpent = orders.reduce(&#10;      (sum, order) =&gt; sum + (order.total || 0),&#10;      0,&#10;    );&#10;&#10;    return { total, delivered, pending, totalSpent };&#10;  }, [orders]);&#10;};&#10;&#10;const useOrderFilters = (orders) =&gt; {&#10;  const [statusFilter, setStatusFilter] = useState(ORDER_STATUSES.ALL);&#10;  const [searchTerm, setSearchTerm] = useState(&quot;&quot;);&#10;  const [dateFilter, setDateFilter] = useState(DATE_FILTERS.ALL);&#10;  const [sortOrder, setSortOrder] = useState(SORT_OPTIONS.NEWEST);&#10;&#10;  const filteredOrders = useMemo(() =&gt; {&#10;    let filtered = [...orders];&#10;&#10;    // Filter by status&#10;    if (statusFilter !== ORDER_STATUSES.ALL) {&#10;      filtered = filtered.filter((order) =&gt; order.status === statusFilter);&#10;    }&#10;&#10;    // Filter by search term&#10;    if (searchTerm) {&#10;      filtered = filtered.filter(&#10;        (order) =&gt;&#10;          order._id?.toLowerCase().includes(searchTerm.toLowerCase()) ||&#10;          order.items?.some(&#10;            (item) =&gt;&#10;              item.productName&#10;                ?.toLowerCase()&#10;                .includes(searchTerm.toLowerCase()) ||&#10;              item.farmerName?.toLowerCase().includes(searchTerm.toLowerCase()),&#10;          ),&#10;      );&#10;    }&#10;&#10;    // Filter by date&#10;    if (dateFilter !== DATE_FILTERS.ALL) {&#10;      const now = new Date();&#10;      const filterDate = new Date();&#10;&#10;      switch (dateFilter) {&#10;        case DATE_FILTERS.TODAY:&#10;          filterDate.setHours(0, 0, 0, 0);&#10;          break;&#10;        case DATE_FILTERS.WEEK:&#10;          filterDate.setDate(now.getDate() - 7);&#10;          break;&#10;        case DATE_FILTERS.MONTH:&#10;          filterDate.setMonth(now.getMonth() - 1);&#10;          break;&#10;      }&#10;&#10;      filtered = filtered.filter(&#10;        (order) =&gt; new Date(order.createdAt) &gt;= filterDate,&#10;      );&#10;    }&#10;&#10;    // Sort orders&#10;    switch (sortOrder) {&#10;      case SORT_OPTIONS.NEWEST:&#10;        filtered.sort((a, b) =&gt; new Date(b.createdAt) - new Date(a.createdAt));&#10;        break;&#10;      case SORT_OPTIONS.OLDEST:&#10;        filtered.sort((a, b) =&gt; new Date(a.createdAt) - new Date(b.createdAt));&#10;        break;&#10;      case SORT_OPTIONS.HIGHEST:&#10;        filtered.sort((a, b) =&gt; (b.total || 0) - (a.total || 0));&#10;        break;&#10;      case SORT_OPTIONS.LOWEST:&#10;        filtered.sort((a, b) =&gt; (a.total || 0) - (b.total || 0));&#10;        break;&#10;    }&#10;&#10;    return filtered;&#10;  }, [orders, statusFilter, searchTerm, dateFilter, sortOrder]);&#10;&#10;  return {&#10;    filteredOrders,&#10;    statusFilter,&#10;    setStatusFilter,&#10;    searchTerm,&#10;    setSearchTerm,&#10;    dateFilter,&#10;    setDateFilter,&#10;    sortOrder,&#10;    setSortOrder,&#10;  };&#10;};&#10;&#10;// Enhanced loading skeleton with modern animations that matches actual order structure&#10;const OrdersLoadingSkeleton = () =&gt; (&#10;  &lt;div className=&quot;space-y-6&quot;&gt;&#10;    {/* Custom CSS animations for bookings */}&#10;    &lt;style jsx&gt;{`&#10;      @keyframes fadeInUp {&#10;        from {&#10;          opacity: 0;&#10;          transform: translateY(30px);&#10;        }&#10;        to {&#10;          opacity: 1;&#10;          transform: translateY(0);&#10;        }&#10;      }&#10;&#10;      @keyframes shimmer {&#10;        0% {&#10;          transform: translateX(-100%);&#10;        }&#10;        100% {&#10;          transform: translateX(100%);&#10;        }&#10;      }&#10;&#10;      @keyframes orderFloat {&#10;        0%,&#10;        100% {&#10;          transform: translateY(0px) rotate(0deg);&#10;        }&#10;        50% {&#10;          transform: translateY(-10px) rotate(2deg);&#10;        }&#10;      }&#10;&#10;      @keyframes packageMove {&#10;        0% {&#10;          transform: translateX(-15px);&#10;        }&#10;        100% {&#10;          transform: translateX(15px);&#10;        }&#10;      }&#10;&#10;      @keyframes statusPulse {&#10;        0%,&#10;        100% {&#10;          opacity: 0.4;&#10;        }&#10;        50% {&#10;          opacity: 1;&#10;        }&#10;      }&#10;&#10;      .animate-shimmer {&#10;        animation: shimmer 2s infinite;&#10;      }&#10;&#10;      .animate-order-float {&#10;        animation: orderFloat 3s ease-in-out infinite;&#10;      }&#10;&#10;      .animate-package-move {&#10;        animation: packageMove 2s ease-in-out infinite alternate;&#10;      }&#10;&#10;      .animate-status-pulse {&#10;        animation: statusPulse 2s ease-in-out infinite;&#10;      }&#10;    `}&lt;/style&gt;&#10;&#10;    {/* Orders Loading - Matching Actual Structure */}&#10;    {[...Array(6)].map((_, i) =&gt; (&#10;      &lt;div&#10;        key={i}&#10;        className=&quot;group bg-white dark:bg-gray-800 rounded-2xl shadow-lg hover:shadow-2xl border border-gray-200 dark:border-gray-700 overflow-hidden transition-all duration-300&quot;&#10;        style={{&#10;          animationDelay: `${i * 100}ms`,&#10;          animation: &quot;fadeInUp 0.8s ease-out forwards&quot;,&#10;        }}&#10;      &gt;&#10;        {/* Enhanced shimmer effect */}&#10;        &lt;div className=&quot;absolute inset-0 -translate-x-full bg-gradient-to-r from-transparent via-white/20 dark:via-gray-600/20 to-transparent animate-shimmer&quot;&gt;&lt;/div&gt;&#10;&#10;        {/* Order Header - Matches the gradient header in real cards */}&#10;        &lt;div className=&quot;bg-gradient-to-r from-gray-50 via-blue-50 to-indigo-50 dark:from-gray-700 dark:via-gray-600 dark:to-gray-700 p-6 border-b border-gray-200 dark:border-gray-600&quot;&gt;&#10;          &lt;div className=&quot;flex flex-col sm:flex-row sm:items-center justify-between gap-4&quot;&gt;&#10;            &lt;div className=&quot;flex-1&quot;&gt;&#10;              {/* Order ID and Date */}&#10;              &lt;div className=&quot;flex flex-col sm:flex-row sm:items-center gap-4 mb-4&quot;&gt;&#10;                &lt;div&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-2 mb-1&quot;&gt;&#10;                    &lt;div className=&quot;h-6 bg-gradient-to-r from-gray-300 via-gray-400 to-gray-300 dark:from-gray-600 dark:via-gray-500 dark:to-gray-600 rounded w-32 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                    &lt;div className=&quot;w-4 h-4 bg-blue-200 dark:bg-blue-700 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 dark:bg-gray-600 rounded w-24 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;                  {/* Status Badge */}&#10;                  &lt;div className=&quot;h-8 bg-gradient-to-r from-green-200 via-green-300 to-green-200 dark:from-green-700 dark:via-green-600 dark:to-green-700 rounded-full w-24 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  {/* Price and Items */}&#10;                  &lt;div className=&quot;text-right&quot;&gt;&#10;                    &lt;div className=&quot;h-8 bg-gradient-to-r from-gray-300 via-gray-400 to-gray-300 dark:from-gray-600 dark:via-gray-500 dark:to-gray-600 rounded w-20 animate-pulse mb-1&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 dark:bg-gray-600 rounded w-16 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Progress Timeline - Matches the real progress section */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200 dark:border-gray-600&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                    &lt;div className=&quot;w-4 h-4 bg-blue-200 dark:bg-blue-700 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 dark:bg-gray-600 rounded w-24 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;h-3 bg-gray-200 dark:bg-gray-600 rounded w-8 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Progress Steps */}&#10;                &lt;div className=&quot;relative&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                    {[...Array(4)].map((_, stepIndex) =&gt; (&#10;                      &lt;div&#10;                        key={stepIndex}&#10;                        className=&quot;flex flex-col items-center relative z-10&quot;&#10;                      &gt;&#10;                        {/* Step Icon */}&#10;                        &lt;div className=&quot;w-12 h-12 bg-gradient-to-br from-gray-200 via-gray-300 to-gray-200 dark:from-gray-600 dark:via-gray-500 dark:to-gray-600 rounded-full flex items-center justify-center animate-pulse&quot;&gt;&lt;/div&gt;&#10;                        {/* Step Label */}&#10;                        &lt;div className=&quot;h-3 bg-gray-200 dark:bg-gray-600 rounded w-12 mt-2 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                        {/* Date */}&#10;                        &lt;div className=&quot;h-2 bg-gray-100 dark:bg-gray-700 rounded w-8 mt-1 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                  {/* Progress Line */}&#10;                  &lt;div className=&quot;absolute top-6 left-6 right-6 h-0.5 bg-gray-200 dark:bg-gray-600&quot;&gt;&#10;                    &lt;div className=&quot;h-full bg-gradient-to-r from-yellow-300 to-green-300 rounded-full w-1/3 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Status Message */}&#10;                &lt;div className=&quot;mt-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                    &lt;div className=&quot;w-4 h-4 bg-blue-200 dark:bg-blue-700 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-3 bg-gray-200 dark:bg-gray-600 rounded w-3/4 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Order Content */}&#10;        &lt;div className=&quot;p-6&quot;&gt;&#10;          {/* Order Items Grid */}&#10;          &lt;div className=&quot;mb-6&quot;&gt;&#10;            &lt;div className=&quot;flex items-center space-x-2 mb-4&quot;&gt;&#10;              &lt;div className=&quot;w-5 h-5 bg-blue-200 dark:bg-blue-700 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;h-5 bg-gray-200 dark:bg-gray-600 rounded w-32 animate-pulse&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Items Grid - Matches the 4-column grid */}&#10;            &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mb-4&quot;&gt;&#10;              {[...Array(4)].map((_, itemIndex) =&gt; (&#10;                &lt;div&#10;                  key={itemIndex}&#10;                  className=&quot;bg-gray-50 dark:bg-gray-700 rounded-xl p-4 border border-gray-200 dark:border-gray-600&quot;&#10;                &gt;&#10;                  &lt;div className=&quot;flex items-start space-x-3&quot;&gt;&#10;                    &lt;div className=&quot;relative flex-shrink-0&quot;&gt;&#10;                      &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-orange-200 via-orange-300 to-orange-200 dark:from-orange-600 dark:via-orange-700 dark:to-orange-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      {/* Quantity badge */}&#10;                      &lt;div className=&quot;absolute -top-2 -right-2 bg-blue-200 dark:bg-blue-700 w-6 h-6 rounded-full animate-pulse&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#10;                      &lt;div className=&quot;h-4 bg-gray-200 dark:bg-gray-600 rounded w-3/4 mb-1 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;h-3 bg-gray-100 dark:bg-gray-700 rounded w-1/2 mb-1 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;flex justify-between items-center&quot;&gt;&#10;                        &lt;div className=&quot;h-3 bg-gray-100 dark:bg-gray-700 rounded w-8 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                        &lt;div className=&quot;h-4 bg-gray-200 dark:bg-gray-600 rounded w-12 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Order Summary &amp; Actions - Matches the bottom section */}&#10;          &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6&quot;&gt;&#10;            &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4&quot;&gt;&#10;              {/* Order Summary Grid */}&#10;              &lt;div className=&quot;grid grid-cols-2 md:grid-cols-4 gap-4 flex-1&quot;&gt;&#10;                {[&quot;Items&quot;, &quot;Subtotal&quot;, &quot;Delivery&quot;, &quot;Total&quot;].map(&#10;                  (label, summaryIndex) =&gt; (&#10;                    &lt;div&#10;                      key={summaryIndex}&#10;                      className=&quot;text-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600&quot;&#10;                    &gt;&#10;                      &lt;div className=&quot;h-5 bg-gradient-to-r from-gray-200 via-gray-300 to-gray-200 dark:from-gray-600 dark:via-gray-500 dark:to-gray-600 rounded w-8 mx-auto mb-1 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;h-3 bg-gray-100 dark:bg-gray-700 rounded w-12 mx-auto animate-pulse&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  ),&#10;                )}&#10;              &lt;/div&gt;&#10;&#10;              {/* Action Buttons */}&#10;              &lt;div className=&quot;flex flex-wrap gap-3&quot;&gt;&#10;                &lt;div className=&quot;h-10 bg-gradient-to-r from-blue-200 via-blue-300 to-blue-200 dark:from-blue-700 dark:via-blue-600 dark:to-blue-700 rounded-lg w-24 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-10 bg-gradient-to-r from-green-200 via-green-300 to-green-200 dark:from-green-700 dark:via-green-600 dark:to-green-700 rounded-lg w-20 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-10 bg-gray-200 dark:bg-gray-600 rounded-lg w-16 animate-pulse&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    ))}&#10;  &lt;/div&gt;&#10;);&#10;&#10;// Enhanced initial loading screen&#10;const InitialLoadingScreen = () =&gt; (&#10;  &lt;div className=&quot;min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;    &lt;div className=&quot;container mx-auto px-4 py-8&quot;&gt;&#10;      {/* Header */}&#10;      &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;        &lt;div className=&quot;inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r from-green-500 to-blue-600 rounded-full mb-6 animate-bounce&quot;&gt;&#10;          &lt;i className=&quot;fas fa-shopping-bag text-3xl text-white&quot;&gt;&lt;/i&gt;&#10;        &lt;/div&gt;&#10;        &lt;h1 className=&quot;text-4xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;          Loading Your Orders&#10;        &lt;/h1&gt;&#10;        &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400&quot;&gt;&#10;          Please wait while we fetch your order history...&#10;        &lt;/p&gt;&#10;&#10;        {/* Loading progress bar */}&#10;        &lt;div className=&quot;w-64 h-2 bg-gray-200 dark:bg-gray-700 rounded-full mx-auto mt-6 overflow-hidden&quot;&gt;&#10;          &lt;div className=&quot;h-full bg-gradient-to-r from-green-500 to-blue-600 rounded-full animate-pulse&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Loading content */}&#10;      &lt;OrdersLoadingSkeleton /&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;);&#10;&#10;export default function BookingsPage() {&#10;  const router = useRouter();&#10;  const { data: session, status } = useSession();&#10;&#10;  // Add mount/unmount debugging&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; BookingsPage MOUNTED - Status:&quot;, status);&#10;    return () =&gt; {&#10;      console.log(&quot; BookingsPage UNMOUNTED&quot;);&#10;    };&#10;  }, []);&#10;&#10;  // Debug session changes&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; BookingsPage session changed:&quot;, {&#10;      status,&#10;      userId: session?.user?.userId || session?.user?.id,&#10;      hasSession: !!session,&#10;      userType: session?.user?.userType || session?.user?.role,&#10;    });&#10;  }, [session, status]);&#10;&#10;  // More aggressive userId stabilization with additional checks&#10;  const userId = useMemo(() =&gt; {&#10;    const id = session?.user?.userId || session?.user?.id;&#10;    const result = status === &quot;authenticated&quot; &amp;&amp; id ? id : null;&#10;    console.log(&quot; BookingsPage userId computed:&quot;, {&#10;      status,&#10;      rawId: id,&#10;      result,&#10;      sessionExists: !!session,&#10;      userExists: !!session?.user,&#10;    });&#10;    return result;&#10;  }, [session?.user?.userId, session?.user?.id, status]);&#10;&#10;  // Stabilize the enabled condition to prevent unnecessary re-renders&#10;  const queryEnabled = useMemo(() =&gt; {&#10;    return !!userId &amp;&amp; status === &quot;authenticated&quot;;&#10;  }, [userId, status]);&#10;&#10;  // React Query data fetching with very aggressive caching for bookings&#10;  const {&#10;    data: ordersData,&#10;    isLoading: loading,&#10;    error,&#10;    refetch: refetchOrders,&#10;    isFetching,&#10;    isStale,&#10;  } = useOrdersQuery(userId, {&#10;    enabled: queryEnabled, // Use stabilized enabled condition&#10;    staleTime: 15 * 60 * 1000, // 15 minutes - very aggressive&#10;    gcTime: 60 * 60 * 1000, // 1 hour cache&#10;    refetchOnMount: false, // Specifically for bookings page&#10;    refetchOnWindowFocus: false,&#10;    refetchOnReconnect: false,&#10;  });&#10;&#10;  // Debug React Query state changes - FINAL FIX: Handle all edge cases for stable array&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; BookingsPage React Query state:&quot;, {&#10;      loading: Boolean(loading),&#10;      isFetching: Boolean(isFetching),&#10;      isStale: Boolean(isStale),&#10;      hasData: Boolean(ordersData),&#10;      dataCount: ordersData?.orders?.length || 0,&#10;      errorMessage: error?.message || null,&#10;      enabled: Boolean(queryEnabled),&#10;      userId: userId || null,&#10;    });&#10;  }, [&#10;    Boolean(loading),&#10;    Boolean(isFetching),&#10;    Boolean(isStale),&#10;    Boolean(ordersData),&#10;    Number(ordersData?.orders?.length || 0),&#10;    String(error?.message || &quot;&quot;),&#10;    Boolean(queryEnabled),&#10;    String(userId || &quot;&quot;),&#10;  ]); // FINAL FIX: Use explicit type conversions to ensure all values are always present and of consistent type&#10;&#10;  const ordersCache = useOrdersCache();&#10;&#10;  // Extract orders from React Query response with better error handling&#10;  const orders = useMemo(() =&gt; {&#10;    if (!ordersData?.orders) return [];&#10;&#10;    // Filter to ensure we only get customer orders (same logic as your previous code)&#10;    return ordersData.orders.filter((order) =&gt; {&#10;      const orderUserId = order.userId || order.customerId;&#10;      return orderUserId === userId;&#10;    });&#10;  }, [ordersData, userId]);&#10;&#10;  // Custom hooks for better code organization&#10;  const orderStats = useOrderStats(orders);&#10;&#10;  // Add comprehensive debugging for bookings page&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; BOOKINGS PAGE DEBUG - Full Data Analysis:&quot;);&#10;    console.log(&quot;Raw orders from API:&quot;, orders.length);&#10;    console.log(&quot;Order stats calculated:&quot;, orderStats);&#10;&#10;    if (orders.length &gt; 0) {&#10;      console.log(&quot;Sample orders data:&quot;);&#10;      orders.slice(0, 3).forEach((order, index) =&gt; {&#10;        console.log(`Order ${index + 1}:`, {&#10;          id: order._id,&#10;          total: order.total,&#10;          status: order.status,&#10;          createdAt: order.createdAt,&#10;          userId: order.userId,&#10;          itemCount: order.items?.length || 0,&#10;        });&#10;      });&#10;&#10;      // Debug total spending calculation&#10;      const totalSpentDebug = orders.reduce((sum, order) =&gt; {&#10;        const orderTotal = order.total || 0;&#10;        console.log(&#10;          `Order ${order._id}: total=${orderTotal}, status=${order.status}`,&#10;        );&#10;        return sum + orderTotal;&#10;      }, 0);&#10;      console.log(&quot;Total spent (manual calculation):&quot;, totalSpentDebug);&#10;      console.log(&quot;Total spent (hook calculation):&quot;, orderStats.totalSpent);&#10;&#10;      // Debug order count by status&#10;      const statusCounts = orders.reduce((acc, order) =&gt; {&#10;        acc[order.status] = (acc[order.status] || 0) + 1;&#10;        return acc;&#10;      }, {});&#10;      console.log(&quot;Orders by status:&quot;, statusCounts);&#10;    }&#10;  }, [orders, orderStats]);&#10;&#10;  const {&#10;    filteredOrders,&#10;    statusFilter,&#10;    setStatusFilter,&#10;    searchTerm,&#10;    setSearchTerm,&#10;    dateFilter,&#10;    setDateFilter,&#10;    sortOrder,&#10;    setSortOrder,&#10;  } = useOrderFilters(orders);&#10;&#10;  // UI state&#10;  const [currentPage, setCurrentPage] = useState(1);&#10;  const [viewMode, setViewMode] = useState(VIEW_MODES.CARDS);&#10;  const [selectedOrder, setSelectedOrder] = useState(null);&#10;  const [showOrderDetails, setShowOrderDetails] = useState(false);&#10;  const [refreshing, setRefreshing] = useState(false);&#10;  const [actionLoading, setActionLoading] = useState(new Set());&#10;  const [navigationLoading, setNavigationLoading] = useState(true); // Add navigation loading state&#10;&#10;  // Reorder modal states&#10;  const [showReorderModal, setShowReorderModal] = useState(false);&#10;  const [validationResult, setValidationResult] = useState(null);&#10;  const [reorderLoading, setReorderLoading] = useState(false);&#10;&#10;  // Reorder hook&#10;  const { validateReorder, proceedWithAvailableItems, cancelReorder } =&#10;    useReorder();&#10;&#10;  const ordersPerPage = viewMode === VIEW_MODES.LIST ? 10 : 6;&#10;&#10;  // Authentication and role-based access check&#10;  useEffect(() =&gt; {&#10;    if (status === &quot;unauthenticated&quot;) {&#10;      router.push(&quot;/login&quot;);&#10;    } else if (status === &quot;authenticated&quot; &amp;&amp; session?.user) {&#10;      // Check user role - farmers should not access customer bookings page&#10;      const userRole = session.user.userType || session.user.role || &quot;customer&quot;;&#10;&#10;      if (userRole === &quot;farmer&quot;) {&#10;        // Redirect farmers to their orders dashboard&#10;        router.push(&quot;/farmer-orders&quot;);&#10;        return;&#10;      }&#10;    }&#10;  }, [status, session, router]);&#10;&#10;  // Handle navigation loading state - simplified&#10;  useEffect(() =&gt; {&#10;    if (status === &quot;loading&quot;) {&#10;      setNavigationLoading(true);&#10;    } else if (status === &quot;authenticated&quot; &amp;&amp; session?.user) {&#10;      setNavigationLoading(false);&#10;    }&#10;  }, [status, session]);&#10;&#10;  // Reset pagination when filters change&#10;  useEffect(() =&gt; {&#10;    setCurrentPage(1);&#10;  }, [statusFilter, searchTerm, dateFilter, sortOrder]);&#10;&#10;  // Optimized handlers with error handling&#10;  const handleRefresh = useCallback(async () =&gt; {&#10;    setRefreshing(true);&#10;    try {&#10;      await refetchOrders();&#10;      // Also invalidate cache to ensure fresh data&#10;      if (userId) {&#10;        ordersCache.invalidateOrders(userId);&#10;      }&#10;    } finally {&#10;      setRefreshing(false);&#10;    }&#10;  }, [refetchOrders, ordersCache, userId]);&#10;&#10;  const handleCancelOrder = useCallback(&#10;    async (orderId) =&gt; {&#10;      if (!window.confirm(&quot;Are you sure you want to cancel this order?&quot;))&#10;        return;&#10;&#10;      setActionLoading((prev) =&gt; new Set(prev).add(orderId));&#10;&#10;      try {&#10;        const response = await fetch(`/api/orders/${orderId}`, {&#10;          method: &quot;PATCH&quot;,&#10;          headers: {&#10;            &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;            &quot;Cache-Control&quot;: &quot;no-cache&quot;,&#10;          },&#10;          body: JSON.stringify({ status: ORDER_STATUSES.CANCELLED }),&#10;        });&#10;&#10;        if (!response.ok) {&#10;          const errorData = await response.json().catch(() =&gt; ({}));&#10;          throw new Error(&#10;            errorData.message ||&#10;              `HTTP ${response.status}: ${response.statusText}`,&#10;          );&#10;        }&#10;&#10;        // Show success feedback&#10;        alert(&quot;Order cancelled successfully&quot;);&#10;&#10;        // Invalidate cache first to ensure fresh data&#10;        if (userId) {&#10;          ordersCache.invalidateOrders(userId);&#10;        }&#10;&#10;        // Then refetch orders with a slight delay to ensure cache invalidation is processed&#10;        setTimeout(async () =&gt; {&#10;          await refetchOrders();&#10;        }, 100);&#10;      } catch (error) {&#10;        console.error(&quot;Error cancelling order:&quot;, error);&#10;        alert(`Error cancelling order: ${error.message}`);&#10;      } finally {&#10;        setActionLoading((prev) =&gt; {&#10;          const newSet = new Set(prev);&#10;          newSet.delete(orderId);&#10;          return newSet;&#10;        });&#10;      }&#10;    },&#10;    [refetchOrders, ordersCache, userId],&#10;  );&#10;&#10;  // Enhanced reorder handler&#10;  const handleReorder = useCallback(&#10;    async (order) =&gt; {&#10;      try {&#10;        const userId = session?.user?.userId || session?.user?.id;&#10;        if (!userId) {&#10;          alert(&quot;Please log in to reorder items&quot;);&#10;          return;&#10;        }&#10;&#10;        // Use the enhanced reorder validation&#10;        await validateReorder(order._id, userId);&#10;      } catch (error) {&#10;        console.error(&quot;Error validating reorder:&quot;, error);&#10;        alert(&quot;Error processing reorder. Please try again.&quot;);&#10;      }&#10;    },&#10;    [session, validateReorder],&#10;  );&#10;&#10;  // Add PDF receipt generation function&#10;  const handleDownloadReceipt = useCallback(async (order) =&gt; {&#10;    try {&#10;      const orderNumber =&#10;        order?.orderNumber ||&#10;        order?._id?.slice(-8)?.toUpperCase() ||&#10;        `ORDER-${Date.now()}`;&#10;&#10;      // Generate PDF receipt using jsPDF&#10;      await generateReceiptPDF(order, orderNumber);&#10;&#10;      // Show success message&#10;      alert(&quot;Receipt PDF downloaded successfully!&quot;);&#10;    } catch (error) {&#10;      console.error(&quot;Error downloading receipt:&quot;, error);&#10;      alert(&quot;Error generating receipt. Please try again.&quot;);&#10;    }&#10;  }, []);&#10;&#10;  const generateReceiptPDF = async (order, orderNumber) =&gt; {&#10;    try {&#10;      // Dynamic import for client-side only&#10;      const { jsPDF } = await import(&quot;jspdf&quot;);&#10;&#10;      const doc = new jsPDF();&#10;      const pageWidth = doc.internal.pageSize.width;&#10;      let yPosition = 20;&#10;&#10;      // Helper function for price formatting&#10;      const formatReceiptPrice = (price) =&gt; {&#10;        return new Intl.NumberFormat(&quot;en-BD&quot;, {&#10;          style: &quot;currency&quot;,&#10;          currency: &quot;BDT&quot;,&#10;          minimumFractionDigits: 0,&#10;        }).format(price || 0);&#10;      };&#10;&#10;      // Extract customer info from order - handle different field structures&#10;      const customerInfo = {&#10;        name:&#10;          order.customerName ||&#10;          order.customerInfo?.name ||&#10;          order.deliveryAddress?.name ||&#10;          order.shippingAddress?.name ||&#10;          &quot;Valued Customer&quot;,&#10;        address:&#10;          order.deliveryAddress?.address ||&#10;          order.shippingAddress?.address ||&#10;          order.customerInfo?.address ||&#10;          &quot;N/A&quot;,&#10;        city:&#10;          order.deliveryAddress?.city ||&#10;          order.shippingAddress?.city ||&#10;          order.customerInfo?.city ||&#10;          &quot;N/A&quot;,&#10;        phone:&#10;          order.deliveryAddress?.phone ||&#10;          order.customerPhone ||&#10;          order.customerInfo?.phone ||&#10;          order.shippingAddress?.phone ||&#10;          &quot;N/A&quot;,&#10;        email:&#10;          order.customerEmail ||&#10;          order.customerInfo?.email ||&#10;          order.user?.email ||&#10;          &quot;N/A&quot;,&#10;      };&#10;&#10;      // Header - Receipt Title&#10;      doc.setFontSize(24);&#10;      doc.setTextColor(34, 197, 94); // Green color&#10;      doc.text(&quot; FarmFresh&quot;, 20, yPosition);&#10;&#10;      yPosition += 8;&#10;      doc.setFontSize(14);&#10;      doc.setTextColor(102, 102, 102);&#10;      doc.text(&quot;Payment Receipt&quot;, 20, yPosition);&#10;&#10;      yPosition += 6;&#10;      doc.setFontSize(10);&#10;      doc.text(&quot;Thank you for your purchase!&quot;, 20, yPosition);&#10;&#10;      // Receipt number and date - right aligned&#10;      doc.setFontSize(20);&#10;      doc.setTextColor(0, 0, 0);&#10;      doc.text(&quot;RECEIPT&quot;, pageWidth - 20, 20, { align: &quot;right&quot; });&#10;&#10;      doc.setFontSize(10);&#10;      doc.setTextColor(102, 102, 102);&#10;      doc.text(`Receipt #: ${orderNumber}`, pageWidth - 20, 30, {&#10;        align: &quot;right&quot;,&#10;      });&#10;      doc.text(&#10;        `Date: ${new Date(order.createdAt || Date.now()).toLocaleDateString(&quot;en-GB&quot;)}`,&#10;        pageWidth - 20,&#10;        36,&#10;        { align: &quot;right&quot; },&#10;      );&#10;      doc.text(&#10;        `Time: ${new Date(order.createdAt || Date.now()).toLocaleTimeString(&quot;en-GB&quot;)}`,&#10;        pageWidth - 20,&#10;        42,&#10;        { align: &quot;right&quot; },&#10;      );&#10;&#10;      // Line separator&#10;      yPosition = 50;&#10;      doc.setDrawColor(34, 197, 94);&#10;      doc.setLineWidth(1);&#10;      doc.line(20, yPosition, pageWidth - 20, yPosition);&#10;&#10;      yPosition += 15;&#10;&#10;      // Customer Information (only in PDF, not shown in UI)&#10;      doc.setFontSize(12);&#10;      doc.setTextColor(0, 0, 0);&#10;      doc.text(&quot;Customer Information:&quot;, 20, yPosition);&#10;      yPosition += 8;&#10;&#10;      doc.setFontSize(10);&#10;      doc.setTextColor(102, 102, 102);&#10;      doc.text(`Name: ${customerInfo.name}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(`Email: ${customerInfo.email}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(`Phone: ${customerInfo.phone}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(`Delivery Address: ${customerInfo.address}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(`City: ${customerInfo.city}`, 20, yPosition);&#10;&#10;      yPosition += 15;&#10;&#10;      // Order Information&#10;      doc.setFontSize(12);&#10;      doc.setTextColor(0, 0, 0);&#10;      doc.text(&quot;Order Information:&quot;, 20, yPosition);&#10;      yPosition += 8;&#10;&#10;      doc.setFontSize(10);&#10;      doc.setTextColor(102, 102, 102);&#10;      doc.text(`Order Number: ${orderNumber}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(&#10;        `Payment Method: ${order.paymentMethod || &quot;Credit Card&quot;}`,&#10;        20,&#10;        yPosition,&#10;      );&#10;      yPosition += 5;&#10;      doc.text(`Status: ${order.status || &quot;delivered&quot;}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(&#10;        `Order Date: ${new Date(order.createdAt || Date.now()).toLocaleDateString(&quot;en-GB&quot;)}`,&#10;        20,&#10;        yPosition,&#10;      );&#10;&#10;      yPosition += 15;&#10;&#10;      // Items section header&#10;      doc.setFontSize(12);&#10;      doc.setTextColor(0, 0, 0);&#10;      doc.text(&quot;Items Purchased:&quot;, 20, yPosition);&#10;      yPosition += 10;&#10;&#10;      // Items table&#10;      const items = order.items || [];&#10;      let itemTotal = 0;&#10;&#10;      items.forEach((item, index) =&gt; {&#10;        const itemSubtotal = (item.price || 0) * (item.quantity || 1);&#10;        itemTotal += itemSubtotal;&#10;&#10;        // Item name and farmer&#10;        doc.setFontSize(10);&#10;        doc.setTextColor(0, 0, 0);&#10;        doc.text(&#10;          `${item.productName || item.name || &quot;Product&quot;}`,&#10;          25,&#10;          yPosition,&#10;        );&#10;&#10;        // Quantity and price - right aligned&#10;        doc.text(&#10;          `${item.quantity || 1} x ${formatReceiptPrice(item.price || 0)}`,&#10;          pageWidth - 20,&#10;          yPosition,&#10;          { align: &quot;right&quot; },&#10;        );&#10;        yPosition += 5;&#10;&#10;        // Farmer name - smaller text&#10;        doc.setFontSize(8);&#10;        doc.setTextColor(102, 102, 102);&#10;        doc.text(&#10;          `by ${item.farmerName || item.farmer?.name || &quot;Local Farmer&quot;}`,&#10;          30,&#10;          yPosition,&#10;        );&#10;&#10;        // Item total - right aligned&#10;        doc.setFontSize(9);&#10;        doc.setTextColor(0, 0, 0);&#10;        doc.text(formatReceiptPrice(itemSubtotal), pageWidth - 20, yPosition, {&#10;          align: &quot;right&quot;,&#10;        });&#10;&#10;        yPosition += 8;&#10;      });&#10;&#10;      // Separator line&#10;      yPosition += 5;&#10;      doc.setDrawColor(200, 200, 200);&#10;      doc.line(20, yPosition, pageWidth - 20, yPosition);&#10;      yPosition += 10;&#10;&#10;      // Totals section&#10;      const rightAlignX = pageWidth - 20;&#10;      const labelX = pageWidth - 70;&#10;&#10;      doc.setFontSize(10);&#10;      doc.setTextColor(102, 102, 102);&#10;&#10;      // Subtotal&#10;      doc.text(&quot;Subtotal:&quot;, labelX, yPosition);&#10;      doc.text(&#10;        formatReceiptPrice(order.subtotal || order.farmerSubtotal || itemTotal),&#10;        rightAlignX,&#10;        yPosition,&#10;        { align: &quot;right&quot; },&#10;      );&#10;      yPosition += 6;&#10;&#10;      // Delivery fee&#10;      doc.text(&quot;Delivery Fee:&quot;, labelX, yPosition);&#10;      doc.text(&#10;        formatReceiptPrice(order.deliveryFee || 0),&#10;        rightAlignX,&#10;        yPosition,&#10;        { align: &quot;right&quot; },&#10;      );&#10;      yPosition += 6;&#10;&#10;      // Service fee&#10;      doc.text(&quot;Service Fee:&quot;, labelX, yPosition);&#10;      doc.text(&#10;        formatReceiptPrice(order.serviceFee || 0),&#10;        rightAlignX,&#10;        yPosition,&#10;        { align: &quot;right&quot; },&#10;      );&#10;      yPosition += 8;&#10;&#10;      // Total - highlighted&#10;      doc.setDrawColor(34, 197, 94);&#10;      doc.line(labelX - 5, yPosition, rightAlignX, yPosition);&#10;      yPosition += 8;&#10;&#10;      doc.setFontSize(12);&#10;      doc.setTextColor(0, 0, 0);&#10;      doc.setFont(undefined, &quot;bold&quot;);&#10;      doc.text(&quot;TOTAL PAID:&quot;, labelX, yPosition);&#10;      doc.text(formatReceiptPrice(order.total || 0), rightAlignX, yPosition, {&#10;        align: &quot;right&quot;,&#10;      });&#10;&#10;      yPosition += 15;&#10;&#10;      // Payment confirmation&#10;      doc.setFont(undefined, &quot;normal&quot;);&#10;      doc.setFontSize(10);&#10;      doc.setTextColor(34, 197, 94);&#10;      doc.text(&quot;✓ Payment Confirmed&quot;, 20, yPosition);&#10;      doc.setTextColor(102, 102, 102);&#10;      doc.text(&#10;        `Transaction completed on ${new Date(order.createdAt || Date.now()).toLocaleDateString(&quot;en-GB&quot;)}`,&#10;        20,&#10;        yPosition + 5,&#10;      );&#10;&#10;      yPosition += 20;&#10;&#10;      // Footer message&#10;      doc.setFontSize(9);&#10;      doc.setTextColor(102, 102, 102);&#10;      const footerText =&#10;        &quot;Thank you for supporting local farmers! This receipt serves as proof of purchase.&quot;;&#10;      const footerLines = doc.splitTextToSize(footerText, pageWidth - 40);&#10;      doc.text(footerLines, 20, yPosition);&#10;&#10;      yPosition += 15;&#10;      doc.setFontSize(8);&#10;      doc.text(&#10;        &quot;FarmFresh - Local Farmer Booking Platform&quot;,&#10;        pageWidth / 2,&#10;        yPosition,&#10;        { align: &quot;center&quot; },&#10;      );&#10;      doc.text(&#10;        &quot;For support: support@farmfresh.com | +880-1234-567890&quot;,&#10;        pageWidth / 2,&#10;        yPosition + 5,&#10;        { align: &quot;center&quot; },&#10;      );&#10;&#10;      // Save the PDF&#10;      doc.save(`receipt-${orderNumber}.pdf`);&#10;    } catch (error) {&#10;      console.error(&quot;Error generating receipt PDF:&quot;, error);&#10;      throw error;&#10;    }&#10;  };&#10;&#10;  // Utility functions&#10;  const formatPrice = useCallback((price) =&gt; {&#10;    const numericPrice =&#10;      typeof price === &quot;number&quot; ? price : parseFloat(price) || 0;&#10;    return `৳${numericPrice.toFixed(0)}`;&#10;  }, []);&#10;&#10;  const formatDate = useCallback((dateString) =&gt; {&#10;    try {&#10;      return new Date(dateString).toLocaleDateString(&quot;en-US&quot;, {&#10;        year: &quot;numeric&quot;,&#10;        month: &quot;short&quot;,&#10;        day: &quot;numeric&quot;,&#10;        hour: &quot;2-digit&quot;,&#10;        minute: &quot;2-digit&quot;,&#10;      });&#10;    } catch (error) {&#10;      return &quot;Invalid Date&quot;;&#10;    }&#10;  }, []);&#10;&#10;  const getStatusBadge = (status) =&gt; {&#10;    const statusConfig = {&#10;      confirmed: {&#10;        bg: &quot;bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200 border-blue-200&quot;,&#10;        icon: &quot;fas fa-check&quot;,&#10;        pulse: false,&#10;      },&#10;      pending: {&#10;        bg: &quot;bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200 border-yellow-200&quot;,&#10;        icon: &quot;fas fa-clock&quot;,&#10;        pulse: true,&#10;      },&#10;      delivered: {&#10;        bg: &quot;bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 border-green-200&quot;,&#10;        icon: &quot;fas fa-check-circle&quot;,&#10;        pulse: false,&#10;      },&#10;      cancelled: {&#10;        bg: &quot;bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200 border-red-200&quot;,&#10;        icon: &quot;fas fa-times-circle&quot;,&#10;        pulse: false,&#10;      },&#10;      shipped: {&#10;        bg: &quot;bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200 border-purple-200&quot;,&#10;        icon: &quot;fas fa-truck&quot;,&#10;        pulse: true,&#10;      },&#10;    };&#10;&#10;    const config = statusConfig[status?.toLowerCase()] || statusConfig.pending;&#10;&#10;    return (&#10;      &lt;span&#10;        className={`inline-flex items-center px-3 py-1.5 rounded-full text-sm font-medium border ${config.bg} ${&#10;          config.pulse ? &quot;animate-pulse&quot; : &quot;&quot;&#10;        }`}&#10;      &gt;&#10;        &lt;i className={`${config.icon} mr-1.5 text-xs`}&gt;&lt;/i&gt;&#10;        {status?.charAt(0).toUpperCase() + status?.slice(1) || &quot;Pending&quot;}&#10;      &lt;/span&gt;&#10;    );&#10;  };&#10;&#10;  const getStatusProgress = (status) =&gt; {&#10;    const statuses = [&quot;pending&quot;, &quot;confirmed&quot;, &quot;shipped&quot;, &quot;delivered&quot;];&#10;    const currentIndex = statuses.indexOf(status?.toLowerCase());&#10;    const progress =&#10;      currentIndex &gt;= 0 ? ((currentIndex + 1) / statuses.length) * 100 : 0;&#10;&#10;    return (&#10;      &lt;div className=&quot;w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mb-2&quot;&gt;&#10;        &lt;div&#10;          className=&quot;bg-gradient-to-r from-green-500 to-blue-500 h-2 rounded-full transition-all duration-500 ease-out&quot;&#10;          style={{ width: `${progress}%` }}&#10;        &gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  // Pagination&#10;  const indexOfLastOrder = currentPage * ordersPerPage;&#10;  const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;&#10;  const currentOrders = filteredOrders.slice(&#10;    indexOfFirstOrder,&#10;    indexOfLastOrder,&#10;  );&#10;  const totalPages = Math.ceil(filteredOrders.length / ordersPerPage);&#10;&#10;  // Show loading screen if still loading authentication, data, or navigation&#10;  // Also show loading if we have no orders yet but we're authenticated (prevents empty cards)&#10;  if (&#10;    status === &quot;loading&quot; ||&#10;    loading ||&#10;    navigationLoading ||&#10;    (status === &quot;authenticated&quot; &amp;&amp; !orders.length &amp;&amp; !error &amp;&amp; !ordersData)&#10;  ) {&#10;    return &lt;InitialLoadingScreen /&gt;;&#10;  }&#10;&#10;  // Show error state if there's an error&#10;  if (error) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-100 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center p-8&quot;&gt;&#10;          &lt;div className=&quot;text-red-600 text-6xl mb-4&quot;&gt;&#10;            &lt;i className=&quot;fas fa-exclamation-triangle&quot;&gt;&lt;/i&gt;&#10;          &lt;/div&gt;&#10;          &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;            Failed to Load Orders&#10;          &lt;/h2&gt;&#10;          &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-6&quot;&gt;&#10;            {error?.message || &quot;An error occurred while fetching your orders&quot;}&#10;          &lt;/p&gt;&#10;          &lt;button&#10;            onClick={handleRefresh}&#10;            disabled={refreshing}&#10;            className=&quot;px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-all duration-200 disabled:opacity-50&quot;&#10;          &gt;&#10;            &lt;i&#10;              className={`fas fa-sync-alt mr-2 ${refreshing ? &quot;animate-spin&quot; : &quot;&quot;}`}&#10;            &gt;&lt;/i&gt;&#10;            Try Again&#10;          &lt;/button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  // Show empty state if no orders found&#10;  if (!loading &amp;&amp; orders.length === 0) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-100 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12&quot;&gt;&#10;          {/* Header */}&#10;          &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;            &lt;h1 className=&quot;text-4xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;              My Orders&#10;            &lt;/h1&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg&quot;&gt;&#10;              You haven't placed any orders yet&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Empty State */}&#10;          &lt;div className=&quot;text-center py-16&quot;&gt;&#10;            &lt;div className=&quot;text-gray-400 text-8xl mb-8&quot;&gt;&#10;              &lt;i className=&quot;fas fa-shopping-bag&quot;&gt;&lt;/i&gt;&#10;            &lt;/div&gt;&#10;            &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;              No Orders Found&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto&quot;&gt;&#10;              Start exploring our fresh products and place your first order to&#10;              see it here.&#10;            &lt;/p&gt;&#10;            &lt;Link&#10;              href=&quot;/products&quot;&#10;              className=&quot;inline-flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-all duration-200&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-shopping-cart mr-2&quot;&gt;&lt;/i&gt;&#10;              Browse Products&#10;            &lt;/Link&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;Footer /&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-100 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;        {/* Enhanced Header Section */}&#10;        &lt;div className=&quot;relative overflow-hidden&quot;&gt;&#10;          &lt;div className=&quot;absolute inset-0 bg-gradient-to-r from-blue-600/10 to-purple-600/10 dark:from-blue-400/10 dark:to-purple-400/10&quot;&gt;&lt;/div&gt;&#10;          &lt;div className=&quot;relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12&quot;&gt;&#10;            {/* Breadcrumb */}&#10;            &lt;nav className=&quot;flex mb-8&quot; aria-label=&quot;Breadcrumb&quot;&gt;&#10;              &lt;ol className=&quot;flex items-center space-x-2 text-sm&quot;&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link&#10;                    href=&quot;/&quot;&#10;                    className=&quot;text-gray-500 hover:text-blue-600 transition-colors duration-200 flex items-center&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-home mr-1&quot;&gt;&lt;/i&gt;&#10;                    Home&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;                &lt;/li&gt;&#10;                &lt;li className=&quot;text-gray-900 dark:text-white font-medium&quot;&gt;&#10;                  My Orders&#10;                &lt;/li&gt;&#10;              &lt;/ol&gt;&#10;            &lt;/nav&gt;&#10;&#10;            {/* Page Header with Stats */}&#10;            &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center mb-8&quot;&gt;&#10;              &lt;div className=&quot;mb-6 lg:mb-0&quot;&gt;&#10;                &lt;h1 className=&quot;text-4xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-3&quot;&gt;&#10;                  My Orders&#10;                &lt;/h1&gt;&#10;                &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg&quot;&gt;&#10;                  Track and manage your orders • {orderStats.total} total orders&#10;                &lt;/p&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Quick Stats Cards */}&#10;              &lt;div className=&quot;grid grid-cols-2 lg:grid-cols-4 gap-4 w-full lg:w-auto&quot;&gt;&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#10;                    &lt;div className=&quot;text-2xl font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                      {orderStats.total}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Total Orders&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#10;                    &lt;div className=&quot;text-2xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                      {orderStats.delivered}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Delivered&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#10;                    &lt;div className=&quot;text-2xl font-bold text-yellow-600 dark:text-yellow-400&quot;&gt;&#10;                      {orderStats.pending}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Pending&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#10;                    &lt;div className=&quot;text-xl font-bold text-purple-600 dark:text-purple-400&quot;&gt;&#10;                      {formatPrice(orderStats.totalSpent)}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Total Spent&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Advanced Filters and Controls */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-8&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 p-6 mb-8&quot;&gt;&#10;            &lt;div className=&quot;flex flex-col lg:flex-row gap-4 items-center justify-between&quot;&gt;&#10;              {/* Search */}&#10;              &lt;div className=&quot;flex-1 max-w-md&quot;&gt;&#10;                &lt;div className=&quot;relative&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400&quot;&gt;&lt;/i&gt;&#10;                  &lt;input&#10;                    type=&quot;text&quot;&#10;                    placeholder=&quot;Search orders, products, or farmers...&quot;&#10;                    value={searchTerm}&#10;                    onChange={(e) =&gt; setSearchTerm(e.target.value)}&#10;                    className=&quot;w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-all duration-200&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Filters */}&#10;              &lt;div className=&quot;flex flex-wrap gap-3&quot;&gt;&#10;                &lt;select&#10;                  value={statusFilter}&#10;                  onChange={(e) =&gt; setStatusFilter(e.target.value)}&#10;                  className=&quot;px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;option value={ORDER_STATUSES.ALL}&gt;&#10;                    {ORDER_STATUSES.ALL}&#10;                  &lt;/option&gt;&#10;                  &lt;option value={ORDER_STATUSES.PENDING}&gt;Pending&lt;/option&gt;&#10;                  &lt;option value={ORDER_STATUSES.CONFIRMED}&gt;Confirmed&lt;/option&gt;&#10;                  &lt;option value={ORDER_STATUSES.SHIPPED}&gt;Shipped&lt;/option&gt;&#10;                  &lt;option value={ORDER_STATUSES.DELIVERED}&gt;Delivered&lt;/option&gt;&#10;                  &lt;option value={ORDER_STATUSES.CANCELLED}&gt;Cancelled&lt;/option&gt;&#10;                &lt;/select&gt;&#10;&#10;                &lt;select&#10;                  value={dateFilter}&#10;                  onChange={(e) =&gt; setDateFilter(e.target.value)}&#10;                  className=&quot;px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;option value={DATE_FILTERS.ALL}&gt;All Time&lt;/option&gt;&#10;                  &lt;option value={DATE_FILTERS.TODAY}&gt;Today&lt;/option&gt;&#10;                  &lt;option value={DATE_FILTERS.WEEK}&gt;Last Week&lt;/option&gt;&#10;                  &lt;option value={DATE_FILTERS.MONTH}&gt;Last Month&lt;/option&gt;&#10;                &lt;/select&gt;&#10;&#10;                &lt;select&#10;                  value={sortOrder}&#10;                  onChange={(e) =&gt; setSortOrder(e.target.value)}&#10;                  className=&quot;px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;option value={SORT_OPTIONS.NEWEST}&gt;Newest First&lt;/option&gt;&#10;                  &lt;option value={SORT_OPTIONS.OLDEST}&gt;Oldest First&lt;/option&gt;&#10;                  &lt;option value={SORT_OPTIONS.HIGHEST}&gt;Highest Value&lt;/option&gt;&#10;                  &lt;option value={SORT_OPTIONS.LOWEST}&gt;Lowest Value&lt;/option&gt;&#10;                &lt;/select&gt;&#10;&#10;                {/* View Mode Toggle */}&#10;                &lt;div className=&quot;flex bg-gray-100 dark:bg-gray-700 rounded-xl p-1&quot;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; setViewMode(VIEW_MODES.CARDS)}&#10;                    className={`px-4 py-2 rounded-lg transition-all duration-200 ${&#10;                      viewMode === VIEW_MODES.CARDS&#10;                        ? &quot;bg-white dark:bg-gray-600 text-blue-600 shadow-sm&quot;&#10;                        : &quot;text-gray-600 dark:text-gray-400&quot;&#10;                    }`}&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-th-large&quot;&gt;&lt;/i&gt;&#10;                  &lt;/button&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; setViewMode(VIEW_MODES.LIST)}&#10;                    className={`px-4 py-2 rounded-lg transition-all duration-200 ${&#10;                      viewMode === VIEW_MODES.LIST&#10;                        ? &quot;bg-white dark:bg-gray-600 text-blue-600 shadow-sm&quot;&#10;                        : &quot;text-gray-600 dark:text-gray-400&quot;&#10;                    }`}&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-list&quot;&gt;&lt;/i&gt;&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Refresh Button */}&#10;                &lt;button&#10;                  onClick={handleRefresh}&#10;                  disabled={refreshing}&#10;                  className=&quot;px-4 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-xl transition-all duration-200 disabled:opacity-50 flex items-center&quot;&#10;                &gt;&#10;                  &lt;i&#10;                    className={`fas fa-sync-alt mr-2 ${refreshing ? &quot;animate-spin&quot; : &quot;&quot;}`}&#10;                  &gt;&lt;/i&gt;&#10;                  Refresh&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Orders Display - Full Width Cards */}&#10;          &lt;div className=&quot;space-y-6&quot;&gt;&#10;            {currentOrders.map((order, index) =&gt; (&#10;              &lt;div&#10;                key={order._id}&#10;                className=&quot;group bg-white dark:bg-gray-800 rounded-2xl shadow-lg hover:shadow-2xl border border-gray-200 dark:border-gray-700 overflow-hidden transition-all duration-300 transform hover:-translate-y-1&quot;&#10;                style={{ animationDelay: `${index * 100}ms` }}&#10;              &gt;&#10;                {/* Order Header */}&#10;                &lt;div className=&quot;bg-gradient-to-r from-gray-50 via-blue-50 to-indigo-50 dark:from-gray-700 dark:via-gray-600 dark:to-gray-700 p-6 border-b border-gray-200 dark:border-gray-600&quot;&gt;&#10;                  &lt;div className=&quot;flex flex-col sm:flex-row sm:items-center justify-between gap-4&quot;&gt;&#10;                    &lt;div className=&quot;flex-1&quot;&gt;&#10;                      &lt;div className=&quot;flex flex-col sm:flex-row sm:items-center gap-4 mb-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;                            Order #&#10;                            {order._id?.slice(-8)?.toUpperCase() || &quot;N/A&quot;}&#10;                          &lt;/h3&gt;&#10;                          &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-calendar mr-2&quot;&gt;&lt;/i&gt;&#10;                            {formatDate(order.createdAt)}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;                          {getStatusBadge(order.status)}&#10;                          &lt;div className=&quot;text-right&quot;&gt;&#10;                            &lt;div className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                              {formatPrice(order.total)}&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                              {order.items?.length} items&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Enhanced Progress Timeline */}&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200 dark:border-gray-600&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;                          &lt;h4 className=&quot;text-sm font-semibold text-gray-900 dark:text-white flex items-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-route mr-2 text-blue-600&quot;&gt;&lt;/i&gt;&#10;                            Order Progress&#10;                          &lt;/h4&gt;&#10;                          &lt;span className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                            {(() =&gt; {&#10;                              const statuses = [&#10;                                &quot;pending&quot;,&#10;                                &quot;confirmed&quot;,&#10;                                &quot;shipped&quot;,&#10;                                &quot;delivered&quot;,&#10;                              ];&#10;                              const currentIndex = statuses.indexOf(&#10;                                order.status?.toLowerCase(),&#10;                              );&#10;                              return `${currentIndex + 1}/${statuses.length}`;&#10;                            })()}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Progress Steps */}&#10;                        &lt;div className=&quot;relative&quot;&gt;&#10;                          &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                            {(() =&gt; {&#10;                              const steps = [&#10;                                {&#10;                                  status: &quot;pending&quot;,&#10;                                  icon: &quot;fas fa-clock&quot;,&#10;                                  label: &quot;Order Placed&quot;,&#10;                                  color: &quot;yellow&quot;,&#10;                                },&#10;                                {&#10;                                  status: &quot;confirmed&quot;,&#10;                                  icon: &quot;fas fa-check&quot;,&#10;                                  label: &quot;Confirmed&quot;,&#10;                                  color: &quot;blue&quot;,&#10;                                },&#10;                                {&#10;                                  status: &quot;shipped&quot;,&#10;                                  icon: &quot;fas fa-truck&quot;,&#10;                                  label: &quot;Shipped&quot;,&#10;                                  color: &quot;purple&quot;,&#10;                                },&#10;                                {&#10;                                  status: &quot;delivered&quot;,&#10;                                  icon: &quot;fas fa-check-circle&quot;,&#10;                                  label: &quot;Delivered&quot;,&#10;                                  color: &quot;green&quot;,&#10;                                },&#10;                              ];&#10;&#10;                              const currentIndex = steps.findIndex(&#10;                                (step) =&gt;&#10;                                  step.status === order.status?.toLowerCase(),&#10;                              );&#10;&#10;                              return steps.map((step, index) =&gt; {&#10;                                const isCompleted = index &lt;= currentIndex;&#10;                                const isActive = index === currentIndex;&#10;                                const isCancelled =&#10;                                  order.status?.toLowerCase() === &quot;cancelled&quot;;&#10;&#10;                                return (&#10;                                  &lt;div&#10;                                    key={step.status}&#10;                                    className=&quot;flex flex-col items-center relative z-10&quot;&#10;                                  &gt;&#10;                                    {/* Step Icon */}&#10;                                    &lt;div&#10;                                      className={`&#10;                                      w-12 h-12 rounded-full flex items-center justify-center border-2 transition-all duration-300&#10;                                      ${&#10;                                        isCancelled&#10;                                          ? &quot;bg-red-100 border-red-300 text-red-600&quot;&#10;                                          : isCompleted&#10;                                            ? `bg-${step.color}-100 border-${step.color}-500 text-${step.color}-600`&#10;                                            : isActive&#10;                                              ? `bg-${step.color}-50 border-${step.color}-300 text-${step.color}-500 animate-pulse`&#10;                                              : &quot;bg-gray-100 border-gray-300 text-gray-400&quot;&#10;                                      }&#10;                                    `}&#10;                                    &gt;&#10;                                      &lt;i&#10;                                        className={`${isCancelled ? &quot;fas fa-times&quot; : step.icon} text-lg`}&#10;                                      &gt;&lt;/i&gt;&#10;                                    &lt;/div&gt;&#10;&#10;                                    {/* Step Label */}&#10;                                    &lt;span&#10;                                      className={`&#10;                                      mt-2 text-xs font-medium text-center&#10;                                      ${&#10;                                        isCancelled&#10;                                          ? &quot;text-red-600&quot;&#10;                                          : isCompleted&#10;                                            ? &quot;text-gray-900 dark:text-white&quot;&#10;                                            : &quot;text-gray-500 dark:text-gray-400&quot;&#10;                                      }&#10;                                    `}&#10;                                    &gt;&#10;                                      {isCancelled &amp;&amp; index === currentIndex&#10;                                        ? &quot;Cancelled&quot;&#10;                                        : step.label}&#10;                                    &lt;/span&gt;&#10;&#10;                                    {/* Date/Time for completed steps */}&#10;                                    {isCompleted &amp;&amp; !isCancelled &amp;&amp; (&#10;                                      &lt;span className=&quot;text-xs text-gray-400 mt-1&quot;&gt;&#10;                                        {index === 0&#10;                                          ? new Date(&#10;                                              order.createdAt,&#10;                                            ).toLocaleDateString()&#10;                                          : &quot;TBD&quot;}&#10;                                      &lt;/span&gt;&#10;                                    )}&#10;                                  &lt;/div&gt;&#10;                                );&#10;                              });&#10;                            })()}&#10;                          &lt;/div&gt;&#10;&#10;                          {/* Progress Line */}&#10;                          &lt;div className=&quot;absolute top-6 left-6 right-6 h-0.5 bg-gray-200 dark:bg-gray-600 -z-0&quot;&gt;&#10;                            &lt;div&#10;                              className={`h-full transition-all duration-700 ease-out ${&#10;                                order.status?.toLowerCase() === &quot;cancelled&quot;&#10;                                  ? &quot;bg-red-400&quot;&#10;                                  : &quot;bg-gradient-to-r from-yellow-400 via-blue-400 via-purple-400 to-green-400&quot;&#10;                              }`}&#10;                              style={{&#10;                                width: (() =&gt; {&#10;                                  const statuses = [&#10;                                    &quot;pending&quot;,&#10;                                    &quot;confirmed&quot;,&#10;                                    &quot;shipped&quot;,&#10;                                    &quot;delivered&quot;,&#10;                                  ];&#10;                                  const currentIndex = statuses.indexOf(&#10;                                    order.status?.toLowerCase(),&#10;                                  );&#10;                                  if (&#10;                                    order.status?.toLowerCase() === &quot;cancelled&quot;&#10;                                  )&#10;                                    return &quot;25%&quot;;&#10;                                  return `${((currentIndex + 1) / statuses.length) * 100}%`;&#10;                                })(),&#10;                              }}&#10;                            &gt;&lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Status Message */}&#10;                        &lt;div className=&quot;mt-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg&quot;&gt;&#10;                          &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {order.status === &quot;pending&quot; &amp;&amp; (&#10;                              &lt;&gt;&#10;                                &lt;i className=&quot;fas fa-hourglass-half mr-2 text-yellow-500&quot;&gt;&lt;/i&gt;&#10;                                Waiting for farmer confirmation. We'll notify&#10;                                you once your order is confirmed.&#10;                              &lt;/&gt;&#10;                            )}&#10;                            {order.status === &quot;confirmed&quot; &amp;&amp; (&#10;                              &lt;&gt;&#10;                                &lt;i className=&quot;fas fa-thumbs-up mr-2 text-blue-500&quot;&gt;&lt;/i&gt;&#10;                                Your order has been confirmed! The farmer is&#10;                                preparing your items.&#10;                              &lt;/&gt;&#10;                            )}&#10;                            {order.status === &quot;shipped&quot; &amp;&amp; (&#10;                              &lt;&gt;&#10;                                &lt;i className=&quot;fas fa-shipping-fast mr-2 text-purple-500&quot;&gt;&lt;/i&gt;&#10;                                Your order is on the way! Track your delivery&#10;                                for real-time updates.&#10;                              &lt;/&gt;&#10;                            )}&#10;                            {order.status === &quot;delivered&quot; &amp;&amp; (&#10;                              &lt;&gt;&#10;                                &lt;i className=&quot;fas fa-box-open mr-2 text-green-500&quot;&gt;&lt;/i&gt;&#10;                                Order delivered successfully! Enjoy your fresh&#10;                                products.&#10;                              &lt;/&gt;&#10;                            )}&#10;                            {order.status === &quot;cancelled&quot; &amp;&amp; (&#10;                              &lt;&gt;&#10;                                &lt;i className=&quot;fas fa-ban mr-2 text-red-500&quot;&gt;&lt;/i&gt;&#10;                                This order has been cancelled. If you have&#10;                                questions, please contact support.&#10;                              &lt;/&gt;&#10;                            )}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Order Content */}&#10;                &lt;div className=&quot;p-6&quot;&gt;&#10;                  {/* Order Items Grid */}&#10;                  &lt;div className=&quot;mb-6&quot;&gt;&#10;                    &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4 flex items-center&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-box mr-2 text-blue-600&quot;&gt;&lt;/i&gt;&#10;                      Order Items ({order.items?.length || 0})&#10;                    &lt;/h4&gt;&#10;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mb-4&quot;&gt;&#10;                      {order.items?.slice(0, 8).map((item, index) =&gt; (&#10;                        &lt;div&#10;                          key={index}&#10;                          className=&quot;bg-gray-50 dark:bg-gray-700 rounded-xl p-4 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors duration-200 border border-gray-200 dark:border-gray-600&quot;&#10;                        &gt;&#10;                          &lt;div className=&quot;flex items-start space-x-3&quot;&gt;&#10;                            &lt;div className=&quot;relative flex-shrink-0&quot;&gt;&#10;                              &lt;img&#10;                                src={&#10;                                  item.image ||&#10;                                  item.productImage ||&#10;                                  item.product?.image ||&#10;                                  item.product?.images?.[0] ||&#10;                                  &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=60&amp;h=60&amp;fit=crop&quot;&#10;                                }&#10;                                alt={item.productName || item.name || &quot;Product&quot;}&#10;                                className=&quot;w-16 h-16 rounded-lg object-cover border-2 border-white dark:border-gray-600 shadow-sm&quot;&#10;                                onError={(e) =&gt; {&#10;                                  e.target.src =&#10;                                    &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=60&amp;h=60&amp;fit=crop&quot;;&#10;                                }}&#10;                              /&gt;&#10;                              &lt;div className=&quot;absolute -top-2 -right-2 bg-blue-600 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center font-bold&quot;&gt;&#10;                                {item.quantity}&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#10;                              &lt;h5 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                                {item.productName}&#10;                              &lt;/h5&gt;&#10;                              &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400 mb-1 flex items-center&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-user-tie mr-1&quot;&gt;&lt;/i&gt;&#10;                                {item.farmerName || &quot;Local Farmer&quot;}&#10;                              &lt;/p&gt;&#10;                              &lt;div className=&quot;flex justify-between items-center&quot;&gt;&#10;                                &lt;span className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                  {formatPrice(item.price)}/unit&#10;                                &lt;/span&gt;&#10;                                &lt;span className=&quot;font-semibold text-gray-900 dark:text-white text-sm&quot;&gt;&#10;                                  {formatPrice(item.price * item.quantity)}&#10;                                &lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ))}&#10;                    &lt;/div&gt;&#10;&#10;                    {order.items?.length &gt; 8 &amp;&amp; (&#10;                      &lt;div className=&quot;text-center&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; {&#10;                            setSelectedOrder(order);&#10;                            setShowOrderDetails(true);&#10;                          }}&#10;                          className=&quot;inline-flex items-center px-4 py-2 text-blue-600 hover:text-blue-700 font-medium text-sm rounded-lg hover:bg-blue-50 dark:hover:bg-blue-900 transition-colors duration-200&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-plus mr-2&quot;&gt;&lt;/i&gt;&#10;                          View {order.items.length - 8} more items&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Order Summary &amp; Actions */}&#10;                  &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6&quot;&gt;&#10;                    &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4&quot;&gt;&#10;                      {/* Order Summary */}&#10;                      &lt;div className=&quot;grid grid-cols-2 md:grid-cols-4 gap-4 flex-1&quot;&gt;&#10;                        &lt;div className=&quot;text-center p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-700&quot;&gt;&#10;                          &lt;div className=&quot;text-lg font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                            {order.items?.length || 0}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-blue-600 dark:text-blue-400&quot;&gt;&#10;                            Items&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-center p-3 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-700&quot;&gt;&#10;                          &lt;div className=&quot;text-lg font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                            {formatPrice(order.subtotal || order.total || 0)}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-green-600 dark:text-green-400&quot;&gt;&#10;                            Subtotal&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-center p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg border border-purple-200 dark:border-purple-700&quot;&gt;&#10;                          &lt;div className=&quot;text-lg font-bold text-purple-600 dark:text-purple-400&quot;&gt;&#10;                            {formatPrice(order.deliveryFee || 50)}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-purple-600 dark:text-purple-400&quot;&gt;&#10;                            Delivery&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600&quot;&gt;&#10;                          &lt;div className=&quot;text-lg font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                            {formatPrice(order.total)}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Total&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Action Buttons */}&#10;                      &lt;div className=&quot;flex flex-wrap gap-3&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; {&#10;                            setSelectedOrder(order);&#10;                            setShowOrderDetails(true);&#10;                          }}&#10;                          className=&quot;flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 shadow-lg&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-eye mr-2&quot;&gt;&lt;/i&gt;&#10;                          View Details&#10;                        &lt;/button&gt;&#10;&#10;                        {order.status === &quot;delivered&quot; &amp;&amp; (&#10;                          &lt;&gt;&#10;                            &lt;button&#10;                              onClick={() =&gt; handleDownloadReceipt(order)}&#10;                              className=&quot;flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg font-medium transition-all duration-200 shadow-lg&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-download mr-2&quot;&gt;&lt;/i&gt;&#10;                              Receipt&#10;                            &lt;/button&gt;&#10;                            &lt;Link&#10;                              href={`/review?orderId=${order._id}`}&#10;                              className=&quot;flex items-center px-4 py-2 border border-orange-300 text-orange-600 hover:bg-orange-50 dark:hover:bg-orange-900 rounded-lg font-medium transition-all duration-200&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-star mr-2&quot;&gt;&lt;/i&gt;&#10;                              Review&#10;                            &lt;/Link&gt;&#10;                            &lt;button&#10;                              onClick={() =&gt; handleReorder(order)}&#10;                              className=&quot;flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-lg font-medium transition-all duration-200&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-redo mr-2&quot;&gt;&lt;/i&gt;&#10;                              Reorder&#10;                            &lt;/button&gt;&#10;                          &lt;/&gt;&#10;                        )}&#10;&#10;                        {(order.status === &quot;pending&quot; ||&#10;                          order.status === &quot;confirmed&quot;) &amp;&amp; (&#10;                          &lt;button&#10;                            onClick={() =&gt; handleCancelOrder(order._id)}&#10;                            className=&quot;flex items-center px-4 py-2 border border-red-300 text-red-600 hover:bg-red-50 dark:hover:bg-red-900 rounded-lg font-medium transition-all duration-200&quot;&#10;                          &gt;&#10;                            &lt;i className=&quot;fas fa-times mr-2&quot;&gt;&lt;/i&gt;&#10;                            Cancel Order&#10;                          &lt;/button&gt;&#10;                        )}&#10;&#10;                        {order.status === &quot;shipped&quot; &amp;&amp; (&#10;                          &lt;button className=&quot;flex items-center px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg font-medium transition-all duration-200 shadow-lg&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-map-marker-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                            Track Order&#10;                          &lt;/button&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            ))}&#10;          &lt;/div&gt;&#10;&#10;          {/* Enhanced Pagination */}&#10;          {totalPages &gt; 1 &amp;&amp; (&#10;            &lt;div className=&quot;flex flex-col sm:flex-row justify-between items-center mt-12 bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg border border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400 mb-4 sm:mb-0&quot;&gt;&#10;                Showing {indexOfFirstOrder + 1} to{&quot; &quot;}&#10;                {Math.min(indexOfLastOrder, filteredOrders.length)} of{&quot; &quot;}&#10;                {filteredOrders.length} orders&#10;              &lt;/div&gt;&#10;&#10;              &lt;nav&#10;                aria-label=&quot;Pagination&quot;&#10;                className=&quot;flex items-center space-x-2&quot;&#10;              &gt;&#10;                &lt;button&#10;                  onClick={() =&gt;&#10;                    setCurrentPage((prev) =&gt; Math.max(prev - 1, 1))&#10;                  }&#10;                  disabled={currentPage === 1}&#10;                  className=&quot;px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-chevron-left&quot;&gt;&lt;/i&gt;&#10;                &lt;/button&gt;&#10;&#10;                {[...Array(totalPages)].map((_, index) =&gt; {&#10;                  const page = index + 1;&#10;                  if (&#10;                    page === currentPage ||&#10;                    page === 1 ||&#10;                    page === totalPages ||&#10;                    (page &gt;= currentPage - 1 &amp;&amp; page &lt;= currentPage + 1)&#10;                  ) {&#10;                    return (&#10;                      &lt;button&#10;                        key={page}&#10;                        onClick={() =&gt; setCurrentPage(page)}&#10;                        className={`px-4 py-2 rounded-lg font-medium transition-all duration-200 ${&#10;                          currentPage === page&#10;                            ? &quot;bg-blue-600 text-white shadow-lg transform scale-110&quot;&#10;                            : &quot;text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 border border-gray-300 dark:border-gray-600&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {page}&#10;                      &lt;/button&gt;&#10;                    );&#10;                  } else if (&#10;                    page === currentPage - 2 ||&#10;                    page === currentPage + 2&#10;                  ) {&#10;                    return (&#10;                      &lt;span key={page} className=&quot;px-2 text-gray-400&quot;&gt;&#10;                        ...&#10;                      &lt;/span&gt;&#10;                    );&#10;                  }&#10;                  return null;&#10;                })}&#10;&#10;                &lt;button&#10;                  onClick={() =&gt;&#10;                    setCurrentPage((prev) =&gt; Math.min(prev + 1, totalPages))&#10;                  }&#10;                  disabled={currentPage === totalPages}&#10;                  className=&quot;px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt;&#10;                &lt;/button&gt;&#10;              &lt;/nav&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Enhanced Order Details Modal */}&#10;      {showOrderDetails &amp;&amp; selectedOrder &amp;&amp; (&#10;        &lt;div className=&quot;fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center p-4 z-50 animate-in fade-in duration-300&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-900 rounded-3xl w-full max-w-6xl max-h-[95vh] overflow-hidden shadow-2xl border border-gray-200 dark:border-gray-700 animate-in zoom-in duration-300&quot;&gt;&#10;            {/* Enhanced Modal Header */}&#10;            &lt;div className=&quot;relative bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 text-white p-6&quot;&gt;&#10;              &lt;div className=&quot;absolute inset-0 bg-black/10&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;relative flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4&quot;&gt;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;div className=&quot;p-3 bg-white/20 rounded-2xl backdrop-blur-sm&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-receipt text-2xl&quot;&gt;&lt;/i&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h3 className=&quot;text-2xl font-bold mb-1&quot;&gt;Order Details&lt;/h3&gt;&#10;                    &lt;div className=&quot;flex items-center space-x-4 text-blue-100&quot;&gt;&#10;                      &lt;span className=&quot;flex items-center&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-hashtag mr-1 text-sm&quot;&gt;&lt;/i&gt;&#10;                        {selectedOrder._id?.slice(-8)?.toUpperCase()}&#10;                      &lt;/span&gt;&#10;                      &lt;span className=&quot;flex items-center&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-calendar mr-1 text-sm&quot;&gt;&lt;/i&gt;&#10;                        {formatDate(selectedOrder.createdAt)}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                  {/* Status Badge */}&#10;                  &lt;div className=&quot;px-4 py-2 bg-white/20 backdrop-blur-sm rounded-full&quot;&gt;&#10;                    {getStatusBadge(selectedOrder.status)}&#10;                  &lt;/div&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; setShowOrderDetails(false)}&#10;                    className=&quot;p-2 hover:bg-white/20 rounded-xl transition-colors duration-200&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-times text-xl&quot;&gt;&lt;/i&gt;&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Enhanced Modal Body */}&#10;            &lt;div className=&quot;p-8 overflow-y-auto max-h-[calc(95vh-200px)]&quot;&gt;&#10;              &lt;div className=&quot;grid grid-cols-1 xl:grid-cols-3 gap-8&quot;&gt;&#10;                {/* Left Column - Order Summary &amp; Status */}&#10;                &lt;div className=&quot;xl:col-span-1 space-y-6&quot;&gt;&#10;                  {/* Order Summary Card */}&#10;                  &lt;div className=&quot;bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-2xl p-6 border border-blue-200 dark:border-blue-800&quot;&gt;&#10;                    &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center&quot;&gt;&#10;                      &lt;div className=&quot;p-2 bg-blue-100 dark:bg-blue-800 rounded-lg mr-3&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-chart-pie text-blue-600 dark:text-blue-300&quot;&gt;&lt;/i&gt;&#10;                      &lt;/div&gt;&#10;                      Order Summary&#10;                    &lt;/h4&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between p-3 bg-white dark:bg-gray-800 rounded-xl&quot;&gt;&#10;                        &lt;span className=&quot;text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-box text-blue-500 mr-2&quot;&gt;&lt;/i&gt;&#10;                          Items&#10;                        &lt;/span&gt;&#10;                        &lt;span className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {selectedOrder.items?.length} items&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;flex items-center justify-between p-3 bg-white dark:bg-gray-800 rounded-xl&quot;&gt;&#10;                        &lt;span className=&quot;text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-credit-card text-green-500 mr-2&quot;&gt;&lt;/i&gt;&#10;                          Payment&#10;                        &lt;/span&gt;&#10;                        &lt;span className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {selectedOrder.paymentMethod || &quot;Cash on Delivery&quot;}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;border-t border-blue-200 dark:border-blue-800 pt-4&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                          &lt;span className=&quot;text-lg font-medium text-gray-700 dark:text-gray-300&quot;&gt;&#10;                            Total Amount&#10;                          &lt;/span&gt;&#10;                          &lt;span className=&quot;text-2xl font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                            {formatPrice(selectedOrder.total)}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Delivery Information Card */}&#10;                  {selectedOrder.deliveryAddress &amp;&amp; (&#10;                    &lt;div className=&quot;bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 rounded-2xl p-6 border border-green-200 dark:border-green-800&quot;&gt;&#10;                      &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center&quot;&gt;&#10;                        &lt;div className=&quot;p-2 bg-green-100 dark:bg-green-800 rounded-lg mr-3&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-map-marker-alt text-green-600 dark:text-green-300&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        Delivery Address&#10;                      &lt;/h4&gt;&#10;&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 space-y-3&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                          &lt;div className=&quot;w-10 h-10 bg-green-100 dark:bg-green-800 rounded-full flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-user text-green-600 dark:text-green-300&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div&gt;&#10;                            &lt;p className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                              {selectedOrder.deliveryAddress.name}&#10;                            &lt;/p&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Recipient&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;flex items-start space-x-3&quot;&gt;&#10;                          &lt;div className=&quot;w-10 h-10 bg-green-100 dark:bg-green-800 rounded-full flex items-center justify-center mt-1&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-home text-green-600 dark:text-green-300&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div&gt;&#10;                            &lt;p className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                              {selectedOrder.deliveryAddress.address}&#10;                            &lt;/p&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              {selectedOrder.deliveryAddress.city}&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                          &lt;div className=&quot;w-10 h-10 bg-green-100 dark:bg-green-800 rounded-full flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-phone text-green-600 dark:text-green-300&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div&gt;&#10;                            &lt;p className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                              {selectedOrder.deliveryAddress.phone}&#10;                            &lt;/p&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Contact number&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Order Timeline */}&#10;                  &lt;div className=&quot;bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 rounded-2xl p-6 border border-purple-200 dark:border-purple-800&quot;&gt;&#10;                    &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center&quot;&gt;&#10;                      &lt;div className=&quot;p-2 bg-purple-100 dark:bg-purple-800 rounded-lg mr-3&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-clock text-purple-600 dark:text-purple-300&quot;&gt;&lt;/i&gt;&#10;                      &lt;/div&gt;&#10;                      Order Timeline&#10;                    &lt;/h4&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      {[&#10;                        {&#10;                          status: &quot;pending&quot;,&#10;                          label: &quot;Order Placed&quot;,&#10;                          icon: &quot;fa-plus-circle&quot;,&#10;                        },&#10;                        {&#10;                          status: &quot;confirmed&quot;,&#10;                          label: &quot;Order Confirmed&quot;,&#10;                          icon: &quot;fa-check-circle&quot;,&#10;                        },&#10;                        {&#10;                          status: &quot;shipped&quot;,&#10;                          label: &quot;Order Shipped&quot;,&#10;                          icon: &quot;fa-truck&quot;,&#10;                        },&#10;                        {&#10;                          status: &quot;delivered&quot;,&#10;                          label: &quot;Order Delivered&quot;,&#10;                          icon: &quot;fa-home&quot;,&#10;                        },&#10;                      ].map((step, index) =&gt; {&#10;                        const isActive =&#10;                          [&#10;                            &quot;pending&quot;,&#10;                            &quot;confirmed&quot;,&#10;                            &quot;shipped&quot;,&#10;                            &quot;delivered&quot;,&#10;                          ].indexOf(selectedOrder.status) &gt;= index;&#10;                        const isCurrent =&#10;                          [&quot;pending&quot;, &quot;confirmed&quot;, &quot;shipped&quot;, &quot;delivered&quot;][&#10;                            index&#10;                          ] === selectedOrder.status;&#10;&#10;                        return (&#10;                          &lt;div&#10;                            key={step.status}&#10;                            className=&quot;flex items-center space-x-4&quot;&#10;                          &gt;&#10;                            &lt;div&#10;                              className={`w-10 h-10 rounded-full flex items-center justify-center transition-all ${&#10;                                isActive&#10;                                  ? isCurrent&#10;                                    ? &quot;bg-purple-500 text-white shadow-lg scale-110&quot;&#10;                                    : &quot;bg-green-500 text-white&quot;&#10;                                  : &quot;bg-gray-200 dark:bg-gray-700 text-gray-400&quot;&#10;                              }`}&#10;                            &gt;&#10;                              &lt;i&#10;                                className={`fas ${step.icon} ${isCurrent ? &quot;animate-pulse&quot; : &quot;&quot;}`}&#10;                              &gt;&lt;/i&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;flex-1&quot;&gt;&#10;                              &lt;p&#10;                                className={`font-medium ${isActive ? &quot;text-gray-900 dark:text-white&quot; : &quot;text-gray-400&quot;}`}&#10;                              &gt;&#10;                                {step.label}&#10;                              &lt;/p&gt;&#10;                              {isCurrent &amp;&amp; (&#10;                                &lt;p className=&quot;text-sm text-purple-600 dark:text-purple-400 font-medium&quot;&gt;&#10;                                  Current Status&#10;                                &lt;/p&gt;&#10;                              )}&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        );&#10;                      })}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Right Column - Order Items */}&#10;                &lt;div className=&quot;xl:col-span-2&quot;&gt;&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700 h-full&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                      &lt;h4 className=&quot;text-xl font-bold text-gray-900 dark:text-white flex items-center&quot;&gt;&#10;                        &lt;div className=&quot;p-2 bg-orange-100 dark:bg-orange-800 rounded-lg mr-3&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-shopping-bag text-orange-600 dark:text-orange-300&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        Items Ordered ({selectedOrder.items?.length})&#10;                      &lt;/h4&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4 max-h-[600px] overflow-y-auto pr-2 scrollbar-thin scrollbar-track-gray-100 dark:scrollbar-track-gray-800 scrollbar-thumb-gray-300 dark:scrollbar-thumb-gray-600&quot;&gt;&#10;                      {selectedOrder.items?.map((item, index) =&gt; (&#10;                        &lt;div&#10;                          key={index}&#10;                          className=&quot;group bg-gray-50 dark:bg-gray-700 rounded-2xl p-5 hover:shadow-lg transition-all duration-200 border border-gray-100 dark:border-gray-600&quot;&#10;                        &gt;&#10;                          &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                            {/* Product Image */}&#10;                            &lt;div className=&quot;relative&quot;&gt;&#10;                              &lt;img&#10;                                src={&#10;                                  item.image ||&#10;                                  item.productImage ||&#10;                                  item.product?.image ||&#10;                                  item.product?.images?.[0] ||&#10;                                  &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=80&amp;h=80&amp;fit=crop&quot;&#10;                                }&#10;                                alt={item.productName}&#10;                                className=&quot;w-20 h-20 rounded-xl object-cover group-hover:scale-105 transition-transform duration-200&quot;&#10;                              /&gt;&#10;                              &lt;div className=&quot;absolute -top-2 -right-2 w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-xs font-bold&quot;&gt;&#10;                                {item.quantity}&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            {/* Product Details */}&#10;                            &lt;div className=&quot;flex-1&quot;&gt;&#10;                              &lt;h5 className=&quot;font-bold text-gray-900 dark:text-white text-lg mb-1&quot;&gt;&#10;                                {item.productName}&#10;                              &lt;/h5&gt;&#10;                              &lt;div className=&quot;flex items-center space-x-2 mb-2&quot;&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#10;                                  &lt;i className=&quot;fas fa-user-circle text-green-500 text-sm&quot;&gt;&lt;/i&gt;&#10;                                  &lt;span className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                    {item.farmerName || &quot;Local Farmer&quot;}&#10;                                  &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                {item.category &amp;&amp; (&#10;                                  &lt;span className=&quot;px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 rounded-full text-xs font-medium&quot;&gt;&#10;                                    {item.category}&#10;                                  &lt;/span&gt;&#10;                                )}&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;flex items-center space-x-4 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                &lt;span className=&quot;flex items-center&quot;&gt;&#10;                                  &lt;i className=&quot;fas fa-tag mr-1 text-green-500&quot;&gt;&lt;/i&gt;&#10;                                  {formatPrice(item.price)}/unit&#10;                                &lt;/span&gt;&#10;                                &lt;span className=&quot;flex items-center&quot;&gt;&#10;                                  &lt;i className=&quot;fas fa-weight mr-1 text-blue-500&quot;&gt;&lt;/i&gt;&#10;                                  Qty: {item.quantity}&#10;                                &lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            {/* Price */}&#10;                            &lt;div className=&quot;text-right&quot;&gt;&#10;                              &lt;div className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                                {formatPrice(item.price * item.quantity)}&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                Total&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ))}&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Order Total Summary */}&#10;                    &lt;div className=&quot;mt-6 pt-6 border-t border-gray-200 dark:border-gray-600&quot;&gt;&#10;                      &lt;div className=&quot;bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-xl p-4&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                          &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-receipt text-blue-500&quot;&gt;&lt;/i&gt;&#10;                            &lt;span className=&quot;text-lg font-medium text-gray-700 dark:text-gray-300&quot;&gt;&#10;                              Order Total&#10;                            &lt;/span&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;span className=&quot;text-3xl font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                            {formatPrice(selectedOrder.total)}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Enhanced Modal Footer */}&#10;            &lt;div className=&quot;bg-gray-50 dark:bg-gray-800/50 px-8 py-6 border-t border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;flex flex-col sm:flex-row justify-between items-center space-y-3 sm:space-y-0&quot;&gt;&#10;                &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  &lt;span className=&quot;flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-info-circle text-blue-500 mr-2&quot;&gt;&lt;/i&gt;&#10;                    Need help with your order? Contact our support team.&#10;                  &lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; setShowOrderDetails(false)}&#10;                    className=&quot;px-6 py-3 border-2 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl font-medium transition-all duration-200&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-times mr-2&quot;&gt;&lt;/i&gt;&#10;                    Close&#10;                  &lt;/button&gt;&#10;&#10;                  {selectedOrder.status === &quot;delivered&quot; &amp;&amp; (&#10;                    &lt;button&#10;                      onClick={() =&gt; handleDownloadReceipt(selectedOrder)}&#10;                      className=&quot;px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-xl font-medium transition-all duration-200 shadow-lg hover:shadow-xl&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-download mr-2&quot;&gt;&lt;/i&gt;&#10;                      Download Receipt&#10;                    &lt;/button&gt;&#10;                  )}&#10;&#10;                  &lt;button&#10;                    onClick={() =&gt; window.print()}&#10;                    className=&quot;px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white rounded-xl font-medium transition-all duration-200&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-print mr-2&quot;&gt;&lt;/i&gt;&#10;                    Print&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;&#10;      {/* Enhanced Reorder Modal */}&#10;      {showReorderModal &amp;&amp; validationResult &amp;&amp; (&#10;        &lt;ReorderModal&#10;          isOpen={showReorderModal}&#10;          onClose={cancelReorder}&#10;          validationResult={validationResult}&#10;          onProceedWithAvailable={proceedWithAvailableItems}&#10;          loading={reorderLoading}&#10;        /&gt;&#10;      )}&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useMemo, useCallback, useEffect } from &quot;react&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useRouter } from &quot;next/navigation&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;import ReorderModal from &quot;@/components/ReorderModal&quot;;&#10;import { useReorder } from &quot;@/hooks/useReorder&quot;;&#10;import { useOrdersQuery, useOrdersCache } from &quot;@/hooks/useOrdersQuery&quot;;&#10;&#10;// Constants for better maintainability&#10;const ORDER_STATUSES = {&#10;  ALL: &quot;All Orders&quot;,&#10;  PENDING: &quot;pending&quot;,&#10;  CONFIRMED: &quot;confirmed&quot;,&#10;  SHIPPED: &quot;shipped&quot;,&#10;  DELIVERED: &quot;delivered&quot;,&#10;  CANCELLED: &quot;cancelled&quot;,&#10;};&#10;&#10;const DATE_FILTERS = {&#10;  ALL: &quot;all&quot;,&#10;  TODAY: &quot;today&quot;,&#10;  WEEK: &quot;week&quot;,&#10;  MONTH: &quot;month&quot;,&#10;};&#10;&#10;const SORT_OPTIONS = {&#10;  NEWEST: &quot;newest&quot;,&#10;  OLDEST: &quot;oldest&quot;,&#10;  HIGHEST: &quot;highest&quot;,&#10;  LOWEST: &quot;lowest&quot;,&#10;};&#10;&#10;const VIEW_MODES = {&#10;  CARDS: &quot;cards&quot;,&#10;  LIST: &quot;list&quot;,&#10;};&#10;&#10;// Custom hooks for better code organization&#10;const useOrderStats = (orders) =&gt; {&#10;  return useMemo(() =&gt; {&#10;    const total = orders.length;&#10;    const delivered = orders.filter(&#10;      (order) =&gt; order.status === &quot;delivered&quot;,&#10;    ).length;&#10;    const pending = orders.filter((order) =&gt; order.status === &quot;pending&quot;).length;&#10;    const totalSpent = orders.reduce(&#10;      (sum, order) =&gt; sum + (order.total || 0),&#10;      0,&#10;    );&#10;&#10;    return { total, delivered, pending, totalSpent };&#10;  }, [orders]);&#10;};&#10;&#10;const useOrderFilters = (orders) =&gt; {&#10;  const [statusFilter, setStatusFilter] = useState(ORDER_STATUSES.ALL);&#10;  const [searchTerm, setSearchTerm] = useState(&quot;&quot;);&#10;  const [dateFilter, setDateFilter] = useState(DATE_FILTERS.ALL);&#10;  const [sortOrder, setSortOrder] = useState(SORT_OPTIONS.NEWEST);&#10;&#10;  const filteredOrders = useMemo(() =&gt; {&#10;    let filtered = [...orders];&#10;&#10;    // Filter by status&#10;    if (statusFilter !== ORDER_STATUSES.ALL) {&#10;      filtered = filtered.filter((order) =&gt; order.status === statusFilter);&#10;    }&#10;&#10;    // Filter by search term&#10;    if (searchTerm) {&#10;      filtered = filtered.filter(&#10;        (order) =&gt;&#10;          order._id?.toLowerCase().includes(searchTerm.toLowerCase()) ||&#10;          order.items?.some(&#10;            (item) =&gt;&#10;              item.productName&#10;                ?.toLowerCase()&#10;                .includes(searchTerm.toLowerCase()) ||&#10;              item.farmerName?.toLowerCase().includes(searchTerm.toLowerCase()),&#10;          ),&#10;      );&#10;    }&#10;&#10;    // Filter by date&#10;    if (dateFilter !== DATE_FILTERS.ALL) {&#10;      const now = new Date();&#10;      const filterDate = new Date();&#10;&#10;      switch (dateFilter) {&#10;        case DATE_FILTERS.TODAY:&#10;          filterDate.setHours(0, 0, 0, 0);&#10;          break;&#10;        case DATE_FILTERS.WEEK:&#10;          filterDate.setDate(now.getDate() - 7);&#10;          break;&#10;        case DATE_FILTERS.MONTH:&#10;          filterDate.setMonth(now.getMonth() - 1);&#10;          break;&#10;      }&#10;&#10;      filtered = filtered.filter(&#10;        (order) =&gt; new Date(order.createdAt) &gt;= filterDate,&#10;      );&#10;    }&#10;&#10;    // Sort orders&#10;    switch (sortOrder) {&#10;      case SORT_OPTIONS.NEWEST:&#10;        filtered.sort((a, b) =&gt; new Date(b.createdAt) - new Date(a.createdAt));&#10;        break;&#10;      case SORT_OPTIONS.OLDEST:&#10;        filtered.sort((a, b) =&gt; new Date(a.createdAt) - new Date(b.createdAt));&#10;        break;&#10;      case SORT_OPTIONS.HIGHEST:&#10;        filtered.sort((a, b) =&gt; (b.total || 0) - (a.total || 0));&#10;        break;&#10;      case SORT_OPTIONS.LOWEST:&#10;        filtered.sort((a, b) =&gt; (a.total || 0) - (b.total || 0));&#10;        break;&#10;    }&#10;&#10;    return filtered;&#10;  }, [orders, statusFilter, searchTerm, dateFilter, sortOrder]);&#10;&#10;  return {&#10;    filteredOrders,&#10;    statusFilter,&#10;    setStatusFilter,&#10;    searchTerm,&#10;    setSearchTerm,&#10;    dateFilter,&#10;    setDateFilter,&#10;    sortOrder,&#10;    setSortOrder,&#10;  };&#10;};&#10;&#10;// Enhanced loading skeleton with modern animations that matches actual order structure&#10;const OrdersLoadingSkeleton = () =&gt; (&#10;  &lt;div className=&quot;space-y-6&quot;&gt;&#10;    {/* Custom CSS animations for bookings */}&#10;    &lt;style jsx&gt;{`&#10;      @keyframes fadeInUp {&#10;        from {&#10;          opacity: 0;&#10;          transform: translateY(30px);&#10;        }&#10;        to {&#10;          opacity: 1;&#10;          transform: translateY(0);&#10;        }&#10;      }&#10;&#10;      @keyframes shimmer {&#10;        0% {&#10;          transform: translateX(-100%);&#10;        }&#10;        100% {&#10;          transform: translateX(100%);&#10;        }&#10;      }&#10;&#10;      @keyframes orderFloat {&#10;        0%,&#10;        100% {&#10;          transform: translateY(0px) rotate(0deg);&#10;        }&#10;        50% {&#10;          transform: translateY(-10px) rotate(2deg);&#10;        }&#10;      }&#10;&#10;      @keyframes packageMove {&#10;        0% {&#10;          transform: translateX(-15px);&#10;        }&#10;        100% {&#10;          transform: translateX(15px);&#10;        }&#10;      }&#10;&#10;      @keyframes statusPulse {&#10;        0%,&#10;        100% {&#10;          opacity: 0.4;&#10;        }&#10;        50% {&#10;          opacity: 1;&#10;        }&#10;      }&#10;&#10;      .animate-shimmer {&#10;        animation: shimmer 2s infinite;&#10;      }&#10;&#10;      .animate-order-float {&#10;        animation: orderFloat 3s ease-in-out infinite;&#10;      }&#10;&#10;      .animate-package-move {&#10;        animation: packageMove 2s ease-in-out infinite alternate;&#10;      }&#10;&#10;      .animate-status-pulse {&#10;        animation: statusPulse 2s ease-in-out infinite;&#10;      }&#10;    `}&lt;/style&gt;&#10;&#10;    {/* Orders Loading - Matching Actual Structure */}&#10;    {[...Array(6)].map((_, i) =&gt; (&#10;      &lt;div&#10;        key={i}&#10;        className=&quot;group bg-white dark:bg-gray-800 rounded-2xl shadow-lg hover:shadow-2xl border border-gray-200 dark:border-gray-700 overflow-hidden transition-all duration-300&quot;&#10;        style={{&#10;          animationDelay: `${i * 100}ms`,&#10;          animation: &quot;fadeInUp 0.8s ease-out forwards&quot;,&#10;        }}&#10;      &gt;&#10;        {/* Enhanced shimmer effect */}&#10;        &lt;div className=&quot;absolute inset-0 -translate-x-full bg-gradient-to-r from-transparent via-white/20 dark:via-gray-600/20 to-transparent animate-shimmer&quot;&gt;&lt;/div&gt;&#10;&#10;        {/* Order Header - Matches the gradient header in real cards */}&#10;        &lt;div className=&quot;bg-gradient-to-r from-gray-50 via-blue-50 to-indigo-50 dark:from-gray-700 dark:via-gray-600 dark:to-gray-700 p-6 border-b border-gray-200 dark:border-gray-600&quot;&gt;&#10;          &lt;div className=&quot;flex flex-col sm:flex-row sm:items-center justify-between gap-4&quot;&gt;&#10;            &lt;div className=&quot;flex-1&quot;&gt;&#10;              {/* Order ID and Date */}&#10;              &lt;div className=&quot;flex flex-col sm:flex-row sm:items-center gap-4 mb-4&quot;&gt;&#10;                &lt;div&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-2 mb-1&quot;&gt;&#10;                    &lt;div className=&quot;h-6 bg-gradient-to-r from-gray-300 via-gray-400 to-gray-300 dark:from-gray-600 dark:via-gray-500 dark:to-gray-600 rounded w-32 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                    &lt;div className=&quot;w-4 h-4 bg-blue-200 dark:bg-blue-700 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 dark:bg-gray-600 rounded w-24 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;                  {/* Status Badge */}&#10;                  &lt;div className=&quot;h-8 bg-gradient-to-r from-green-200 via-green-300 to-green-200 dark:from-green-700 dark:via-green-600 dark:to-green-700 rounded-full w-24 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  {/* Price and Items */}&#10;                  &lt;div className=&quot;text-right&quot;&gt;&#10;                    &lt;div className=&quot;h-8 bg-gradient-to-r from-gray-300 via-gray-400 to-gray-300 dark:from-gray-600 dark:via-gray-500 dark:to-gray-600 rounded w-20 animate-pulse mb-1&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 dark:bg-gray-600 rounded w-16 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Progress Timeline - Matches the real progress section */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200 dark:border-gray-600&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                    &lt;div className=&quot;w-4 h-4 bg-blue-200 dark:bg-blue-700 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 bg-gray-200 dark:bg-gray-600 rounded w-24 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;h-3 bg-gray-200 dark:bg-gray-600 rounded w-8 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Progress Steps */}&#10;                &lt;div className=&quot;relative&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                    {[...Array(4)].map((_, stepIndex) =&gt; (&#10;                      &lt;div&#10;                        key={stepIndex}&#10;                        className=&quot;flex flex-col items-center relative z-10&quot;&#10;                      &gt;&#10;                        {/* Step Icon */}&#10;                        &lt;div className=&quot;w-12 h-12 bg-gradient-to-br from-gray-200 via-gray-300 to-gray-200 dark:from-gray-600 dark:via-gray-500 dark:to-gray-600 rounded-full flex items-center justify-center animate-pulse&quot;&gt;&lt;/div&gt;&#10;                        {/* Step Label */}&#10;                        &lt;div className=&quot;h-3 bg-gray-200 dark:bg-gray-600 rounded w-12 mt-2 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                        {/* Date */}&#10;                        &lt;div className=&quot;h-2 bg-gray-100 dark:bg-gray-700 rounded w-8 mt-1 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                  {/* Progress Line */}&#10;                  &lt;div className=&quot;absolute top-6 left-6 right-6 h-0.5 bg-gray-200 dark:bg-gray-600&quot;&gt;&#10;                    &lt;div className=&quot;h-full bg-gradient-to-r from-yellow-300 to-green-300 rounded-full w-1/3 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Status Message */}&#10;                &lt;div className=&quot;mt-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                    &lt;div className=&quot;w-4 h-4 bg-blue-200 dark:bg-blue-700 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-3 bg-gray-200 dark:bg-gray-600 rounded w-3/4 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Order Content */}&#10;        &lt;div className=&quot;p-6&quot;&gt;&#10;          {/* Order Items Grid */}&#10;          &lt;div className=&quot;mb-6&quot;&gt;&#10;            &lt;div className=&quot;flex items-center space-x-2 mb-4&quot;&gt;&#10;              &lt;div className=&quot;w-5 h-5 bg-blue-200 dark:bg-blue-700 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;h-5 bg-gray-200 dark:bg-gray-600 rounded w-32 animate-pulse&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Items Grid - Matches the 4-column grid */}&#10;            &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mb-4&quot;&gt;&#10;              {[...Array(4)].map((_, itemIndex) =&gt; (&#10;                &lt;div&#10;                  key={itemIndex}&#10;                  className=&quot;bg-gray-50 dark:bg-gray-700 rounded-xl p-4 border border-gray-200 dark:border-gray-600&quot;&#10;                &gt;&#10;                  &lt;div className=&quot;flex items-start space-x-3&quot;&gt;&#10;                    &lt;div className=&quot;relative flex-shrink-0&quot;&gt;&#10;                      &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-orange-200 via-orange-300 to-orange-200 dark:from-orange-600 dark:via-orange-700 dark:to-orange-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      {/* Quantity badge */}&#10;                      &lt;div className=&quot;absolute -top-2 -right-2 bg-blue-200 dark:bg-blue-700 w-6 h-6 rounded-full animate-pulse&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#10;                      &lt;div className=&quot;h-4 bg-gray-200 dark:bg-gray-600 rounded w-3/4 mb-1 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;h-3 bg-gray-100 dark:bg-gray-700 rounded w-1/2 mb-1 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;flex justify-between items-center&quot;&gt;&#10;                        &lt;div className=&quot;h-3 bg-gray-100 dark:bg-gray-700 rounded w-8 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                        &lt;div className=&quot;h-4 bg-gray-200 dark:bg-gray-600 rounded w-12 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Order Summary &amp; Actions - Matches the bottom section */}&#10;          &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6&quot;&gt;&#10;            &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4&quot;&gt;&#10;              {/* Order Summary Grid */}&#10;              &lt;div className=&quot;grid grid-cols-2 md:grid-cols-4 gap-4 flex-1&quot;&gt;&#10;                {[&quot;Items&quot;, &quot;Subtotal&quot;, &quot;Delivery&quot;, &quot;Total&quot;].map(&#10;                  (label, summaryIndex) =&gt; (&#10;                    &lt;div&#10;                      key={summaryIndex}&#10;                      className=&quot;text-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600&quot;&#10;                    &gt;&#10;                      &lt;div className=&quot;h-5 bg-gradient-to-r from-gray-200 via-gray-300 to-gray-200 dark:from-gray-600 dark:via-gray-500 dark:to-gray-600 rounded w-8 mx-auto mb-1 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;h-3 bg-gray-100 dark:bg-gray-700 rounded w-12 mx-auto animate-pulse&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  ),&#10;                )}&#10;              &lt;/div&gt;&#10;&#10;              {/* Action Buttons */}&#10;              &lt;div className=&quot;flex flex-wrap gap-3&quot;&gt;&#10;                &lt;div className=&quot;h-10 bg-gradient-to-r from-blue-200 via-blue-300 to-blue-200 dark:from-blue-700 dark:via-blue-600 dark:to-blue-700 rounded-lg w-24 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-10 bg-gradient-to-r from-green-200 via-green-300 to-green-200 dark:from-green-700 dark:via-green-600 dark:to-green-700 rounded-lg w-20 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-10 bg-gray-200 dark:bg-gray-600 rounded-lg w-16 animate-pulse&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    ))}&#10;  &lt;/div&gt;&#10;);&#10;&#10;// Enhanced initial loading screen&#10;const InitialLoadingScreen = () =&gt; (&#10;  &lt;div className=&quot;min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;    &lt;div className=&quot;container mx-auto px-4 py-8&quot;&gt;&#10;      {/* Header */}&#10;      &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;        &lt;div className=&quot;inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r from-green-500 to-blue-600 rounded-full mb-6 animate-bounce&quot;&gt;&#10;          &lt;i className=&quot;fas fa-shopping-bag text-3xl text-white&quot;&gt;&lt;/i&gt;&#10;        &lt;/div&gt;&#10;        &lt;h1 className=&quot;text-4xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;          Loading Your Orders&#10;        &lt;/h1&gt;&#10;        &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400&quot;&gt;&#10;          Please wait while we fetch your order history...&#10;        &lt;/p&gt;&#10;&#10;        {/* Loading progress bar */}&#10;        &lt;div className=&quot;w-64 h-2 bg-gray-200 dark:bg-gray-700 rounded-full mx-auto mt-6 overflow-hidden&quot;&gt;&#10;          &lt;div className=&quot;h-full bg-gradient-to-r from-green-500 to-blue-600 rounded-full animate-pulse&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Loading content */}&#10;      &lt;OrdersLoadingSkeleton /&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;);&#10;&#10;export default function BookingsPage() {&#10;  const router = useRouter();&#10;  const { data: session, status } = useSession();&#10;&#10;  // Add mount/unmount debugging&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; BookingsPage MOUNTED - Status:&quot;, status);&#10;    return () =&gt; {&#10;      console.log(&quot; BookingsPage UNMOUNTED&quot;);&#10;    };&#10;  }, []);&#10;&#10;  // Debug session changes&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; BookingsPage session changed:&quot;, {&#10;      status,&#10;      userId: session?.user?.userId || session?.user?.id,&#10;      hasSession: !!session,&#10;      userType: session?.user?.userType || session?.user?.role,&#10;    });&#10;  }, [session, status]);&#10;&#10;  // More aggressive userId stabilization with additional checks&#10;  const userId = useMemo(() =&gt; {&#10;    const id = session?.user?.userId || session?.user?.id;&#10;    const result = status === &quot;authenticated&quot; &amp;&amp; id ? id : null;&#10;    console.log(&quot; BookingsPage userId computed:&quot;, {&#10;      status,&#10;      rawId: id,&#10;      result,&#10;      sessionExists: !!session,&#10;      userExists: !!session?.user,&#10;    });&#10;    return result;&#10;  }, [session?.user?.userId, session?.user?.id, status]);&#10;&#10;  // Stabilize the enabled condition to prevent unnecessary re-renders&#10;  const queryEnabled = useMemo(() =&gt; {&#10;    return !!userId &amp;&amp; status === &quot;authenticated&quot;;&#10;  }, [userId, status]);&#10;&#10;  // React Query data fetching with very aggressive caching for bookings&#10;  const {&#10;    data: ordersData,&#10;    isLoading: loading,&#10;    error,&#10;    refetch: refetchOrders,&#10;    isFetching,&#10;    isStale,&#10;  } = useOrdersQuery(userId, {&#10;    enabled: queryEnabled, // Use stabilized enabled condition&#10;    staleTime: 15 * 60 * 1000, // 15 minutes - very aggressive&#10;    gcTime: 60 * 60 * 1000, // 1 hour cache&#10;    refetchOnMount: false, // Specifically for bookings page&#10;    refetchOnWindowFocus: false,&#10;    refetchOnReconnect: false,&#10;  });&#10;&#10;  // Debug React Query state changes - FINAL FIX: Handle all edge cases for stable array&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; BookingsPage React Query state:&quot;, {&#10;      loading: Boolean(loading),&#10;      isFetching: Boolean(isFetching),&#10;      isStale: Boolean(isStale),&#10;      hasData: Boolean(ordersData),&#10;      dataCount: ordersData?.orders?.length || 0,&#10;      errorMessage: error?.message || null,&#10;      enabled: Boolean(queryEnabled),&#10;      userId: userId || null,&#10;    });&#10;  }, [&#10;    Boolean(loading),&#10;    Boolean(isFetching),&#10;    Boolean(isStale),&#10;    Boolean(ordersData),&#10;    Number(ordersData?.orders?.length || 0),&#10;    String(error?.message || &quot;&quot;),&#10;    Boolean(queryEnabled),&#10;    String(userId || &quot;&quot;),&#10;  ]); // FINAL FIX: Use explicit type conversions to ensure all values are always present and of consistent type&#10;&#10;  const ordersCache = useOrdersCache();&#10;&#10;  // Extract orders from React Query response with better error handling&#10;  const orders = useMemo(() =&gt; {&#10;    if (!ordersData?.orders) return [];&#10;&#10;    // Filter to ensure we only get customer orders (same logic as your previous code)&#10;    return ordersData.orders.filter((order) =&gt; {&#10;      const orderUserId = order.userId || order.customerId;&#10;      return orderUserId === userId;&#10;    });&#10;  }, [ordersData, userId]);&#10;&#10;  // Custom hooks for better code organization&#10;  const orderStats = useOrderStats(orders);&#10;&#10;  // Add comprehensive debugging for bookings page&#10;  useEffect(() =&gt; {&#10;    console.log(&quot; BOOKINGS PAGE DEBUG - Full Data Analysis:&quot;);&#10;    console.log(&quot;Raw orders from API:&quot;, orders.length);&#10;    console.log(&quot;Order stats calculated:&quot;, orderStats);&#10;&#10;    if (orders.length &gt; 0) {&#10;      console.log(&quot;Sample orders data:&quot;);&#10;      orders.slice(0, 3).forEach((order, index) =&gt; {&#10;        console.log(`Order ${index + 1}:`, {&#10;          id: order._id,&#10;          total: order.total,&#10;          status: order.status,&#10;          createdAt: order.createdAt,&#10;          userId: order.userId,&#10;          itemCount: order.items?.length || 0,&#10;        });&#10;      });&#10;&#10;      // Debug total spending calculation&#10;      const totalSpentDebug = orders.reduce((sum, order) =&gt; {&#10;        const orderTotal = order.total || 0;&#10;        console.log(&#10;          `Order ${order._id}: total=${orderTotal}, status=${order.status}`,&#10;        );&#10;        return sum + orderTotal;&#10;      }, 0);&#10;      console.log(&quot;Total spent (manual calculation):&quot;, totalSpentDebug);&#10;      console.log(&quot;Total spent (hook calculation):&quot;, orderStats.totalSpent);&#10;&#10;      // Debug order count by status&#10;      const statusCounts = orders.reduce((acc, order) =&gt; {&#10;        acc[order.status] = (acc[order.status] || 0) + 1;&#10;        return acc;&#10;      }, {});&#10;      console.log(&quot;Orders by status:&quot;, statusCounts);&#10;    }&#10;  }, [orders, orderStats]);&#10;&#10;  const {&#10;    filteredOrders,&#10;    statusFilter,&#10;    setStatusFilter,&#10;    searchTerm,&#10;    setSearchTerm,&#10;    dateFilter,&#10;    setDateFilter,&#10;    sortOrder,&#10;    setSortOrder,&#10;  } = useOrderFilters(orders);&#10;&#10;  // UI state&#10;  const [currentPage, setCurrentPage] = useState(1);&#10;  const [viewMode, setViewMode] = useState(VIEW_MODES.CARDS);&#10;  const [selectedOrder, setSelectedOrder] = useState(null);&#10;  const [showOrderDetails, setShowOrderDetails] = useState(false);&#10;  const [refreshing, setRefreshing] = useState(false);&#10;  const [actionLoading, setActionLoading] = useState(new Set());&#10;  const [navigationLoading, setNavigationLoading] = useState(true); // Add navigation loading state&#10;&#10;  // Reorder modal states&#10;  const [showReorderModal, setShowReorderModal] = useState(false);&#10;  const [validationResult, setValidationResult] = useState(null);&#10;  const [reorderLoading, setReorderLoading] = useState(false);&#10;&#10;  // Reorder hook&#10;  const { validateReorder, proceedWithAvailableItems, cancelReorder } =&#10;    useReorder();&#10;&#10;  const ordersPerPage = viewMode === VIEW_MODES.LIST ? 10 : 6;&#10;&#10;  // Authentication and role-based access check&#10;  useEffect(() =&gt; {&#10;    if (status === &quot;unauthenticated&quot;) {&#10;      router.push(&quot;/login&quot;);&#10;    } else if (status === &quot;authenticated&quot; &amp;&amp; session?.user) {&#10;      // Check user role - farmers should not access customer bookings page&#10;      const userRole = session.user.userType || session.user.role || &quot;customer&quot;;&#10;&#10;      if (userRole === &quot;farmer&quot;) {&#10;        // Redirect farmers to their orders dashboard&#10;        router.push(&quot;/farmer-orders&quot;);&#10;        return;&#10;      }&#10;    }&#10;  }, [status, session, router]);&#10;&#10;  // Handle navigation loading state - simplified&#10;  useEffect(() =&gt; {&#10;    if (status === &quot;loading&quot;) {&#10;      setNavigationLoading(true);&#10;    } else if (status === &quot;authenticated&quot; &amp;&amp; session?.user) {&#10;      setNavigationLoading(false);&#10;    }&#10;  }, [status, session]);&#10;&#10;  // Reset pagination when filters change&#10;  useEffect(() =&gt; {&#10;    setCurrentPage(1);&#10;  }, [statusFilter, searchTerm, dateFilter, sortOrder]);&#10;&#10;  // Optimized handlers with error handling&#10;  const handleRefresh = useCallback(async () =&gt; {&#10;    setRefreshing(true);&#10;    try {&#10;      await refetchOrders();&#10;      // Also invalidate cache to ensure fresh data&#10;      if (userId) {&#10;        ordersCache.invalidateOrders(userId);&#10;      }&#10;    } finally {&#10;      setRefreshing(false);&#10;    }&#10;  }, [refetchOrders, ordersCache, userId]);&#10;&#10;  const handleCancelOrder = useCallback(&#10;    async (orderId) =&gt; {&#10;      if (!window.confirm(&quot;Are you sure you want to cancel this order?&quot;))&#10;        return;&#10;&#10;      setActionLoading((prev) =&gt; new Set(prev).add(orderId));&#10;&#10;      try {&#10;        const response = await fetch(`/api/orders/${orderId}`, {&#10;          method: &quot;PATCH&quot;,&#10;          headers: {&#10;            &quot;Content-Type&quot;: &quot;application/json&quot;,&#10;            &quot;Cache-Control&quot;: &quot;no-cache&quot;,&#10;          },&#10;          body: JSON.stringify({ status: ORDER_STATUSES.CANCELLED }),&#10;        });&#10;&#10;        if (!response.ok) {&#10;          const errorData = await response.json().catch(() =&gt; ({}));&#10;          throw new Error(&#10;            errorData.message ||&#10;              `HTTP ${response.status}: ${response.statusText}`,&#10;          );&#10;        }&#10;&#10;        // Show success feedback&#10;        alert(&quot;Order cancelled successfully&quot;);&#10;&#10;        // Invalidate cache first to ensure fresh data&#10;        if (userId) {&#10;          ordersCache.invalidateOrders(userId);&#10;        }&#10;&#10;        // Then refetch orders with a slight delay to ensure cache invalidation is processed&#10;        setTimeout(async () =&gt; {&#10;          await refetchOrders();&#10;        }, 100);&#10;      } catch (error) {&#10;        console.error(&quot;Error cancelling order:&quot;, error);&#10;        alert(`Error cancelling order: ${error.message}`);&#10;      } finally {&#10;        setActionLoading((prev) =&gt; {&#10;          const newSet = new Set(prev);&#10;          newSet.delete(orderId);&#10;          return newSet;&#10;        });&#10;      }&#10;    },&#10;    [refetchOrders, ordersCache, userId],&#10;  );&#10;&#10;  // Enhanced reorder handler&#10;  const handleReorder = useCallback(&#10;    async (order) =&gt; {&#10;      try {&#10;        const userId = session?.user?.userId || session?.user?.id;&#10;        if (!userId) {&#10;          alert(&quot;Please log in to reorder items&quot;);&#10;          return;&#10;        }&#10;&#10;        // Use the enhanced reorder validation&#10;        await validateReorder(order._id, userId);&#10;      } catch (error) {&#10;        console.error(&quot;Error validating reorder:&quot;, error);&#10;        alert(&quot;Error processing reorder. Please try again.&quot;);&#10;      }&#10;    },&#10;    [session, validateReorder],&#10;  );&#10;&#10;  // Add PDF receipt generation function&#10;  const handleDownloadReceipt = useCallback(async (order) =&gt; {&#10;    try {&#10;      const orderNumber =&#10;        order?.orderNumber ||&#10;        order?._id?.slice(-8)?.toUpperCase() ||&#10;        `ORDER-${Date.now()}`;&#10;&#10;      // Generate PDF receipt using jsPDF&#10;      await generateReceiptPDF(order, orderNumber);&#10;&#10;      // Show success message&#10;      alert(&quot;Receipt PDF downloaded successfully!&quot;);&#10;    } catch (error) {&#10;      console.error(&quot;Error downloading receipt:&quot;, error);&#10;      alert(&quot;Error generating receipt. Please try again.&quot;);&#10;    }&#10;  }, []);&#10;&#10;  const generateReceiptPDF = async (order, orderNumber) =&gt; {&#10;    try {&#10;      // Dynamic import for client-side only&#10;      const { jsPDF } = await import(&quot;jspdf&quot;);&#10;&#10;      const doc = new jsPDF();&#10;      const pageWidth = doc.internal.pageSize.width;&#10;      let yPosition = 20;&#10;&#10;      // Helper function for price formatting&#10;      const formatReceiptPrice = (price) =&gt; {&#10;        return new Intl.NumberFormat(&quot;en-BD&quot;, {&#10;          style: &quot;currency&quot;,&#10;          currency: &quot;BDT&quot;,&#10;          minimumFractionDigits: 0,&#10;        }).format(price || 0);&#10;      };&#10;&#10;      // Extract customer info from order - handle different field structures&#10;      const customerInfo = {&#10;        name:&#10;          order.customerName ||&#10;          order.customerInfo?.name ||&#10;          order.deliveryAddress?.name ||&#10;          order.shippingAddress?.name ||&#10;          &quot;Valued Customer&quot;,&#10;        address:&#10;          order.deliveryAddress?.address ||&#10;          order.shippingAddress?.address ||&#10;          order.customerInfo?.address ||&#10;          &quot;N/A&quot;,&#10;        city:&#10;          order.deliveryAddress?.city ||&#10;          order.shippingAddress?.city ||&#10;          order.customerInfo?.city ||&#10;          &quot;N/A&quot;,&#10;        phone:&#10;          order.deliveryAddress?.phone ||&#10;          order.customerPhone ||&#10;          order.customerInfo?.phone ||&#10;          order.shippingAddress?.phone ||&#10;          &quot;N/A&quot;,&#10;        email:&#10;          order.customerEmail ||&#10;          order.customerInfo?.email ||&#10;          order.user?.email ||&#10;          &quot;N/A&quot;,&#10;      };&#10;&#10;      // Header - Receipt Title&#10;      doc.setFontSize(24);&#10;      doc.setTextColor(34, 197, 94); // Green color&#10;      doc.text(&quot; FarmFresh&quot;, 20, yPosition);&#10;&#10;      yPosition += 8;&#10;      doc.setFontSize(14);&#10;      doc.setTextColor(102, 102, 102);&#10;      doc.text(&quot;Payment Receipt&quot;, 20, yPosition);&#10;&#10;      yPosition += 6;&#10;      doc.setFontSize(10);&#10;      doc.text(&quot;Thank you for your purchase!&quot;, 20, yPosition);&#10;&#10;      // Receipt number and date - right aligned&#10;      doc.setFontSize(20);&#10;      doc.setTextColor(0, 0, 0);&#10;      doc.text(&quot;RECEIPT&quot;, pageWidth - 20, 20, { align: &quot;right&quot; });&#10;&#10;      doc.setFontSize(10);&#10;      doc.setTextColor(102, 102, 102);&#10;      doc.text(`Receipt #: ${orderNumber}`, pageWidth - 20, 30, {&#10;        align: &quot;right&quot;,&#10;      });&#10;      doc.text(&#10;        `Date: ${new Date(order.createdAt || Date.now()).toLocaleDateString(&quot;en-GB&quot;)}`,&#10;        pageWidth - 20,&#10;        36,&#10;        { align: &quot;right&quot; },&#10;      );&#10;      doc.text(&#10;        `Time: ${new Date(order.createdAt || Date.now()).toLocaleTimeString(&quot;en-GB&quot;)}`,&#10;        pageWidth - 20,&#10;        42,&#10;        { align: &quot;right&quot; },&#10;      );&#10;&#10;      // Line separator&#10;      yPosition = 50;&#10;      doc.setDrawColor(34, 197, 94);&#10;      doc.setLineWidth(1);&#10;      doc.line(20, yPosition, pageWidth - 20, yPosition);&#10;&#10;      yPosition += 15;&#10;&#10;      // Customer Information (only in PDF, not shown in UI)&#10;      doc.setFontSize(12);&#10;      doc.setTextColor(0, 0, 0);&#10;      doc.text(&quot;Customer Information:&quot;, 20, yPosition);&#10;      yPosition += 8;&#10;&#10;      doc.setFontSize(10);&#10;      doc.setTextColor(102, 102, 102);&#10;      doc.text(`Name: ${customerInfo.name}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(`Email: ${customerInfo.email}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(`Phone: ${customerInfo.phone}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(`Delivery Address: ${customerInfo.address}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(`City: ${customerInfo.city}`, 20, yPosition);&#10;&#10;      yPosition += 15;&#10;&#10;      // Order Information&#10;      doc.setFontSize(12);&#10;      doc.setTextColor(0, 0, 0);&#10;      doc.text(&quot;Order Information:&quot;, 20, yPosition);&#10;      yPosition += 8;&#10;&#10;      doc.setFontSize(10);&#10;      doc.setTextColor(102, 102, 102);&#10;      doc.text(`Order Number: ${orderNumber}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(&#10;        `Payment Method: ${order.paymentMethod || &quot;Credit Card&quot;}`,&#10;        20,&#10;        yPosition,&#10;      );&#10;      yPosition += 5;&#10;      doc.text(`Status: ${order.status || &quot;delivered&quot;}`, 20, yPosition);&#10;      yPosition += 5;&#10;      doc.text(&#10;        `Order Date: ${new Date(order.createdAt || Date.now()).toLocaleDateString(&quot;en-GB&quot;)}`,&#10;        20,&#10;        yPosition,&#10;      );&#10;&#10;      yPosition += 15;&#10;&#10;      // Items section header&#10;      doc.setFontSize(12);&#10;      doc.setTextColor(0, 0, 0);&#10;      doc.text(&quot;Items Purchased:&quot;, 20, yPosition);&#10;      yPosition += 10;&#10;&#10;      // Items table&#10;      const items = order.items || [];&#10;      let itemTotal = 0;&#10;&#10;      items.forEach((item, index) =&gt; {&#10;        const itemSubtotal = (item.price || 0) * (item.quantity || 1);&#10;        itemTotal += itemSubtotal;&#10;&#10;        // Item name and farmer&#10;        doc.setFontSize(10);&#10;        doc.setTextColor(0, 0, 0);&#10;        doc.text(&#10;          `${item.productName || item.name || &quot;Product&quot;}`,&#10;          25,&#10;          yPosition,&#10;        );&#10;&#10;        // Quantity and price - right aligned&#10;        doc.text(&#10;          `${item.quantity || 1} x ${formatReceiptPrice(item.price || 0)}`,&#10;          pageWidth - 20,&#10;          yPosition,&#10;          { align: &quot;right&quot; },&#10;        );&#10;        yPosition += 5;&#10;&#10;        // Farmer name - smaller text&#10;        doc.setFontSize(8);&#10;        doc.setTextColor(102, 102, 102);&#10;        doc.text(&#10;          `by ${item.farmerName || item.farmer?.name || &quot;Local Farmer&quot;}`,&#10;          30,&#10;          yPosition,&#10;        );&#10;&#10;        // Item total - right aligned&#10;        doc.setFontSize(9);&#10;        doc.setTextColor(0, 0, 0);&#10;        doc.text(formatReceiptPrice(itemSubtotal), pageWidth - 20, yPosition, {&#10;          align: &quot;right&quot;,&#10;        });&#10;&#10;        yPosition += 8;&#10;      });&#10;&#10;      // Separator line&#10;      yPosition += 5;&#10;      doc.setDrawColor(200, 200, 200);&#10;      doc.line(20, yPosition, pageWidth - 20, yPosition);&#10;      yPosition += 10;&#10;&#10;      // Totals section&#10;      const rightAlignX = pageWidth - 20;&#10;      const labelX = pageWidth - 70;&#10;&#10;      doc.setFontSize(10);&#10;      doc.setTextColor(102, 102, 102);&#10;&#10;      // Subtotal&#10;      doc.text(&quot;Subtotal:&quot;, labelX, yPosition);&#10;      doc.text(&#10;        formatReceiptPrice(order.subtotal || order.farmerSubtotal || itemTotal),&#10;        rightAlignX,&#10;        yPosition,&#10;        { align: &quot;right&quot; },&#10;      );&#10;      yPosition += 6;&#10;&#10;      // Delivery fee&#10;      doc.text(&quot;Delivery Fee:&quot;, labelX, yPosition);&#10;      doc.text(&#10;        formatReceiptPrice(order.deliveryFee || 0),&#10;        rightAlignX,&#10;        yPosition,&#10;        { align: &quot;right&quot; },&#10;      );&#10;      yPosition += 6;&#10;&#10;      // Service fee&#10;      doc.text(&quot;Service Fee:&quot;, labelX, yPosition);&#10;      doc.text(&#10;        formatReceiptPrice(order.serviceFee || 0),&#10;        rightAlignX,&#10;        yPosition,&#10;        { align: &quot;right&quot; },&#10;      );&#10;      yPosition += 8;&#10;&#10;      // Total - highlighted&#10;      doc.setDrawColor(34, 197, 94);&#10;      doc.line(labelX - 5, yPosition, rightAlignX, yPosition);&#10;      yPosition += 8;&#10;&#10;      doc.setFontSize(12);&#10;      doc.setTextColor(0, 0, 0);&#10;      doc.setFont(undefined, &quot;bold&quot;);&#10;      doc.text(&quot;TOTAL PAID:&quot;, labelX, yPosition);&#10;      doc.text(formatReceiptPrice(order.total || 0), rightAlignX, yPosition, {&#10;        align: &quot;right&quot;,&#10;      });&#10;&#10;      yPosition += 15;&#10;&#10;      // Payment confirmation&#10;      doc.setFont(undefined, &quot;normal&quot;);&#10;      doc.setFontSize(10);&#10;      doc.setTextColor(34, 197, 94);&#10;      doc.text(&quot;✓ Payment Confirmed&quot;, 20, yPosition);&#10;      doc.setTextColor(102, 102, 102);&#10;      doc.text(&#10;        `Transaction completed on ${new Date(order.createdAt || Date.now()).toLocaleDateString(&quot;en-GB&quot;)}`,&#10;        20,&#10;        yPosition + 5,&#10;      );&#10;&#10;      yPosition += 20;&#10;&#10;      // Footer message&#10;      doc.setFontSize(9);&#10;      doc.setTextColor(102, 102, 102);&#10;      const footerText =&#10;        &quot;Thank you for supporting local farmers! This receipt serves as proof of purchase.&quot;;&#10;      const footerLines = doc.splitTextToSize(footerText, pageWidth - 40);&#10;      doc.text(footerLines, 20, yPosition);&#10;&#10;      yPosition += 15;&#10;      doc.setFontSize(8);&#10;      doc.text(&#10;        &quot;FarmFresh - Local Farmer Booking Platform&quot;,&#10;        pageWidth / 2,&#10;        yPosition,&#10;        { align: &quot;center&quot; },&#10;      );&#10;      doc.text(&#10;        &quot;For support: support@farmfresh.com | +880-1234-567890&quot;,&#10;        pageWidth / 2,&#10;        yPosition + 5,&#10;        { align: &quot;center&quot; },&#10;      );&#10;&#10;      // Save the PDF&#10;      doc.save(`receipt-${orderNumber}.pdf`);&#10;    } catch (error) {&#10;      console.error(&quot;Error generating receipt PDF:&quot;, error);&#10;      throw error;&#10;    }&#10;  };&#10;&#10;  // Utility functions&#10;  const formatPrice = useCallback((price) =&gt; {&#10;    const numericPrice =&#10;      typeof price === &quot;number&quot; ? price : parseFloat(price) || 0;&#10;    return `৳${numericPrice.toFixed(0)}`;&#10;  }, []);&#10;&#10;  const formatDate = useCallback((dateString) =&gt; {&#10;    try {&#10;      return new Date(dateString).toLocaleDateString(&quot;en-US&quot;, {&#10;        year: &quot;numeric&quot;,&#10;        month: &quot;short&quot;,&#10;        day: &quot;numeric&quot;,&#10;        hour: &quot;2-digit&quot;,&#10;        minute: &quot;2-digit&quot;,&#10;      });&#10;    } catch (error) {&#10;      return &quot;Invalid Date&quot;;&#10;    }&#10;  }, []);&#10;&#10;  const getStatusBadge = (status) =&gt; {&#10;    const statusConfig = {&#10;      confirmed: {&#10;        bg: &quot;bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200 border-blue-200&quot;,&#10;        icon: &quot;fas fa-check&quot;,&#10;        pulse: false,&#10;      },&#10;      pending: {&#10;        bg: &quot;bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200 border-yellow-200&quot;,&#10;        icon: &quot;fas fa-clock&quot;,&#10;        pulse: true,&#10;      },&#10;      delivered: {&#10;        bg: &quot;bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 border-green-200&quot;,&#10;        icon: &quot;fas fa-check-circle&quot;,&#10;        pulse: false,&#10;      },&#10;      cancelled: {&#10;        bg: &quot;bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200 border-red-200&quot;,&#10;        icon: &quot;fas fa-times-circle&quot;,&#10;        pulse: false,&#10;      },&#10;      shipped: {&#10;        bg: &quot;bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200 border-purple-200&quot;,&#10;        icon: &quot;fas fa-truck&quot;,&#10;        pulse: true,&#10;      },&#10;    };&#10;&#10;    const config = statusConfig[status?.toLowerCase()] || statusConfig.pending;&#10;&#10;    return (&#10;      &lt;span&#10;        className={`inline-flex items-center px-3 py-1.5 rounded-full text-sm font-medium border ${config.bg} ${&#10;          config.pulse ? &quot;animate-pulse&quot; : &quot;&quot;&#10;        }`}&#10;      &gt;&#10;        &lt;i className={`${config.icon} mr-1.5 text-xs`}&gt;&lt;/i&gt;&#10;        {status?.charAt(0).toUpperCase() + status?.slice(1) || &quot;Pending&quot;}&#10;      &lt;/span&gt;&#10;    );&#10;  };&#10;&#10;  const getStatusProgress = (status) =&gt; {&#10;    const statuses = [&quot;pending&quot;, &quot;confirmed&quot;, &quot;shipped&quot;, &quot;delivered&quot;];&#10;    const currentIndex = statuses.indexOf(status?.toLowerCase());&#10;    const progress =&#10;      currentIndex &gt;= 0 ? ((currentIndex + 1) / statuses.length) * 100 : 0;&#10;&#10;    return (&#10;      &lt;div className=&quot;w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mb-2&quot;&gt;&#10;        &lt;div&#10;          className=&quot;bg-gradient-to-r from-green-500 to-blue-500 h-2 rounded-full transition-all duration-500 ease-out&quot;&#10;          style={{ width: `${progress}%` }}&#10;        &gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  // Pagination&#10;  const indexOfLastOrder = currentPage * ordersPerPage;&#10;  const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;&#10;  const currentOrders = filteredOrders.slice(&#10;    indexOfFirstOrder,&#10;    indexOfLastOrder,&#10;  );&#10;  const totalPages = Math.ceil(filteredOrders.length / ordersPerPage);&#10;&#10;  // Show loading screen if still loading authentication, data, or navigation&#10;  // Also show loading if we have no orders yet but we're authenticated (prevents empty cards)&#10;  if (&#10;    status === &quot;loading&quot; ||&#10;    loading ||&#10;    navigationLoading ||&#10;    (status === &quot;authenticated&quot; &amp;&amp; !orders.length &amp;&amp; !error &amp;&amp; !ordersData)&#10;  ) {&#10;    return &lt;InitialLoadingScreen /&gt;;&#10;  }&#10;&#10;  // Show error state if there's an error&#10;  if (error) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-100 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center p-8&quot;&gt;&#10;          &lt;div className=&quot;text-red-600 text-6xl mb-4&quot;&gt;&#10;            &lt;i className=&quot;fas fa-exclamation-triangle&quot;&gt;&lt;/i&gt;&#10;          &lt;/div&gt;&#10;          &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;            Failed to Load Orders&#10;          &lt;/h2&gt;&#10;          &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-6&quot;&gt;&#10;            {error?.message || &quot;An error occurred while fetching your orders&quot;}&#10;          &lt;/p&gt;&#10;          &lt;button&#10;            onClick={handleRefresh}&#10;            disabled={refreshing}&#10;            className=&quot;px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-all duration-200 disabled:opacity-50&quot;&#10;          &gt;&#10;            &lt;i&#10;              className={`fas fa-sync-alt mr-2 ${refreshing ? &quot;animate-spin&quot; : &quot;&quot;}`}&#10;            &gt;&lt;/i&gt;&#10;            Try Again&#10;          &lt;/button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  // Show empty state if no orders found&#10;  if (!loading &amp;&amp; orders.length === 0) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-100 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12&quot;&gt;&#10;          {/* Header */}&#10;          &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;            &lt;h1 className=&quot;text-4xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;              My Orders&#10;            &lt;/h1&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg&quot;&gt;&#10;              You haven&amp;apos;t placed any orders yet&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Empty State */}&#10;          &lt;div className=&quot;text-center py-16&quot;&gt;&#10;            &lt;div className=&quot;text-gray-400 text-8xl mb-8&quot;&gt;&#10;              &lt;i className=&quot;fas fa-shopping-bag&quot;&gt;&lt;/i&gt;&#10;            &lt;/div&gt;&#10;            &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;              No Orders Found&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto&quot;&gt;&#10;              Start exploring our fresh products and place your first order to&#10;              see it here.&#10;            &lt;/p&gt;&#10;            &lt;Link&#10;              href=&quot;/products&quot;&#10;              className=&quot;inline-flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-all duration-200&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-shopping-cart mr-2&quot;&gt;&lt;/i&gt;&#10;              Browse Products&#10;            &lt;/Link&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;Footer /&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-100 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;        {/* Enhanced Header Section */}&#10;        &lt;div className=&quot;relative overflow-hidden&quot;&gt;&#10;          &lt;div className=&quot;absolute inset-0 bg-gradient-to-r from-blue-600/10 to-purple-600/10 dark:from-blue-400/10 dark:to-purple-400/10&quot;&gt;&lt;/div&gt;&#10;          &lt;div className=&quot;relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12&quot;&gt;&#10;            {/* Breadcrumb */}&#10;            &lt;nav className=&quot;flex mb-8&quot; aria-label=&quot;Breadcrumb&quot;&gt;&#10;              &lt;ol className=&quot;flex items-center space-x-2 text-sm&quot;&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link&#10;                    href=&quot;/&quot;&#10;                    className=&quot;text-gray-500 hover:text-blue-600 transition-colors duration-200 flex items-center&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-home mr-1&quot;&gt;&lt;/i&gt;&#10;                    Home&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;                &lt;/li&gt;&#10;                &lt;li className=&quot;text-gray-900 dark:text-white font-medium&quot;&gt;&#10;                  My Orders&#10;                &lt;/li&gt;&#10;              &lt;/ol&gt;&#10;            &lt;/nav&gt;&#10;&#10;            {/* Page Header with Stats */}&#10;            &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center mb-8&quot;&gt;&#10;              &lt;div className=&quot;mb-6 lg:mb-0&quot;&gt;&#10;                &lt;h1 className=&quot;text-4xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-3&quot;&gt;&#10;                  My Orders&#10;                &lt;/h1&gt;&#10;                &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg&quot;&gt;&#10;                  Track and manage your orders • {orderStats.total} total orders&#10;                &lt;/p&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Quick Stats Cards */}&#10;              &lt;div className=&quot;grid grid-cols-2 lg:grid-cols-4 gap-4 w-full lg:w-auto&quot;&gt;&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#10;                    &lt;div className=&quot;text-2xl font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                      {orderStats.total}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Total Orders&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#10;                    &lt;div className=&quot;text-2xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                      {orderStats.delivered}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Delivered&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#10;                    &lt;div className=&quot;text-2xl font-bold text-yellow-600 dark:text-yellow-400&quot;&gt;&#10;                      {orderStats.pending}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Pending&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#10;                    &lt;div className=&quot;text-xl font-bold text-purple-600 dark:text-purple-400&quot;&gt;&#10;                      {formatPrice(orderStats.totalSpent)}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Total Spent&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Advanced Filters and Controls */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-8&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 p-6 mb-8&quot;&gt;&#10;            &lt;div className=&quot;flex flex-col lg:flex-row gap-4 items-center justify-between&quot;&gt;&#10;              {/* Search */}&#10;              &lt;div className=&quot;flex-1 max-w-md&quot;&gt;&#10;                &lt;div className=&quot;relative&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400&quot;&gt;&lt;/i&gt;&#10;                  &lt;input&#10;                    type=&quot;text&quot;&#10;                    placeholder=&quot;Search orders, products, or farmers...&quot;&#10;                    value={searchTerm}&#10;                    onChange={(e) =&gt; setSearchTerm(e.target.value)}&#10;                    className=&quot;w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-all duration-200&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Filters */}&#10;              &lt;div className=&quot;flex flex-wrap gap-3&quot;&gt;&#10;                &lt;select&#10;                  value={statusFilter}&#10;                  onChange={(e) =&gt; setStatusFilter(e.target.value)}&#10;                  className=&quot;px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;option value={ORDER_STATUSES.ALL}&gt;&#10;                    {ORDER_STATUSES.ALL}&#10;                  &lt;/option&gt;&#10;                  &lt;option value={ORDER_STATUSES.PENDING}&gt;Pending&lt;/option&gt;&#10;                  &lt;option value={ORDER_STATUSES.CONFIRMED}&gt;Confirmed&lt;/option&gt;&#10;                  &lt;option value={ORDER_STATUSES.SHIPPED}&gt;Shipped&lt;/option&gt;&#10;                  &lt;option value={ORDER_STATUSES.DELIVERED}&gt;Delivered&lt;/option&gt;&#10;                  &lt;option value={ORDER_STATUSES.CANCELLED}&gt;Cancelled&lt;/option&gt;&#10;                &lt;/select&gt;&#10;&#10;                &lt;select&#10;                  value={dateFilter}&#10;                  onChange={(e) =&gt; setDateFilter(e.target.value)}&#10;                  className=&quot;px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;option value={DATE_FILTERS.ALL}&gt;All Time&lt;/option&gt;&#10;                  &lt;option value={DATE_FILTERS.TODAY}&gt;Today&lt;/option&gt;&#10;                  &lt;option value={DATE_FILTERS.WEEK}&gt;Last Week&lt;/option&gt;&#10;                  &lt;option value={DATE_FILTERS.MONTH}&gt;Last Month&lt;/option&gt;&#10;                &lt;/select&gt;&#10;&#10;                &lt;select&#10;                  value={sortOrder}&#10;                  onChange={(e) =&gt; setSortOrder(e.target.value)}&#10;                  className=&quot;px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;option value={SORT_OPTIONS.NEWEST}&gt;Newest First&lt;/option&gt;&#10;                  &lt;option value={SORT_OPTIONS.OLDEST}&gt;Oldest First&lt;/option&gt;&#10;                  &lt;option value={SORT_OPTIONS.HIGHEST}&gt;Highest Value&lt;/option&gt;&#10;                  &lt;option value={SORT_OPTIONS.LOWEST}&gt;Lowest Value&lt;/option&gt;&#10;                &lt;/select&gt;&#10;&#10;                {/* View Mode Toggle */}&#10;                &lt;div className=&quot;flex bg-gray-100 dark:bg-gray-700 rounded-xl p-1&quot;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; setViewMode(VIEW_MODES.CARDS)}&#10;                    className={`px-4 py-2 rounded-lg transition-all duration-200 ${&#10;                      viewMode === VIEW_MODES.CARDS&#10;                        ? &quot;bg-white dark:bg-gray-600 text-blue-600 shadow-sm&quot;&#10;                        : &quot;text-gray-600 dark:text-gray-400&quot;&#10;                    }`}&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-th-large&quot;&gt;&lt;/i&gt;&#10;                  &lt;/button&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; setViewMode(VIEW_MODES.LIST)}&#10;                    className={`px-4 py-2 rounded-lg transition-all duration-200 ${&#10;                      viewMode === VIEW_MODES.LIST&#10;                        ? &quot;bg-white dark:bg-gray-600 text-blue-600 shadow-sm&quot;&#10;                        : &quot;text-gray-600 dark:text-gray-400&quot;&#10;                    }`}&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-list&quot;&gt;&lt;/i&gt;&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Refresh Button */}&#10;                &lt;button&#10;                  onClick={handleRefresh}&#10;                  disabled={refreshing}&#10;                  className=&quot;px-4 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-xl transition-all duration-200 disabled:opacity-50 flex items-center&quot;&#10;                &gt;&#10;                  &lt;i&#10;                    className={`fas fa-sync-alt mr-2 ${refreshing ? &quot;animate-spin&quot; : &quot;&quot;}`}&#10;                  &gt;&lt;/i&gt;&#10;                  Refresh&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Orders Display - Full Width Cards */}&#10;          &lt;div className=&quot;space-y-6&quot;&gt;&#10;            {currentOrders.map((order, index) =&gt; (&#10;              &lt;div&#10;                key={order._id}&#10;                className=&quot;group bg-white dark:bg-gray-800 rounded-2xl shadow-lg hover:shadow-2xl border border-gray-200 dark:border-gray-700 overflow-hidden transition-all duration-300 transform hover:-translate-y-1&quot;&#10;                style={{ animationDelay: `${index * 100}ms` }}&#10;              &gt;&#10;                {/* Order Header */}&#10;                &lt;div className=&quot;bg-gradient-to-r from-gray-50 via-blue-50 to-indigo-50 dark:from-gray-700 dark:via-gray-600 dark:to-gray-700 p-6 border-b border-gray-200 dark:border-gray-600&quot;&gt;&#10;                  &lt;div className=&quot;flex flex-col sm:flex-row sm:items-center justify-between gap-4&quot;&gt;&#10;                    &lt;div className=&quot;flex-1&quot;&gt;&#10;                      &lt;div className=&quot;flex flex-col sm:flex-row sm:items-center gap-4 mb-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;                            Order #&#10;                            {order._id?.slice(-8)?.toUpperCase() || &quot;N/A&quot;}&#10;                          &lt;/h3&gt;&#10;                          &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-calendar mr-2&quot;&gt;&lt;/i&gt;&#10;                            {formatDate(order.createdAt)}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;                          {getStatusBadge(order.status)}&#10;                          &lt;div className=&quot;text-right&quot;&gt;&#10;                            &lt;div className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                              {formatPrice(order.total)}&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                              {order.items?.length} items&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Enhanced Progress Timeline */}&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200 dark:border-gray-600&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;                          &lt;h4 className=&quot;text-sm font-semibold text-gray-900 dark:text-white flex items-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-route mr-2 text-blue-600&quot;&gt;&lt;/i&gt;&#10;                            Order Progress&#10;                          &lt;/h4&gt;&#10;                          &lt;span className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                            {(() =&gt; {&#10;                              const statuses = [&#10;                                &quot;pending&quot;,&#10;                                &quot;confirmed&quot;,&#10;                                &quot;shipped&quot;,&#10;                                &quot;delivered&quot;,&#10;                              ];&#10;                              const currentIndex = statuses.indexOf(&#10;                                order.status?.toLowerCase(),&#10;                              );&#10;                              return `${currentIndex + 1}/${statuses.length}`;&#10;                            })()}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Progress Steps */}&#10;                        &lt;div className=&quot;relative&quot;&gt;&#10;                          &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                            {(() =&gt; {&#10;                              const steps = [&#10;                                {&#10;                                  status: &quot;pending&quot;,&#10;                                  icon: &quot;fas fa-clock&quot;,&#10;                                  label: &quot;Order Placed&quot;,&#10;                                  color: &quot;yellow&quot;,&#10;                                },&#10;                                {&#10;                                  status: &quot;confirmed&quot;,&#10;                                  icon: &quot;fas fa-check&quot;,&#10;                                  label: &quot;Confirmed&quot;,&#10;                                  color: &quot;blue&quot;,&#10;                                },&#10;                                {&#10;                                  status: &quot;shipped&quot;,&#10;                                  icon: &quot;fas fa-truck&quot;,&#10;                                  label: &quot;Shipped&quot;,&#10;                                  color: &quot;purple&quot;,&#10;                                },&#10;                                {&#10;                                  status: &quot;delivered&quot;,&#10;                                  icon: &quot;fas fa-check-circle&quot;,&#10;                                  label: &quot;Delivered&quot;,&#10;                                  color: &quot;green&quot;,&#10;                                },&#10;                              ];&#10;&#10;                              const currentIndex = steps.findIndex(&#10;                                (step) =&gt;&#10;                                  step.status === order.status?.toLowerCase(),&#10;                              );&#10;&#10;                              return steps.map((step, index) =&gt; {&#10;                                const isCompleted = index &lt;= currentIndex;&#10;                                const isActive = index === currentIndex;&#10;                                const isCancelled =&#10;                                  order.status?.toLowerCase() === &quot;cancelled&quot;;&#10;&#10;                                return (&#10;                                  &lt;div&#10;                                    key={step.status}&#10;                                    className=&quot;flex flex-col items-center relative z-10&quot;&#10;                                  &gt;&#10;                                    {/* Step Icon */}&#10;                                    &lt;div&#10;                                      className={`&#10;                                      w-12 h-12 rounded-full flex items-center justify-center border-2 transition-all duration-300&#10;                                      ${&#10;                                        isCancelled&#10;                                          ? &quot;bg-red-100 border-red-300 text-red-600&quot;&#10;                                          : isCompleted&#10;                                            ? `bg-${step.color}-100 border-${step.color}-500 text-${step.color}-600`&#10;                                            : isActive&#10;                                              ? `bg-${step.color}-50 border-${step.color}-300 text-${step.color}-500 animate-pulse`&#10;                                              : &quot;bg-gray-100 border-gray-300 text-gray-400&quot;&#10;                                      }&#10;                                    `}&#10;                                    &gt;&#10;                                      &lt;i&#10;                                        className={`${isCancelled ? &quot;fas fa-times&quot; : step.icon} text-lg`}&#10;                                      &gt;&lt;/i&gt;&#10;                                    &lt;/div&gt;&#10;&#10;                                    {/* Step Label */}&#10;                                    &lt;span&#10;                                      className={`&#10;                                      mt-2 text-xs font-medium text-center&#10;                                      ${&#10;                                        isCancelled&#10;                                          ? &quot;text-red-600&quot;&#10;                                          : isCompleted&#10;                                            ? &quot;text-gray-900 dark:text-white&quot;&#10;                                            : &quot;text-gray-500 dark:text-gray-400&quot;&#10;                                      }&#10;                                    `}&#10;                                    &gt;&#10;                                      {isCancelled &amp;&amp; index === currentIndex&#10;                                        ? &quot;Cancelled&quot;&#10;                                        : step.label}&#10;                                    &lt;/span&gt;&#10;&#10;                                    {/* Date/Time for completed steps */}&#10;                                    {isCompleted &amp;&amp; !isCancelled &amp;&amp; (&#10;                                      &lt;span className=&quot;text-xs text-gray-400 mt-1&quot;&gt;&#10;                                        {index === 0&#10;                                          ? new Date(&#10;                                              order.createdAt,&#10;                                            ).toLocaleDateString()&#10;                                          : &quot;TBD&quot;}&#10;                                      &lt;/span&gt;&#10;                                    )}&#10;                                  &lt;/div&gt;&#10;                                );&#10;                              });&#10;                            })()}&#10;                          &lt;/div&gt;&#10;&#10;                          {/* Progress Line */}&#10;                          &lt;div className=&quot;absolute top-6 left-6 right-6 h-0.5 bg-gray-200 dark:bg-gray-600 -z-0&quot;&gt;&#10;                            &lt;div&#10;                              className={`h-full transition-all duration-700 ease-out ${&#10;                                order.status?.toLowerCase() === &quot;cancelled&quot;&#10;                                  ? &quot;bg-red-400&quot;&#10;                                  : &quot;bg-gradient-to-r from-yellow-400 via-blue-400 via-purple-400 to-green-400&quot;&#10;                              }`}&#10;                              style={{&#10;                                width: (() =&gt; {&#10;                                  const statuses = [&#10;                                    &quot;pending&quot;,&#10;                                    &quot;confirmed&quot;,&#10;                                    &quot;shipped&quot;,&#10;                                    &quot;delivered&quot;,&#10;                                  ];&#10;                                  const currentIndex = statuses.indexOf(&#10;                                    order.status?.toLowerCase(),&#10;                                  );&#10;                                  if (&#10;                                    order.status?.toLowerCase() === &quot;cancelled&quot;&#10;                                  )&#10;                                    return &quot;25%&quot;;&#10;                                  return `${((currentIndex + 1) / statuses.length) * 100}%`;&#10;                                })(),&#10;                              }}&#10;                            &gt;&lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Status Message */}&#10;                        &lt;div className=&quot;mt-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg&quot;&gt;&#10;                          &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {order.status === &quot;pending&quot; &amp;&amp; (&#10;                              &lt;&gt;&#10;                                &lt;i className=&quot;fas fa-hourglass-half mr-2 text-yellow-500&quot;&gt;&lt;/i&gt;&#10;                                Waiting for farmer confirmation. We&amp;apos;ll notify&#10;                                you once your order is confirmed.&#10;                              &lt;/&gt;&#10;                            )}&#10;                            {order.status === &quot;confirmed&quot; &amp;&amp; (&#10;                              &lt;&gt;&#10;                                &lt;i className=&quot;fas fa-thumbs-up mr-2 text-blue-500&quot;&gt;&lt;/i&gt;&#10;                                Your order has been confirmed! The farmer is&#10;                                preparing your items.&#10;                              &lt;/&gt;&#10;                            )}&#10;                            {order.status === &quot;shipped&quot; &amp;&amp; (&#10;                              &lt;&gt;&#10;                                &lt;i className=&quot;fas fa-shipping-fast mr-2 text-purple-500&quot;&gt;&lt;/i&gt;&#10;                                Your order is on the way! Track your delivery&#10;                                for real-time updates.&#10;                              &lt;/&gt;&#10;                            )}&#10;                            {order.status === &quot;delivered&quot; &amp;&amp; (&#10;                              &lt;&gt;&#10;                                &lt;i className=&quot;fas fa-box-open mr-2 text-green-500&quot;&gt;&lt;/i&gt;&#10;                                Order delivered successfully! Enjoy your fresh&#10;                                products.&#10;                              &lt;/&gt;&#10;                            )}&#10;                            {order.status === &quot;cancelled&quot; &amp;&amp; (&#10;                              &lt;&gt;&#10;                                &lt;i className=&quot;fas fa-ban mr-2 text-red-500&quot;&gt;&lt;/i&gt;&#10;                                This order has been cancelled. If you have&#10;                                questions, please contact support.&#10;                              &lt;/&gt;&#10;                            )}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Order Content */}&#10;                &lt;div className=&quot;p-6&quot;&gt;&#10;                  {/* Order Items Grid */}&#10;                  &lt;div className=&quot;mb-6&quot;&gt;&#10;                    &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4 flex items-center&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-box mr-2 text-blue-600&quot;&gt;&lt;/i&gt;&#10;                      Order Items ({order.items?.length || 0})&#10;                    &lt;/h4&gt;&#10;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mb-4&quot;&gt;&#10;                      {order.items?.slice(0, 8).map((item, index) =&gt; (&#10;                        &lt;div&#10;                          key={index}&#10;                          className=&quot;bg-gray-50 dark:bg-gray-700 rounded-xl p-4 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors duration-200 border border-gray-200 dark:border-gray-600&quot;&#10;                        &gt;&#10;                          &lt;div className=&quot;flex items-start space-x-3&quot;&gt;&#10;                            &lt;div className=&quot;relative flex-shrink-0&quot;&gt;&#10;                              &lt;img&#10;                                src={&#10;                                  item.image ||&#10;                                  item.productImage ||&#10;                                  item.product?.image ||&#10;                                  item.product?.images?.[0] ||&#10;                                  &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=60&amp;h=60&amp;fit=crop&quot;&#10;                                }&#10;                                alt={item.productName || item.name || &quot;Product&quot;}&#10;                                className=&quot;w-16 h-16 rounded-lg object-cover border-2 border-white dark:border-gray-600 shadow-sm&quot;&#10;                                onError={(e) =&gt; {&#10;                                  e.target.src =&#10;                                    &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=60&amp;h=60&amp;fit=crop&quot;;&#10;                                }}&#10;                              /&gt;&#10;                              &lt;div className=&quot;absolute -top-2 -right-2 bg-blue-600 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center font-bold&quot;&gt;&#10;                                {item.quantity}&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#10;                              &lt;h5 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                                {item.productName}&#10;                              &lt;/h5&gt;&#10;                              &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400 mb-1 flex items-center&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-user-tie mr-1&quot;&gt;&lt;/i&gt;&#10;                                {item.farmerName || &quot;Local Farmer&quot;}&#10;                              &lt;/p&gt;&#10;                              &lt;div className=&quot;flex justify-between items-center&quot;&gt;&#10;                                &lt;span className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                  {formatPrice(item.price)}/unit&#10;                                &lt;/span&gt;&#10;                                &lt;span className=&quot;font-semibold text-gray-900 dark:text-white text-sm&quot;&gt;&#10;                                  {formatPrice(item.price * item.quantity)}&#10;                                &lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ))}&#10;                    &lt;/div&gt;&#10;&#10;                    {order.items?.length &gt; 8 &amp;&amp; (&#10;                      &lt;div className=&quot;text-center&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; {&#10;                            setSelectedOrder(order);&#10;                            setShowOrderDetails(true);&#10;                          }}&#10;                          className=&quot;inline-flex items-center px-4 py-2 text-blue-600 hover:text-blue-700 font-medium text-sm rounded-lg hover:bg-blue-50 dark:hover:bg-blue-900 transition-colors duration-200&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-plus mr-2&quot;&gt;&lt;/i&gt;&#10;                          View {order.items.length - 8} more items&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Order Summary &amp; Actions */}&#10;                  &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6&quot;&gt;&#10;                    &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4&quot;&gt;&#10;                      {/* Order Summary */}&#10;                      &lt;div className=&quot;grid grid-cols-2 md:grid-cols-4 gap-4 flex-1&quot;&gt;&#10;                        &lt;div className=&quot;text-center p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-700&quot;&gt;&#10;                          &lt;div className=&quot;text-lg font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                            {order.items?.length || 0}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-blue-600 dark:text-blue-400&quot;&gt;&#10;                            Items&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-center p-3 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-700&quot;&gt;&#10;                          &lt;div className=&quot;text-lg font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                            {formatPrice(order.subtotal || order.total || 0)}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-green-600 dark:text-green-400&quot;&gt;&#10;                            Subtotal&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-center p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg border border-purple-200 dark:border-purple-700&quot;&gt;&#10;                          &lt;div className=&quot;text-lg font-bold text-purple-600 dark:text-purple-400&quot;&gt;&#10;                            {formatPrice(order.deliveryFee || 50)}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-purple-600 dark:text-purple-400&quot;&gt;&#10;                            Delivery&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600&quot;&gt;&#10;                          &lt;div className=&quot;text-lg font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                            {formatPrice(order.total)}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Total&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Action Buttons */}&#10;                      &lt;div className=&quot;flex flex-wrap gap-3&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; {&#10;                            setSelectedOrder(order);&#10;                            setShowOrderDetails(true);&#10;                          }}&#10;                          className=&quot;flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 shadow-lg&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-eye mr-2&quot;&gt;&lt;/i&gt;&#10;                          View Details&#10;                        &lt;/button&gt;&#10;&#10;                        {order.status === &quot;delivered&quot; &amp;&amp; (&#10;                          &lt;&gt;&#10;                            &lt;button&#10;                              onClick={() =&gt; handleDownloadReceipt(order)}&#10;                              className=&quot;flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg font-medium transition-all duration-200 shadow-lg&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-download mr-2&quot;&gt;&lt;/i&gt;&#10;                              Receipt&#10;                            &lt;/button&gt;&#10;                            &lt;Link&#10;                              href={`/review?orderId=${order._id}`}&#10;                              className=&quot;flex items-center px-4 py-2 border border-orange-300 text-orange-600 hover:bg-orange-50 dark:hover:bg-orange-900 rounded-lg font-medium transition-all duration-200&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-star mr-2&quot;&gt;&lt;/i&gt;&#10;                              Review&#10;                            &lt;/Link&gt;&#10;                            &lt;button&#10;                              onClick={() =&gt; handleReorder(order)}&#10;                              className=&quot;flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-lg font-medium transition-all duration-200&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-redo mr-2&quot;&gt;&lt;/i&gt;&#10;                              Reorder&#10;                            &lt;/button&gt;&#10;                          &lt;/&gt;&#10;                        )}&#10;&#10;                        {(order.status === &quot;pending&quot; ||&#10;                          order.status === &quot;confirmed&quot;) &amp;&amp; (&#10;                          &lt;button&#10;                            onClick={() =&gt; handleCancelOrder(order._id)}&#10;                            className=&quot;flex items-center px-4 py-2 border border-red-300 text-red-600 hover:bg-red-50 dark:hover:bg-red-900 rounded-lg font-medium transition-all duration-200&quot;&#10;                          &gt;&#10;                            &lt;i className=&quot;fas fa-times mr-2&quot;&gt;&lt;/i&gt;&#10;                            Cancel Order&#10;                          &lt;/button&gt;&#10;                        )}&#10;&#10;                        {order.status === &quot;shipped&quot; &amp;&amp; (&#10;                          &lt;button className=&quot;flex items-center px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg font-medium transition-all duration-200 shadow-lg&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-map-marker-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                            Track Order&#10;                          &lt;/button&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            ))}&#10;          &lt;/div&gt;&#10;&#10;          {/* Enhanced Pagination */}&#10;          {totalPages &gt; 1 &amp;&amp; (&#10;            &lt;div className=&quot;flex flex-col sm:flex-row justify-between items-center mt-12 bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg border border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400 mb-4 sm:mb-0&quot;&gt;&#10;                Showing {indexOfFirstOrder + 1} to{&quot; &quot;}&#10;                {Math.min(indexOfLastOrder, filteredOrders.length)} of{&quot; &quot;}&#10;                {filteredOrders.length} orders&#10;              &lt;/div&gt;&#10;&#10;              &lt;nav&#10;                aria-label=&quot;Pagination&quot;&#10;                className=&quot;flex items-center space-x-2&quot;&#10;              &gt;&#10;                &lt;button&#10;                  onClick={() =&gt;&#10;                    setCurrentPage((prev) =&gt; Math.max(prev - 1, 1))&#10;                  }&#10;                  disabled={currentPage === 1}&#10;                  className=&quot;px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-chevron-left&quot;&gt;&lt;/i&gt;&#10;                &lt;/button&gt;&#10;&#10;                {[...Array(totalPages)].map((_, index) =&gt; {&#10;                  const page = index + 1;&#10;                  if (&#10;                    page === currentPage ||&#10;                    page === 1 ||&#10;                    page === totalPages ||&#10;                    (page &gt;= currentPage - 1 &amp;&amp; page &lt;= currentPage + 1)&#10;                  ) {&#10;                    return (&#10;                      &lt;button&#10;                        key={page}&#10;                        onClick={() =&gt; setCurrentPage(page)}&#10;                        className={`px-4 py-2 rounded-lg font-medium transition-all duration-200 ${&#10;                          currentPage === page&#10;                            ? &quot;bg-blue-600 text-white shadow-lg transform scale-110&quot;&#10;                            : &quot;text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 border border-gray-300 dark:border-gray-600&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {page}&#10;                      &lt;/button&gt;&#10;                    );&#10;                  } else if (&#10;                    page === currentPage - 2 ||&#10;                    page === currentPage + 2&#10;                  ) {&#10;                    return (&#10;                      &lt;span key={page} className=&quot;px-2 text-gray-400&quot;&gt;&#10;                        ...&#10;                      &lt;/span&gt;&#10;                    );&#10;                  }&#10;                  return null;&#10;                })}&#10;&#10;                &lt;button&#10;                  onClick={() =&gt;&#10;                    setCurrentPage((prev) =&gt; Math.min(prev + 1, totalPages))&#10;                  }&#10;                  disabled={currentPage === totalPages}&#10;                  className=&quot;px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt;&#10;                &lt;/button&gt;&#10;              &lt;/nav&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Enhanced Order Details Modal */}&#10;      {showOrderDetails &amp;&amp; selectedOrder &amp;&amp; (&#10;        &lt;div className=&quot;fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center p-4 z-50 animate-in fade-in duration-300&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-900 rounded-3xl w-full max-w-6xl max-h-[95vh] overflow-hidden shadow-2xl border border-gray-200 dark:border-gray-700 animate-in zoom-in duration-300&quot;&gt;&#10;            {/* Enhanced Modal Header */}&#10;            &lt;div className=&quot;relative bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 text-white p-6&quot;&gt;&#10;              &lt;div className=&quot;absolute inset-0 bg-black/10&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;relative flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4&quot;&gt;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;div className=&quot;p-3 bg-white/20 rounded-2xl backdrop-blur-sm&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-receipt text-2xl&quot;&gt;&lt;/i&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h3 className=&quot;text-2xl font-bold mb-1&quot;&gt;Order Details&lt;/h3&gt;&#10;                    &lt;div className=&quot;flex items-center space-x-4 text-blue-100&quot;&gt;&#10;                      &lt;span className=&quot;flex items-center&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-hashtag mr-1 text-sm&quot;&gt;&lt;/i&gt;&#10;                        {selectedOrder._id?.slice(-8)?.toUpperCase()}&#10;                      &lt;/span&gt;&#10;                      &lt;span className=&quot;flex items-center&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-calendar mr-1 text-sm&quot;&gt;&lt;/i&gt;&#10;                        {formatDate(selectedOrder.createdAt)}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                  {/* Status Badge */}&#10;                  &lt;div className=&quot;px-4 py-2 bg-white/20 backdrop-blur-sm rounded-full&quot;&gt;&#10;                    {getStatusBadge(selectedOrder.status)}&#10;                  &lt;/div&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; setShowOrderDetails(false)}&#10;                    className=&quot;p-2 hover:bg-white/20 rounded-xl transition-colors duration-200&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-times text-xl&quot;&gt;&lt;/i&gt;&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Enhanced Modal Body */}&#10;            &lt;div className=&quot;p-8 overflow-y-auto max-h-[calc(95vh-200px)]&quot;&gt;&#10;              &lt;div className=&quot;grid grid-cols-1 xl:grid-cols-3 gap-8&quot;&gt;&#10;                {/* Left Column - Order Summary &amp; Status */}&#10;                &lt;div className=&quot;xl:col-span-1 space-y-6&quot;&gt;&#10;                  {/* Order Summary Card */}&#10;                  &lt;div className=&quot;bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-2xl p-6 border border-blue-200 dark:border-blue-800&quot;&gt;&#10;                    &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center&quot;&gt;&#10;                      &lt;div className=&quot;p-2 bg-blue-100 dark:bg-blue-800 rounded-lg mr-3&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-chart-pie text-blue-600 dark:text-blue-300&quot;&gt;&lt;/i&gt;&#10;                      &lt;/div&gt;&#10;                      Order Summary&#10;                    &lt;/h4&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between p-3 bg-white dark:bg-gray-800 rounded-xl&quot;&gt;&#10;                        &lt;span className=&quot;text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-box text-blue-500 mr-2&quot;&gt;&lt;/i&gt;&#10;                          Items&#10;                        &lt;/span&gt;&#10;                        &lt;span className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {selectedOrder.items?.length} items&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;flex items-center justify-between p-3 bg-white dark:bg-gray-800 rounded-xl&quot;&gt;&#10;                        &lt;span className=&quot;text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-credit-card text-green-500 mr-2&quot;&gt;&lt;/i&gt;&#10;                          Payment&#10;                        &lt;/span&gt;&#10;                        &lt;span className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {selectedOrder.paymentMethod || &quot;Cash on Delivery&quot;}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;border-t border-blue-200 dark:border-blue-800 pt-4&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                          &lt;span className=&quot;text-lg font-medium text-gray-700 dark:text-gray-300&quot;&gt;&#10;                            Total Amount&#10;                          &lt;/span&gt;&#10;                          &lt;span className=&quot;text-2xl font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                            {formatPrice(selectedOrder.total)}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Delivery Information Card */}&#10;                  {selectedOrder.deliveryAddress &amp;&amp; (&#10;                    &lt;div className=&quot;bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 rounded-2xl p-6 border border-green-200 dark:border-green-800&quot;&gt;&#10;                      &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center&quot;&gt;&#10;                        &lt;div className=&quot;p-2 bg-green-100 dark:bg-green-800 rounded-lg mr-3&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-map-marker-alt text-green-600 dark:text-green-300&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        Delivery Address&#10;                      &lt;/h4&gt;&#10;&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 space-y-3&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                          &lt;div className=&quot;w-10 h-10 bg-green-100 dark:bg-green-800 rounded-full flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-user text-green-600 dark:text-green-300&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div&gt;&#10;                            &lt;p className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                              {selectedOrder.deliveryAddress.name}&#10;                            &lt;/p&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Recipient&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;flex items-start space-x-3&quot;&gt;&#10;                          &lt;div className=&quot;w-10 h-10 bg-green-100 dark:bg-green-800 rounded-full flex items-center justify-center mt-1&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-home text-green-600 dark:text-green-300&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div&gt;&#10;                            &lt;p className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                              {selectedOrder.deliveryAddress.address}&#10;                            &lt;/p&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              {selectedOrder.deliveryAddress.city}&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                          &lt;div className=&quot;w-10 h-10 bg-green-100 dark:bg-green-800 rounded-full flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-phone text-green-600 dark:text-green-300&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div&gt;&#10;                            &lt;p className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                              {selectedOrder.deliveryAddress.phone}&#10;                            &lt;/p&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              Contact number&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Order Timeline */}&#10;                  &lt;div className=&quot;bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 rounded-2xl p-6 border border-purple-200 dark:border-purple-800&quot;&gt;&#10;                    &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center&quot;&gt;&#10;                      &lt;div className=&quot;p-2 bg-purple-100 dark:bg-purple-800 rounded-lg mr-3&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-clock text-purple-600 dark:text-purple-300&quot;&gt;&lt;/i&gt;&#10;                      &lt;/div&gt;&#10;                      Order Timeline&#10;                    &lt;/h4&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      {[&#10;                        {&#10;                          status: &quot;pending&quot;,&#10;                          label: &quot;Order Placed&quot;,&#10;                          icon: &quot;fa-plus-circle&quot;,&#10;                        },&#10;                        {&#10;                          status: &quot;confirmed&quot;,&#10;                          label: &quot;Order Confirmed&quot;,&#10;                          icon: &quot;fa-check-circle&quot;,&#10;                        },&#10;                        {&#10;                          status: &quot;shipped&quot;,&#10;                          label: &quot;Order Shipped&quot;,&#10;                          icon: &quot;fa-truck&quot;,&#10;                        },&#10;                        {&#10;                          status: &quot;delivered&quot;,&#10;                          label: &quot;Order Delivered&quot;,&#10;                          icon: &quot;fa-home&quot;,&#10;                        },&#10;                      ].map((step, index) =&gt; {&#10;                        const isActive =&#10;                          [&#10;                            &quot;pending&quot;,&#10;                            &quot;confirmed&quot;,&#10;                            &quot;shipped&quot;,&#10;                            &quot;delivered&quot;,&#10;                          ].indexOf(selectedOrder.status) &gt;= index;&#10;                        const isCurrent =&#10;                          [&quot;pending&quot;, &quot;confirmed&quot;, &quot;shipped&quot;, &quot;delivered&quot;][&#10;                            index&#10;                          ] === selectedOrder.status;&#10;&#10;                        return (&#10;                          &lt;div&#10;                            key={step.status}&#10;                            className=&quot;flex items-center space-x-4&quot;&#10;                          &gt;&#10;                            &lt;div&#10;                              className={`w-10 h-10 rounded-full flex items-center justify-center transition-all ${&#10;                                isActive&#10;                                  ? isCurrent&#10;                                    ? &quot;bg-purple-500 text-white shadow-lg scale-110&quot;&#10;                                    : &quot;bg-green-500 text-white&quot;&#10;                                  : &quot;bg-gray-200 dark:bg-gray-700 text-gray-400&quot;&#10;                              }`}&#10;                            &gt;&#10;                              &lt;i&#10;                                className={`fas ${step.icon} ${isCurrent ? &quot;animate-pulse&quot; : &quot;&quot;}`}&#10;                              &gt;&lt;/i&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;flex-1&quot;&gt;&#10;                              &lt;p&#10;                                className={`font-medium ${isActive ? &quot;text-gray-900 dark:text-white&quot; : &quot;text-gray-400&quot;}`}&#10;                              &gt;&#10;                                {step.label}&#10;                              &lt;/p&gt;&#10;                              {isCurrent &amp;&amp; (&#10;                                &lt;p className=&quot;text-sm text-purple-600 dark:text-purple-400 font-medium&quot;&gt;&#10;                                  Current Status&#10;                                &lt;/p&gt;&#10;                              )}&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        );&#10;                      })}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Right Column - Order Items */}&#10;                &lt;div className=&quot;xl:col-span-2&quot;&gt;&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700 h-full&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                      &lt;h4 className=&quot;text-xl font-bold text-gray-900 dark:text-white flex items-center&quot;&gt;&#10;                        &lt;div className=&quot;p-2 bg-orange-100 dark:bg-orange-800 rounded-lg mr-3&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-shopping-bag text-orange-600 dark:text-orange-300&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        Items Ordered ({selectedOrder.items?.length})&#10;                      &lt;/h4&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4 max-h-[600px] overflow-y-auto pr-2 scrollbar-thin scrollbar-track-gray-100 dark:scrollbar-track-gray-800 scrollbar-thumb-gray-300 dark:scrollbar-thumb-gray-600&quot;&gt;&#10;                      {selectedOrder.items?.map((item, index) =&gt; (&#10;                        &lt;div&#10;                          key={index}&#10;                          className=&quot;group bg-gray-50 dark:bg-gray-700 rounded-2xl p-5 hover:shadow-lg transition-all duration-200 border border-gray-100 dark:border-gray-600&quot;&#10;                        &gt;&#10;                          &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                            {/* Product Image */}&#10;                            &lt;div className=&quot;relative&quot;&gt;&#10;                              &lt;img&#10;                                src={&#10;                                  item.image ||&#10;                                  item.productImage ||&#10;                                  item.product?.image ||&#10;                                  item.product?.images?.[0] ||&#10;                                  &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=80&amp;h=80&amp;fit=crop&quot;&#10;                                }&#10;                                alt={item.productName}&#10;                                className=&quot;w-20 h-20 rounded-xl object-cover group-hover:scale-105 transition-transform duration-200&quot;&#10;                              /&gt;&#10;                              &lt;div className=&quot;absolute -top-2 -right-2 w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-xs font-bold&quot;&gt;&#10;                                {item.quantity}&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            {/* Product Details */}&#10;                            &lt;div className=&quot;flex-1&quot;&gt;&#10;                              &lt;h5 className=&quot;font-bold text-gray-900 dark:text-white text-lg mb-1&quot;&gt;&#10;                                {item.productName}&#10;                              &lt;/h5&gt;&#10;                              &lt;div className=&quot;flex items-center space-x-2 mb-2&quot;&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#10;                                  &lt;i className=&quot;fas fa-user-circle text-green-500 text-sm&quot;&gt;&lt;/i&gt;&#10;                                  &lt;span className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                    {item.farmerName || &quot;Local Farmer&quot;}&#10;                                  &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                {item.category &amp;&amp; (&#10;                                  &lt;span className=&quot;px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 rounded-full text-xs font-medium&quot;&gt;&#10;                                    {item.category}&#10;                                  &lt;/span&gt;&#10;                                )}&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;flex items-center space-x-4 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                &lt;span className=&quot;flex items-center&quot;&gt;&#10;                                  &lt;i className=&quot;fas fa-tag mr-1 text-green-500&quot;&gt;&lt;/i&gt;&#10;                                  {formatPrice(item.price)}/unit&#10;                                &lt;/span&gt;&#10;                                &lt;span className=&quot;flex items-center&quot;&gt;&#10;                                  &lt;i className=&quot;fas fa-weight mr-1 text-blue-500&quot;&gt;&lt;/i&gt;&#10;                                  Qty: {item.quantity}&#10;                                &lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            {/* Price */}&#10;                            &lt;div className=&quot;text-right&quot;&gt;&#10;                              &lt;div className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                                {formatPrice(item.price * item.quantity)}&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                Total&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ))}&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Order Total Summary */}&#10;                    &lt;div className=&quot;mt-6 pt-6 border-t border-gray-200 dark:border-gray-600&quot;&gt;&#10;                      &lt;div className=&quot;bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-xl p-4&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                          &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-receipt text-blue-500&quot;&gt;&lt;/i&gt;&#10;                            &lt;span className=&quot;text-lg font-medium text-gray-700 dark:text-gray-300&quot;&gt;&#10;                              Order Total&#10;                            &lt;/span&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;span className=&quot;text-3xl font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                            {formatPrice(selectedOrder.total)}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Enhanced Modal Footer */}&#10;            &lt;div className=&quot;bg-gray-50 dark:bg-gray-800/50 px-8 py-6 border-t border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;flex flex-col sm:flex-row justify-between items-center space-y-3 sm:space-y-0&quot;&gt;&#10;                &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  &lt;span className=&quot;flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-info-circle text-blue-500 mr-2&quot;&gt;&lt;/i&gt;&#10;                    Need help with your order? Contact our support team.&#10;                  &lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; setShowOrderDetails(false)}&#10;                    className=&quot;px-6 py-3 border-2 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl font-medium transition-all duration-200&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-times mr-2&quot;&gt;&lt;/i&gt;&#10;                    Close&#10;                  &lt;/button&gt;&#10;&#10;                  {selectedOrder.status === &quot;delivered&quot; &amp;&amp; (&#10;                    &lt;button&#10;                      onClick={() =&gt; handleDownloadReceipt(selectedOrder)}&#10;                      className=&quot;px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-xl font-medium transition-all duration-200 shadow-lg hover:shadow-xl&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-download mr-2&quot;&gt;&lt;/i&gt;&#10;                      Download Receipt&#10;                    &lt;/button&gt;&#10;                  )}&#10;&#10;                  &lt;button&#10;                    onClick={() =&gt; window.print()}&#10;                    className=&quot;px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white rounded-xl font-medium transition-all duration-200&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-print mr-2&quot;&gt;&lt;/i&gt;&#10;                    Print&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;&#10;      {/* Enhanced Reorder Modal */}&#10;      {showReorderModal &amp;&amp; validationResult &amp;&amp; (&#10;        &lt;ReorderModal&#10;          isOpen={showReorderModal}&#10;          onClose={cancelReorder}&#10;          validationResult={validationResult}&#10;          onProceedWithAvailable={proceedWithAvailableItems}&#10;          loading={reorderLoading}&#10;        /&gt;&#10;      )}&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/cart/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/cart/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useMemo, useCallback, useRef, useEffect } from &quot;react&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import { useCart } from &quot;@/contexts/CartContext&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;import { debounce } from &quot;@/utils/debounce&quot;;&#10;import { useFarmersData } from &quot;@/hooks/useFarmerData&quot;;&#10;&#10;export default function Cart() {&#10;  const {&#10;    items,&#10;    updateQuantity,&#10;    removeFromCart,&#10;    clearCart,&#10;    getCartTotal,&#10;    getCartItemsCount,&#10;    loading,&#10;    paymentProcessing,&#10;    recentlyOrderedItems,&#10;  } = useCart();&#10;&#10;  const [removingItems, setRemovingItems] = useState(new Set());&#10;  const [updatingQuantities, setUpdatingQuantities] = useState(new Set());&#10;  const [showClearConfirm, setShowClearConfirm] = useState(false);&#10;  const [viewMode, setViewMode] = useState(&quot;detailed&quot;); // detailed or compact&#10;  const [notifications, setNotifications] = useState([]);&#10;  const [isProcessing, setIsProcessing] = useState(false);&#10;  const [localQuantities, setLocalQuantities] = useState({});&#10;&#10;  const notificationTimeouts = useRef(new Map());&#10;&#10;  // Debug: Log cart state changes&#10;  useEffect(() =&gt; {&#10;    console.log(&quot;Cart Debug - Items changed:&quot;, items);&#10;    console.log(&quot;Cart Debug - Items count:&quot;, items.length);&#10;    console.log(&quot;Cart Debug - Cart count from hook:&quot;, getCartItemsCount());&#10;&#10;    // Debug: Check if any items are missing image data&#10;    if (items.length &gt; 0) {&#10;      items.forEach((item) =&gt; {&#10;        if (!item.image &amp;&amp; !item.images) {&#10;          console.warn(&#10;            `Cart Debug - MISSING IMAGE DATA for ${item.name}:`,&#10;            item,&#10;          );&#10;        } else {&#10;          console.log(`Cart Debug - ${item.name} has image data:`, {&#10;            hasImage: !!item.image,&#10;            hasImages: !!item.images,&#10;            imageType: typeof item.image,&#10;            imagesType: typeof item.images,&#10;          });&#10;        }&#10;      });&#10;    }&#10;  }, [items, getCartItemsCount]);&#10;&#10;  // Get effective quantity (local or actual) - Move this up before it's used&#10;  const getEffectiveQuantity = useCallback(&#10;    (item) =&gt; {&#10;      return localQuantities[item.id] !== undefined&#10;        ? localQuantities[item.id]&#10;        : item.quantity;&#10;    },&#10;    [localQuantities],&#10;  );&#10;&#10;  // Extract unique farmer IDs from cart items with debugging&#10;  const farmerIds = useMemo(() =&gt; {&#10;    const ids = items&#10;      .map((item) =&gt; {&#10;        console.log(&quot;Cart Debug - Processing item for farmer ID:&quot;, item);&#10;&#10;        if (typeof item.farmer === &quot;object&quot; &amp;&amp; item.farmer?._id) {&#10;          console.log(&#10;            &quot;Cart Debug - Found farmer object with _id:&quot;,&#10;            item.farmer._id,&#10;          );&#10;          return item.farmer._id;&#10;        } else if (item.farmerId) {&#10;          console.log(&quot;Cart Debug - Found farmerId:&quot;, item.farmerId);&#10;          return item.farmerId;&#10;        }&#10;&#10;        console.log(&quot;Cart Debug - No farmer ID found for item:&quot;, item.name);&#10;        return null;&#10;      })&#10;      .filter(Boolean);&#10;&#10;    console.log(&quot;Cart Debug - Extracted farmer IDs:&quot;, ids);&#10;    const uniqueIds = [...new Set(ids)];&#10;    console.log(&quot;Cart Debug - Unique farmer IDs:&quot;, uniqueIds);&#10;    return uniqueIds;&#10;  }, [items]);&#10;&#10;  // Fetch farmer data dynamically with debugging&#10;  const {&#10;    farmers: farmersData,&#10;    loading: farmersLoading,&#10;    getFarmer,&#10;  } = useFarmersData(farmerIds);&#10;&#10;  // Debug farmer data loading&#10;  useEffect(() =&gt; {&#10;    console.log(&quot;Cart Debug - Farmers loading:&quot;, farmersLoading);&#10;    console.log(&quot;Cart Debug - Farmers data:&quot;, farmersData);&#10;  }, [farmersLoading, farmersData]);&#10;&#10;  // Enhanced cart items processing to properly extract and display farmer names and product images&#10;  const enrichedCartItems = useMemo(() =&gt; {&#10;    return items.map((item) =&gt; {&#10;      // Extract farmer information with proper loading states&#10;      let farmerName = &quot;Loading...&quot;;&#10;      let farmerId = null;&#10;&#10;      // Priority 1: Direct farmer object with name&#10;      if (typeof item.farmer === &quot;object&quot; &amp;&amp; item.farmer?.name) {&#10;        farmerName = item.farmer.name;&#10;        farmerId = item.farmer._id || item.farmer.id;&#10;      }&#10;      // Priority 2: Direct farmer name string&#10;      else if (typeof item.farmer === &quot;string&quot; &amp;&amp; item.farmer.trim()) {&#10;        farmerName = item.farmer;&#10;      }&#10;      // Priority 3: farmerName field (from localStorage simplified data)&#10;      else if (item.farmerName &amp;&amp; item.farmerName.trim()) {&#10;        farmerName = item.farmerName;&#10;        farmerId = item.farmerId;&#10;      }&#10;      // Priority 4: farmerId field - get from database&#10;      else if (item.farmerId) {&#10;        farmerId = item.farmerId;&#10;&#10;        if (farmersLoading) {&#10;          farmerName = &quot;Loading...&quot;;&#10;        } else {&#10;          const farmerData = getFarmer(item.farmerId);&#10;          if (farmerData &amp;&amp; farmerData.name) {&#10;            farmerName = farmerData.name;&#10;          } else {&#10;            farmerName = &quot;Unknown Farmer&quot;;&#10;          }&#10;        }&#10;      } else {&#10;        farmerName = &quot;Unknown Farmer&quot;;&#10;      }&#10;&#10;      // Enhanced image handling with better fallbacks and debugging&#10;      let productImage = null;&#10;&#10;      // Debug: Log the item's image data&#10;      console.log(`Cart Debug - Image data for ${item.name}:`, {&#10;        image: item.image,&#10;        images: item.images,&#10;        category: item.category,&#10;      });&#10;&#10;      // Helper function to extract URL from various image formats&#10;      const extractImageUrl = (imageData) =&gt; {&#10;        if (!imageData) return null;&#10;&#10;        // Direct string URL&#10;        if (typeof imageData === &quot;string&quot; &amp;&amp; imageData.trim()) {&#10;          return imageData.trim();&#10;        }&#10;&#10;        // Object with url property&#10;        if (typeof imageData === &quot;object&quot; &amp;&amp; imageData.url) {&#10;          return imageData.url;&#10;        }&#10;&#10;        // Object with src property&#10;        if (typeof imageData === &quot;object&quot; &amp;&amp; imageData.src) {&#10;          return imageData.src;&#10;        }&#10;&#10;        // Object with path property&#10;        if (typeof imageData === &quot;object&quot; &amp;&amp; imageData.path) {&#10;          return imageData.path;&#10;        }&#10;&#10;        return null;&#10;      };&#10;&#10;      // Priority 1: Direct image field&#10;      if (item.image) {&#10;        if (Array.isArray(item.image) &amp;&amp; item.image.length &gt; 0) {&#10;          productImage = extractImageUrl(item.image[0]);&#10;          console.log(&#10;            `Cart Debug - Using image array[0] for ${item.name}:`,&#10;            productImage,&#10;          );&#10;        } else {&#10;          productImage = extractImageUrl(item.image);&#10;          console.log(&#10;            `Cart Debug - Using direct image for ${item.name}:`,&#10;            productImage,&#10;          );&#10;        }&#10;      }&#10;&#10;      // Priority 2: images array field&#10;      if (&#10;        !productImage &amp;&amp;&#10;        item.images &amp;&amp;&#10;        Array.isArray(item.images) &amp;&amp;&#10;        item.images.length &gt; 0&#10;      ) {&#10;        productImage = extractImageUrl(item.images[0]);&#10;        console.log(&#10;          `Cart Debug - Using images array[0] for ${item.name}:`,&#10;          productImage,&#10;        );&#10;      }&#10;&#10;      // Priority 3: Only use category fallback if NO image data exists at all&#10;      if (!productImage &amp;&amp; item.category) {&#10;        console.log(&#10;          `Cart Debug - No image found, using category fallback for ${item.name} (category: ${item.category})`,&#10;        );&#10;&#10;        const categoryImages = {&#10;          Vegetables:&#10;            &quot;https://images.unsplash.com/photo-1540420773420-3366772f4999?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Fruits:&#10;            &quot;https://images.unsplash.com/photo-1619566636858-adf3ef46400b?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Dairy:&#10;            &quot;https://images.unsplash.com/photo-1550583724-b2692b85b150?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Herbs:&#10;            &quot;https://images.unsplash.com/photo-1462536943532-57a629f6cc60?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Honey:&#10;            &quot;https://images.unsplash.com/photo-1587049352846-4a222e784d38?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Grains:&#10;            &quot;https://images.unsplash.com/photo-1586201375761-83865001e31c?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Spices:&#10;            &quot;https://images.unsplash.com/photo-1596040033229-a9821ebc227d?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Meat: &quot;https://images.unsplash.com/photo-1588347818505-d0e4dfe81f30?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          // Add more specific category mappings&#10;          Leafy:&#10;            &quot;https://images.unsplash.com/photo-1576045057995-568f588f82fb?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Root: &quot;https://images.unsplash.com/photo-1518977676601-b53f82aba655?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Citrus:&#10;            &quot;https://images.unsplash.com/photo-1557800634-7bf3c7e2d5ae?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Berries:&#10;            &quot;https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=300&amp;h=300&amp;fit=crop&quot;,&#10;        };&#10;&#10;        // Try exact category match first, then fallback to generic vegetable image&#10;        productImage =&#10;          categoryImages[item.category] || categoryImages[&quot;Vegetables&quot;];&#10;      }&#10;&#10;      // Priority 4: Ultimate fallback if no category or image&#10;      if (!productImage) {&#10;        console.log(`Cart Debug - Using ultimate fallback for ${item.name}`);&#10;        productImage =&#10;          &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=300&amp;h=300&amp;fit=crop&quot;;&#10;      }&#10;&#10;      console.log(`Cart Debug - Final image for ${item.name}:`, productImage);&#10;&#10;      return {&#10;        ...item,&#10;        enrichedFarmerName: farmerName,&#10;        enrichedFarmerId: farmerId || item.farmerId,&#10;        enrichedImage: productImage,&#10;        effectiveQuantity: getEffectiveQuantity(item),&#10;        isUpdating: updatingQuantities.has(item.id),&#10;        isRemoving: removingItems.has(item.id),&#10;      };&#10;    });&#10;  }, [&#10;    items,&#10;    getEffectiveQuantity,&#10;    updatingQuantities,&#10;    removingItems,&#10;    getFarmer,&#10;    farmersLoading,&#10;  ]);&#10;&#10;  // Enhanced cart statistics with proper farmer counting&#10;  const cartStats = useMemo(() =&gt; {&#10;    if (!enrichedCartItems.length) {&#10;      return {&#10;        totalItems: 0,&#10;        totalAmount: 0,&#10;        uniqueItems: 0,&#10;        averagePrice: 0,&#10;        farmers: 0,&#10;        categories: 0,&#10;        estimatedSavings: 50,&#10;      };&#10;    }&#10;&#10;    const totalItems = getCartItemsCount();&#10;    const totalAmount = getCartTotal();&#10;&#10;    // Only count non-loading farmers&#10;    const farmers = new Set(&#10;      enrichedCartItems&#10;        .map((item) =&gt; item.enrichedFarmerName)&#10;        .filter((name) =&gt; name !== &quot;Loading...&quot; &amp;&amp; name !== &quot;Unknown Farmer&quot;),&#10;    ).size;&#10;&#10;    const categories = new Set(enrichedCartItems.map((item) =&gt; item.category))&#10;      .size;&#10;&#10;    return {&#10;      totalItems,&#10;      totalAmount,&#10;      uniqueItems: enrichedCartItems.length,&#10;      averagePrice: totalItems &gt; 0 ? totalAmount / totalItems : 0,&#10;      farmers,&#10;      categories,&#10;      estimatedSavings: 50 + (totalAmount &gt;= 500 ? 25 : 0),&#10;    };&#10;  }, [enrichedCartItems, getCartTotal, getCartItemsCount]);&#10;&#10;  // Debounced quantity update to prevent excessive API calls&#10;  const debouncedQuantityUpdate = useMemo(&#10;    () =&gt;&#10;      debounce(async (productId, newQuantity) =&gt; {&#10;        if (newQuantity &lt;= 0) {&#10;          handleRemoveItem(productId);&#10;          return;&#10;        }&#10;&#10;        setUpdatingQuantities((prev) =&gt; new Set(prev).add(productId));&#10;&#10;        try {&#10;          await updateQuantity(productId, newQuantity);&#10;          addNotification(`Quantity updated successfully`, &quot;success&quot;);&#10;        } catch (error) {&#10;          console.error(&quot;Error updating quantity:&quot;, error);&#10;          addNotification(&quot;Failed to update quantity&quot;, &quot;error&quot;);&#10;          // Revert local quantity on error&#10;          setLocalQuantities((prev) =&gt; {&#10;            const newQuantities = { ...prev };&#10;            delete newQuantities[productId];&#10;            return newQuantities;&#10;          });&#10;        } finally {&#10;          setUpdatingQuantities((prev) =&gt; {&#10;            const newSet = new Set(prev);&#10;            newSet.delete(productId);&#10;            return newSet;&#10;          });&#10;        }&#10;      }, 500),&#10;    [updateQuantity],&#10;  );&#10;&#10;  // Enhanced notification system&#10;  const addNotification = useCallback((message, type = &quot;info&quot;) =&gt; {&#10;    const id = Date.now() + Math.random();&#10;    const notification = { id, message, type, timestamp: new Date() };&#10;&#10;    setNotifications((prev) =&gt; [notification, ...prev.slice(0, 2)]); // Limit to 3 notifications&#10;&#10;    // Clear existing timeout for the same type if exists&#10;    if (notificationTimeouts.current.has(type)) {&#10;      clearTimeout(notificationTimeouts.current.get(type));&#10;    }&#10;&#10;    // Set new timeout&#10;    const timeoutId = setTimeout(() =&gt; {&#10;      setNotifications((prev) =&gt; prev.filter((n) =&gt; n.id !== id));&#10;      notificationTimeouts.current.delete(type);&#10;    }, 4000);&#10;&#10;    notificationTimeouts.current.set(type, timeoutId);&#10;  }, []);&#10;&#10;  // Calculate delivery estimate&#10;  const getDeliveryEstimate = useCallback(() =&gt; {&#10;    const deliveryDate = new Date();&#10;    deliveryDate.setDate(deliveryDate.getDate() + 3); // Add 3 days for delivery&#10;&#10;    return deliveryDate.toLocaleDateString(&quot;en-US&quot;, {&#10;      weekday: &quot;long&quot;,&#10;      month: &quot;short&quot;,&#10;      day: &quot;numeric&quot;,&#10;    });&#10;  }, []);&#10;&#10;  // Cleanup timeouts on unmount&#10;  useEffect(() =&gt; {&#10;    return () =&gt; {&#10;      notificationTimeouts.current.forEach((timeoutId) =&gt; {&#10;        clearTimeout(timeoutId);&#10;      });&#10;    };&#10;  }, []);&#10;&#10;  // Optimized quantity change handler with stock validation&#10;  const handleQuantityChange = useCallback(&#10;    (productId, newQuantity) =&gt; {&#10;      // Find the product to check stock&#10;      const cartItem = items.find((item) =&gt; item.id === productId);&#10;      if (!cartItem) return;&#10;&#10;      // Validate stock before making changes&#10;      if (newQuantity &gt; cartItem.stock) {&#10;        addNotification(&#10;          `Cannot set quantity to ${newQuantity}. Only ${cartItem.stock} ${cartItem.unit || &quot;units&quot;} available for ${cartItem.name}.`,&#10;          &quot;error&quot;,&#10;        );&#10;        return; // Don't proceed with the update&#10;      }&#10;&#10;      // Immediate UI update for better UX&#10;      setLocalQuantities((prev) =&gt; ({&#10;        ...prev,&#10;        [productId]: newQuantity,&#10;      }));&#10;&#10;      // Debounced API call&#10;      debouncedQuantityUpdate(productId, newQuantity);&#10;    },&#10;    [debouncedQuantityUpdate, items, addNotification],&#10;  );&#10;&#10;  // Enhanced remove item handler&#10;  const handleRemoveItem = useCallback(&#10;    async (productId) =&gt; {&#10;      setRemovingItems((prev) =&gt; new Set(prev).add(productId));&#10;      setIsProcessing(true);&#10;&#10;      try {&#10;        await removeFromCart(productId);&#10;        addNotification(&quot;Item removed from cart&quot;, &quot;success&quot;);&#10;        // Clear local quantity if exists&#10;        setLocalQuantities((prev) =&gt; {&#10;          const newQuantities = { ...prev };&#10;          delete newQuantities[productId];&#10;          return newQuantities;&#10;        });&#10;      } catch (error) {&#10;        console.error(&quot;Error removing item:&quot;, error);&#10;        addNotification(&quot;Failed to remove item&quot;, &quot;error&quot;);&#10;      } finally {&#10;        setRemovingItems((prev) =&gt; {&#10;          const newSet = new Set(prev);&#10;          newSet.delete(productId);&#10;          return newSet;&#10;        });&#10;        setIsProcessing(false);&#10;      }&#10;    },&#10;    [removeFromCart, addNotification],&#10;  );&#10;&#10;  // Enhanced clear cart handler&#10;  const handleClearCart = useCallback(async () =&gt; {&#10;    setShowClearConfirm(false);&#10;    setIsProcessing(true);&#10;&#10;    try {&#10;      await clearCart();&#10;      setLocalQuantities({});&#10;      addNotification(&quot;Cart cleared successfully&quot;, &quot;success&quot;);&#10;    } catch (error) {&#10;      console.error(&quot;Error clearing cart:&quot;, error);&#10;      addNotification(&quot;Failed to clear cart&quot;, &quot;error&quot;);&#10;    } finally {&#10;      setIsProcessing(false);&#10;    }&#10;  }, [clearCart, addNotification]);&#10;&#10;  // Optimized price formatter with memoization&#10;  const formatPrice = useCallback((price) =&gt; {&#10;    const numericPrice =&#10;      typeof price === &quot;number&quot; ? price : parseFloat(price) || 0;&#10;    return `৳${numericPrice.toFixed(0)}`;&#10;  }, []);&#10;&#10;  // Enhanced delivery estimate&#10;  const deliveryEstimate = useMemo(() =&gt; {&#10;    const now = new Date();&#10;    const deliveryDate = new Date(now.getTime() + 24 * 60 * 60 * 1000);&#10;    return {&#10;      date: deliveryDate.toLocaleDateString(&quot;en-US&quot;, {&#10;        weekday: &quot;long&quot;,&#10;        month: &quot;short&quot;,&#10;        day: &quot;numeric&quot;,&#10;      }),&#10;      timeSlot: &quot;9 AM - 6 PM&quot;,&#10;      express: cartStats.totalAmount &gt;= 1000,&#10;    };&#10;  }, [cartStats.totalAmount]);&#10;&#10;  // Memoized cart items to prevent unnecessary re-renders&#10;  const memoizedCartItems = useMemo(&#10;    () =&gt;&#10;      items.map((item) =&gt; ({&#10;        ...item,&#10;        effectiveQuantity: getEffectiveQuantity(item),&#10;        isUpdating: updatingQuantities.has(item.id),&#10;        isRemoving: removingItems.has(item.id),&#10;      })),&#10;    [items, getEffectiveQuantity, updatingQuantities, removingItems],&#10;  );&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-green-50 to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#10;          &lt;div className=&quot;relative&quot;&gt;&#10;            &lt;div className=&quot;animate-spin rounded-full h-32 w-32 border-4 border-transparent border-t-green-600 border-r-blue-600 mx-auto mb-4&quot;&gt;&lt;/div&gt;&#10;            &lt;div&#10;              className=&quot;absolute inset-0 rounded-full h-32 w-32 border-4 border-transparent border-b-purple-600 border-l-orange-600 animate-spin&quot;&#10;              style={{&#10;                animationDirection: &quot;reverse&quot;,&#10;                animationDuration: &quot;1.5s&quot;,&#10;              }}&#10;            &gt;&lt;/div&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-xl backdrop-blur-sm&quot;&gt;&#10;            &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;              Loading Your Cart&#10;            &lt;/h3&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;              Please wait while we fetch your items...&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      {/* Enhanced Notification System */}&#10;      &lt;div className=&quot;fixed top-4 right-4 z-50 space-y-2&quot;&gt;&#10;        {notifications.map((notification) =&gt; (&#10;          &lt;div&#10;            key={notification.id}&#10;            className={`px-6 py-4 rounded-lg shadow-lg text-white transform transition-all duration-500 slide-in-right ${&#10;              notification.type === &quot;success&quot;&#10;                ? &quot;bg-green-600&quot;&#10;                : notification.type === &quot;error&quot;&#10;                  ? &quot;bg-red-600&quot;&#10;                  : notification.type === &quot;warning&quot;&#10;                    ? &quot;bg-yellow-600&quot;&#10;                    : &quot;bg-blue-600&quot;&#10;            }`}&#10;          &gt;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#10;              &lt;i&#10;                className={`fas ${&#10;                  notification.type === &quot;success&quot;&#10;                    ? &quot;fa-check-circle&quot;&#10;                    : notification.type === &quot;error&quot;&#10;                      ? &quot;fa-exclamation-circle&quot;&#10;                      : notification.type === &quot;warning&quot;&#10;                        ? &quot;fa-exclamation-triangle&quot;&#10;                        : &quot;fa-info-circle&quot;&#10;                } mr-2`}&#10;              &gt;&lt;/i&gt;&#10;              {notification.message}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        ))}&#10;      &lt;/div&gt;&#10;&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-green-50 to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;        {/* Enhanced Header Section */}&#10;        &lt;div className=&quot;relative overflow-hidden&quot;&gt;&#10;          &lt;div className=&quot;absolute inset-0 bg-gradient-to-r from-green-600/10 to-blue-600/10 dark:from-green-400/10 dark:to-blue-400/10&quot;&gt;&lt;/div&gt;&#10;          &lt;div className=&quot;relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12&quot;&gt;&#10;            {/* Breadcrumb */}&#10;            &lt;nav className=&quot;flex mb-8&quot; aria-label=&quot;Breadcrumb&quot;&gt;&#10;              &lt;ol className=&quot;flex items-center space-x-2 text-sm&quot;&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link&#10;                    href=&quot;/&quot;&#10;                    className=&quot;text-gray-500 hover:text-green-600 transition-colors duration-200 flex items-center&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-home mr-1&quot;&gt;&lt;/i&gt;&#10;                    Home&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link&#10;                    href=&quot;/products&quot;&#10;                    className=&quot;text-gray-500 hover:text-green-600 transition-colors duration-200&quot;&#10;                  &gt;&#10;                    Products&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;                &lt;/li&gt;&#10;                &lt;li className=&quot;text-gray-900 dark:text-white font-medium&quot;&gt;&#10;                  Shopping Cart&#10;                &lt;/li&gt;&#10;              &lt;/ol&gt;&#10;            &lt;/nav&gt;&#10;&#10;            {/* Page Header with Stats */}&#10;            &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center mb-8&quot;&gt;&#10;              &lt;div className=&quot;mb-6 lg:mb-0&quot;&gt;&#10;                &lt;h1 className=&quot;text-4xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-3&quot;&gt;&#10;                  Shopping Cart&#10;                &lt;/h1&gt;&#10;                &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg&quot;&gt;&#10;                  Review and manage your selected items • {cartStats.totalItems}{&quot; &quot;}&#10;                  items&#10;                &lt;/p&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Quick Stats Cards - Only show if items exist */}&#10;              {items.length &gt; 0 &amp;&amp; (&#10;                &lt;div className=&quot;grid grid-cols-2 lg:grid-cols-4 gap-4 w-full lg:w-auto&quot;&gt;&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                    &lt;div className=&quot;text-center&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                        {cartStats.totalItems}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Total Items&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                    &lt;div className=&quot;text-center&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                        {cartStats.farmers}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Farmers&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                    &lt;div className=&quot;text-center&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-purple-600 dark:text-purple-400&quot;&gt;&#10;                        {cartStats.categories}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Categories&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                    &lt;div className=&quot;text-center&quot;&gt;&#10;                      &lt;div className=&quot;text-xl font-bold text-orange-600 dark:text-orange-400&quot;&gt;&#10;                        {formatPrice(cartStats.totalAmount)}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Total Value&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Cart Content */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-12&quot;&gt;&#10;          {paymentProcessing ? (&#10;            /* Payment Processing State */&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-12 text-center border border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;relative mb-8&quot;&gt;&#10;                &lt;div className=&quot;w-32 h-32 mx-auto bg-gradient-to-br from-green-100 to-blue-100 dark:from-green-900 dark:to-blue-900 rounded-full flex items-center justify-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-credit-card text-5xl text-green-600 dark:text-green-400 animate-pulse&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;absolute -top-2 -right-2 w-8 h-8 bg-green-500 rounded-full flex items-center justify-center animate-spin&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-spinner text-white text-sm&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                Payment Processing&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto text-lg&quot;&gt;&#10;                Your order has been placed successfully! We're clearing your&#10;                your cart and preparing your fresh products for delivery.&#10;              &lt;/p&gt;&#10;&#10;              {recentlyOrderedItems.length &gt; 0 &amp;&amp; (&#10;                &lt;div className=&quot;max-w-2xl mx-auto&quot;&gt;&#10;                  &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                    Items in your order:&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6&quot;&gt;&#10;                    {recentlyOrderedItems.slice(0, 4).map((item, index) =&gt; (&#10;                      &lt;div&#10;                        key={item.id}&#10;                        className=&quot;flex items-center space-x-3 bg-gray-50 dark:bg-gray-700 rounded-lg p-3&quot;&#10;                      &gt;&#10;                        &lt;img&#10;                          src={&#10;                            item.image ||&#10;                            &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=50&amp;h=50&amp;fit=crop&quot;&#10;                          }&#10;                          alt={item.name}&#10;                          className=&quot;w-12 h-12 object-cover rounded-lg&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#10;                          &lt;p className=&quot;text-sm font-medium text-gray-900 dark:text-white truncate&quot;&gt;&#10;                            {item.name}&#10;                          &lt;/p&gt;&#10;                          &lt;p className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                            Qty: {item.quantity} •{&quot; &quot;}&#10;                            {formatPrice(item.price * item.quantity)}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    ))}&#10;                    {recentlyOrderedItems.length &gt; 4 &amp;&amp; (&#10;                      &lt;div className=&quot;col-span-full text-center text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                        +{recentlyOrderedItems.length - 4} more items&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;&#10;              &lt;div className=&quot;flex flex-col sm:flex-row gap-4 justify-center&quot;&gt;&#10;                &lt;Link&#10;                  href=&quot;/products&quot;&#10;                  className=&quot;inline-flex items-center px-8 py-4 bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white rounded-xl font-medium transition-all duration-200 transform hover:scale-105 shadow-lg&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-seedling mr-2&quot;&gt;&lt;/i&gt;&#10;                  Continue Shopping&#10;                &lt;/Link&gt;&#10;                &lt;Link&#10;                  href=&quot;/orders&quot;&#10;                  className=&quot;inline-flex items-center px-8 py-4 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-xl font-medium transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-receipt mr-2&quot;&gt;&lt;/i&gt;&#10;                  View Orders&#10;                &lt;/Link&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ) : items.length === 0 ? (&#10;            /* Enhanced Empty Cart State */&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-12 text-center border border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;relative mb-8&quot;&gt;&#10;                &lt;div className=&quot;w-32 h-32 mx-auto bg-gradient-to-br from-green-100 to-blue-100 dark:from-green-900 dark:to-blue-900 rounded-full flex items-center justify-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-shopping-cart text-5xl text-green-600 dark:text-green-400&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;absolute -top-2 -right-2 w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-exclamation text-white text-sm&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                Your cart is empty&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto text-lg&quot;&gt;&#10;                Discover fresh, organic products from local farmers and add them&#10;                to your cart to get started!&#10;              &lt;/p&gt;&#10;              &lt;div className=&quot;flex flex-col sm:flex-row gap-4 justify-center&quot;&gt;&#10;                &lt;Link&#10;                  href=&quot;/products&quot;&#10;                  className=&quot;inline-flex items-center px-8 py-4 bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white rounded-xl font-medium transition-all duration-200 transform hover:scale-105 shadow-lg&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-seedling mr-2&quot;&gt;&lt;/i&gt;&#10;                  Browse Fresh Products&#10;                &lt;/Link&gt;&#10;                &lt;Link&#10;                  href=&quot;/farmers&quot;&#10;                  className=&quot;inline-flex items-center px-8 py-4 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-xl font-medium transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-users mr-2&quot;&gt;&lt;/i&gt;&#10;                  Meet Our Farmers&#10;                &lt;/Link&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ) : (&#10;            &lt;div className=&quot;space-y-8&quot;&gt;&#10;              {/* Enhanced Cart Items Section - Full Width */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 overflow-hidden&quot;&gt;&#10;                {/* Cart Header */}&#10;                &lt;div className=&quot;bg-gradient-to-r from-gray-50 to-green-50 dark:from-gray-700 dark:to-gray-600 p-6 border-b border-gray-200 dark:border-gray-600&quot;&gt;&#10;                  &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4&quot;&gt;&#10;                    &lt;div&gt;&#10;                      &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-2 flex items-center&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-shopping-basket mr-3 text-green-600&quot;&gt;&lt;/i&gt;&#10;                        Your Shopping Cart&#10;                      &lt;/h2&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        {cartStats.totalItems} items from {cartStats.farmers}{&quot; &quot;}&#10;                        farmers • {cartStats.categories} categories&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;flex flex-wrap items-center gap-3&quot;&gt;&#10;                      {/* View Mode Toggle */}&#10;                      &lt;div className=&quot;flex bg-gray-100 dark:bg-gray-700 rounded-lg p-1&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setViewMode(&quot;detailed&quot;)}&#10;                          className={`px-3 py-2 rounded-md transition-all duration-200 ${&#10;                            viewMode === &quot;detailed&quot;&#10;                              ? &quot;bg-white dark:bg-gray-600 text-green-600 shadow-sm&quot;&#10;                              : &quot;text-gray-600 dark:text-gray-400&quot;&#10;                          }`}&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-list&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setViewMode(&quot;compact&quot;)}&#10;                          className={`px-3 py-2 rounded-md transition-all duration-200 ${&#10;                            viewMode === &quot;compact&quot;&#10;                              ? &quot;bg-white dark:bg-gray-600 text-green-600 shadow-sm&quot;&#10;                              : &quot;text-gray-600 dark:text-gray-400&quot;&#10;                          }`}&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-th-large&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Quick Actions */}&#10;                      &lt;Link&#10;                        href=&quot;/products&quot;&#10;                        className=&quot;px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors duration-200 flex items-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-plus mr-2&quot;&gt;&lt;/i&gt;&#10;                        Add Items&#10;                      &lt;/Link&gt;&#10;&#10;                      &lt;button&#10;                        onClick={() =&gt; setShowClearConfirm(true)}&#10;                        className=&quot;px-4 py-2 text-red-600 hover:bg-red-50 dark:hover:bg-red-900 rounded-lg transition-colors duration-200 flex items-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-trash mr-2&quot;&gt;&lt;/i&gt;&#10;                        Clear All&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Cart Items List */}&#10;                &lt;div className=&quot;p-6&quot;&gt;&#10;                  &lt;div&#10;                    className={`${&#10;                      viewMode === &quot;compact&quot;&#10;                        ? &quot;grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6&quot;&#10;                        : &quot;space-y-6&quot;&#10;                    }`}&#10;                  &gt;&#10;                    {enrichedCartItems.map((item, index) =&gt; (&#10;                      &lt;div&#10;                        key={item.id}&#10;                        className={`group relative overflow-hidden transition-all duration-300 transform ${&#10;                          viewMode === &quot;compact&quot;&#10;                            ? &quot;bg-gradient-to-br from-white via-green-50/30 to-blue-50/30 dark:from-gray-800 dark:via-gray-700/50 dark:to-gray-600/50 rounded-3xl border-2 border-green-200/50 dark:border-green-600/30 hover:border-green-400 dark:hover:border-green-500 hover:-translate-y-3 hover:rotate-1 shadow-2xl hover:shadow-green-500/25 dark:hover:shadow-green-400/30&quot;&#10;                            : &quot;bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 hover:border-green-300 dark:hover:border-green-600 hover:-translate-y-1 shadow-lg hover:shadow-xl&quot;&#10;                        } ${item.isRemoving ? &quot;opacity-50 scale-95&quot; : &quot;&quot;}`}&#10;                        style={{&#10;                          animationDelay: `${index * 100}ms`,&#10;                          boxShadow:&#10;                            viewMode === &quot;compact&quot;&#10;                              ? &quot;0 25px 50px -12px rgba(0, 0, 0, 0.15), 0 20px 25px -5px rgba(16, 185, 129, 0.1), 0 0 0 1px rgba(16, 185, 129, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)&quot;&#10;                              : &quot;0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)&quot;,&#10;                        }}&#10;                      &gt;&#10;                        {/* Enhanced gradient overlay for compact cards */}&#10;                        {viewMode === &quot;compact&quot; &amp;&amp; (&#10;                          &lt;&gt;&#10;                            &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-green-100/40 via-transparent to-blue-100/40 dark:from-green-900/20 dark:to-blue-900/20 rounded-3xl&quot;&gt;&lt;/div&gt;&#10;                            &lt;div className=&quot;absolute inset-0 bg-gradient-to-t from-transparent via-transparent to-white/20 dark:to-gray-700/20 rounded-3xl&quot;&gt;&lt;/div&gt;&#10;                          &lt;/&gt;&#10;                        )}&#10;&#10;                        &lt;div&#10;                          className={`relative z-10 ${viewMode === &quot;compact&quot; ? &quot;p-8&quot; : &quot;p-6&quot;}`}&#10;                        &gt;&#10;                          {/* Product Image &amp; Quantity Badge */}&#10;                          &lt;div className=&quot;relative mb-4&quot;&gt;&#10;                            &lt;div&#10;                              className={`relative overflow-hidden ${&#10;                                viewMode === &quot;compact&quot;&#10;                                  ? &quot;rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-500 border-4 border-white/50 dark:border-gray-600/50&quot;&#10;                                  : &quot;rounded-xl shadow-sm&quot;&#10;                              }`}&#10;                            &gt;&#10;                              &lt;img&#10;                                src={item.enrichedImage}&#10;                                alt={item.name}&#10;                                className={`${&#10;                                  viewMode === &quot;detailed&quot;&#10;                                    ? &quot;w-32 h-32 mx-auto&quot;&#10;                                    : &quot;w-full h-52&quot;&#10;                                } object-cover transition-transform duration-500 ${&#10;                                  viewMode === &quot;compact&quot;&#10;                                    ? &quot;group-hover:scale-110 filter group-hover:brightness-110&quot;&#10;                                    : &quot;group-hover:scale-105&quot;&#10;                                }`}&#10;                              /&gt;&#10;                              {/* Enhanced image overlay for compact view */}&#10;                              {viewMode === &quot;compact&quot; &amp;&amp; (&#10;                                &lt;&gt;&#10;                                  &lt;div className=&quot;absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent&quot;&gt;&lt;/div&gt;&#10;                                  &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-green-500/10 to-blue-500/10&quot;&gt;&lt;/div&gt;&#10;                                &lt;/&gt;&#10;                              )}&#10;                            &lt;/div&gt;&#10;&#10;                            {/* Enhanced Quantity Badge */}&#10;                            &lt;div&#10;                              className={`absolute ${viewMode === &quot;compact&quot; ? &quot;-top-4 -right-4 w-12 h-12 text-base&quot; : &quot;-top-3 -right-3 w-10 h-10 text-sm&quot;} bg-gradient-to-br from-green-500 via-green-600 to-emerald-600 text-white rounded-full flex items-center justify-center font-bold shadow-xl border-3 border-white dark:border-gray-800 transform transition-all duration-300 ${&#10;                                viewMode === &quot;compact&quot;&#10;                                  ? &quot;group-hover:scale-125 group-hover:rotate-12 shadow-green-500/50&quot;&#10;                                  : &quot;group-hover:scale-110&quot;&#10;                              }`}&#10;                            &gt;&#10;                              {item.quantity}&#10;                            &lt;/div&gt;&#10;&#10;                            {/* Enhanced Category Badge */}&#10;                            &lt;div&#10;                              className={`absolute top-3 left-3 backdrop-blur-md px-3 py-1 rounded-full text-xs font-semibold shadow-lg border ${&#10;                                viewMode === &quot;compact&quot;&#10;                                  ? &quot;bg-white/80 dark:bg-gray-800/80 border-green-200 dark:border-green-600 shadow-xl&quot;&#10;                                  : &quot;bg-white/90 dark:bg-gray-800/90 border-gray-200 dark:border-gray-600 shadow-md&quot;&#10;                              }`}&#10;                            &gt;&#10;                              &lt;span className=&quot;text-green-600 dark:text-green-400&quot;&gt;&#10;                                {item.category}&#10;                              &lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          {/* Enhanced Product Info */}&#10;                          &lt;div className=&quot;space-y-4&quot;&gt;&#10;                            &lt;div&gt;&#10;                              &lt;h3&#10;                                className={`font-bold text-gray-900 dark:text-white mb-3 line-clamp-2 transition-colors duration-300 ${&#10;                                  viewMode === &quot;compact&quot;&#10;                                    ? &quot;text-2xl group-hover:text-green-600 dark:group-hover:text-green-400&quot;&#10;                                    : &quot;text-xl group-hover:text-green-600 dark:group-hover:text-green-400&quot;&#10;                                }`}&#10;                              &gt;&#10;                                {item.name}&#10;                              &lt;/h3&gt;&#10;                              &lt;div className=&quot;flex items-center text-sm text-gray-600 dark:text-gray-400 mb-3&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-user-tie mr-2 text-green-500&quot;&gt;&lt;/i&gt;&#10;                                &lt;span className=&quot;font-medium&quot;&gt;&#10;                                  {item.enrichedFarmerName}&#10;                                &lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;flex items-center justify-between text-sm&quot;&gt;&#10;                                &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                  {formatPrice(item.price)}/{item.unit || &quot;kg&quot;}&#10;                                &lt;/span&gt;&#10;                                &lt;span&#10;                                  className={`font-bold text-gray-900 dark:text-white rounded-lg ${&#10;                                    viewMode === &quot;compact&quot;&#10;                                      ? &quot;text-xl bg-gradient-to-r from-green-50 to-blue-50 dark:from-green-900/30 dark:to-blue-900/30 px-3 py-2 shadow-md&quot;&#10;                                      : &quot;text-lg bg-green-50 dark:bg-green-900/20 px-2 py-1&quot;&#10;                                  }`}&#10;                                &gt;&#10;                                  {formatPrice(item.price * item.quantity)}&#10;                                &lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            {/* Enhanced Quantity Controls */}&#10;                            &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                              &lt;div&#10;                                className={`flex items-center overflow-hidden transition-all duration-300 ${&#10;                                  viewMode === &quot;compact&quot;&#10;                                    ? &quot;bg-white/70 dark:bg-gray-700/70 backdrop-blur-sm border-2 border-gray-200/50 dark:border-gray-600/50 rounded-2xl shadow-lg hover:shadow-xl hover:border-green-300/70&quot;&#10;                                    : &quot;bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-xl shadow-sm hover:shadow-md&quot;&#10;                                }`}&#10;                              &gt;&#10;                                &lt;button&#10;                                  onClick={() =&gt;&#10;                                    handleQuantityChange(&#10;                                      item.id,&#10;                                      item.quantity - 1,&#10;                                    )&#10;                                  }&#10;                                  disabled={item.isUpdating}&#10;                                  className={`px-4 py-2 hover:bg-red-50 dark:hover:bg-red-900 text-red-600 transition-all duration-200 disabled:opacity-50 ${&#10;                                    viewMode === &quot;compact&quot;&#10;                                      ? &quot;hover:scale-125&quot;&#10;                                      : &quot;hover:scale-110&quot;&#10;                                  }`}&#10;                                &gt;&#10;                                  &lt;i className=&quot;fas fa-minus&quot;&gt;&lt;/i&gt;&#10;                                &lt;/button&gt;&#10;&#10;                                &lt;div&#10;                                  className={`px-4 py-2 border-x min-w-[80px] text-center ${&#10;                                    viewMode === &quot;compact&quot;&#10;                                      ? &quot;border-gray-200/50 dark:border-gray-600/50 bg-white/80 dark:bg-gray-800/80&quot;&#10;                                      : &quot;border-gray-200 dark:border-gray-600 bg-white dark:bg-gray-800&quot;&#10;                                  }`}&#10;                                &gt;&#10;                                  {item.isUpdating ? (&#10;                                    &lt;i className=&quot;fas fa-spinner fa-spin text-green-600&quot;&gt;&lt;/i&gt;&#10;                                  ) : (&#10;                                    &lt;span className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                                      {item.quantity}&#10;                                    &lt;/span&gt;&#10;                                  )}&#10;                                &lt;/div&gt;&#10;&#10;                                &lt;button&#10;                                  onClick={() =&gt;&#10;                                    handleQuantityChange(&#10;                                      item.id,&#10;                                      item.quantity + 1,&#10;                                    )&#10;                                  }&#10;                                  disabled={item.isUpdating}&#10;                                  className={`px-4 py-2 hover:bg-green-50 dark:hover:bg-green-900 text-green-600 transition-all duration-200 disabled:opacity-50 ${&#10;                                    viewMode === &quot;compact&quot;&#10;                                      ? &quot;hover:scale-125&quot;&#10;                                      : &quot;hover:scale-110&quot;&#10;                                  }`}&#10;                                &gt;&#10;                                  &lt;i className=&quot;fas fa-plus&quot;&gt;&lt;/i&gt;&#10;                                &lt;/button&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              {/* Enhanced Remove Button */}&#10;                              &lt;button&#10;                                onClick={() =&gt; handleRemoveItem(item.id)}&#10;                                disabled={item.isRemoving}&#10;                                className={`p-3 text-red-500 rounded-xl transition-all duration-200 disabled:opacity-50 transform ${&#10;                                  viewMode === &quot;compact&quot;&#10;                                    ? &quot;hover:bg-red-50/80 dark:hover:bg-red-900/80 shadow-lg hover:shadow-xl hover:scale-125 backdrop-blur-sm&quot;&#10;                                    : &quot;hover:bg-red-50 dark:hover:bg-red-900 shadow-sm hover:shadow-md hover:scale-110&quot;&#10;                                }`}&#10;                              &gt;&#10;                                {item.isRemoving ? (&#10;                                  &lt;i className=&quot;fas fa-spinner fa-spin&quot;&gt;&lt;/i&gt;&#10;                                ) : (&#10;                                  &lt;i className=&quot;fas fa-trash&quot;&gt;&lt;/i&gt;&#10;                                )}&#10;                              &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Enhanced shine effect for compact cards */}&#10;                        {viewMode === &quot;compact&quot; &amp;&amp; (&#10;                          &lt;div className=&quot;absolute inset-0 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-700 pointer-events-none&quot;&gt;&#10;                            &lt;div className=&quot;absolute inset-0 bg-gradient-to-tr from-transparent via-white/10 to-transparent transform rotate-12 translate-x-full group-hover:-translate-x-full transition-transform duration-1000&quot;&gt;&lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Cart Summary &amp; Actions */}&#10;              &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-8&quot;&gt;&#10;                {/* Cart Analytics */}&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 p-6&quot;&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-chart-pie mr-3 text-purple-600&quot;&gt;&lt;/i&gt;&#10;                    Cart Analytics&#10;                  &lt;/h3&gt;&#10;&#10;                  &lt;div className=&quot;grid grid-cols-2 gap-4&quot;&gt;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 p-4 rounded-xl border border-green-200 dark:border-green-700&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-green-600 dark:text-green-400 mb-1&quot;&gt;&#10;                        {cartStats.totalItems}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-sm text-green-700 dark:text-green-300&quot;&gt;&#10;                        Total Items&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 p-4 rounded-xl border border-blue-200 dark:border-blue-700&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-blue-600 dark:text-blue-400 mb-1&quot;&gt;&#10;                        {cartStats.farmers}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-sm text-blue-700 dark:text-blue-300&quot;&gt;&#10;                        Farmers&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-900/20 dark:to-purple-800/20 p-4 rounded-xl border border-purple-200 dark:border-purple-700&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-purple-600 dark:text-purple-400 mb-1&quot;&gt;&#10;                        {cartStats.categories}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-sm text-purple-700 dark:text-purple-300&quot;&gt;&#10;                        Categories&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-orange-50 to-orange-100 dark:from-orange-900/20 dark:to-orange-800/20 p-4 rounded-xl border border-orange-200 dark:border-orange-700&quot;&gt;&#10;                      &lt;div className=&quot;text-lg font-bold text-orange-600 dark:text-orange-400 mb-1&quot;&gt;&#10;                        {formatPrice(cartStats.averagePrice)}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-sm text-orange-700 dark:text-orange-300&quot;&gt;&#10;                        Avg/Item&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Savings &amp; Benefits */}&#10;                  &lt;div className=&quot;mt-6 p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-xl border border-yellow-200 dark:border-yellow-700&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center text-yellow-600 dark:text-yellow-400 mb-2&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-piggy-bank mr-2&quot;&gt;&lt;/i&gt;&#10;                      &lt;span className=&quot;font-medium&quot;&gt;Your Savings&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;p className=&quot;text-sm text-yellow-700 dark:text-yellow-300&quot;&gt;&#10;                      Free delivery saves you ৳50!&#10;                      {cartStats.totalAmount &gt;= 500 &amp;&amp; (&#10;                        &lt;span className=&quot;font-medium&quot;&gt;&#10;                          {&quot; &quot;}&#10;                          Plus, you've unlocked free premium packaging!&#10;                        &lt;/span&gt;&#10;                      )}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Checkout Panel */}&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 p-6&quot;&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-calculator mr-3 text-green-600&quot;&gt;&lt;/i&gt;&#10;                    Order Total&#10;                  &lt;/h3&gt;&#10;&#10;                  &lt;div className=&quot;space-y-4 mb-6&quot;&gt;&#10;                    &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      &lt;span&gt;Subtotal ({cartStats.totalItems} items):&lt;/span&gt;&#10;                      &lt;span className=&quot;font-medium&quot;&gt;&#10;                        {formatPrice(cartStats.totalAmount)}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      &lt;span&gt;Delivery Fee:&lt;/span&gt;&#10;                      &lt;span className=&quot;text-green-600 font-medium&quot;&gt;Free&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      &lt;span&gt;Service Fee:&lt;/span&gt;&#10;                      &lt;span className=&quot;font-medium&quot;&gt;{formatPrice(25)}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-4&quot;&gt;&#10;                      &lt;div className=&quot;flex justify-between text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                        &lt;span&gt;Total:&lt;/span&gt;&#10;                        &lt;span className=&quot;text-green-600&quot;&gt;&#10;                          {formatPrice(cartStats.totalAmount + 25)}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Delivery Info */}&#10;                  &lt;div className=&quot;mb-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-700&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center text-blue-600 dark:text-blue-400 mb-2&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-truck mr-2&quot;&gt;&lt;/i&gt;&#10;                      &lt;span className=&quot;font-medium&quot;&gt;Delivery Information&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;p className=&quot;text-sm text-blue-700 dark:text-blue-300&quot;&gt;&#10;                      Expected delivery:{&quot; &quot;}&#10;                      &lt;strong&gt;{getDeliveryEstimate()}&lt;/strong&gt;&#10;                    &lt;/p&gt;&#10;                    &lt;p className=&quot;text-xs text-blue-600 dark:text-blue-400 mt-1&quot;&gt;&#10;                      Free delivery • Fresh guarantee • Contact-free option&#10;                      available&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;space-y-3&quot;&gt;&#10;                    &lt;Link&#10;                      href=&quot;/payment&quot;&#10;                      className=&quot;w-full flex items-center justify-center px-6 py-4 bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white rounded-xl font-bold text-lg transition-all duration-200 transform hover:scale-105 shadow-lg&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-credit-card mr-3&quot;&gt;&lt;/i&gt;&#10;                      Proceed to Secure Checkout&#10;                      &lt;i className=&quot;fas fa-arrow-right ml-3&quot;&gt;&lt;/i&gt;&#10;                    &lt;/Link&gt;&#10;&#10;                    &lt;Link&#10;                      href=&quot;/products&quot;&#10;                      className=&quot;w-full flex items-center justify-center px-6 py-3 border-2 border-green-300 dark:border-green-600 text-green-700 dark:text-green-300 hover:bg-green-50 dark:hover:bg-green-900/20 rounded-xl font-medium transition-all duration-200&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-leaf mr-2&quot;&gt;&lt;/i&gt;&#10;                      Continue Shopping for Fresh Products&#10;                    &lt;/Link&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Shopping Recommendations */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 p-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-lightbulb mr-3 text-yellow-500&quot;&gt;&lt;/i&gt;&#10;                  Complete Your Shopping Experience&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-6&quot;&gt;&#10;                  &lt;div className=&quot;text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-xl border border-green-200 dark:border-green-700&quot;&gt;&#10;                    &lt;div className=&quot;w-16 h-16 bg-green-100 dark:bg-green-800 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-leaf text-green-600 text-2xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                      100% Organic&#10;                    &lt;/h4&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      All products are certified organic and pesticide-free&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-700&quot;&gt;&#10;                    &lt;div className=&quot;w-16 h-16 bg-blue-100 dark:bg-blue-800 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-handshake text-blue-600 text-2xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                      Direct from Farmers&#10;                    &lt;/h4&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Supporting local communities and fair trade&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;text-center p-4 bg-purple-50 dark:bg-purple-900/20 rounded-xl border border-purple-200 dark:border-purple-700&quot;&gt;&#10;                    &lt;div className=&quot;w-16 h-16 bg-purple-100 dark:bg-purple-800 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-clock text-purple-600 text-2xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                      Fresh Daily&#10;                    &lt;/h4&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Harvested fresh and delivered within 24 hours&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Clear Cart Confirmation Modal */}&#10;      {showClearConfirm &amp;&amp; (&#10;        &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl w-full max-w-md overflow-hidden shadow-2xl&quot;&gt;&#10;            &lt;div className=&quot;bg-gradient-to-r from-red-600 to-pink-600 text-white p-6&quot;&gt;&#10;              &lt;h3 className=&quot;text-xl font-bold mb-2&quot;&gt;Clear Cart&lt;/h3&gt;&#10;              &lt;p className=&quot;text-red-100&quot;&gt;&#10;                Are you sure you want to remove all items?&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;p-6&quot;&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-6&quot;&gt;&#10;                This action cannot be undone. All {cartStats.totalItems} items&#10;                will be removed from your cart.&#10;              &lt;/p&gt;&#10;              &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                &lt;button&#10;                  onClick={() =&gt; setShowClearConfirm(false)}&#10;                  className=&quot;flex-1 px-4 py-3 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-xl font-medium transition-all duration-200&quot;&#10;                &gt;&#10;                  Cancel&#10;                &lt;/button&gt;&#10;                &lt;button&#10;                  onClick={handleClearCart}&#10;                  className=&quot;flex-1 px-4 py-3 bg-red-600 hover:bg-red-700 text-white rounded-xl font-medium transition-all duration-200&quot;&#10;                &gt;&#10;                  Clear All&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useMemo, useCallback, useRef, useEffect } from &quot;react&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import { useCart } from &quot;@/contexts/CartContext&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;import { debounce } from &quot;@/utils/debounce&quot;;&#10;import { useFarmersData } from &quot;@/hooks/useFarmerData&quot;;&#10;&#10;export default function Cart() {&#10;  const {&#10;    items,&#10;    updateQuantity,&#10;    removeFromCart,&#10;    clearCart,&#10;    getCartTotal,&#10;    getCartItemsCount,&#10;    loading,&#10;    paymentProcessing,&#10;    recentlyOrderedItems,&#10;  } = useCart();&#10;&#10;  const [removingItems, setRemovingItems] = useState(new Set());&#10;  const [updatingQuantities, setUpdatingQuantities] = useState(new Set());&#10;  const [showClearConfirm, setShowClearConfirm] = useState(false);&#10;  const [viewMode, setViewMode] = useState(&quot;detailed&quot;); // detailed or compact&#10;  const [notifications, setNotifications] = useState([]);&#10;  const [isProcessing, setIsProcessing] = useState(false);&#10;  const [localQuantities, setLocalQuantities] = useState({});&#10;&#10;  const notificationTimeouts = useRef(new Map());&#10;&#10;  // Debug: Log cart state changes&#10;  useEffect(() =&gt; {&#10;    console.log(&quot;Cart Debug - Items changed:&quot;, items);&#10;    console.log(&quot;Cart Debug - Items count:&quot;, items.length);&#10;    console.log(&quot;Cart Debug - Cart count from hook:&quot;, getCartItemsCount());&#10;&#10;    // Debug: Check if any items are missing image data&#10;    if (items.length &gt; 0) {&#10;      items.forEach((item) =&gt; {&#10;        if (!item.image &amp;&amp; !item.images) {&#10;          console.warn(&#10;            `Cart Debug - MISSING IMAGE DATA for ${item.name}:`,&#10;            item,&#10;          );&#10;        } else {&#10;          console.log(`Cart Debug - ${item.name} has image data:`, {&#10;            hasImage: !!item.image,&#10;            hasImages: !!item.images,&#10;            imageType: typeof item.image,&#10;            imagesType: typeof item.images,&#10;          });&#10;        }&#10;      });&#10;    }&#10;  }, [items, getCartItemsCount]);&#10;&#10;  // Get effective quantity (local or actual) - Move this up before it's used&#10;  const getEffectiveQuantity = useCallback(&#10;    (item) =&gt; {&#10;      return localQuantities[item.id] !== undefined&#10;        ? localQuantities[item.id]&#10;        : item.quantity;&#10;    },&#10;    [localQuantities],&#10;  );&#10;&#10;  // Extract unique farmer IDs from cart items with debugging&#10;  const farmerIds = useMemo(() =&gt; {&#10;    const ids = items&#10;      .map((item) =&gt; {&#10;        console.log(&quot;Cart Debug - Processing item for farmer ID:&quot;, item);&#10;&#10;        if (typeof item.farmer === &quot;object&quot; &amp;&amp; item.farmer?._id) {&#10;          console.log(&#10;            &quot;Cart Debug - Found farmer object with _id:&quot;,&#10;            item.farmer._id,&#10;          );&#10;          return item.farmer._id;&#10;        } else if (item.farmerId) {&#10;          console.log(&quot;Cart Debug - Found farmerId:&quot;, item.farmerId);&#10;          return item.farmerId;&#10;        }&#10;&#10;        console.log(&quot;Cart Debug - No farmer ID found for item:&quot;, item.name);&#10;        return null;&#10;      })&#10;      .filter(Boolean);&#10;&#10;    console.log(&quot;Cart Debug - Extracted farmer IDs:&quot;, ids);&#10;    const uniqueIds = [...new Set(ids)];&#10;    console.log(&quot;Cart Debug - Unique farmer IDs:&quot;, uniqueIds);&#10;    return uniqueIds;&#10;  }, [items]);&#10;&#10;  // Fetch farmer data dynamically with debugging&#10;  const {&#10;    farmers: farmersData,&#10;    loading: farmersLoading,&#10;    getFarmer,&#10;  } = useFarmersData(farmerIds);&#10;&#10;  // Debug farmer data loading&#10;  useEffect(() =&gt; {&#10;    console.log(&quot;Cart Debug - Farmers loading:&quot;, farmersLoading);&#10;    console.log(&quot;Cart Debug - Farmers data:&quot;, farmersData);&#10;  }, [farmersLoading, farmersData]);&#10;&#10;  // Enhanced cart items processing to properly extract and display farmer names and product images&#10;  const enrichedCartItems = useMemo(() =&gt; {&#10;    return items.map((item) =&gt; {&#10;      // Extract farmer information with proper loading states&#10;      let farmerName = &quot;Loading...&quot;;&#10;      let farmerId = null;&#10;&#10;      // Priority 1: Direct farmer object with name&#10;      if (typeof item.farmer === &quot;object&quot; &amp;&amp; item.farmer?.name) {&#10;        farmerName = item.farmer.name;&#10;        farmerId = item.farmer._id || item.farmer.id;&#10;      }&#10;      // Priority 2: Direct farmer name string&#10;      else if (typeof item.farmer === &quot;string&quot; &amp;&amp; item.farmer.trim()) {&#10;        farmerName = item.farmer;&#10;      }&#10;      // Priority 3: farmerName field (from localStorage simplified data)&#10;      else if (item.farmerName &amp;&amp; item.farmerName.trim()) {&#10;        farmerName = item.farmerName;&#10;        farmerId = item.farmerId;&#10;      }&#10;      // Priority 4: farmerId field - get from database&#10;      else if (item.farmerId) {&#10;        farmerId = item.farmerId;&#10;&#10;        if (farmersLoading) {&#10;          farmerName = &quot;Loading...&quot;;&#10;        } else {&#10;          const farmerData = getFarmer(item.farmerId);&#10;          if (farmerData &amp;&amp; farmerData.name) {&#10;            farmerName = farmerData.name;&#10;          } else {&#10;            farmerName = &quot;Unknown Farmer&quot;;&#10;          }&#10;        }&#10;      } else {&#10;        farmerName = &quot;Unknown Farmer&quot;;&#10;      }&#10;&#10;      // Enhanced image handling with better fallbacks and debugging&#10;      let productImage = null;&#10;&#10;      // Debug: Log the item's image data&#10;      console.log(`Cart Debug - Image data for ${item.name}:`, {&#10;        image: item.image,&#10;        images: item.images,&#10;        category: item.category,&#10;      });&#10;&#10;      // Helper function to extract URL from various image formats&#10;      const extractImageUrl = (imageData) =&gt; {&#10;        if (!imageData) return null;&#10;&#10;        // Direct string URL&#10;        if (typeof imageData === &quot;string&quot; &amp;&amp; imageData.trim()) {&#10;          return imageData.trim();&#10;        }&#10;&#10;        // Object with url property&#10;        if (typeof imageData === &quot;object&quot; &amp;&amp; imageData.url) {&#10;          return imageData.url;&#10;        }&#10;&#10;        // Object with src property&#10;        if (typeof imageData === &quot;object&quot; &amp;&amp; imageData.src) {&#10;          return imageData.src;&#10;        }&#10;&#10;        // Object with path property&#10;        if (typeof imageData === &quot;object&quot; &amp;&amp; imageData.path) {&#10;          return imageData.path;&#10;        }&#10;&#10;        return null;&#10;      };&#10;&#10;      // Priority 1: Direct image field&#10;      if (item.image) {&#10;        if (Array.isArray(item.image) &amp;&amp; item.image.length &gt; 0) {&#10;          productImage = extractImageUrl(item.image[0]);&#10;          console.log(&#10;            `Cart Debug - Using image array[0] for ${item.name}:`,&#10;            productImage,&#10;          );&#10;        } else {&#10;          productImage = extractImageUrl(item.image);&#10;          console.log(&#10;            `Cart Debug - Using direct image for ${item.name}:`,&#10;            productImage,&#10;          );&#10;        }&#10;      }&#10;&#10;      // Priority 2: images array field&#10;      if (&#10;        !productImage &amp;&amp;&#10;        item.images &amp;&amp;&#10;        Array.isArray(item.images) &amp;&amp;&#10;        item.images.length &gt; 0&#10;      ) {&#10;        productImage = extractImageUrl(item.images[0]);&#10;        console.log(&#10;          `Cart Debug - Using images array[0] for ${item.name}:`,&#10;          productImage,&#10;        );&#10;      }&#10;&#10;      // Priority 3: Only use category fallback if NO image data exists at all&#10;      if (!productImage &amp;&amp; item.category) {&#10;        console.log(&#10;          `Cart Debug - No image found, using category fallback for ${item.name} (category: ${item.category})`,&#10;        );&#10;&#10;        const categoryImages = {&#10;          Vegetables:&#10;            &quot;https://images.unsplash.com/photo-1540420773420-3366772f4999?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Fruits:&#10;            &quot;https://images.unsplash.com/photo-1619566636858-adf3ef46400b?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Dairy:&#10;            &quot;https://images.unsplash.com/photo-1550583724-b2692b85b150?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Herbs:&#10;            &quot;https://images.unsplash.com/photo-1462536943532-57a629f6cc60?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Honey:&#10;            &quot;https://images.unsplash.com/photo-1587049352846-4a222e784d38?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Grains:&#10;            &quot;https://images.unsplash.com/photo-1586201375761-83865001e31c?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Spices:&#10;            &quot;https://images.unsplash.com/photo-1596040033229-a9821ebc227d?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Meat: &quot;https://images.unsplash.com/photo-1588347818505-d0e4dfe81f30?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          // Add more specific category mappings&#10;          Leafy:&#10;            &quot;https://images.unsplash.com/photo-1576045057995-568f588f82fb?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Root: &quot;https://images.unsplash.com/photo-1518977676601-b53f82aba655?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Citrus:&#10;            &quot;https://images.unsplash.com/photo-1557800634-7bf3c7e2d5ae?w=300&amp;h=300&amp;fit=crop&quot;,&#10;          Berries:&#10;            &quot;https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=300&amp;h=300&amp;fit=crop&quot;,&#10;        };&#10;&#10;        // Try exact category match first, then fallback to generic vegetable image&#10;        productImage =&#10;          categoryImages[item.category] || categoryImages[&quot;Vegetables&quot;];&#10;      }&#10;&#10;      // Priority 4: Ultimate fallback if no category or image&#10;      if (!productImage) {&#10;        console.log(`Cart Debug - Using ultimate fallback for ${item.name}`);&#10;        productImage =&#10;          &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=300&amp;h=300&amp;fit=crop&quot;;&#10;      }&#10;&#10;      console.log(`Cart Debug - Final image for ${item.name}:`, productImage);&#10;&#10;      return {&#10;        ...item,&#10;        enrichedFarmerName: farmerName,&#10;        enrichedFarmerId: farmerId || item.farmerId,&#10;        enrichedImage: productImage,&#10;        effectiveQuantity: getEffectiveQuantity(item),&#10;        isUpdating: updatingQuantities.has(item.id),&#10;        isRemoving: removingItems.has(item.id),&#10;      };&#10;    });&#10;  }, [&#10;    items,&#10;    getEffectiveQuantity,&#10;    updatingQuantities,&#10;    removingItems,&#10;    getFarmer,&#10;    farmersLoading,&#10;  ]);&#10;&#10;  // Enhanced cart statistics with proper farmer counting&#10;  const cartStats = useMemo(() =&gt; {&#10;    if (!enrichedCartItems.length) {&#10;      return {&#10;        totalItems: 0,&#10;        totalAmount: 0,&#10;        uniqueItems: 0,&#10;        averagePrice: 0,&#10;        farmers: 0,&#10;        categories: 0,&#10;        estimatedSavings: 50,&#10;      };&#10;    }&#10;&#10;    const totalItems = getCartItemsCount();&#10;    const totalAmount = getCartTotal();&#10;&#10;    // Only count non-loading farmers&#10;    const farmers = new Set(&#10;      enrichedCartItems&#10;        .map((item) =&gt; item.enrichedFarmerName)&#10;        .filter((name) =&gt; name !== &quot;Loading...&quot; &amp;&amp; name !== &quot;Unknown Farmer&quot;),&#10;    ).size;&#10;&#10;    const categories = new Set(enrichedCartItems.map((item) =&gt; item.category))&#10;      .size;&#10;&#10;    return {&#10;      totalItems,&#10;      totalAmount,&#10;      uniqueItems: enrichedCartItems.length,&#10;      averagePrice: totalItems &gt; 0 ? totalAmount / totalItems : 0,&#10;      farmers,&#10;      categories,&#10;      estimatedSavings: 50 + (totalAmount &gt;= 500 ? 25 : 0),&#10;    };&#10;  }, [enrichedCartItems, getCartTotal, getCartItemsCount]);&#10;&#10;  // Debounced quantity update to prevent excessive API calls&#10;  const debouncedQuantityUpdate = useMemo(&#10;    () =&gt;&#10;      debounce(async (productId, newQuantity) =&gt; {&#10;        if (newQuantity &lt;= 0) {&#10;          handleRemoveItem(productId);&#10;          return;&#10;        }&#10;&#10;        setUpdatingQuantities((prev) =&gt; new Set(prev).add(productId));&#10;&#10;        try {&#10;          await updateQuantity(productId, newQuantity);&#10;          addNotification(`Quantity updated successfully`, &quot;success&quot;);&#10;        } catch (error) {&#10;          console.error(&quot;Error updating quantity:&quot;, error);&#10;          addNotification(&quot;Failed to update quantity&quot;, &quot;error&quot;);&#10;          // Revert local quantity on error&#10;          setLocalQuantities((prev) =&gt; {&#10;            const newQuantities = { ...prev };&#10;            delete newQuantities[productId];&#10;            return newQuantities;&#10;          });&#10;        } finally {&#10;          setUpdatingQuantities((prev) =&gt; {&#10;            const newSet = new Set(prev);&#10;            newSet.delete(productId);&#10;            return newSet;&#10;          });&#10;        }&#10;      }, 500),&#10;    [updateQuantity],&#10;  );&#10;&#10;  // Enhanced notification system&#10;  const addNotification = useCallback((message, type = &quot;info&quot;) =&gt; {&#10;    const id = Date.now() + Math.random();&#10;    const notification = { id, message, type, timestamp: new Date() };&#10;&#10;    setNotifications((prev) =&gt; [notification, ...prev.slice(0, 2)]); // Limit to 3 notifications&#10;&#10;    // Clear existing timeout for the same type if exists&#10;    if (notificationTimeouts.current.has(type)) {&#10;      clearTimeout(notificationTimeouts.current.get(type));&#10;    }&#10;&#10;    // Set new timeout&#10;    const timeoutId = setTimeout(() =&gt; {&#10;      setNotifications((prev) =&gt; prev.filter((n) =&gt; n.id !== id));&#10;      notificationTimeouts.current.delete(type);&#10;    }, 4000);&#10;&#10;    notificationTimeouts.current.set(type, timeoutId);&#10;  }, []);&#10;&#10;  // Calculate delivery estimate&#10;  const getDeliveryEstimate = useCallback(() =&gt; {&#10;    const deliveryDate = new Date();&#10;    deliveryDate.setDate(deliveryDate.getDate() + 3); // Add 3 days for delivery&#10;&#10;    return deliveryDate.toLocaleDateString(&quot;en-US&quot;, {&#10;      weekday: &quot;long&quot;,&#10;      month: &quot;short&quot;,&#10;      day: &quot;numeric&quot;,&#10;    });&#10;  }, []);&#10;&#10;  // Cleanup timeouts on unmount&#10;  useEffect(() =&gt; {&#10;    return () =&gt; {&#10;      notificationTimeouts.current.forEach((timeoutId) =&gt; {&#10;        clearTimeout(timeoutId);&#10;      });&#10;    };&#10;  }, []);&#10;&#10;  // Optimized quantity change handler with stock validation&#10;  const handleQuantityChange = useCallback(&#10;    (productId, newQuantity) =&gt; {&#10;      // Find the product to check stock&#10;      const cartItem = items.find((item) =&gt; item.id === productId);&#10;      if (!cartItem) return;&#10;&#10;      // Validate stock before making changes&#10;      if (newQuantity &gt; cartItem.stock) {&#10;        addNotification(&#10;          `Cannot set quantity to ${newQuantity}. Only ${cartItem.stock} ${cartItem.unit || &quot;units&quot;} available for ${cartItem.name}.`,&#10;          &quot;error&quot;,&#10;        );&#10;        return; // Don't proceed with the update&#10;      }&#10;&#10;      // Immediate UI update for better UX&#10;      setLocalQuantities((prev) =&gt; ({&#10;        ...prev,&#10;        [productId]: newQuantity,&#10;      }));&#10;&#10;      // Debounced API call&#10;      debouncedQuantityUpdate(productId, newQuantity);&#10;    },&#10;    [debouncedQuantityUpdate, items, addNotification],&#10;  );&#10;&#10;  // Enhanced remove item handler&#10;  const handleRemoveItem = useCallback(&#10;    async (productId) =&gt; {&#10;      setRemovingItems((prev) =&gt; new Set(prev).add(productId));&#10;      setIsProcessing(true);&#10;&#10;      try {&#10;        await removeFromCart(productId);&#10;        addNotification(&quot;Item removed from cart&quot;, &quot;success&quot;);&#10;        // Clear local quantity if exists&#10;        setLocalQuantities((prev) =&gt; {&#10;          const newQuantities = { ...prev };&#10;          delete newQuantities[productId];&#10;          return newQuantities;&#10;        });&#10;      } catch (error) {&#10;        console.error(&quot;Error removing item:&quot;, error);&#10;        addNotification(&quot;Failed to remove item&quot;, &quot;error&quot;);&#10;      } finally {&#10;        setRemovingItems((prev) =&gt; {&#10;          const newSet = new Set(prev);&#10;          newSet.delete(productId);&#10;          return newSet;&#10;        });&#10;        setIsProcessing(false);&#10;      }&#10;    },&#10;    [removeFromCart, addNotification],&#10;  );&#10;&#10;  // Enhanced clear cart handler&#10;  const handleClearCart = useCallback(async () =&gt; {&#10;    setShowClearConfirm(false);&#10;    setIsProcessing(true);&#10;&#10;    try {&#10;      await clearCart();&#10;      setLocalQuantities({});&#10;      addNotification(&quot;Cart cleared successfully&quot;, &quot;success&quot;);&#10;    } catch (error) {&#10;      console.error(&quot;Error clearing cart:&quot;, error);&#10;      addNotification(&quot;Failed to clear cart&quot;, &quot;error&quot;);&#10;    } finally {&#10;      setIsProcessing(false);&#10;    }&#10;  }, [clearCart, addNotification]);&#10;&#10;  // Optimized price formatter with memoization&#10;  const formatPrice = useCallback((price) =&gt; {&#10;    const numericPrice =&#10;      typeof price === &quot;number&quot; ? price : parseFloat(price) || 0;&#10;    return `৳${numericPrice.toFixed(0)}`;&#10;  }, []);&#10;&#10;  // Enhanced delivery estimate&#10;  const deliveryEstimate = useMemo(() =&gt; {&#10;    const now = new Date();&#10;    const deliveryDate = new Date(now.getTime() + 24 * 60 * 60 * 1000);&#10;    return {&#10;      date: deliveryDate.toLocaleDateString(&quot;en-US&quot;, {&#10;        weekday: &quot;long&quot;,&#10;        month: &quot;short&quot;,&#10;        day: &quot;numeric&quot;,&#10;      }),&#10;      timeSlot: &quot;9 AM - 6 PM&quot;,&#10;      express: cartStats.totalAmount &gt;= 1000,&#10;    };&#10;  }, [cartStats.totalAmount]);&#10;&#10;  // Memoized cart items to prevent unnecessary re-renders&#10;  const memoizedCartItems = useMemo(&#10;    () =&gt;&#10;      items.map((item) =&gt; ({&#10;        ...item,&#10;        effectiveQuantity: getEffectiveQuantity(item),&#10;        isUpdating: updatingQuantities.has(item.id),&#10;        isRemoving: removingItems.has(item.id),&#10;      })),&#10;    [items, getEffectiveQuantity, updatingQuantities, removingItems],&#10;  );&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-green-50 to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#10;          &lt;div className=&quot;relative&quot;&gt;&#10;            &lt;div className=&quot;animate-spin rounded-full h-32 w-32 border-4 border-transparent border-t-green-600 border-r-blue-600 mx-auto mb-4&quot;&gt;&lt;/div&gt;&#10;            &lt;div&#10;              className=&quot;absolute inset-0 rounded-full h-32 w-32 border-4 border-transparent border-b-purple-600 border-l-orange-600 animate-spin&quot;&#10;              style={{&#10;                animationDirection: &quot;reverse&quot;,&#10;                animationDuration: &quot;1.5s&quot;,&#10;              }}&#10;            &gt;&lt;/div&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-xl backdrop-blur-sm&quot;&gt;&#10;            &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;              Loading Your Cart&#10;            &lt;/h3&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;              Please wait while we fetch your items...&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      {/* Enhanced Notification System */}&#10;      &lt;div className=&quot;fixed top-4 right-4 z-50 space-y-2&quot;&gt;&#10;        {notifications.map((notification) =&gt; (&#10;          &lt;div&#10;            key={notification.id}&#10;            className={`px-6 py-4 rounded-lg shadow-lg text-white transform transition-all duration-500 slide-in-right ${&#10;              notification.type === &quot;success&quot;&#10;                ? &quot;bg-green-600&quot;&#10;                : notification.type === &quot;error&quot;&#10;                  ? &quot;bg-red-600&quot;&#10;                  : notification.type === &quot;warning&quot;&#10;                    ? &quot;bg-yellow-600&quot;&#10;                    : &quot;bg-blue-600&quot;&#10;            }`}&#10;          &gt;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#10;              &lt;i&#10;                className={`fas ${&#10;                  notification.type === &quot;success&quot;&#10;                    ? &quot;fa-check-circle&quot;&#10;                    : notification.type === &quot;error&quot;&#10;                      ? &quot;fa-exclamation-circle&quot;&#10;                      : notification.type === &quot;warning&quot;&#10;                        ? &quot;fa-exclamation-triangle&quot;&#10;                        : &quot;fa-info-circle&quot;&#10;                } mr-2`}&#10;              &gt;&lt;/i&gt;&#10;              {notification.message}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        ))}&#10;      &lt;/div&gt;&#10;&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-green-50 to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;        {/* Enhanced Header Section */}&#10;        &lt;div className=&quot;relative overflow-hidden&quot;&gt;&#10;          &lt;div className=&quot;absolute inset-0 bg-gradient-to-r from-green-600/10 to-blue-600/10 dark:from-green-400/10 dark:to-blue-400/10&quot;&gt;&lt;/div&gt;&#10;          &lt;div className=&quot;relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12&quot;&gt;&#10;            {/* Breadcrumb */}&#10;            &lt;nav className=&quot;flex mb-8&quot; aria-label=&quot;Breadcrumb&quot;&gt;&#10;              &lt;ol className=&quot;flex items-center space-x-2 text-sm&quot;&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link&#10;                    href=&quot;/&quot;&#10;                    className=&quot;text-gray-500 hover:text-green-600 transition-colors duration-200 flex items-center&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-home mr-1&quot;&gt;&lt;/i&gt;&#10;                    Home&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link&#10;                    href=&quot;/products&quot;&#10;                    className=&quot;text-gray-500 hover:text-green-600 transition-colors duration-200&quot;&#10;                  &gt;&#10;                    Products&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;                &lt;/li&gt;&#10;                &lt;li className=&quot;text-gray-900 dark:text-white font-medium&quot;&gt;&#10;                  Shopping Cart&#10;                &lt;/li&gt;&#10;              &lt;/ol&gt;&#10;            &lt;/nav&gt;&#10;&#10;            {/* Page Header with Stats */}&#10;            &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center mb-8&quot;&gt;&#10;              &lt;div className=&quot;mb-6 lg:mb-0&quot;&gt;&#10;                &lt;h1 className=&quot;text-4xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent mb-3&quot;&gt;&#10;                  Shopping Cart&#10;                &lt;/h1&gt;&#10;                &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg&quot;&gt;&#10;                  Review and manage your selected items • {cartStats.totalItems}{&quot; &quot;}&#10;                  items&#10;                &lt;/p&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Quick Stats Cards - Only show if items exist */}&#10;              {items.length &gt; 0 &amp;&amp; (&#10;                &lt;div className=&quot;grid grid-cols-2 lg:grid-cols-4 gap-4 w-full lg:w-auto&quot;&gt;&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                    &lt;div className=&quot;text-center&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                        {cartStats.totalItems}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Total Items&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                    &lt;div className=&quot;text-center&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-blue-600 dark:text-blue-400&quot;&gt;&#10;                        {cartStats.farmers}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Farmers&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                    &lt;div className=&quot;text-center&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-purple-600 dark:text-purple-400&quot;&gt;&#10;                        {cartStats.categories}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Categories&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-4 shadow-lg border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                    &lt;div className=&quot;text-center&quot;&gt;&#10;                      &lt;div className=&quot;text-xl font-bold text-orange-600 dark:text-orange-400&quot;&gt;&#10;                        {formatPrice(cartStats.totalAmount)}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Total Value&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Cart Content */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-12&quot;&gt;&#10;          {paymentProcessing ? (&#10;            /* Payment Processing State */&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-12 text-center border border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;relative mb-8&quot;&gt;&#10;                &lt;div className=&quot;w-32 h-32 mx-auto bg-gradient-to-br from-green-100 to-blue-100 dark:from-green-900 dark:to-blue-900 rounded-full flex items-center justify-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-credit-card text-5xl text-green-600 dark:text-green-400 animate-pulse&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;absolute -top-2 -right-2 w-8 h-8 bg-green-500 rounded-full flex items-center justify-center animate-spin&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-spinner text-white text-sm&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                Payment Processing&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto text-lg&quot;&gt;&#10;                Your order has been placed successfully! We&amp;apos;re clearing your&#10;                cart and preparing your fresh products for delivery.&#10;              &lt;/p&gt;&#10;&#10;              {recentlyOrderedItems.length &gt; 0 &amp;&amp; (&#10;                &lt;div className=&quot;max-w-2xl mx-auto&quot;&gt;&#10;                  &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                    Items in your order:&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6&quot;&gt;&#10;                    {recentlyOrderedItems.slice(0, 4).map((item, index) =&gt; (&#10;                      &lt;div&#10;                        key={item.id}&#10;                        className=&quot;flex items-center space-x-3 bg-gray-50 dark:bg-gray-700 rounded-lg p-3&quot;&#10;                      &gt;&#10;                        &lt;img&#10;                          src={&#10;                            item.image ||&#10;                            &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=50&amp;h=50&amp;fit=crop&quot;&#10;                          }&#10;                          alt={item.name}&#10;                          className=&quot;w-12 h-12 object-cover rounded-lg&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#10;                          &lt;p className=&quot;text-sm font-medium text-gray-900 dark:text-white truncate&quot;&gt;&#10;                            {item.name}&#10;                          &lt;/p&gt;&#10;                          &lt;p className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                            Qty: {item.quantity} •{&quot; &quot;}&#10;                            {formatPrice(item.price * item.quantity)}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    ))}&#10;                    {recentlyOrderedItems.length &gt; 4 &amp;&amp; (&#10;                      &lt;div className=&quot;col-span-full text-center text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                        +{recentlyOrderedItems.length - 4} more items&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;&#10;              &lt;div className=&quot;flex flex-col sm:flex-row gap-4 justify-center&quot;&gt;&#10;                &lt;Link&#10;                  href=&quot;/products&quot;&#10;                  className=&quot;inline-flex items-center px-8 py-4 bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white rounded-xl font-medium transition-all duration-200 transform hover:scale-105 shadow-lg&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-seedling mr-2&quot;&gt;&lt;/i&gt;&#10;                  Continue Shopping&#10;                &lt;/Link&gt;&#10;                &lt;Link&#10;                  href=&quot;/orders&quot;&#10;                  className=&quot;inline-flex items-center px-8 py-4 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-xl font-medium transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-receipt mr-2&quot;&gt;&lt;/i&gt;&#10;                  View Orders&#10;                &lt;/Link&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ) : items.length === 0 ? (&#10;            /* Enhanced Empty Cart State */&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-12 text-center border border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;relative mb-8&quot;&gt;&#10;                &lt;div className=&quot;w-32 h-32 mx-auto bg-gradient-to-br from-green-100 to-blue-100 dark:from-green-900 dark:to-blue-900 rounded-full flex items-center justify-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-shopping-cart text-5xl text-green-600 dark:text-green-400&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;absolute -top-2 -right-2 w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-exclamation text-white text-sm&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                Your cart is empty&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-8 max-w-md mx-auto text-lg&quot;&gt;&#10;                Discover fresh, organic products from local farmers and add them&#10;                to your cart to get started!&#10;              &lt;/p&gt;&#10;              &lt;div className=&quot;flex flex-col sm:flex-row gap-4 justify-center&quot;&gt;&#10;                &lt;Link&#10;                  href=&quot;/products&quot;&#10;                  className=&quot;inline-flex items-center px-8 py-4 bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white rounded-xl font-medium transition-all duration-200 transform hover:scale-105 shadow-lg&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-seedling mr-2&quot;&gt;&lt;/i&gt;&#10;                  Browse Fresh Products&#10;                &lt;/Link&gt;&#10;                &lt;Link&#10;                  href=&quot;/farmers&quot;&#10;                  className=&quot;inline-flex items-center px-8 py-4 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-xl font-medium transition-all duration-200&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-users mr-2&quot;&gt;&lt;/i&gt;&#10;                  Meet Our Farmers&#10;                &lt;/Link&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ) : (&#10;            &lt;div className=&quot;space-y-8&quot;&gt;&#10;              {/* Enhanced Cart Items Section - Full Width */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 overflow-hidden&quot;&gt;&#10;                {/* Cart Header */}&#10;                &lt;div className=&quot;bg-gradient-to-r from-gray-50 to-green-50 dark:from-gray-700 dark:to-gray-600 p-6 border-b border-gray-200 dark:border-gray-600&quot;&gt;&#10;                  &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4&quot;&gt;&#10;                    &lt;div&gt;&#10;                      &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-2 flex items-center&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-shopping-basket mr-3 text-green-600&quot;&gt;&lt;/i&gt;&#10;                        Your Shopping Cart&#10;                      &lt;/h2&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        {cartStats.totalItems} items from {cartStats.farmers}{&quot; &quot;}&#10;                        farmers • {cartStats.categories} categories&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;flex flex-wrap items-center gap-3&quot;&gt;&#10;                      {/* View Mode Toggle */}&#10;                      &lt;div className=&quot;flex bg-gray-100 dark:bg-gray-700 rounded-lg p-1&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setViewMode(&quot;detailed&quot;)}&#10;                          className={`px-3 py-2 rounded-md transition-all duration-200 ${&#10;                            viewMode === &quot;detailed&quot;&#10;                              ? &quot;bg-white dark:bg-gray-600 text-green-600 shadow-sm&quot;&#10;                              : &quot;text-gray-600 dark:text-gray-400&quot;&#10;                          }`}&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-list&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setViewMode(&quot;compact&quot;)}&#10;                          className={`px-3 py-2 rounded-md transition-all duration-200 ${&#10;                            viewMode === &quot;compact&quot;&#10;                              ? &quot;bg-white dark:bg-gray-600 text-green-600 shadow-sm&quot;&#10;                              : &quot;text-gray-600 dark:text-gray-400&quot;&#10;                          }`}&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-th-large&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Quick Actions */}&#10;                      &lt;Link&#10;                        href=&quot;/products&quot;&#10;                        className=&quot;px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors duration-200 flex items-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-plus mr-2&quot;&gt;&lt;/i&gt;&#10;                        Add Items&#10;                      &lt;/Link&gt;&#10;&#10;                      &lt;button&#10;                        onClick={() =&gt; setShowClearConfirm(true)}&#10;                        className=&quot;px-4 py-2 text-red-600 hover:bg-red-50 dark:hover:bg-red-900 rounded-lg transition-colors duration-200 flex items-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-trash mr-2&quot;&gt;&lt;/i&gt;&#10;                        Clear All&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Cart Items List */}&#10;                &lt;div className=&quot;p-6&quot;&gt;&#10;                  &lt;div&#10;                    className={`${&#10;                      viewMode === &quot;compact&quot;&#10;                        ? &quot;grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6&quot;&#10;                        : &quot;space-y-6&quot;&#10;                    }`}&#10;                  &gt;&#10;                    {enrichedCartItems.map((item, index) =&gt; (&#10;                      &lt;div&#10;                        key={item.id}&#10;                        className={`group relative overflow-hidden transition-all duration-300 transform ${&#10;                          viewMode === &quot;compact&quot;&#10;                            ? &quot;bg-gradient-to-br from-white via-green-50/30 to-blue-50/30 dark:from-gray-800 dark:via-gray-700/50 dark:to-gray-600/50 rounded-3xl border-2 border-green-200/50 dark:border-green-600/30 hover:border-green-400 dark:hover:border-green-500 hover:-translate-y-3 hover:rotate-1 shadow-2xl hover:shadow-green-500/25 dark:hover:shadow-green-400/30&quot;&#10;                            : &quot;bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 hover:border-green-300 dark:hover:border-green-600 hover:-translate-y-1 shadow-lg hover:shadow-xl&quot;&#10;                        } ${item.isRemoving ? &quot;opacity-50 scale-95&quot; : &quot;&quot;}`}&#10;                        style={{&#10;                          animationDelay: `${index * 100}ms`,&#10;                          boxShadow:&#10;                            viewMode === &quot;compact&quot;&#10;                              ? &quot;0 25px 50px -12px rgba(0, 0, 0, 0.15), 0 20px 25px -5px rgba(16, 185, 129, 0.1), 0 0 0 1px rgba(16, 185, 129, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)&quot;&#10;                              : &quot;0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)&quot;,&#10;                        }}&#10;                      &gt;&#10;                        {/* Enhanced gradient overlay for compact cards */}&#10;                        {viewMode === &quot;compact&quot; &amp;&amp; (&#10;                          &lt;&gt;&#10;                            &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-green-100/40 via-transparent to-blue-100/40 dark:from-green-900/20 dark:to-blue-900/20 rounded-3xl&quot;&gt;&lt;/div&gt;&#10;                            &lt;div className=&quot;absolute inset-0 bg-gradient-to-t from-transparent via-transparent to-white/20 dark:to-gray-700/20 rounded-3xl&quot;&gt;&lt;/div&gt;&#10;                          &lt;/&gt;&#10;                        )}&#10;&#10;                        &lt;div&#10;                          className={`relative z-10 ${viewMode === &quot;compact&quot; ? &quot;p-8&quot; : &quot;p-6&quot;}`}&#10;                        &gt;&#10;                          {/* Product Image &amp; Quantity Badge */}&#10;                          &lt;div className=&quot;relative mb-4&quot;&gt;&#10;                            &lt;div&#10;                              className={`relative overflow-hidden ${&#10;                                viewMode === &quot;compact&quot;&#10;                                  ? &quot;rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-500 border-4 border-white/50 dark:border-gray-600/50&quot;&#10;                                  : &quot;rounded-xl shadow-sm&quot;&#10;                              }`}&#10;                            &gt;&#10;                              &lt;img&#10;                                src={item.enrichedImage}&#10;                                alt={item.name}&#10;                                className={`${&#10;                                  viewMode === &quot;detailed&quot;&#10;                                    ? &quot;w-32 h-32 mx-auto&quot;&#10;                                    : &quot;w-full h-52&quot;&#10;                                } object-cover transition-transform duration-500 ${&#10;                                  viewMode === &quot;compact&quot;&#10;                                    ? &quot;group-hover:scale-110 filter group-hover:brightness-110&quot;&#10;                                    : &quot;group-hover:scale-105&quot;&#10;                                }`}&#10;                              /&gt;&#10;                              {/* Enhanced image overlay for compact view */}&#10;                              {viewMode === &quot;compact&quot; &amp;&amp; (&#10;                                &lt;&gt;&#10;                                  &lt;div className=&quot;absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent&quot;&gt;&lt;/div&gt;&#10;                                  &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-green-500/10 to-blue-500/10&quot;&gt;&lt;/div&gt;&#10;                                &lt;/&gt;&#10;                              )}&#10;                            &lt;/div&gt;&#10;&#10;                            {/* Enhanced Quantity Badge */}&#10;                            &lt;div&#10;                              className={`absolute ${viewMode === &quot;compact&quot; ? &quot;-top-4 -right-4 w-12 h-12 text-base&quot; : &quot;-top-3 -right-3 w-10 h-10 text-sm&quot;} bg-gradient-to-br from-green-500 via-green-600 to-emerald-600 text-white rounded-full flex items-center justify-center font-bold shadow-xl border-3 border-white dark:border-gray-800 transform transition-all duration-300 ${&#10;                                viewMode === &quot;compact&quot;&#10;                                  ? &quot;group-hover:scale-125 group-hover:rotate-12 shadow-green-500/50&quot;&#10;                                  : &quot;group-hover:scale-110&quot;&#10;                              }`}&#10;                            &gt;&#10;                              {item.quantity}&#10;                            &lt;/div&gt;&#10;&#10;                            {/* Enhanced Category Badge */}&#10;                            &lt;div&#10;                              className={`absolute top-3 left-3 backdrop-blur-md px-3 py-1 rounded-full text-xs font-semibold shadow-lg border ${&#10;                                viewMode === &quot;compact&quot;&#10;                                  ? &quot;bg-white/80 dark:bg-gray-800/80 border-green-200 dark:border-green-600 shadow-xl&quot;&#10;                                  : &quot;bg-white/90 dark:bg-gray-800/90 border-gray-200 dark:border-gray-600 shadow-md&quot;&#10;                              }`}&#10;                            &gt;&#10;                              &lt;span className=&quot;text-green-600 dark:text-green-400&quot;&gt;&#10;                                {item.category}&#10;                              &lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          {/* Enhanced Product Info */}&#10;                          &lt;div className=&quot;space-y-4&quot;&gt;&#10;                            &lt;div&gt;&#10;                              &lt;h3&#10;                                className={`font-bold text-gray-900 dark:text-white mb-3 line-clamp-2 transition-colors duration-300 ${&#10;                                  viewMode === &quot;compact&quot;&#10;                                    ? &quot;text-2xl group-hover:text-green-600 dark:group-hover:text-green-400&quot;&#10;                                    : &quot;text-xl group-hover:text-green-600 dark:group-hover:text-green-400&quot;&#10;                                }`}&#10;                              &gt;&#10;                                {item.name}&#10;                              &lt;/h3&gt;&#10;                              &lt;div className=&quot;flex items-center text-sm text-gray-600 dark:text-gray-400 mb-3&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-user-tie mr-2 text-green-500&quot;&gt;&lt;/i&gt;&#10;                                &lt;span className=&quot;font-medium&quot;&gt;&#10;                                  {item.enrichedFarmerName}&#10;                                &lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;flex items-center justify-between text-sm&quot;&gt;&#10;                                &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                  {formatPrice(item.price)}/{item.unit || &quot;kg&quot;}&#10;                                &lt;/span&gt;&#10;                                &lt;span&#10;                                  className={`font-bold text-gray-900 dark:text-white rounded-lg ${&#10;                                    viewMode === &quot;compact&quot;&#10;                                      ? &quot;text-xl bg-gradient-to-r from-green-50 to-blue-50 dark:from-green-900/30 dark:to-blue-900/30 px-3 py-2 shadow-md&quot;&#10;                                      : &quot;text-lg bg-green-50 dark:bg-green-900/20 px-2 py-1&quot;&#10;                                  }`}&#10;                                &gt;&#10;                                  {formatPrice(item.price * item.quantity)}&#10;                                &lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            {/* Enhanced Quantity Controls */}&#10;                            &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                              &lt;div&#10;                                className={`flex items-center overflow-hidden transition-all duration-300 ${&#10;                                  viewMode === &quot;compact&quot;&#10;                                    ? &quot;bg-white/70 dark:bg-gray-700/70 backdrop-blur-sm border-2 border-gray-200/50 dark:border-gray-600/50 rounded-2xl shadow-lg hover:shadow-xl hover:border-green-300/70&quot;&#10;                                    : &quot;bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-xl shadow-sm hover:shadow-md&quot;&#10;                                }`}&#10;                              &gt;&#10;                                &lt;button&#10;                                  onClick={() =&gt;&#10;                                    handleQuantityChange(&#10;                                      item.id,&#10;                                      item.quantity - 1,&#10;                                    )&#10;                                  }&#10;                                  disabled={item.isUpdating}&#10;                                  className={`px-4 py-2 hover:bg-red-50 dark:hover:bg-red-900 text-red-600 transition-all duration-200 disabled:opacity-50 ${&#10;                                    viewMode === &quot;compact&quot;&#10;                                      ? &quot;hover:scale-125&quot;&#10;                                      : &quot;hover:scale-110&quot;&#10;                                  }`}&#10;                                &gt;&#10;                                  &lt;i className=&quot;fas fa-minus&quot;&gt;&lt;/i&gt;&#10;                                &lt;/button&gt;&#10;&#10;                                &lt;div&#10;                                  className={`px-4 py-2 border-x min-w-[80px] text-center ${&#10;                                    viewMode === &quot;compact&quot;&#10;                                      ? &quot;border-gray-200/50 dark:border-gray-600/50 bg-white/80 dark:bg-gray-800/80&quot;&#10;                                      : &quot;border-gray-200 dark:border-gray-600 bg-white dark:bg-gray-800&quot;&#10;                                  }`}&#10;                                &gt;&#10;                                  {item.isUpdating ? (&#10;                                    &lt;i className=&quot;fas fa-spinner fa-spin text-green-600&quot;&gt;&lt;/i&gt;&#10;                                  ) : (&#10;                                    &lt;span className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                                      {item.quantity}&#10;                                    &lt;/span&gt;&#10;                                  )}&#10;                                &lt;/div&gt;&#10;&#10;                                &lt;button&#10;                                  onClick={() =&gt;&#10;                                    handleQuantityChange(&#10;                                      item.id,&#10;                                      item.quantity + 1,&#10;                                    )&#10;                                  }&#10;                                  disabled={item.isUpdating}&#10;                                  className={`px-4 py-2 hover:bg-green-50 dark:hover:bg-green-900 text-green-600 transition-all duration-200 disabled:opacity-50 ${&#10;                                    viewMode === &quot;compact&quot;&#10;                                      ? &quot;hover:scale-125&quot;&#10;                                      : &quot;hover:scale-110&quot;&#10;                                  }`}&#10;                                &gt;&#10;                                  &lt;i className=&quot;fas fa-plus&quot;&gt;&lt;/i&gt;&#10;                                &lt;/button&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              {/* Enhanced Remove Button */}&#10;                              &lt;button&#10;                                onClick={() =&gt; handleRemoveItem(item.id)}&#10;                                disabled={item.isRemoving}&#10;                                className={`p-3 text-red-500 rounded-xl transition-all duration-200 disabled:opacity-50 transform ${&#10;                                  viewMode === &quot;compact&quot;&#10;                                    ? &quot;hover:bg-red-50/80 dark:hover:bg-red-900/80 shadow-lg hover:shadow-xl hover:scale-125 backdrop-blur-sm&quot;&#10;                                    : &quot;hover:bg-red-50 dark:hover:bg-red-900 shadow-sm hover:shadow-md hover:scale-110&quot;&#10;                                }`}&#10;                              &gt;&#10;                                {item.isRemoving ? (&#10;                                  &lt;i className=&quot;fas fa-spinner fa-spin&quot;&gt;&lt;/i&gt;&#10;                                ) : (&#10;                                  &lt;i className=&quot;fas fa-trash&quot;&gt;&lt;/i&gt;&#10;                                )}&#10;                              &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Enhanced shine effect for compact cards */}&#10;                        {viewMode === &quot;compact&quot; &amp;&amp; (&#10;                          &lt;div className=&quot;absolute inset-0 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-700 pointer-events-none&quot;&gt;&#10;                            &lt;div className=&quot;absolute inset-0 bg-gradient-to-tr from-transparent via-white/10 to-transparent transform rotate-12 translate-x-full group-hover:-translate-x-full transition-transform duration-1000&quot;&gt;&lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Cart Summary &amp; Actions */}&#10;              &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-8&quot;&gt;&#10;                {/* Cart Analytics */}&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 p-6&quot;&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-chart-pie mr-3 text-purple-600&quot;&gt;&lt;/i&gt;&#10;                    Cart Analytics&#10;                  &lt;/h3&gt;&#10;&#10;                  &lt;div className=&quot;grid grid-cols-2 gap-4&quot;&gt;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 p-4 rounded-xl border border-green-200 dark:border-green-700&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-green-600 dark:text-green-400 mb-1&quot;&gt;&#10;                        {cartStats.totalItems}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-sm text-green-700 dark:text-green-300&quot;&gt;&#10;                        Total Items&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 p-4 rounded-xl border border-blue-200 dark:border-blue-700&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-blue-600 dark:text-blue-400 mb-1&quot;&gt;&#10;                        {cartStats.farmers}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-sm text-blue-700 dark:text-blue-300&quot;&gt;&#10;                        Farmers&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-900/20 dark:to-purple-800/20 p-4 rounded-xl border border-purple-200 dark:border-purple-700&quot;&gt;&#10;                      &lt;div className=&quot;text-2xl font-bold text-purple-600 dark:text-purple-400 mb-1&quot;&gt;&#10;                        {cartStats.categories}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-sm text-purple-700 dark:text-purple-300&quot;&gt;&#10;                        Categories&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-orange-50 to-orange-100 dark:from-orange-900/20 dark:to-orange-800/20 p-4 rounded-xl border border-orange-200 dark:border-orange-700&quot;&gt;&#10;                      &lt;div className=&quot;text-lg font-bold text-orange-600 dark:text-orange-400 mb-1&quot;&gt;&#10;                        {formatPrice(cartStats.averagePrice)}&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-sm text-orange-700 dark:text-orange-300&quot;&gt;&#10;                        Avg/Item&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Savings &amp; Benefits */}&#10;                  &lt;div className=&quot;mt-6 p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-xl border border-yellow-200 dark:border-yellow-700&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center text-yellow-600 dark:text-yellow-400 mb-2&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-piggy-bank mr-2&quot;&gt;&lt;/i&gt;&#10;                      &lt;span className=&quot;font-medium&quot;&gt;Your Savings&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;p className=&quot;text-sm text-yellow-700 dark:text-yellow-300&quot;&gt;&#10;                      Free delivery saves you ৳50!&#10;                      {cartStats.totalAmount &gt;= 500 &amp;&amp; (&#10;                        &lt;span className=&quot;font-medium&quot;&gt;&#10;                          {&quot; &quot;}&#10;                          Plus, you&amp;apos;ve unlocked free premium packaging!&#10;                        &lt;/span&gt;&#10;                      )}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Checkout Panel */}&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 p-6&quot;&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-calculator mr-3 text-green-600&quot;&gt;&lt;/i&gt;&#10;                    Order Total&#10;                  &lt;/h3&gt;&#10;&#10;                  &lt;div className=&quot;space-y-4 mb-6&quot;&gt;&#10;                    &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      &lt;span&gt;Subtotal ({cartStats.totalItems} items):&lt;/span&gt;&#10;                      &lt;span className=&quot;font-medium&quot;&gt;&#10;                        {formatPrice(cartStats.totalAmount)}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      &lt;span&gt;Delivery Fee:&lt;/span&gt;&#10;                      &lt;span className=&quot;text-green-600 font-medium&quot;&gt;Free&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      &lt;span&gt;Service Fee:&lt;/span&gt;&#10;                      &lt;span className=&quot;font-medium&quot;&gt;{formatPrice(25)}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-4&quot;&gt;&#10;                      &lt;div className=&quot;flex justify-between text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                        &lt;span&gt;Total:&lt;/span&gt;&#10;                        &lt;span className=&quot;text-green-600&quot;&gt;&#10;                          {formatPrice(cartStats.totalAmount + 25)}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Delivery Info */}&#10;                  &lt;div className=&quot;mb-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-700&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center text-blue-600 dark:text-blue-400 mb-2&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-truck mr-2&quot;&gt;&lt;/i&gt;&#10;                      &lt;span className=&quot;font-medium&quot;&gt;Delivery Information&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;p className=&quot;text-sm text-blue-700 dark:text-blue-300&quot;&gt;&#10;                      Expected delivery:{&quot; &quot;}&#10;                      &lt;strong&gt;{getDeliveryEstimate()}&lt;/strong&gt;&#10;                    &lt;/p&gt;&#10;                    &lt;p className=&quot;text-xs text-blue-600 dark:text-blue-400 mt-1&quot;&gt;&#10;                      Free delivery • Fresh guarantee • Contact-free option&#10;                      available&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;space-y-3&quot;&gt;&#10;                    &lt;Link&#10;                      href=&quot;/payment&quot;&#10;                      className=&quot;w-full flex items-center justify-center px-6 py-4 bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white rounded-xl font-bold text-lg transition-all duration-200 transform hover:scale-105 shadow-lg&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-credit-card mr-3&quot;&gt;&lt;/i&gt;&#10;                      Proceed to Secure Checkout&#10;                      &lt;i className=&quot;fas fa-arrow-right ml-3&quot;&gt;&lt;/i&gt;&#10;                    &lt;/Link&gt;&#10;&#10;                    &lt;Link&#10;                      href=&quot;/products&quot;&#10;                      className=&quot;w-full flex items-center justify-center px-6 py-3 border-2 border-green-300 dark:border-green-600 text-green-700 dark:text-green-300 hover:bg-green-50 dark:hover:bg-green-900/20 rounded-xl font-medium transition-all duration-200&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-leaf mr-2&quot;&gt;&lt;/i&gt;&#10;                      Continue Shopping for Fresh Products&#10;                    &lt;/Link&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Shopping Recommendations */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 p-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-lightbulb mr-3 text-yellow-500&quot;&gt;&lt;/i&gt;&#10;                  Complete Your Shopping Experience&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-6&quot;&gt;&#10;                  &lt;div className=&quot;text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-xl border border-green-200 dark:border-green-700&quot;&gt;&#10;                    &lt;div className=&quot;w-16 h-16 bg-green-100 dark:bg-green-800 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-leaf text-green-600 text-2xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                      100% Organic&#10;                    &lt;/h4&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      All products are certified organic and pesticide-free&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-700&quot;&gt;&#10;                    &lt;div className=&quot;w-16 h-16 bg-blue-100 dark:bg-blue-800 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-handshake text-blue-600 text-2xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                      Direct from Farmers&#10;                    &lt;/h4&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Supporting local communities and fair trade&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;text-center p-4 bg-purple-50 dark:bg-purple-900/20 rounded-xl border border-purple-200 dark:border-purple-700&quot;&gt;&#10;                    &lt;div className=&quot;w-16 h-16 bg-purple-100 dark:bg-purple-800 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-clock text-purple-600 text-2xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                      Fresh Daily&#10;                    &lt;/h4&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Harvested fresh and delivered within 24 hours&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Clear Cart Confirmation Modal */}&#10;      {showClearConfirm &amp;&amp; (&#10;        &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl w-full max-w-md overflow-hidden shadow-2xl&quot;&gt;&#10;            &lt;div className=&quot;bg-gradient-to-r from-red-600 to-pink-600 text-white p-6&quot;&gt;&#10;              &lt;h3 className=&quot;text-xl font-bold mb-2&quot;&gt;Clear Cart&lt;/h3&gt;&#10;              &lt;p className=&quot;text-red-100&quot;&gt;&#10;                Are you sure you want to remove all items?&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;p-6&quot;&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-6&quot;&gt;&#10;                This action cannot be undone. All {cartStats.totalItems} items&#10;                will be removed from your cart.&#10;              &lt;/p&gt;&#10;              &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                &lt;button&#10;                  onClick={() =&gt; setShowClearConfirm(false)}&#10;                  className=&quot;flex-1 px-4 py-3 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-xl font-medium transition-all duration-200&quot;&#10;                &gt;&#10;                  Cancel&#10;                &lt;/button&gt;&#10;                &lt;button&#10;                  onClick={handleClearCart}&#10;                  className=&quot;flex-1 px-4 py-3 bg-red-600 hover:bg-red-700 text-white rounded-xl font-medium transition-all duration-200&quot;&#10;                &gt;&#10;                  Clear All&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/farmer-dashboard/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/farmer-dashboard/page.js" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div&gt;&#10;                      &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                        City&#10;                      &lt;/label&gt;&#10;                      &lt;input&#10;                        type=&quot;text&quot;&#10;                        value={farmerData.contactInfo.address.city}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;contactInfo&quot;, &quot;address&quot;, &quot;city&quot;, e.target.value)&#10;                        }&#10;                        className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div&gt;&#10;                      &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                        State/Province&#10;                      &lt;/label&gt;&#10;                      &lt;input&#10;                        type=&quot;text&quot;&#10;                        value={farmerData.contactInfo.address.state}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;contactInfo&quot;, &quot;address&quot;, &quot;state&quot;, e.target.value)&#10;                        }&#10;                        className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div&gt;&#10;                      &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                        ZIP/Postal Code&#10;                      &lt;/label&gt;&#10;                      &lt;input&#10;                        type=&quot;text&quot;&#10;                        value={farmerData.contactInfo.address.zipCode}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;contactInfo&quot;, &quot;address&quot;, &quot;zipCode&quot;, e.target.value)&#10;                        }&#10;                        className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div&gt;&#10;                      &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                        Country&#10;                      &lt;/label&gt;&#10;                      &lt;select&#10;                        value={farmerData.contactInfo.address.country}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;contactInfo&quot;, &quot;address&quot;, &quot;country&quot;, e.target.value)&#10;                        }&#10;                        className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      &gt;&#10;                        &lt;option value=&quot;&quot;&gt;Select Country&lt;/option&gt;&#10;                        &lt;option value=&quot;US&quot;&gt;United States&lt;/option&gt;&#10;                        &lt;option value=&quot;CA&quot;&gt;Canada&lt;/option&gt;&#10;                        &lt;option value=&quot;UK&quot;&gt;United Kingdom&lt;/option&gt;&#10;                        &lt;option value=&quot;AU&quot;&gt;Australia&lt;/option&gt;&#10;                      &lt;/select&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;button&#10;                  onClick={() =&gt; handleSaveChanges(&quot;contactInfo&quot;)}&#10;                  disabled={loading}&#10;                  className=&quot;bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed&quot;&#10;                &gt;&#10;                  {loading ? &quot;Saving...&quot; : &quot;Save Contact Information&quot;}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {/* Settings Tab */}&#10;            {activeTab === &quot;settings&quot; &amp;&amp; (&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Settings&#10;                &lt;/h3&gt;&#10;&#10;                {/* Notification Settings */}&#10;                &lt;div&gt;&#10;                  &lt;h4 className=&quot;text-md font-medium text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                    Notification Preferences&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-3&quot;&gt;&#10;                    &lt;label className=&quot;flex items-center&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        checked={farmerData.settings.notifications.orderAlerts}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;settings&quot;, &quot;notifications&quot;, &quot;orderAlerts&quot;, e.target.checked)&#10;                        }&#10;                        className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                        New order alerts&#10;                      &lt;/span&gt;&#10;                    &lt;/label&gt;&#10;&#10;                    &lt;label className=&quot;flex items-center&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        checked={farmerData.settings.notifications.lowStockAlerts}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;settings&quot;, &quot;notifications&quot;, &quot;lowStockAlerts&quot;, e.target.checked)&#10;                        }&#10;                        className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                        Low stock alerts&#10;                      &lt;/span&gt;&#10;                    &lt;/label&gt;&#10;&#10;                    &lt;label className=&quot;flex items-center&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        checked={farmerData.settings.notifications.customerMessages}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;settings&quot;, &quot;notifications&quot;, &quot;customerMessages&quot;, e.target.checked)&#10;                        }&#10;                        className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                        Customer messages&#10;                      &lt;/span&gt;&#10;                    &lt;/label&gt;&#10;&#10;                    &lt;label className=&quot;flex items-center&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        checked={farmerData.settings.notifications.marketingUpdates}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;settings&quot;, &quot;notifications&quot;, &quot;marketingUpdates&quot;, e.target.checked)&#10;                        }&#10;                        className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                        Marketing updates&#10;                      &lt;/span&gt;&#10;                    &lt;/label&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Business Settings */}&#10;                &lt;div&gt;&#10;                  &lt;h4 className=&quot;text-md font-medium text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                    Business Settings&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-3&quot;&gt;&#10;                    &lt;label className=&quot;flex items-center&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        checked={farmerData.settings.autoAcceptOrders}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;settings&quot;, &quot;&quot;, &quot;autoAcceptOrders&quot;, e.target.checked)&#10;                        }&#10;                        className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                        Auto-accept orders&#10;                      &lt;/span&gt;&#10;                    &lt;/label&gt;&#10;&#10;                    &lt;label className=&quot;flex items-center&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        checked={farmerData.settings.showFarmLocation}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;settings&quot;, &quot;&quot;, &quot;showFarmLocation&quot;, e.target.checked)&#10;                        }&#10;                        className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                        Show farm location to customers&#10;                      &lt;/span&gt;&#10;                    &lt;/label&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;button&#10;                  onClick={() =&gt; handleSaveChanges(&quot;settings&quot;)}&#10;                  disabled={loading}&#10;                  className=&quot;bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed&quot;&#10;                &gt;&#10;                  {loading ? &quot;Saving...&quot; : &quot;Save Settings&quot;}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/farmers/[id]/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/farmers/[id]/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { useRouter, useParams } from &quot;next/navigation&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;&#10;export default function FarmerPage() {&#10;  const router = useRouter();&#10;  const params = useParams();&#10;  const farmerId = params.id;&#10;&#10;  const [farmer, setFarmer] = useState(null);&#10;  const [products, setProducts] = useState([]);&#10;  const [reviews, setReviews] = useState([]);&#10;  const [stats, setStats] = useState({});&#10;  const [loading, setLoading] = useState(true);&#10;  const [error, setError] = useState(null);&#10;  const [activeTab, setActiveTab] = useState(&quot;story&quot;);&#10;&#10;  // Helper function to calculate years of experience (used only once)&#10;  const calculateYearsOfExperience = (joinedDate, createdAt) =&gt; {&#10;    const joinDate = new Date(joinedDate || createdAt);&#10;    const currentDate = new Date();&#10;    return Math.max(1, currentDate.getFullYear() - joinDate.getFullYear());&#10;  };&#10;&#10;  // Configuration objects to reduce repetition&#10;  const specializationConfig = {&#10;    Grains: {&#10;      icon: &quot;fas fa-seedling&quot;,&#10;      color: &quot;bg-amber-500&quot;,&#10;      description: &quot;Premium grain production&quot;,&#10;    },&#10;    Fruits: {&#10;      icon: &quot;fas fa-apple-alt&quot;,&#10;      color: &quot;bg-red-500&quot;,&#10;      description: &quot;Fresh seasonal fruits&quot;,&#10;    },&#10;    Vegetables: {&#10;      icon: &quot;fas fa-carrot&quot;,&#10;      color: &quot;bg-orange-500&quot;,&#10;      description: &quot;Organic vegetables&quot;,&#10;    },&#10;    Herbs: {&#10;      icon: &quot;fas fa-leaf&quot;,&#10;      color: &quot;bg-green-500&quot;,&#10;      description: &quot;Natural herbs &amp; spices&quot;,&#10;    },&#10;    Honey: {&#10;      icon: &quot;fas fa-bug&quot;,&#10;      color: &quot;bg-yellow-500&quot;,&#10;      description: &quot;Pure natural honey&quot;,&#10;    },&#10;    Dairy: {&#10;      icon: &quot;fas fa-glass-whiskey&quot;,&#10;      color: &quot;bg-blue-500&quot;,&#10;      description: &quot;Fresh dairy products&quot;,&#10;    },&#10;  };&#10;&#10;  const methodConfig = {&#10;    Organic: {&#10;      icon: &quot;fas fa-leaf&quot;,&#10;      color: &quot;text-green-600 dark:text-green-400&quot;,&#10;      description: &quot;Chemical-free farming practices&quot;,&#10;    },&#10;    Traditional: {&#10;      icon: &quot;fas fa-seedling&quot;,&#10;      color: &quot;text-brown-600 dark:text-yellow-400&quot;,&#10;      description: &quot;Time-tested farming wisdom&quot;,&#10;    },&#10;    Sustainable: {&#10;      icon: &quot;fas fa-recycle&quot;,&#10;      color: &quot;text-blue-600 dark:text-blue-400&quot;,&#10;      description: &quot;Environmentally conscious methods&quot;,&#10;    },&#10;    &quot;Natural Ripening&quot;: {&#10;      icon: &quot;fas fa-sun&quot;,&#10;      color: &quot;text-orange-600 dark:text-orange-400&quot;,&#10;      description: &quot;Natural maturation process&quot;,&#10;    },&#10;    &quot;Fruit Cultivation&quot;: {&#10;      icon: &quot;fas fa-apple-alt&quot;,&#10;      color: &quot;text-red-600 dark:text-red-400&quot;,&#10;      description: &quot;Specialized fruit growing&quot;,&#10;    },&#10;    &quot;Sun-dried&quot;: {&#10;      icon: &quot;fas fa-sun&quot;,&#10;      color: &quot;text-yellow-600 dark:text-yellow-400&quot;,&#10;      description: &quot;Solar-powered processing&quot;,&#10;    },&#10;  };&#10;&#10;  const ORDER_STATUS = {&#10;    PENDING: &quot;pending&quot;,&#10;    CONFIRMED: &quot;confirmed&quot;,&#10;    DELIVERED: &quot;delivered&quot;,&#10;    CANCELLED: &quot;cancelled&quot;,&#10;    RETURNED: &quot;returned&quot;,&#10;  };&#10;&#10;  // Helper function to render specialization cards&#10;  const renderSpecializationCard = (specialization, index) =&gt; {&#10;    const config = specializationConfig[specialization] || {&#10;      icon: &quot;fas fa-tractor&quot;,&#10;      color: &quot;bg-purple-500&quot;,&#10;      description: &quot;Farm specialization&quot;,&#10;    };&#10;&#10;    return (&#10;      &lt;div key={index} className=&quot;text-center&quot;&gt;&#10;        &lt;div&#10;          className={`w-12 h-12 ${config.color} rounded-full flex items-center justify-center mx-auto mb-3`}&#10;        &gt;&#10;          &lt;i className={`${config.icon} text-white`}&gt;&lt;/i&gt;&#10;        &lt;/div&gt;&#10;        &lt;h3 className=&quot;text-white font-semibold mb-2&quot;&gt;{specialization}&lt;/h3&gt;&#10;        &lt;p className=&quot;text-white/70 text-sm&quot;&gt;{config.description}&lt;/p&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  // Helper function to render farming method cards&#10;  const renderMethodCard = (method, index) =&gt; {&#10;    const config = methodConfig[method] || {&#10;      icon: &quot;fas fa-tractor&quot;,&#10;      color: &quot;text-gray-600 dark:text-gray-400&quot;,&#10;      description: &quot;Specialized farming technique&quot;,&#10;    };&#10;&#10;    return (&#10;      &lt;div&#10;        key={index}&#10;        className=&quot;bg-gray-50 dark:bg-gray-700 p-6 rounded-xl text-center&quot;&#10;      &gt;&#10;        &lt;i className={`${config.icon} text-4xl ${config.color} mb-4`}&gt;&lt;/i&gt;&#10;        &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;          {method}&#10;        &lt;/h4&gt;&#10;        &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;          {config.description}&#10;        &lt;/p&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  // Helper function to render generic fallback core values&#10;  const renderFallbackCoreValues = () =&gt; (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;text-center&quot;&gt;&#10;        &lt;div className=&quot;w-12 h-12 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#10;          &lt;i className=&quot;fas fa-leaf text-white&quot;&gt;&lt;/i&gt;&#10;        &lt;/div&gt;&#10;        &lt;h3 className=&quot;text-white font-semibold mb-2&quot;&gt;Sustainable&lt;/h3&gt;&#10;        &lt;p className=&quot;text-white/70 text-sm&quot;&gt;Eco-friendly farming practices&lt;/p&gt;&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;text-center&quot;&gt;&#10;        &lt;div className=&quot;w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#10;          &lt;i className=&quot;fas fa-shield-alt text-white&quot;&gt;&lt;/i&gt;&#10;        &lt;/div&gt;&#10;        &lt;h3 className=&quot;text-white font-semibold mb-2&quot;&gt;Quality&lt;/h3&gt;&#10;        &lt;p className=&quot;text-white/70 text-sm&quot;&gt;Premium fresh produce&lt;/p&gt;&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;text-center&quot;&gt;&#10;        &lt;div className=&quot;w-12 h-12 bg-purple-500 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#10;          &lt;i className=&quot;fas fa-users text-white&quot;&gt;&lt;/i&gt;&#10;        &lt;/div&gt;&#10;        &lt;h3 className=&quot;text-white font-semibold mb-2&quot;&gt;Community&lt;/h3&gt;&#10;        &lt;p className=&quot;text-white/70 text-sm&quot;&gt;Supporting local families&lt;/p&gt;&#10;      &lt;/div&gt;&#10;    &lt;/&gt;&#10;  );&#10;&#10;  useEffect(() =&gt; {&#10;    fetchFarmerData();&#10;  }, [farmerId]);&#10;&#10;  const fetchFarmerData = async () =&gt; {&#10;    try {&#10;      setLoading(true);&#10;      setError(null);&#10;&#10;      // First fetch farmer data with cache-busting timestamp&#10;      const timestamp = new Date().getTime();&#10;      const farmerResponse = await fetch(&#10;        `/api/farmers/${farmerId}?t=${timestamp}`,&#10;        {&#10;          headers: { &quot;Cache-Control&quot;: &quot;no-cache&quot; },&#10;        },&#10;      );&#10;&#10;      if (!farmerResponse.ok) {&#10;        throw new Error(&quot;Farmer not found&quot;);&#10;      }&#10;&#10;      const farmerData = await farmerResponse.json();&#10;&#10;      // Fetch all products to match with farmer&#10;      const productsResponse = await fetch(&#10;        `/api/products?limit=1000&amp;t=${timestamp}`,&#10;        {&#10;          headers: { &quot;Cache-Control&quot;: &quot;no-cache&quot; },&#10;        },&#10;      );&#10;&#10;      const productsData = await productsResponse.json();&#10;      const allProducts = productsData.products || [];&#10;&#10;      // Match products to farmer using multiple strategies&#10;      const farmerProducts = allProducts.filter((product) =&gt; {&#10;        const productFarmerId =&#10;          product.farmer?.id || product.farmer?._id || product.farmerId;&#10;        const productFarmerName = product.farmer?.name || product.farmerName;&#10;&#10;        // Try matching by ID first (handles both old format like 'farmer_001' and new MongoDB ObjectIds)&#10;        const matchesById = productFarmerId === farmerId;&#10;&#10;        // For new farmers, also try matching by MongoDB ObjectId string comparison&#10;        const matchesByObjectId =&#10;          product.farmer?._id === farmerId || product.farmerId === farmerId;&#10;&#10;        // For old farmers, also try matching by name&#10;        const farmerName = farmerData.farmer?.name;&#10;        const matchesByName = farmerName &amp;&amp; productFarmerName === farmerName;&#10;&#10;        // Also try matching by email for additional verification&#10;        const farmerEmail = farmerData.farmer?.email;&#10;        const productFarmerEmail = product.farmer?.email || product.farmerEmail;&#10;        const matchesByEmail =&#10;          farmerEmail &amp;&amp; productFarmerEmail === farmerEmail;&#10;&#10;        const isMatch =&#10;          matchesById || matchesByObjectId || matchesByName || matchesByEmail;&#10;&#10;        return isMatch;&#10;      });&#10;&#10;      // Now fetch orders with farmer information&#10;      const ordersResponse = await fetch(&#10;        `/api/orders?farmerId=${farmerId}&amp;farmerEmail=${farmerData.farmer?.email || &quot;&quot;}`,&#10;        {&#10;          headers: { &quot;Cache-Control&quot;: &quot;no-cache&quot; },&#10;        },&#10;      );&#10;&#10;      const ordersData = await ordersResponse.json();&#10;&#10;      setFarmer(farmerData.farmer);&#10;      setProducts(farmerProducts); // Use matched products instead of farmer.products&#10;&#10;      // Calculate stats using matched products&#10;      const totalProducts = farmerProducts.length;&#10;      const activeProducts = farmerProducts.filter((p) =&gt; p.stock &gt; 0).length;&#10;      const totalStock = farmerProducts.reduce(&#10;        (sum, p) =&gt; sum + (p.stock || 0),&#10;        0,&#10;      );&#10;      const averagePrice =&#10;        farmerProducts.length &gt; 0&#10;          ? (&#10;              farmerProducts.reduce((sum, p) =&gt; sum + (p.price || 0), 0) /&#10;              farmerProducts.length&#10;            ).toFixed(2)&#10;          : 0;&#10;&#10;      // Enhanced average rating calculation&#10;&#10;      let averageRating = 0;&#10;      if (farmerProducts.length &gt; 0) {&#10;        const ratingsData = farmerProducts.map((p) =&gt; ({&#10;          name: p.name,&#10;          rating: parseFloat(p.averageRating) || 0,&#10;          reviewsCount: p.reviews?.length || 0,&#10;        }));&#10;&#10;        // Calculate simple average of product ratings (only products with ratings)&#10;        const productsWithRatings = farmerProducts.filter(&#10;          (p) =&gt; parseFloat(p.averageRating) &gt; 0,&#10;        );&#10;        if (productsWithRatings.length &gt; 0) {&#10;          const totalRating = productsWithRatings.reduce((sum, p) =&gt; {&#10;            return sum + parseFloat(p.averageRating);&#10;          }, 0);&#10;&#10;          averageRating = (totalRating / productsWithRatings.length).toFixed(1);&#10;        }&#10;      } else {&#10;      }&#10;&#10;      // Get categories from products&#10;      const categories = [&#10;        ...new Set(farmerProducts.map((p) =&gt; p.category).filter(Boolean)),&#10;      ];&#10;&#10;      // Get recent reviews from products (existing logic)&#10;      const productReviews = farmerProducts.flatMap((p) =&gt;&#10;        (p.reviews || []).map((review) =&gt; ({&#10;          ...review,&#10;          productName: p.name,&#10;          productId: p._id,&#10;          source: &quot;product&quot;,&#10;          // Ensure we have a valid date - use current date as fallback if createdAt is missing&#10;          createdAt:&#10;            review.createdAt || review.date || new Date().toISOString(),&#10;        })),&#10;      );&#10;&#10;      // Fetch reviews from the separate reviews collection&#10;      let separateReviews = [];&#10;      try {&#10;        const reviewsResponse = await fetch(&#10;          `/api/reviews?farmerId=${farmerId}`,&#10;          {&#10;            headers: { &quot;Cache-Control&quot;: &quot;no-cache&quot; },&#10;          },&#10;        );&#10;&#10;        if (reviewsResponse.ok) {&#10;          const reviewsData = await reviewsResponse.json();&#10;          separateReviews = (reviewsData.reviews || []).map((review) =&gt; {&#10;            // Find the product info from farmer's products&#10;            const relatedProduct = farmerProducts.find(&#10;              (product) =&gt;&#10;                product._id === review.productId ||&#10;                product._id === review.product?._id,&#10;            );&#10;&#10;            return {&#10;              ...review,&#10;              source: &quot;reviews_collection&quot;,&#10;              // Map product information from the farmer's products&#10;              productName:&#10;                review.productName || relatedProduct?.name || &quot;Unknown Product&quot;,&#10;              productId:&#10;                review.productId || review.product?._id || relatedProduct?._id,&#10;              // Ensure we have consistent field names&#10;              createdAt:&#10;                review.createdAt || review.date || new Date().toISOString(),&#10;            };&#10;          });&#10;          console.log(&#10;            `Found ${separateReviews.length} reviews from reviews collection`,&#10;          );&#10;        }&#10;      } catch (error) {&#10;        console.warn(&quot;Failed to fetch reviews from reviews collection:&quot;, error);&#10;      }&#10;&#10;      // Combine and deduplicate reviews&#10;      const allReviews = [...productReviews, ...separateReviews]&#10;        .sort((a, b) =&gt; new Date(b.createdAt) - new Date(a.createdAt))&#10;        .slice(0, 10); // Get top 10 most recent reviews&#10;&#10;      // Calculate revenue from orders - ONLY DELIVERED ORDERS (like analytics tab)&#10;      const farmerOrders = (ordersData.orders || []).filter((order) =&gt; {&#10;        return (&#10;          order.items &amp;&amp;&#10;          order.items.some(&#10;            (item) =&gt;&#10;              item.farmerId === farmerId ||&#10;              item.farmer?.id === farmerId ||&#10;              item.farmer?._id === farmerId ||&#10;              item.farmerEmail === farmerData.farmer?.email,&#10;          )&#10;        );&#10;      });&#10;&#10;      // CRITICAL: Only count DELIVERED orders for revenue calculation (matching analytics tab)&#10;      const deliveredOrders = farmerOrders.filter(&#10;        (order) =&gt; order.status === ORDER_STATUS.DELIVERED,&#10;      );&#10;&#10;      // Calculate total revenue using ONLY delivered orders&#10;      const actualTotalRevenue = deliveredOrders.reduce(&#10;        (sum, order) =&gt; sum + (order.farmerSubtotal || order.total || 0),&#10;        0,&#10;      );&#10;&#10;      // Calculate monthly revenue using ONLY delivered orders from this month&#10;      const thisMonthDeliveredOrders = deliveredOrders.filter((order) =&gt; {&#10;        const orderDate = new Date(order.createdAt);&#10;        const currentDate = new Date();&#10;        return (&#10;          orderDate.getMonth() === currentDate.getMonth() &amp;&amp;&#10;          orderDate.getFullYear() === currentDate.getFullYear()&#10;        );&#10;      });&#10;&#10;      const monthlyRevenue = thisMonthDeliveredOrders.reduce(&#10;        (sum, order) =&gt; sum + (order.farmerSubtotal || order.total || 0),&#10;        0,&#10;      );&#10;&#10;      // Calculate community reach based on delivered orders only&#10;      const uniqueCustomers = new Set();&#10;      deliveredOrders.forEach((order) =&gt; {&#10;        if (order.userId) {&#10;          uniqueCustomers.add(order.userId);&#10;        }&#10;        if (order.email) {&#10;          uniqueCustomers.add(order.email);&#10;        }&#10;      });&#10;&#10;      const actualFamiliesServed = uniqueCustomers.size;&#10;&#10;      setReviews(allReviews);&#10;      setStats({&#10;        totalProducts,&#10;        activeProducts,&#10;        totalStock,&#10;        averagePrice,&#10;        averageRating,&#10;        categories,&#10;        totalReviews: allReviews.length,&#10;        familiesServed: actualFamiliesServed,&#10;        farmSize: farmerData.farmer.farmSize || 0,&#10;        farmSizeUnit: farmerData.farmer.farmSizeUnit || &quot;acres&quot;,&#10;        yearsOfExperience:&#10;          farmerData.farmer.yearsOfExperience ||&#10;          calculateYearsOfExperience(&#10;            farmerData.farmer.joinedDate,&#10;            farmerData.farmer.createdAt,&#10;          ),&#10;        certificationStatus: farmerData.farmer.isCertified&#10;          ? &quot;Certified&quot;&#10;          : &quot;In Progress&quot;,&#10;        farmingMethods: farmerData.farmer.farmingMethods || [&#10;          &quot;Organic&quot;,&#10;          &quot;Sustainable&quot;,&#10;        ],&#10;        monthlyRevenue: monthlyRevenue.toFixed(2),&#10;        totalRevenue: actualTotalRevenue.toFixed(2),&#10;        inventoryValue: (parseFloat(averagePrice) * totalStock).toFixed(2),&#10;      });&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching farmer data:&quot;, error);&#10;      setError(error.message);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;        &lt;div className=&quot;flex items-center justify-center min-h-screen&quot;&gt;&#10;          &lt;div className=&quot;text-center&quot;&gt;&#10;            &lt;div className=&quot;relative&quot;&gt;&#10;              &lt;div className=&quot;animate-spin rounded-full h-20 w-20 border-4 border-green-200 dark:border-gray-600 border-t-green-600 dark:border-t-green-400 mx-auto mb-6&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;absolute inset-0 flex items-center justify-center&quot;&gt;&#10;                &lt;i className=&quot;fas fa-user-tie text-green-600 dark:text-green-400 text-2xl&quot;&gt;&lt;/i&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;              Loading Farmer Profile&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;              Discovering their story...&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  if (error || !farmer) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-red-50 via-orange-50 to-yellow-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;        &lt;div className=&quot;flex items-center justify-center min-h-screen&quot;&gt;&#10;          &lt;div className=&quot;text-center max-w-md mx-auto p-6&quot;&gt;&#10;            &lt;div className=&quot;text-red-500 text-6xl mb-6&quot;&gt;&#10;              &lt;i className=&quot;fas fa-exclamation-triangle&quot;&gt;&lt;/i&gt;&#10;            &lt;/div&gt;&#10;            &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;              Farmer Not Found&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-8&quot;&gt;&#10;              {error ||&#10;                &quot;The farmer you're looking for doesn't exist or has been removed.&quot;}&#10;            &lt;/p&gt;&#10;            &lt;div className=&quot;flex flex-col sm:flex-row gap-4 justify-center&quot;&gt;&#10;              &lt;button&#10;                onClick={() =&gt; router.back()}&#10;                className=&quot;bg-gray-600 hover:bg-gray-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#10;              &gt;&#10;                &lt;i className=&quot;fas fa-arrow-left mr-2&quot;&gt;&lt;/i&gt;&#10;                Go Back&#10;              &lt;/button&gt;&#10;              &lt;Link&#10;                href=&quot;/farmers&quot;&#10;                className=&quot;bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#10;              &gt;&#10;                &lt;i className=&quot;fas fa-users mr-2&quot;&gt;&lt;/i&gt;&#10;                Browse Farmers&#10;              &lt;/Link&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-green-50 via-emerald-50 to-teal-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;        {/* Hero Section with Dynamic Farmer Story */}&#10;        &lt;div className=&quot;relative overflow-hidden&quot;&gt;&#10;          &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-green-600 via-emerald-600 to-teal-600&quot;&gt;&lt;/div&gt;&#10;          &lt;div className=&quot;absolute inset-0 bg-black/20&quot;&gt;&lt;/div&gt;&#10;&#10;          &lt;div className=&quot;relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20&quot;&gt;&#10;            {/* Breadcrumb */}&#10;            &lt;nav className=&quot;flex mb-8&quot; aria-label=&quot;Breadcrumb&quot;&gt;&#10;              &lt;ol className=&quot;flex items-center space-x-2 text-sm&quot;&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link&#10;                    href=&quot;/&quot;&#10;                    className=&quot;text-white/80 hover:text-white transition-colors flex items-center&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-home mr-1&quot;&gt;&lt;/i&gt;&#10;                    Home&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;i className=&quot;fas fa-chevron-right text-white/60 text-xs&quot;&gt;&lt;/i&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;Link&#10;                    href=&quot;/farmers&quot;&#10;                    className=&quot;text-white/80 hover:text-white transition-colors&quot;&#10;                  &gt;&#10;                    Farmers&#10;                  &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;                &lt;li&gt;&#10;                  &lt;i className=&quot;fas fa-chevron-right text-white/60 text-xs&quot;&gt;&lt;/i&gt;&#10;                &lt;/li&gt;&#10;                &lt;li className=&quot;text-white font-medium&quot;&gt;{farmer.name}&lt;/li&gt;&#10;              &lt;/ol&gt;&#10;            &lt;/nav&gt;&#10;&#10;            {/* Dynamic Farmer Profile Header */}&#10;            &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-3 gap-12 items-start&quot;&gt;&#10;              {/* Profile Image and Basic Info */}&#10;              &lt;div className=&quot;text-center lg:text-left&quot;&gt;&#10;                &lt;div className=&quot;relative inline-block mb-6&quot;&gt;&#10;                  &lt;div className=&quot;w-48 h-48 mx-auto lg:mx-0 rounded-full bg-gradient-to-br from-white/20 to-white/10 backdrop-blur-sm border-4 border-white/30 overflow-hidden shadow-2xl&quot;&gt;&#10;                    {farmer.profilePicture ? (&#10;                      &lt;img&#10;                        src={farmer.profilePicture}&#10;                        alt={farmer.name}&#10;                        className=&quot;w-full h-full object-cover&quot;&#10;                      /&gt;&#10;                    ) : (&#10;                      &lt;div className=&quot;w-full h-full flex items-center justify-center&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-user-tie text-6xl text-white/80&quot;&gt;&lt;/i&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                  {farmer.verified &amp;&amp; (&#10;                    &lt;div className=&quot;absolute -top-2 -right-2 bg-green-500 text-white rounded-full p-3 shadow-lg&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-check text-lg&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;&#10;                &lt;h1 className=&quot;text-4xl lg:text-5xl font-bold text-white mb-2&quot;&gt;&#10;                  {farmer.name}&#10;                &lt;/h1&gt;&#10;                &lt;p className=&quot;text-xl text-white/90 mb-4&quot;&gt;&#10;                  {farmer.farmInfo?.farmName ||&#10;                    farmer.farmName ||&#10;                    `${farmer.name}'s Farm`}&#10;                &lt;/p&gt;&#10;                &lt;div className=&quot;flex items-center justify-center lg:justify-start text-white/80 mb-6&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-map-marker-alt mr-2 text-yellow-400&quot;&gt;&lt;/i&gt;&#10;                  &lt;span className=&quot;text-lg&quot;&gt;&#10;                    {farmer.address?.street &amp;&amp; farmer.address?.city&#10;                      ? `${farmer.address.street}, ${farmer.address.city}${farmer.address.state ? `, ${farmer.address.state}` : &quot;&quot;}`&#10;                      : farmer.address?.city &amp;&amp; farmer.address?.state&#10;                        ? `${farmer.address.city}, ${farmer.address.state}${farmer.address.country ? `, ${farmer.address.country}` : &quot;&quot;}`&#10;                        : farmer.location || &quot;Location not specified&quot;}&#10;                  &lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Dynamic Quick Stats - Use stats.yearsOfExperience instead of recalculating */}&#10;                &lt;div className=&quot;grid grid-cols-2 gap-4 mb-8&quot;&gt;&#10;                  &lt;div className=&quot;bg-white/10 backdrop-blur-sm rounded-lg p-4 border border-white/20&quot;&gt;&#10;                    &lt;div className=&quot;text-2xl font-bold text-white&quot;&gt;&#10;                      {stats.yearsOfExperience}+&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-white/80 text-sm&quot;&gt;&#10;                      Years Experience&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;bg-white/10 backdrop-blur-sm rounded-lg p-4 border border-white/20&quot;&gt;&#10;                    &lt;div className=&quot;text-2xl font-bold text-white&quot;&gt;&#10;                      {stats.totalProducts}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-white/80 text-sm&quot;&gt;Products&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;bg-white/10 backdrop-blur-sm rounded-lg p-4 border border-white/20&quot;&gt;&#10;                    &lt;div className=&quot;text-2xl font-bold text-white&quot;&gt;&#10;                      {stats.averageRating || &quot;N/A&quot;}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-white/80 text-sm&quot;&gt;Avg Rating&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;bg-white/10 backdrop-blur-sm rounded-lg p-4 border border-white/20&quot;&gt;&#10;                    &lt;div className=&quot;text-2xl font-bold text-white&quot;&gt;&#10;                      {stats.categories?.length || 0}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-white/80 text-sm&quot;&gt;Categories&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Dynamic Farmer's Mission &amp; Values */}&#10;              &lt;div className=&quot;lg:col-span-2&quot;&gt;&#10;                &lt;div className=&quot;bg-white/10 backdrop-blur-sm rounded-2xl p-8 border border-white/20&quot;&gt;&#10;                  &lt;h2 className=&quot;text-3xl font-bold text-white mb-6 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-heart mr-3 text-red-400&quot;&gt;&lt;/i&gt;&#10;                    Our Mission&#10;                  &lt;/h2&gt;&#10;                  &lt;p className=&quot;text-white/90 text-lg leading-relaxed mb-6&quot;&gt;&#10;                    {farmer.bio ||&#10;                      `${farmer.name} is dedicated to providing the freshest, highest-quality produce through sustainable farming practices. Our farm has been serving the community with passion and commitment to environmental stewardship.`}&#10;                  &lt;/p&gt;&#10;                  {/* Dynamic Specializations - Only show once here */}&#10;                  {farmer.specializations &amp;&amp;&#10;                    farmer.specializations.length &gt; 0 &amp;&amp; (&#10;                      &lt;div className=&quot;mb-6&quot;&gt;&#10;                        &lt;h3 className=&quot;text-white font-semibold mb-3&quot;&gt;&#10;                          Our Specializations:&#10;                        &lt;/h3&gt;&#10;                        &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#10;                          {farmer.specializations.map((spec, index) =&gt; (&#10;                            &lt;span&#10;                              key={index}&#10;                              className=&quot;bg-white/20 backdrop-blur-sm text-white px-3 py-1 rounded-full text-sm font-medium border border-white/30&quot;&#10;                            &gt;&#10;                              {spec}&#10;                            &lt;/span&gt;&#10;                          ))}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  {/* Dynamic Core Values based on farmer's specializations and methods */}&#10;                  &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-4&quot;&gt;&#10;                    {farmer.specializations &amp;&amp; farmer.specializations.length &gt; 0&#10;                      ? farmer.specializations&#10;                          .slice(0, 3)&#10;                          .map((specialization, index) =&gt;&#10;                            renderSpecializationCard(specialization, index),&#10;                          )&#10;                      : renderFallbackCoreValues()}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Dynamic Main Content Tabs */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16&quot;&gt;&#10;          {/* Tab Navigation */}&#10;          &lt;div className=&quot;flex flex-wrap justify-center gap-2 mb-12&quot;&gt;&#10;            {[&#10;              { id: &quot;story&quot;, label: &quot;Our Story&quot;, icon: &quot;fas fa-book-open&quot; },&#10;              {&#10;                id: &quot;products&quot;,&#10;                label: &quot;Product Overview&quot;,&#10;                icon: &quot;fas fa-seedling&quot;,&#10;              },&#10;              { id: &quot;reviews&quot;, label: &quot;Customer Reviews&quot;, icon: &quot;fas fa-star&quot; },&#10;              {&#10;                id: &quot;stats&quot;,&#10;                label: &quot;Farm Statistics&quot;,&#10;                icon: &quot;fas fa-chart-bar&quot;,&#10;              },&#10;            ].map((tab) =&gt; (&#10;              &lt;button&#10;                key={tab.id}&#10;                onClick={() =&gt; setActiveTab(tab.id)}&#10;                className={`px-6 py-3 rounded-full font-medium transition-all duration-300 flex items-center ${&#10;                  activeTab === tab.id&#10;                    ? &quot;bg-green-600 text-white shadow-lg&quot;&#10;                    : &quot;bg-white dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-green-50 dark:hover:bg-gray-700&quot;&#10;                }`}&#10;              &gt;&#10;                &lt;i className={`${tab.icon} mr-2`}&gt;&lt;/i&gt;&#10;                {tab.label}&#10;              &lt;/button&gt;&#10;            ))}&#10;          &lt;/div&gt;&#10;&#10;          {/* Dynamic Tab Content */}&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-8&quot;&gt;&#10;            {activeTab === &quot;story&quot; &amp;&amp; (&#10;              &lt;div className=&quot;space-y-8&quot;&gt;&#10;                &lt;div className=&quot;text-center mb-8&quot;&gt;&#10;                  &lt;h2 className=&quot;text-4xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                    Our Farming Journey&#10;                  &lt;/h2&gt;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg max-w-3xl mx-auto&quot;&gt;&#10;                    Every farm has a story. Here&amp;apos;s ours - a tale of&#10;                    passion, dedication, and love for the land.&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12 items-center&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h3 className=&quot;text-2xl font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                      {farmer.farmInfo?.farmName&#10;                        ? `About ${farmer.farmInfo.farmName}`&#10;                        : &quot;The Beginning&quot;}&#10;                    &lt;/h3&gt;&#10;&#10;                    {/* Dynamic Farm Description from Profile Settings */}&#10;                    &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed mb-6&quot;&gt;&#10;                      {farmer.farmInfo?.farmDescription ||&#10;                        farmer.bio ||&#10;                        `${farmer.name} started their farming journey in ${new Date(&#10;                          farmer.joinedDate || farmer.createdAt,&#10;                        ).getFullYear()} with a simple dream: to grow the best produce possible while caring for the environment. What began as a small family operation has grown into a trusted source of fresh, healthy food for our community.`}&#10;                    &lt;/p&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      {/* Farm Established */}&#10;                      &lt;div className=&quot;flex items-center&quot;&gt;&#10;                        &lt;div className=&quot;w-10 h-10 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mr-4&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-calendar text-green-600 dark:text-green-400&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&gt;&#10;                          &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                            Farm Established&#10;                          &lt;/h4&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {farmer.farmInfo?.establishedYear ||&#10;                              new Date(&#10;                                farmer.joinedDate || farmer.createdAt,&#10;                              ).getFullYear()}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Farm Type */}&#10;                      {farmer.farmInfo?.farmType &amp;&amp; (&#10;                        &lt;div className=&quot;flex items-center&quot;&gt;&#10;                          &lt;div className=&quot;w-10 h-10 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mr-4&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-tractor text-blue-600 dark:text-blue-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div&gt;&#10;                            &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                              Farm Type&#10;                            &lt;/h4&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              {farmer.farmInfo.farmType}&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* Farm Size */}&#10;                      {farmer.farmInfo?.farmSize &amp;&amp; (&#10;                        &lt;div className=&quot;flex items-center&quot;&gt;&#10;                          &lt;div className=&quot;w-10 h-10 bg-yellow-100 dark:bg-yellow-900 rounded-full flex items-center justify-center mr-4&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-expand-arrows-alt text-yellow-600 dark:text-yellow-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div&gt;&#10;                            &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                              Farm Size&#10;                            &lt;/h4&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              {farmer.farmInfo.farmSize} acres&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* Our Mission */}&#10;                      &lt;div className=&quot;flex items-center&quot;&gt;&#10;                        &lt;div className=&quot;w-10 h-10 bg-purple-100 dark:bg-purple-900 rounded-full flex items-center justify-center mr-4&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-heart text-purple-600 dark:text-purple-400&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&gt;&#10;                          &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                            Our Mission&#10;                          &lt;/h4&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Providing fresh, sustainable produce to our&#10;                            community&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Farming Philosophy */}&#10;                      &lt;div className=&quot;flex items-center&quot;&gt;&#10;                        &lt;div className=&quot;w-10 h-10 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mr-4&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-leaf text-green-600 dark:text-green-400&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&gt;&#10;                          &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                            Farming Philosophy&#10;                          &lt;/h4&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {farmer.farmInfo?.farmingMethods &amp;&amp;&#10;                            farmer.farmInfo.farmingMethods.length &gt; 0&#10;                              ? `${farmer.farmInfo.farmingMethods.join(&quot;, &quot;)} practices`&#10;                              : stats.farmingMethods?.length &gt; 0&#10;                                ? `${stats.farmingMethods.join(&quot;, &quot;)} practices`&#10;                                : &quot;Sustainable and eco-friendly methods&quot;}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Certifications Section */}&#10;                    {farmer.farmInfo?.certifications &amp;&amp;&#10;                      farmer.farmInfo.certifications.length &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;mt-8&quot;&gt;&#10;                          &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                            Our Certifications&#10;                          &lt;/h4&gt;&#10;                          &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#10;                            {farmer.farmInfo.certifications.map(&#10;                              (cert, index) =&gt; (&#10;                                &lt;span&#10;                                  key={index}&#10;                                  className=&quot;bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-3 py-1 rounded-full text-sm font-medium border border-green-200 dark:border-green-800&quot;&#10;                                &gt;&#10;                                  &lt;i className=&quot;fas fa-certificate mr-1&quot;&gt;&lt;/i&gt;&#10;                                  {cert}&#10;                                &lt;/span&gt;&#10;                              ),&#10;                            )}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;grid grid-cols-2 gap-4&quot;&gt;&#10;                    {/* Show farming achievements and highlights */}&#10;                    &lt;div className=&quot;bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900 dark:to-emerald-900 p-6 rounded-xl&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-certificate text-3xl text-green-600 dark:text-green-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                      &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        {farmer.isCertified&#10;                          ? &quot;Certified Organic&quot;&#10;                          : farmer.farmInfo?.farmType || &quot;Quality Farming&quot;}&#10;                      &lt;/h4&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        {farmer.isCertified&#10;                          ? &quot;Officially certified organic farming&quot;&#10;                          : farmer.farmInfo?.farmType&#10;                            ? `Specialized in ${farmer.farmInfo.farmType.toLowerCase()} farming`&#10;                            : &quot;Committed to quality and safety standards&quot;}&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900 dark:to-cyan-900 p-6 rounded-xl&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-users text-3xl text-blue-600 dark:text-blue-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                      &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        Community Impact&#10;                      &lt;/h4&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        Serving{&quot; &quot;}&#10;                        {farmer.address?.street &amp;&amp; farmer.address?.city&#10;                          ? `${farmer.address.street}, ${farmer.address.city}${farmer.address.state ? `, ${farmer.address.state}` : &quot;&quot;}`&#10;                          : farmer.address?.city &amp;&amp; farmer.address?.state&#10;                            ? `${farmer.address.city}, ${farmer.address.state}`&#10;                            : farmer.location || &quot;the community&quot;}{&quot; &quot;}&#10;                        with {stats.totalProducts} quality products&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900 dark:to-pink-900 p-6 rounded-xl&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-star text-3xl text-purple-600 dark:text-purple-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                      &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        Customer Satisfaction&#10;                      &lt;/h4&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        {stats.averageRating &gt; 0&#10;                          ? `${stats.averageRating}/5 average rating`&#10;                          : &quot;Building trust with every harvest&quot;}&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-yellow-50 to-orange-50 dark:from-yellow-900 dark:to-orange-900 p-6 rounded-xl&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-seedling text-3xl text-yellow-600 dark:text-yellow-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                      &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        {farmer.farmInfo?.farmSize&#10;                          ? &quot;Farm Size&quot;&#10;                          : &quot;Product Variety&quot;}&#10;                      &lt;/h4&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        {farmer.farmInfo?.farmSize&#10;                          ? `${farmer.farmInfo.farmSize} acres of sustainable farming`&#10;                          : `${stats.totalProducts} products across ${stats.categories?.length || 0} categories`}&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {activeTab === &quot;products&quot; &amp;&amp; (&#10;              &lt;div className=&quot;space-y-8&quot;&gt;&#10;                &lt;div className=&quot;text-center mb-8&quot;&gt;&#10;                  &lt;h2 className=&quot;text-4xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                    Our Product Categories&#10;                  &lt;/h2&gt;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg max-w-3xl mx-auto&quot;&gt;&#10;                    We grow a diverse range of fresh produce across{&quot; &quot;}&#10;                    {stats.categories?.length || 0} categories.&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                {stats.categories &amp;&amp; stats.categories.length &gt; 0 ? (&#10;                  &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12&quot;&gt;&#10;                    {stats.categories.map((category, index) =&gt; {&#10;                      const categoryProducts = products.filter(&#10;                        (p) =&gt; p.category === category,&#10;                      );&#10;                      const avgPrice =&#10;                        categoryProducts.length &gt; 0&#10;                          ? (&#10;                              categoryProducts.reduce(&#10;                                (sum, p) =&gt; sum + (p.price || 0),&#10;                                0,&#10;                              ) / categoryProducts.length&#10;                            ).toFixed(2)&#10;                          : 0;&#10;&#10;                      return (&#10;                        &lt;div&#10;                          key={index}&#10;                          className=&quot;bg-gradient-to-br from-green-50 to-emerald-50 dark:from-gray-700 dark:to-gray-600 p-8 rounded-xl shadow-lg&quot;&#10;                        &gt;&#10;                          &lt;div className=&quot;w-16 h-16 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-6&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-leaf text-white text-2xl&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white text-center mb-4&quot;&gt;&#10;                            {category}&#10;                          &lt;/h3&gt;&#10;                          &lt;div className=&quot;text-center space-y-2&quot;&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                              {categoryProducts.length} products&#10;                            &lt;/p&gt;&#10;                            &lt;p className=&quot;text-lg font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                              Avg: ${avgPrice}&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      );&#10;                    })}&#10;                  &lt;/div&gt;&#10;                ) : (&#10;                  &lt;div className=&quot;text-center py-12&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-seedling text-6xl text-gray-300 dark:text-gray-600 mb-4&quot;&gt;&lt;/i&gt;&#10;                    &lt;p className=&quot;text-gray-500 dark:text-gray-400 text-lg&quot;&gt;&#10;                      No products available yet. Check back soon!&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;&#10;                {/* Featured Products Preview */}&#10;                {products.length &gt; 0 &amp;&amp; (&#10;                  &lt;div&gt;&#10;                    &lt;h3 className=&quot;text-2xl font-semibold text-gray-900 dark:text-white mb-6 text-center&quot;&gt;&#10;                      Featured Products&#10;                    &lt;/h3&gt;&#10;                    &lt;div className=&quot;space-y-6&quot;&gt;&#10;                      {products.slice(0, 3).map((product, index) =&gt; (&#10;                        &lt;div&#10;                          key={product._id}&#10;                          className={`flex ${&#10;                            index % 2 === 0 ? &quot;flex-row&quot; : &quot;flex-row-reverse&quot;&#10;                          } items-center gap-8 bg-gradient-to-r ${&#10;                            index % 3 === 0&#10;                              ? &quot;from-green-50 to-emerald-50 dark:from-green-900/30 dark:to-emerald-900/30&quot;&#10;                              : index % 3 === 1&#10;                                ? &quot;from-blue-50 to-cyan-50 dark:from-blue-900/30 dark:to-cyan-900/30&quot;&#10;                                : &quot;from-purple-50 to-pink-50 dark:from-purple-900/30 dark:to-pink-900/30&quot;&#10;                          } p-8 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-[1.02]`}&#10;                        &gt;&#10;                          {/* Product Image */}&#10;                          &lt;div className=&quot;flex-shrink-0&quot;&gt;&#10;                            &lt;div className=&quot;w-32 h-32 rounded-2xl overflow-hidden shadow-lg&quot;&gt;&#10;                              {product.images &amp;&amp; product.images[0] ? (&#10;                                &lt;img&#10;                                  src={product.images[0]}&#10;                                  alt={product.name}&#10;                                  className=&quot;w-full h-full object-cover&quot;&#10;                                /&gt;&#10;                              ) : (&#10;                                &lt;div className=&quot;w-full h-full bg-gray-200 dark:bg-gray-600 flex items-center justify-center&quot;&gt;&#10;                                  &lt;i className=&quot;fas fa-image text-gray-400 text-3xl&quot;&gt;&lt;/i&gt;&#10;                                &lt;/div&gt;&#10;                              )}&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          {/* Product Info */}&#10;                          &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#10;                            &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#10;                              &lt;div className=&quot;flex-1&quot;&gt;&#10;                                &lt;h4 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                                  {product.name}&#10;                                &lt;/h4&gt;&#10;                                &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-3&quot;&gt;&#10;                                  Category: {product.category}&#10;                                &lt;/p&gt;&#10;&#10;                                {/* Rating */}&#10;                                {product.averageRating &amp;&amp; (&#10;                                  &lt;div className=&quot;flex items-center mb-3&quot;&gt;&#10;                                    &lt;div className=&quot;flex text-yellow-400 mr-2&quot;&gt;&#10;                                      {[...Array(5)].map((_, i) =&gt; (&#10;                                        &lt;i&#10;                                          key={i}&#10;                                          className={`fas fa-star text-sm ${&#10;                                            i &lt;&#10;                                            Math.floor(product.averageRating)&#10;                                              ? &quot;text-yellow-400&quot;&#10;                                              : &quot;text-gray-300 dark:text-gray-600&quot;&#10;                                          }`}&#10;                                        &gt;&lt;/i&gt;&#10;                                      ))}&#10;                                    &lt;/div&gt;&#10;                                    &lt;span className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                                      ({product.averageRating}/5)&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                )}&#10;&#10;                                {/* Product Description */}&#10;                                {product.description &amp;&amp; (&#10;                                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm mb-4 line-clamp-2&quot;&gt;&#10;                                    {product.description}&#10;                                  &lt;/p&gt;&#10;                                )}&#10;                              &lt;/div&gt;&#10;&#10;                              {/* Price and Actions */}&#10;                              &lt;div className=&quot;flex flex-col items-end gap-4 ml-6&quot;&gt;&#10;                                &lt;div className=&quot;text-right&quot;&gt;&#10;                                  &lt;div className=&quot;text-3xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                                    ${product.price}&#10;                                  &lt;/div&gt;&#10;                                  &lt;div&#10;                                    className={`text-sm ${&#10;                                      product.stock &gt; 0&#10;                                        ? &quot;text-green-600 dark:text-green-400&quot;&#10;                                        : &quot;text-red-500&quot;&#10;                                    }`}&#10;                                  &gt;&#10;                                    {product.stock &gt; 0&#10;                                      ? `${product.stock} available`&#10;                                      : &quot;Out of stock&quot;}&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;&#10;                                &lt;div className=&quot;flex gap-3&quot;&gt;&#10;                                  &lt;button&#10;                                    className={`px-6 py-3 rounded-lg font-medium transition-all ${&#10;                                      product.stock &gt; 0&#10;                                        ? &quot;bg-green-600 hover:bg-green-700 text-white&quot;&#10;                                        : &quot;bg-gray-300 text-gray-500 cursor-not-allowed&quot;&#10;                                    }`}&#10;                                    disabled={product.stock === 0}&#10;                                  &gt;&#10;                                    &lt;i className=&quot;fas fa-cart-plus mr-2&quot;&gt;&lt;/i&gt;&#10;                                    {product.stock &gt; 0&#10;                                      ? &quot;Add to Cart&quot;&#10;                                      : &quot;Sold Out&quot;}&#10;                                  &lt;/button&gt;&#10;&#10;                                  &lt;button className=&quot;p-3 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-600 dark:text-gray-300 rounded-lg transition-all&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-heart&quot;&gt;&lt;/i&gt;&#10;                                  &lt;/button&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ))}&#10;                    &lt;/div&gt;&#10;&#10;                    {/* View All Products Button */}&#10;                    &lt;div className=&quot;text-center mt-8&quot;&gt;&#10;                      &lt;Link&#10;                        href={`/farmers/${farmerId}/details`}&#10;                        className=&quot;inline-flex items-center px-8 py-4 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-store mr-3&quot;&gt;&lt;/i&gt;&#10;                        View All {stats.totalProducts} Products&#10;                        &lt;i className=&quot;fas fa-arrow-right ml-3&quot;&gt;&lt;/i&gt;&#10;                      &lt;/Link&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {activeTab === &quot;reviews&quot; &amp;&amp; (&#10;              &lt;div className=&quot;space-y-8&quot;&gt;&#10;                &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;                  &lt;h2 className=&quot;text-4xl font-bold bg-gradient-to-r from-purple-600 via-pink-600 to-rose-600 bg-clip-text text-transparent mb-6&quot;&gt;&#10;                     Customer Testimonials &#10;                  &lt;/h2&gt;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg max-w-3xl mx-auto leading-relaxed&quot;&gt;&#10;                    Discover what our valued customers are saying about their&#10;                    experience with our fresh, quality produce and exceptional&#10;                    service.&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                {reviews.length &gt; 0 ? (&#10;                  &lt;div className=&quot;space-y-8&quot;&gt;&#10;                    {/* Reviews Statistics Banner */}&#10;                    &lt;div className=&quot;bg-gradient-to-r from-purple-600 via-pink-600 to-rose-600 rounded-3xl p-8 mb-12&quot;&gt;&#10;                      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8 text-white text-center&quot;&gt;&#10;                        &lt;div className=&quot;group&quot;&gt;&#10;                          &lt;div className=&quot;text-5xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                            {reviews.length}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-white/90 text-lg&quot;&gt;&#10;                            Total Reviews&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;w-16 h-1 bg-white/30 mx-auto mt-2 rounded-full&quot;&gt;&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;group&quot;&gt;&#10;                          &lt;div className=&quot;text-5xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                            {stats.averageRating}★&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-white/90 text-lg&quot;&gt;&#10;                            Average Rating&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;flex justify-center mt-2&quot;&gt;&#10;                            {[...Array(5)].map((_, i) =&gt; (&#10;                              &lt;i&#10;                                key={i}&#10;                                className={`fas fa-star text-lg ${&#10;                                  i &lt; Math.floor(stats.averageRating || 0)&#10;                                    ? &quot;text-yellow-300&quot;&#10;                                    : &quot;text-white/30&quot;&#10;                                }`}&#10;                              &gt;&lt;/i&gt;&#10;                            ))}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;group&quot;&gt;&#10;                          &lt;div className=&quot;text-5xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                            98%&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-white/90 text-lg&quot;&gt;&#10;                            Satisfaction Rate&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;w-16 h-1 bg-white/30 mx-auto mt-2 rounded-full&quot;&gt;&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Reviews Grid with Different Layouts */}&#10;                    &lt;div className=&quot;space-y-8&quot;&gt;&#10;                      {reviews.map((review, index) =&gt; {&#10;                        const layoutVariants = [&#10;                          &quot;premium-testimonial&quot;,&#10;                          &quot;modern-review&quot;,&#10;                          &quot;elegant-feedback&quot;,&#10;                          &quot;vibrant-comment&quot;,&#10;                          &quot;classic-review&quot;,&#10;                        ];&#10;                        const variant =&#10;                          layoutVariants[index % layoutVariants.length];&#10;&#10;                        // Premium Testimonial Layout&#10;                        if (variant === &quot;premium-testimonial&quot;) {&#10;                          return (&#10;                            &lt;div&#10;                              key={index}&#10;                              className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50 dark:from-indigo-900/20 dark:via-purple-900/20 dark:to-pink-900/20 p-8 hover:shadow-2xl transition-all duration-700 border-2 border-indigo-200 dark:border-indigo-800&quot;&#10;                            &gt;&#10;                              &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-indigo-400/5 to-purple-400/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#10;                              &lt;div className=&quot;absolute top-4 right-4 w-20 h-20 bg-indigo-100 dark:bg-indigo-800/30 rounded-full opacity-20 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;relative z-10&quot;&gt;&#10;                                &lt;div className=&quot;flex items-start space-x-6&quot;&gt;&#10;                                  {/* Avatar Section */}&#10;                                  &lt;div className=&quot;flex-shrink-0&quot;&gt;&#10;                                    &lt;div className=&quot;w-20 h-20 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-2xl flex items-center justify-center text-white text-2xl font-bold shadow-lg group-hover:rotate-12 transition-transform duration-500&quot;&gt;&#10;                                      {(review.reviewer || &quot;A&quot;)&#10;                                        .charAt(0)&#10;                                        .toUpperCase()}&#10;                                    &lt;/div&gt;&#10;                                    &lt;div className=&quot;text-center mt-3&quot;&gt;&#10;                                      &lt;div className=&quot;flex justify-center space-x-1&quot;&gt;&#10;                                        {[...Array(5)].map((_, i) =&gt; (&#10;                                          &lt;i&#10;                                            key={i}&#10;                                            className={`fas fa-star text-lg ${&#10;                                              i &lt; review.rating&#10;                                                ? &quot;text-yellow-400&quot;&#10;                                                : &quot;text-gray-300 dark:text-gray-600&quot;&#10;                                            }`}&#10;                                          &gt;&lt;/i&gt;&#10;                                        ))}&#10;                                      &lt;/div&gt;&#10;                                      &lt;div className=&quot;text-sm text-indigo-600 dark:text-indigo-400 font-medium mt-1&quot;&gt;&#10;                                        {review.rating}/5 Stars&#10;                                      &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                  &lt;/div&gt;&#10;&#10;                                  {/* Content Section */}&#10;                                  &lt;div className=&quot;flex-1&quot;&gt;&#10;                                    &lt;div className=&quot;mb-4&quot;&gt;&#10;                                      &lt;h4 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                                        {review.reviewer ||&#10;                                          &quot;Anonymous Customer&quot;}&#10;                                      &lt;/h4&gt;&#10;                                      &lt;div className=&quot;flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                        &lt;span className=&quot;flex items-center&quot;&gt;&#10;                                          &lt;i className=&quot;fas fa-box mr-2 text-purple-500&quot;&gt;&lt;/i&gt;&#10;                                          {review.productName}&#10;                                        &lt;/span&gt;&#10;                                        &lt;span className=&quot;flex items-center&quot;&gt;&#10;                                          &lt;i className=&quot;fas fa-calendar mr-2 text-indigo-500&quot;&gt;&lt;/i&gt;&#10;                                          {new Date(&#10;                                            review.createdAt,&#10;                                          ).toLocaleDateString()}&#10;                                        &lt;/span&gt;&#10;                                      &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;&#10;                                    &lt;div className=&quot;relative&quot;&gt;&#10;                                      &lt;div className=&quot;absolute -top-2 -left-2 text-6xl text-indigo-200 dark:text-indigo-800 opacity-50&quot;&gt;&#10;                                        &lt;i className=&quot;fas fa-quote-left&quot;&gt;&lt;/i&gt;&#10;                                      &lt;/div&gt;&#10;                                      &lt;p className=&quot;text-gray-700 dark:text-gray-300 text-lg leading-relaxed italic pl-8 pr-4&quot;&gt;&#10;                                        {review.comment}&#10;                                      &lt;/p&gt;&#10;                                      &lt;div className=&quot;absolute -bottom-2 -right-2 text-6xl text-indigo-200 dark:text-indigo-800 opacity-50 transform rotate-180&quot;&gt;&#10;                                        &lt;i className=&quot;fas fa-quote-left&quot;&gt;&lt;/i&gt;&#10;                                      &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          );&#10;                        }&#10;&#10;                        // Modern Review Layout&#10;                        if (variant === &quot;modern-review&quot;) {&#10;                          return (&#10;                            &lt;div&#10;                              key={index}&#10;                              className=&quot;group relative overflow-hidden rounded-2xl bg-white dark:bg-gray-800 shadow-xl hover:shadow-2xl transition-all duration-500 border-l-8 border-emerald-500&quot;&#10;                            &gt;&#10;                              &lt;div className=&quot;absolute inset-0 bg-gradient-to-r from-emerald-50/50 to-teal-50/50 dark:from-emerald-900/10 dark:to-teal-900/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;relative z-10 p-8&quot;&gt;&#10;                                &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                                  &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                                    &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-emerald-400 to-teal-500 rounded-xl flex items-center justify-center text-white text-xl font-bold shadow-lg&quot;&gt;&#10;                                      {(review.reviewer || &quot;A&quot;)&#10;                                        .charAt(0)&#10;                                        .toUpperCase()}&#10;                                    &lt;/div&gt;&#10;                                    &lt;div&gt;&#10;                                      &lt;h4 className=&quot;text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                                        {review.reviewer ||&#10;                                          &quot;Anonymous Customer&quot;}&#10;                                      &lt;/h4&gt;&#10;                                      &lt;p className=&quot;text-emerald-600 dark:text-emerald-400 font-medium&quot;&gt;&#10;                                        Verified Purchase&#10;                                      &lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                  &lt;/div&gt;&#10;&#10;                                  &lt;div className=&quot;text-right&quot;&gt;&#10;                                    &lt;div className=&quot;flex items-center space-x-1 justify-end mb-2&quot;&gt;&#10;                                      {[...Array(5)].map((_, i) =&gt; (&#10;                                        &lt;i&#10;                                          key={i}&#10;                                          className={`fas fa-star text-xl ${&#10;                                            i &lt; review.rating&#10;                                              ? &quot;text-yellow-400&quot;&#10;                                              : &quot;text-gray-300 dark:text-gray-600&quot;&#10;                                          }`}&#10;                                        &gt;&lt;/i&gt;&#10;                                      ))}&#10;                                    &lt;/div&gt;&#10;                                    &lt;div className=&quot;text-gray-500 dark:text-gray-400 text-sm&quot;&gt;&#10;                                      {new Date(&#10;                                        review.createdAt,&#10;                                      ).toLocaleDateString()}&#10;                                    &lt;/div&gt;&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;&#10;                                &lt;div className=&quot;mb-4&quot;&gt;&#10;                                  &lt;div className=&quot;inline-flex items-center bg-emerald-100 dark:bg-emerald-900/30 text-emerald-800 dark:text-emerald-300 px-3 py-1 rounded-full text-sm font-medium&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-leaf mr-2&quot;&gt;&lt;/i&gt;&#10;                                    {review.productName}&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;&#10;                                &lt;p className=&quot;text-gray-700 dark:text-gray-300 text-lg leading-relaxed&quot;&gt;&#10;                                  {review.comment}&#10;                                &lt;/p&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          );&#10;                        }&#10;&#10;                        // Elegant Feedback Layout&#10;                        if (variant === &quot;elegant-feedback&quot;) {&#10;                          return (&#10;                            &lt;div&#10;                              key={index}&#10;                              className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-rose-50 via-pink-50 to-red-50 dark:from-rose-900/20 dark:via-pink-900/20 dark:to-red-900/20 p-8 hover:shadow-2xl transition-all duration-700 border border-rose-200 dark:border-rose-800&quot;&#10;                            &gt;&#10;                              &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-rose-400/5 to-pink-400/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#10;                              &lt;div className=&quot;absolute top-4 right-4 w-20 h-20 bg-rose-100 dark:bg-rose-800/30 rounded-full opacity-20 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;relative z-10&quot;&gt;&#10;                                &lt;div className=&quot;text-center mb-6&quot;&gt;&#10;                                  &lt;div className=&quot;w-24 h-24 bg-gradient-to-br from-rose-400 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-4 shadow-xl group-hover:rotate-12 transition-transform duration-500&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-heart text-white text-2xl&quot;&gt;&lt;/i&gt;&#10;                                  &lt;/div&gt;&#10;                                  &lt;h4 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                                    {review.reviewer || &quot;Happy Customer&quot;}&#10;                                  &lt;/h4&gt;&#10;                                  &lt;div className=&quot;flex justify-center space-x-1 mb-3&quot;&gt;&#10;                                    {[...Array(5)].map((_, i) =&gt; (&#10;                                      &lt;i&#10;                                        key={i}&#10;                                        className={`fas fa-star text-2xl ${&#10;                                          i &lt; review.rating&#10;                                            ? &quot;text-yellow-400&quot;&#10;                                            : &quot;text-gray-300 dark:text-gray-600&quot;&#10;                                        }`}&#10;                                      &gt;&lt;/i&gt;&#10;                                    ))}&#10;                                  &lt;/div&gt;&#10;                                  &lt;div className=&quot;inline-flex items-center bg-rose-100 dark:bg-rose-900/30 text-rose-800 dark:text-rose-300 px-4 py-2 rounded-full text-sm font-medium&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-apple-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                                    {review.productName}&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;&#10;                                &lt;div className=&quot;text-center&quot;&gt;&#10;                                  &lt;p className=&quot;text-gray-700 dark:text-gray-300 text-xl leading-relaxed italic font-light&quot;&gt;&#10;                                    &amp;ldquo;{review.comment}&amp;rdquo;&#10;                                  &lt;/p&gt;&#10;                                  &lt;div className=&quot;mt-6 text-gray-500 dark:text-gray-400 text-sm&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-calendar-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                                    {new Date(&#10;                                      review.createdAt,&#10;                                    ).toLocaleDateString()}&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          );&#10;                        }&#10;&#10;                        // Vibrant Comment Layout&#10;                        if (variant === &quot;vibrant-comment&quot;) {&#10;                          return (&#10;                            &lt;div&#10;                              key={index}&#10;                              className=&quot;group relative overflow-hidden rounded-2xl bg-gradient-to-r from-cyan-500 to-blue-600 p-8 hover:shadow-2xl transition-all duration-500 text-white&quot;&#10;                            &gt;&#10;                              &lt;div className=&quot;absolute inset-0 bg-gradient-to-r from-cyan-400/20 to-blue-400/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;                              &lt;div className=&quot;absolute top-0 right-0 w-40 h-40 bg-white/10 rounded-full transform translate-x-20 -translate-y-20 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;relative z-10&quot;&gt;&#10;                                &lt;div className=&quot;flex items-start space-x-6&quot;&gt;&#10;                                  &lt;div className=&quot;flex-shrink-0&quot;&gt;&#10;                                    &lt;div className=&quot;w-18 h-18 bg-white/20 backdrop-blur-sm rounded-2xl flex items-center justify-center text-2xl font-bold shadow-lg&quot;&gt;&#10;                                      {(review.reviewer || &quot;A&quot;)&#10;                                        .charAt(0)&#10;                                        .toUpperCase()}&#10;                                    &lt;/div&gt;&#10;                                  &lt;/div&gt;&#10;&#10;                                  &lt;div className=&quot;flex-1&quot;&gt;&#10;                                    &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                                      &lt;div className=&quot;flex-1&quot;&gt;&#10;                                        &lt;h4 className=&quot;text-xl font-bold mb-1&quot;&gt;&#10;                                          {review.reviewer || &quot;Valued Customer&quot;}&#10;                                        &lt;/h4&gt;&#10;                                        &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#10;                                          {[...Array(5)].map((_, i) =&gt; (&#10;                                            &lt;i&#10;                                              key={i}&#10;                                              className={`fas fa-star ${&#10;                                                i &lt; review.rating&#10;                                                  ? &quot;text-yellow-300&quot;&#10;                                                  : &quot;text-white/30&quot;&#10;                                              }`}&#10;                                            &gt;&lt;/i&gt;&#10;                                          ))}&#10;                                          &lt;span className=&quot;ml-2 text-white/90&quot;&gt;&#10;                                            ({review.rating}/5)&#10;                                          &lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;                                      &lt;/div&gt;&#10;                                      &lt;div className=&quot;text-right text-white/80 text-sm&quot;&gt;&#10;                                        {new Date(&#10;                                          review.createdAt,&#10;                                        ).toLocaleDateString()}&#10;                                      &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;&#10;                                    &lt;div className=&quot;mb-4&quot;&gt;&#10;                                      &lt;span className=&quot;inline-flex items-center bg-white/20 backdrop-blur-sm text-white px-3 py-1 rounded-full text-sm&quot;&gt;&#10;                                        &lt;i className=&quot;fas fa-tag mr-2&quot;&gt;&lt;/i&gt;&#10;                                        {review.productName}&#10;                                      &lt;/span&gt;&#10;                                    &lt;/div&gt;&#10;&#10;                                    &lt;p className=&quot;text-white/95 text-lg leading-relaxed&quot;&gt;&#10;                                      {review.comment}&#10;                                    &lt;/p&gt;&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          );&#10;                        }&#10;&#10;                        // Classic Review Layout (Default)&#10;                        return (&#10;                          &lt;div&#10;                            key={index}&#10;                            className=&quot;group relative overflow-hidden rounded-xl bg-white dark:bg-gray-800 shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-200 dark:border-gray-700&quot;&#10;                          &gt;&#10;                            &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-gray-50/50 to-slate-50/50 dark:from-gray-700/50 dark:to-slate-700/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;&#10;                            &lt;div className=&quot;relative z-10 p-6&quot;&gt;&#10;                              &lt;div className=&quot;flex items-start justify-between mb-4&quot;&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                                  &lt;div className=&quot;w-12 h-12 bg-gradient-to-br from-gray-400 to-slate-500 rounded-lg flex items-center justify-center text-white font-bold&quot;&gt;&#10;                                    {(review.reviewer || &quot;A&quot;)&#10;                                      .charAt(0)&#10;                                      .toUpperCase()}&#10;                                  &lt;/div&gt;&#10;                                  &lt;div&gt;&#10;                                    &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                                      {review.reviewer || &quot;Anonymous Customer&quot;}&#10;                                    &lt;/h4&gt;&#10;                                    &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                      {review.productName}&#10;                                    &lt;/p&gt;&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;&#10;                                &lt;div className=&quot;text-right&quot;&gt;&#10;                                  &lt;div className=&quot;flex items-center space-x-1 mb-1&quot;&gt;&#10;                                    {[...Array(5)].map((_, i) =&gt; (&#10;                                      &lt;i&#10;                                        key={i}&#10;                                        className={`fas fa-star text-sm ${&#10;                                          i &lt; review.rating&#10;                                            ? &quot;text-yellow-400&quot;&#10;                                            : &quot;text-gray-300 dark:text-gray-600&quot;&#10;                                        }`}&#10;                                      &gt;&lt;/i&gt;&#10;                                    ))}&#10;                                  &lt;/div&gt;&#10;                                  &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                    {new Date(&#10;                                      review.createdAt,&#10;                                    ).toLocaleDateString()}&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;p className=&quot;text-gray-700 dark:text-gray-300 leading-relaxed&quot;&gt;&#10;                                {review.comment}&#10;                              &lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        );&#10;                      })}&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Customer Satisfaction Footer */}&#10;                    &lt;div className=&quot;bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 rounded-3xl p-8 mt-12 border border-green-200 dark:border-green-800&quot;&gt;&#10;                      &lt;div className=&quot;text-center&quot;&gt;&#10;                        &lt;div className=&quot;w-20 h-20 bg-gradient-to-br from-green-500 to-emerald-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-xl&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-thumbs-up text-white text-3xl&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;h3 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                          Thank You for Your Trust! &#10;                        &lt;/h3&gt;&#10;                        &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg max-w-2xl mx-auto leading-relaxed&quot;&gt;&#10;                          Your feedback helps us grow better produce and serve&#10;                          our community with excellence. Every review makes a&#10;                          difference in our farming journey.&#10;                        &lt;/p&gt;&#10;                        &lt;div className=&quot;mt-6 flex justify-center space-x-8&quot;&gt;&#10;                          &lt;div className=&quot;text-center&quot;&gt;&#10;                            &lt;div className=&quot;text-3xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                              100%&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                              Fresh Guarantee&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-center&quot;&gt;&#10;                            &lt;div className=&quot;text-3xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                              24/7&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                              Customer Support&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-center&quot;&gt;&#10;                            &lt;div className=&quot;text-3xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                              Fast&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                              Delivery&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                ) : (&#10;                  &lt;div className=&quot;text-center py-20&quot;&gt;&#10;                    &lt;div className=&quot;w-32 h-32 bg-gradient-to-br from-purple-100 to-pink-100 dark:from-purple-900/30 dark:to-pink-900/30 rounded-full flex items-center justify-center mx-auto mb-8 shadow-xl&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-comment-dots text-6xl text-purple-400 dark:text-purple-300&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;h3 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                      No Reviews Yet&#10;                    &lt;/h3&gt;&#10;                    &lt;p className=&quot;text-gray-500 dark:text-gray-400 text-xl max-w-md mx-auto leading-relaxed mb-8&quot;&gt;&#10;                      Be the first to share your experience with our fresh&#10;                      produce! Your feedback helps us serve you better.&#10;                    &lt;/p&gt;&#10;                    &lt;div className=&quot;inline-flex items-center bg-gradient-to-r from-purple-500 to-pink-600 text-white px-8 py-4 rounded-2xl font-semibold text-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-star mr-3&quot;&gt;&lt;/i&gt;&#10;                      Leave the First Review&#10;                      &lt;i className=&quot;fas fa-arrow-right ml-3&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {activeTab === &quot;stats&quot; &amp;&amp; (&#10;              &lt;div className=&quot;space-y-8&quot;&gt;&#10;                &lt;div className=&quot;text-center mb-12&quot;&gt;&#10;                  &lt;h2 className=&quot;text-4xl font-bold bg-gradient-to-r from-emerald-600 via-teal-600 to-cyan-600 bg-clip-text text-transparent mb-6&quot;&gt;&#10;                     Farm Analytics Dashboard &#10;                  &lt;/h2&gt;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg max-w-3xl mx-auto leading-relaxed&quot;&gt;&#10;                    Discover the comprehensive insights behind our farm's&#10;                    productivity, community impact, and sustainable growth&#10;                    journey.&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Primary Statistics Showcase */}&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12&quot;&gt;&#10;                  {/* Holographic Products Card */}&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-emerald-50 via-green-50 to-teal-50 dark:from-emerald-900/20 dark:via-green-900/20 dark:to-teal-900/20 p-8 hover:shadow-2xl transition-all duration-700 border border-emerald-200 dark:border-emerald-800&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-emerald-400/10 to-teal-400/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;absolute top-4 right-4 w-16 h-16 bg-emerald-100 dark:bg-emerald-800/30 rounded-full opacity-20 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                        &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-emerald-500 to-green-600 rounded-2xl flex items-center justify-center transform group-hover:rotate-12 transition-transform duration-500 shadow-lg&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-seedling text-2xl text-white&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-right&quot;&gt;&#10;                          &lt;div className=&quot;text-4xl font-bold text-emerald-600 dark:text-emerald-400 mb-1&quot;&gt;&#10;                            {stats.totalProducts}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-emerald-500 dark:text-emerald-300 text-sm font-medium&quot;&gt;&#10;                            Total Products&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;space-y-3&quot;&gt;&#10;                        &lt;div className=&quot;flex justify-between text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          &lt;span&gt;Active Items&lt;/span&gt;&#10;                          &lt;span className=&quot;font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                            {stats.activeProducts}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;w-full bg-emerald-100 dark:bg-emerald-900/30 rounded-full h-3&quot;&gt;&#10;                          &lt;div&#10;                            className=&quot;bg-gradient-to-r from-emerald-500 to-green-500 h-3 rounded-full transition-all duration-1000 shadow-sm&quot;&#10;                            style={{&#10;                              width: `${(stats.activeProducts / stats.totalProducts) * 100}%`,&#10;                            }}&#10;                          &gt;&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-center text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          {(&#10;                            (stats.activeProducts / stats.totalProducts) *&#10;                            100&#10;                          ).toFixed(0)}&#10;                          % availability rate&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Crystal Inventory Card */}&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-blue-50 via-cyan-50 to-indigo-50 dark:from-blue-900/20 dark:via-cyan-900/20 dark:to-indigo-900/20 p-8 hover:shadow-2xl transition-all duration-700 border border-blue-200 dark:border-blue-800&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-blue-400/10 to-cyan-400/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;absolute -top-4 -right-4 w-20 h-20 bg-blue-100 dark:bg-blue-800/30 rounded-full opacity-20 group-hover:scale-125 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                        &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-blue-500 to-cyan-600 rounded-2xl flex items-center justify-center transform group-hover:scale-110 transition-transform duration-500 shadow-lg&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-boxes text-2xl text-white&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-right&quot;&gt;&#10;                          &lt;div className=&quot;text-4xl font-bold text-blue-600 dark:text-blue-400 mb-1&quot;&gt;&#10;                            {stats.totalStock}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-blue-500 dark:text-blue-300 text-sm font-medium&quot;&gt;&#10;                            Items in Stock&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;grid grid-cols-2 gap-4&quot;&gt;&#10;                        &lt;div className=&quot;text-center p-3 bg-white/50 dark:bg-blue-900/20 rounded-xl&quot;&gt;&#10;                          &lt;div className=&quot;text-lg font-bold text-cyan-600 dark:text-cyan-400&quot;&gt;&#10;                            {stats.categories?.length || 0}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Categories&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-center p-3 bg-white/50 dark:bg-blue-900/20 rounded-xl&quot;&gt;&#10;                          &lt;div className=&quot;text-lg font-bold text-indigo-600 dark:text-indigo-400&quot;&gt;&#10;                            ${stats.averagePrice}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Avg Price&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Prismatic Community Impact */}&#10;                  {/* Dynamic Farm Specializations Card */}&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-emerald-50 via-teal-50 to-cyan-50 dark:from-emerald-900/20 dark:via-teal-900/20 dark:to-cyan-900/20 p-8 hover:shadow-2xl transition-all duration-700 border border-emerald-200 dark:border-emerald-800&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-emerald-400/10 to-teal-400/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;absolute top-4 right-4 w-16 h-16 bg-emerald-100 dark:bg-emerald-800/30 rounded-full opacity-20 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                        &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-emerald-500 to-teal-600 rounded-2xl flex items-center justify-center transform group-hover:rotate-12 transition-transform duration-500 shadow-lg&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-spa text-2xl text-white&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-right&quot;&gt;&#10;                          &lt;div className=&quot;text-4xl font-bold text-emerald-600 dark:text-emerald-400 mb-1&quot;&gt;&#10;                            {farmer.specializations?.length ||&#10;                              stats.categories?.length ||&#10;                              3}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-emerald-500 dark:text-emerald-300 text-sm font-medium&quot;&gt;&#10;                            Specializations&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;space-y-3&quot;&gt;&#10;                        &lt;div className=&quot;text-center&quot;&gt;&#10;                          &lt;div className=&quot;flex flex-wrap gap-1 justify-center mb-3&quot;&gt;&#10;                            {(&#10;                              farmer.specializations?.slice(0, 3) ||&#10;                              stats.categories?.slice(0, 3) || [&#10;                                &quot;Organic&quot;,&#10;                                &quot;Fresh&quot;,&#10;                                &quot;Quality&quot;,&#10;                              ]&#10;                            ).map((spec, index) =&gt; {&#10;                              const icons = {&#10;                                Grains: &quot;fas fa-seedling&quot;,&#10;                                Fruits: &quot;fas fa-apple-alt&quot;,&#10;                                Vegetables: &quot;fas fa-carrot&quot;,&#10;                                Herbs: &quot;fas fa-leaf&quot;,&#10;                                Honey: &quot;fas fa-bug&quot;,&#10;                                Dairy: &quot;fas fa-glass-whiskey&quot;,&#10;                                Organic: &quot;fas fa-leaf&quot;,&#10;                                Fresh: &quot;fas fa-sun&quot;,&#10;                                Quality: &quot;fas fa-star&quot;,&#10;                              };&#10;                              const colors = [&#10;                                &quot;text-emerald-500&quot;,&#10;                                &quot;text-teal-500&quot;,&#10;                                &quot;text-cyan-500&quot;,&#10;                              ];&#10;                              return (&#10;                                &lt;div&#10;                                  key={index}&#10;                                  className=&quot;flex items-center bg-white/70 dark:bg-emerald-900/30 rounded-full px-2 py-1&quot;&#10;                                &gt;&#10;                                  &lt;i&#10;                                    className={`${icons[spec] || &quot;fas fa-spa&quot;} ${colors[index % 3]} text-xs mr-1`}&#10;                                  &gt;&lt;/i&gt;&#10;                                  &lt;span className=&quot;text-xs font-medium text-gray-700 dark:text-gray-300&quot;&gt;&#10;                                    {spec}&#10;                                  &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                              );&#10;                            })}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                          &lt;div className=&quot;flex-1 h-2 bg-emerald-100 dark:bg-emerald-900/30 rounded-full overflow-hidden&quot;&gt;&#10;                            &lt;div&#10;                              className=&quot;h-full bg-gradient-to-r from-emerald-500 to-teal-500 rounded-full animate-pulse&quot;&#10;                              style={{ width: &quot;90%&quot; }}&#10;                            &gt;&lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;span className=&quot;text-xs text-emerald-600 dark:text-emerald-400 font-medium&quot;&gt;&#10;                            Expert&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-center text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          Premium farm specialties&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Luminous Performance */}&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-amber-50 via-yellow-50 to-orange-50 dark:from-amber-900/20 dark:via-yellow-900/20 dark:to-orange-900/20 p-8 hover:shadow-2xl transition-all duration-700 border border-amber-200 dark:border-amber-800&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-amber-400/10 to-orange-400/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;absolute top-0 left-0 w-24 h-24 bg-amber-100 dark:bg-amber-800/30 rounded-full opacity-20 transform -translate-x-12 -translate-y-12 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                        &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-amber-500 to-orange-600 rounded-2xl flex items-center justify-center transform group-hover:scale-110 transition-transform duration-500 shadow-lg&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-star text-2xl text-white&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-right&quot;&gt;&#10;                          &lt;div className=&quot;text-4xl font-bold text-amber-600 dark:text-amber-400 mb-1&quot;&gt;&#10;                            {stats.averageRating || &quot;N/A&quot;}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-amber-500 dark:text-amber-300 text-sm font-medium&quot;&gt;&#10;                            Average Rating&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;space-y-3&quot;&gt;&#10;                        &lt;div className=&quot;flex justify-between text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          &lt;span&gt;Total Reviews&lt;/span&gt;&#10;                          &lt;span className=&quot;font-bold text-orange-600 dark:text-orange-400&quot;&gt;&#10;                            {stats.totalReviews}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#10;                          {[...Array(5)].map((_, i) =&gt; (&#10;                            &lt;i&#10;                              key={i}&#10;                              className={`fas fa-star text-lg ${&#10;                                i &lt; Math.floor(stats.averageRating || 0)&#10;                                  ? &quot;text-amber-400&quot;&#10;                                  : &quot;text-gray-300 dark:text-gray-600&quot;&#10;                              }`}&#10;                            &gt;&lt;/i&gt;&#10;                          ))}&#10;                          &lt;span className=&quot;ml-2 text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                            ({stats.averageRating}/5.0)&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Enhanced Farm Details Grid */}&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12&quot;&gt;&#10;                  {/* Experience Showcase */}&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-gradient-to-br from-indigo-100 to-purple-100 dark:from-indigo-900/30 dark:to-purple-900/30 p-6 hover:shadow-xl transition-all duration-500 border-l-4 border-indigo-500&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-indigo-500/5 to-purple-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                        &lt;div className=&quot;w-12 h-12 bg-indigo-500 rounded-xl flex items-center justify-center transform group-hover:rotate-12 transition-transform duration-300&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-clock text-white text-lg&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-3xl font-bold text-indigo-600 dark:text-indigo-400&quot;&gt;&#10;                          {stats.yearsOfExperience}+&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        Years of Experience&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        Dedicated farming expertise&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Farm Size Display */}&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-gradient-to-br from-green-100 to-emerald-100 dark:from-green-900/30 dark:to-emerald-900/30 p-6 hover:shadow-xl transition-all duration-500 border-l-4 border-green-500&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-green-500/5 to-emerald-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                        &lt;div className=&quot;w-12 h-12 bg-green-500 rounded-xl flex items-center justify-center transform group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-map text-white text-lg&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                          {farmer.farmInfo?.farmSize || stats.farmSize || &quot;5&quot;}{&quot; &quot;}&#10;                          {farmer.farmInfo?.farmSizeUnit ||&#10;                            stats.farmSizeUnit ||&#10;                            &quot;acres&quot;}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        Farm Size&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        Total cultivated area&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Certification Status */}&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-gradient-to-br from-blue-100 to-cyan-100 dark:from-blue-900/30 dark:to-cyan-900/30 p-6 hover:shadow-xl transition-all duration-500 border-l-4 border-blue-500&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-blue-500/5 to-cyan-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                        &lt;div className=&quot;w-12 h-12 bg-blue-500 rounded-xl flex items-center justify-center transform group-hover:bounce transition-transform duration-300&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-certificate text-white text-lg&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&#10;                          className={`px-3 py-1 rounded-full text-sm font-medium ${&#10;                            stats.certificationStatus === &quot;Certified&quot;&#10;                              ? &quot;bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300&quot;&#10;                              : &quot;bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300&quot;&#10;                          }`}&#10;                        &gt;&#10;                          {stats.certificationStatus}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        Certification&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        Quality assurance status&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Farming Methods */}&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-gradient-to-br from-orange-100 to-red-100 dark:from-orange-900/30 dark:to-red-900/30 p-6 hover:shadow-xl transition-all duration-500 border-l-4 border-orange-500&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-orange-500/5 to-red-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                        &lt;div className=&quot;w-12 h-12 bg-orange-500 rounded-xl flex items-center justify-center transform group-hover:rotate-45 transition-transform duration-300&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-leaf text-white text-lg&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-3xl font-bold text-orange-600 dark:text-orange-400&quot;&gt;&#10;                          {stats.farmingMethods?.length || 2}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        Methods Used&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        Sustainable practices&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Revenue Analytics Section */}&#10;                &lt;div className=&quot;bg-gradient-to-br from-slate-50 to-gray-100 dark:from-slate-900/50 dark:to-gray-900/50 rounded-3xl p-8 mb-12 border border-slate-200 dark:border-slate-700&quot;&gt;&#10;                  &lt;div className=&quot;text-center mb-8&quot;&gt;&#10;                    &lt;h3 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                       Revenue Analytics&#10;                    &lt;/h3&gt;&#10;                    &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Financial performance and growth metrics&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8&quot;&gt;&#10;                    {/* Monthly Revenue */}&#10;                    &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-white dark:bg-slate-800 p-6 shadow-lg hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                      &lt;div className=&quot;absolute top-0 right-0 w-20 h-20 bg-gradient-to-br from-emerald-400/20 to-green-400/20 rounded-full transform translate-x-10 -translate-y-10 group-hover:scale-150 transition-transform duration-500&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;relative z-10&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                          &lt;div className=&quot;w-12 h-12 bg-emerald-100 dark:bg-emerald-900/30 rounded-xl flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-calendar-alt text-emerald-600 dark:text-emerald-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;span className=&quot;text-xs bg-emerald-100 dark:bg-emerald-900/30 text-emerald-600 dark:text-emerald-400 px-2 py-1 rounded-full font-medium&quot;&gt;&#10;                            This Month&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-3xl font-bold text-emerald-600 dark:text-emerald-400 mb-2&quot;&gt;&#10;                          BDT {stats.monthlyRevenue}&#10;                        &lt;/div&gt;&#10;                        &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;                          Monthly Revenue&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-gray-500 dark:text-gray-400 text-sm&quot;&gt;&#10;                          Current month earnings&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Total Revenue */}&#10;                    &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-white dark:bg-slate-800 p-6 shadow-lg hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                      &lt;div className=&quot;absolute bottom-0 left-0 w-24 h-24 bg-gradient-to-br from-blue-400/20 to-cyan-400/20 rounded-full transform -translate-x-12 translate-y-12 group-hover:scale-150 transition-transform duration-500&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;relative z-10&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                          &lt;div className=&quot;w-12 h-12 bg-blue-100 dark:bg-blue-900/30 rounded-xl flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-chart-line text-blue-600 dark:text-blue-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;span className=&quot;text-xs bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 px-2 py-1 rounded-full font-medium&quot;&gt;&#10;                            All Time&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-3xl font-bold text-blue-600 dark:text-blue-400 mb-2&quot;&gt;&#10;                          BDT {stats.totalRevenue}&#10;                        &lt;/div&gt;&#10;                        &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;                          Total Revenue&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-gray-500 dark:text-gray-400 text-sm&quot;&gt;&#10;                          Lifetime earnings&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Inventory Value */}&#10;                    &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-white dark:bg-slate-800 p-6 shadow-lg hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                      &lt;div className=&quot;absolute top-1/2 right-0 w-16 h-16 bg-gradient-to-br from-purple-400/20 to-pink-400/20 rounded-full transform translate-x-8 -translate-y-8 group-hover:scale-150 transition-transform duration-500&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;relative z-10&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                          &lt;div className=&quot;w-12 h-12 bg-purple-100 dark:bg-purple-900/30 rounded-xl flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-warehouse text-purple-600 dark:text-purple-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;span className=&quot;text-xs bg-purple-100 dark:bg-purple-900/30 text-purple-600 dark:text-purple-400 px-2 py-1 rounded-full font-medium&quot;&gt;&#10;                            Current&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-3xl font-bold text-purple-600 dark:text-purple-400 mb-2&quot;&gt;&#10;                          BDT {stats.inventoryValue}&#10;                        &lt;/div&gt;&#10;                        &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;                          Inventory Value&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-gray-500 dark:text-gray-400 text-sm&quot;&gt;&#10;                          Stock worth&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Farming Methods Showcase - Updated to use database data */}&#10;                {farmer.farmInfo?.farmingMethods &amp;&amp;&#10;                  farmer.farmInfo.farmingMethods.length &gt; 0 &amp;&amp; (&#10;                    &lt;div className=&quot;mb-12&quot;&gt;&#10;                      &lt;div className=&quot;text-center mb-8&quot;&gt;&#10;                        &lt;h3 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                           Our Farming Philosophy&#10;                        &lt;/h3&gt;&#10;                        &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Sustainable and innovative agricultural practices&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#10;                        {farmer.farmInfo.farmingMethods.map((method, index) =&gt; {&#10;                          const config = methodConfig[method] || {&#10;                            icon: &quot;fas fa-tractor&quot;,&#10;                            color: &quot;text-gray-600 dark:text-gray-400&quot;,&#10;                            description: &quot;Specialized farming technique&quot;,&#10;                          };&#10;&#10;                          return (&#10;                            &lt;div&#10;                              key={index}&#10;                              className=&quot;group relative overflow-hidden rounded-2xl bg-white dark:bg-gray-800 p-8 shadow-lg hover:shadow-2xl transition-all duration-500 border-t-4 border-green-500&quot;&#10;                            &gt;&#10;                              &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-green-50/50 to-emerald-50/50 dark:from-green-900/10 dark:to-emerald-900/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;                              &lt;div className=&quot;relative z-10 text-center&quot;&gt;&#10;                                &lt;div className=&quot;w-20 h-20 bg-gradient-to-br from-green-100 to-emerald-100 dark:from-green-900/30 dark:to-emerald-900/30 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                                  &lt;i&#10;                                    className={`${config.icon} text-4xl ${config.color}`}&#10;                                  &gt;&lt;/i&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;h4 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                                  {method}&#10;                                &lt;/h4&gt;&#10;                                &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;                                  {config.description}&#10;                                &lt;/p&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          );&#10;                        })}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                {/* Growth Metrics Footer */}&#10;                &lt;div className=&quot;bg-gradient-to-r from-green-600 to-emerald-600 rounded-3xl p-8 text-white&quot;&gt;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#10;                    &lt;h3 className=&quot;text-2xl font-bold mb-6&quot;&gt;&#10;                       Growth Trajectory&#10;                    &lt;/h3&gt;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8&quot;&gt;&#10;                      &lt;div className=&quot;group&quot;&gt;&#10;                        &lt;div className=&quot;text-4xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                          {(&#10;                            (stats.activeProducts / stats.totalProducts) *&#10;                            100&#10;                          ).toFixed(0)}&#10;                          %&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-white/90&quot;&gt;&#10;                          Product Availability&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;group&quot;&gt;&#10;                        &lt;div className=&quot;text-4xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                          {stats.familiesServed}+&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-white/90&quot;&gt;Community Reach&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;group&quot;&gt;&#10;                        &lt;div className=&quot;text-4xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                          {stats.averageRating || &quot;4.8&quot;}★&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-white/90&quot;&gt;&#10;                          Customer Satisfaction&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Dynamic Action Section */}&#10;        &lt;div className=&quot;bg-gradient-to-r from-green-600 to-emerald-600&quot;&gt;&#10;          &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16&quot;&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;h2 className=&quot;text-4xl font-bold text-white mb-8&quot;&gt;&#10;                Ready to Experience {farmer.farmName || `${farmer.name}'s Farm`}&#10;                ?&#10;              &lt;/h2&gt;&#10;              &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8&quot;&gt;&#10;                &lt;Link&#10;                  href={`/farmers/${farmerId}/details`}&#10;                  className=&quot;group bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white p-8 rounded-2xl transition-all duration-300 border border-white/30 transform hover:scale-105&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-store text-4xl mb-4 group-hover:scale-110 transition-transform&quot;&gt;&lt;/i&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold mb-2&quot;&gt;&#10;                    Browse {stats.totalProducts} Products&#10;                  &lt;/h3&gt;&#10;                  &lt;p className=&quot;text-white/90&quot;&gt;&#10;                    Explore our full product catalog&#10;                  &lt;/p&gt;&#10;                &lt;/Link&gt;&#10;&#10;                &lt;div className=&quot;group bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white p-8 rounded-2xl transition-all duration-300 border border-white/30 transform hover:scale-105 cursor-pointer&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-star text-4xl mb-4 group-hover:scale-110 transition-transform&quot;&gt;&lt;/i&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold mb-2&quot;&gt;&#10;                    {stats.averageRating}/5 Rating&#10;                  &lt;/h3&gt;&#10;                  &lt;p className=&quot;text-white/90&quot;&gt;See what customers say&lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;group bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white p-8 rounded-2xl transition-all duration-300 border border-white/30 transform hover:scale-105 cursor-pointer&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-envelope text-4xl mb-4 group-hover:scale-110 transition-transform&quot;&gt;&lt;/i&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold mb-2&quot;&gt;&#10;                    Contact {farmer.name}&#10;                  &lt;/h3&gt;&#10;                  &lt;p className=&quot;text-white/90&quot;&gt;Get in touch with questions&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#13;&#10;&#13;&#10;import { useState, useEffect } from &quot;react&quot;;&#13;&#10;import { useRouter, useParams } from &quot;next/navigation&quot;;&#13;&#10;import Link from &quot;next/link&quot;;&#13;&#10;import Footer from &quot;@/components/Footer&quot;;&#13;&#10;&#13;&#10;export default function FarmerPage() {&#13;&#10;  const router = useRouter();&#13;&#10;  const params = useParams();&#13;&#10;  const farmerId = params.id;&#13;&#10;&#13;&#10;  const [farmer, setFarmer] = useState(null);&#13;&#10;  const [products, setProducts] = useState([]);&#13;&#10;  const [reviews, setReviews] = useState([]);&#13;&#10;  const [stats, setStats] = useState({});&#13;&#10;  const [loading, setLoading] = useState(true);&#13;&#10;  const [error, setError] = useState(null);&#13;&#10;  const [activeTab, setActiveTab] = useState(&quot;story&quot;);&#13;&#10;&#13;&#10;  // Helper function to calculate years of experience (used only once)&#13;&#10;  const calculateYearsOfExperience = (joinedDate, createdAt) =&gt; {&#13;&#10;    const joinDate = new Date(joinedDate || createdAt);&#13;&#10;    const currentDate = new Date();&#13;&#10;    return Math.max(1, currentDate.getFullYear() - joinDate.getFullYear());&#13;&#10;  };&#13;&#10;&#13;&#10;  // Configuration objects to reduce repetition&#13;&#10;  const specializationConfig = {&#13;&#10;    Grains: {&#13;&#10;      icon: &quot;fas fa-seedling&quot;,&#13;&#10;      color: &quot;bg-amber-500&quot;,&#13;&#10;      description: &quot;Premium grain production&quot;,&#13;&#10;    },&#13;&#10;    Fruits: {&#13;&#10;      icon: &quot;fas fa-apple-alt&quot;,&#13;&#10;      color: &quot;bg-red-500&quot;,&#13;&#10;      description: &quot;Fresh seasonal fruits&quot;,&#13;&#10;    },&#13;&#10;    Vegetables: {&#13;&#10;      icon: &quot;fas fa-carrot&quot;,&#13;&#10;      color: &quot;bg-orange-500&quot;,&#13;&#10;      description: &quot;Organic vegetables&quot;,&#13;&#10;    },&#13;&#10;    Herbs: {&#13;&#10;      icon: &quot;fas fa-leaf&quot;,&#13;&#10;      color: &quot;bg-green-500&quot;,&#13;&#10;      description: &quot;Natural herbs &amp; spices&quot;,&#13;&#10;    },&#13;&#10;    Honey: {&#13;&#10;      icon: &quot;fas fa-bug&quot;,&#13;&#10;      color: &quot;bg-yellow-500&quot;,&#13;&#10;      description: &quot;Pure natural honey&quot;,&#13;&#10;    },&#13;&#10;    Dairy: {&#13;&#10;      icon: &quot;fas fa-glass-whiskey&quot;,&#13;&#10;      color: &quot;bg-blue-500&quot;,&#13;&#10;      description: &quot;Fresh dairy products&quot;,&#13;&#10;    },&#13;&#10;  };&#13;&#10;&#13;&#10;  const methodConfig = {&#13;&#10;    Organic: {&#13;&#10;      icon: &quot;fas fa-leaf&quot;,&#13;&#10;      color: &quot;text-green-600 dark:text-green-400&quot;,&#13;&#10;      description: &quot;Chemical-free farming practices&quot;,&#13;&#10;    },&#13;&#10;    Traditional: {&#13;&#10;      icon: &quot;fas fa-seedling&quot;,&#13;&#10;      color: &quot;text-brown-600 dark:text-yellow-400&quot;,&#13;&#10;      description: &quot;Time-tested farming wisdom&quot;,&#13;&#10;    },&#13;&#10;    Sustainable: {&#13;&#10;      icon: &quot;fas fa-recycle&quot;,&#13;&#10;      color: &quot;text-blue-600 dark:text-blue-400&quot;,&#13;&#10;      description: &quot;Environmentally conscious methods&quot;,&#13;&#10;    },&#13;&#10;    &quot;Natural Ripening&quot;: {&#13;&#10;      icon: &quot;fas fa-sun&quot;,&#13;&#10;      color: &quot;text-orange-600 dark:text-orange-400&quot;,&#13;&#10;      description: &quot;Natural maturation process&quot;,&#13;&#10;    },&#13;&#10;    &quot;Fruit Cultivation&quot;: {&#13;&#10;      icon: &quot;fas fa-apple-alt&quot;,&#13;&#10;      color: &quot;text-red-600 dark:text-red-400&quot;,&#13;&#10;      description: &quot;Specialized fruit growing&quot;,&#13;&#10;    },&#13;&#10;    &quot;Sun-dried&quot;: {&#13;&#10;      icon: &quot;fas fa-sun&quot;,&#13;&#10;      color: &quot;text-yellow-600 dark:text-yellow-400&quot;,&#13;&#10;      description: &quot;Solar-powered processing&quot;,&#13;&#10;    },&#13;&#10;  };&#13;&#10;&#13;&#10;  const ORDER_STATUS = {&#13;&#10;    PENDING: &quot;pending&quot;,&#13;&#10;    CONFIRMED: &quot;confirmed&quot;,&#13;&#10;    DELIVERED: &quot;delivered&quot;,&#13;&#10;    CANCELLED: &quot;cancelled&quot;,&#13;&#10;    RETURNED: &quot;returned&quot;,&#13;&#10;  };&#13;&#10;&#13;&#10;  // Helper function to render specialization cards&#13;&#10;  const renderSpecializationCard = (specialization, index) =&gt; {&#13;&#10;    const config = specializationConfig[specialization] || {&#13;&#10;      icon: &quot;fas fa-tractor&quot;,&#13;&#10;      color: &quot;bg-purple-500&quot;,&#13;&#10;      description: &quot;Farm specialization&quot;,&#13;&#10;    };&#13;&#10;&#13;&#10;    return (&#13;&#10;      &lt;div key={index} className=&quot;text-center&quot;&gt;&#13;&#10;        &lt;div&#13;&#10;          className={`w-12 h-12 ${config.color} rounded-full flex items-center justify-center mx-auto mb-3`}&#13;&#10;        &gt;&#13;&#10;          &lt;i className={`${config.icon} text-white`}&gt;&lt;/i&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;        &lt;h3 className=&quot;text-white font-semibold mb-2&quot;&gt;{specialization}&lt;/h3&gt;&#13;&#10;        &lt;p className=&quot;text-white/70 text-sm&quot;&gt;{config.description}&lt;/p&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    );&#13;&#10;  };&#13;&#10;&#13;&#10;  // Helper function to render farming method cards&#13;&#10;  const renderMethodCard = (method, index) =&gt; {&#13;&#10;    const config = methodConfig[method] || {&#13;&#10;      icon: &quot;fas fa-tractor&quot;,&#13;&#10;      color: &quot;text-gray-600 dark:text-gray-400&quot;,&#13;&#10;      description: &quot;Specialized farming technique&quot;,&#13;&#10;    };&#13;&#10;&#13;&#10;    return (&#13;&#10;      &lt;div&#13;&#10;        key={index}&#13;&#10;        className=&quot;bg-gray-50 dark:bg-gray-700 p-6 rounded-xl text-center&quot;&#13;&#10;      &gt;&#13;&#10;        &lt;i className={`${config.icon} text-4xl ${config.color} mb-4`}&gt;&lt;/i&gt;&#13;&#10;        &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;          {method}&#13;&#10;        &lt;/h4&gt;&#13;&#10;        &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#13;&#10;          {config.description}&#13;&#10;        &lt;/p&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    );&#13;&#10;  };&#13;&#10;&#13;&#10;  // Helper function to render generic fallback core values&#13;&#10;  const renderFallbackCoreValues = () =&gt; (&#13;&#10;    &lt;&gt;&#13;&#10;      &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;        &lt;div className=&quot;w-12 h-12 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#13;&#10;          &lt;i className=&quot;fas fa-leaf text-white&quot;&gt;&lt;/i&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;        &lt;h3 className=&quot;text-white font-semibold mb-2&quot;&gt;Sustainable&lt;/h3&gt;&#13;&#10;        &lt;p className=&quot;text-white/70 text-sm&quot;&gt;Eco-friendly farming practices&lt;/p&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;      &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;        &lt;div className=&quot;w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#13;&#10;          &lt;i className=&quot;fas fa-shield-alt text-white&quot;&gt;&lt;/i&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;        &lt;h3 className=&quot;text-white font-semibold mb-2&quot;&gt;Quality&lt;/h3&gt;&#13;&#10;        &lt;p className=&quot;text-white/70 text-sm&quot;&gt;Premium fresh produce&lt;/p&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;      &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;        &lt;div className=&quot;w-12 h-12 bg-purple-500 rounded-full flex items-center justify-center mx-auto mb-3&quot;&gt;&#13;&#10;          &lt;i className=&quot;fas fa-users text-white&quot;&gt;&lt;/i&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;        &lt;h3 className=&quot;text-white font-semibold mb-2&quot;&gt;Community&lt;/h3&gt;&#13;&#10;        &lt;p className=&quot;text-white/70 text-sm&quot;&gt;Supporting local families&lt;/p&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    &lt;/&gt;&#13;&#10;  );&#13;&#10;&#13;&#10;  useEffect(() =&gt; {&#13;&#10;    fetchFarmerData();&#13;&#10;  }, [farmerId]);&#13;&#10;&#13;&#10;  const fetchFarmerData = async () =&gt; {&#13;&#10;    try {&#13;&#10;      setLoading(true);&#13;&#10;      setError(null);&#13;&#10;&#13;&#10;      // First fetch farmer data with cache-busting timestamp&#13;&#10;      const timestamp = new Date().getTime();&#13;&#10;      const farmerResponse = await fetch(&#13;&#10;        `/api/farmers/${farmerId}?t=${timestamp}`,&#13;&#10;        {&#13;&#10;          headers: { &quot;Cache-Control&quot;: &quot;no-cache&quot; },&#13;&#10;        },&#13;&#10;      );&#13;&#10;&#13;&#10;      if (!farmerResponse.ok) {&#13;&#10;        throw new Error(&quot;Farmer not found&quot;);&#13;&#10;      }&#13;&#10;&#13;&#10;      const farmerData = await farmerResponse.json();&#13;&#10;&#13;&#10;      // Fetch all products to match with farmer&#13;&#10;      const productsResponse = await fetch(&#13;&#10;        `/api/products?limit=1000&amp;t=${timestamp}`,&#13;&#10;        {&#13;&#10;          headers: { &quot;Cache-Control&quot;: &quot;no-cache&quot; },&#13;&#10;        },&#13;&#10;      );&#13;&#10;&#13;&#10;      const productsData = await productsResponse.json();&#13;&#10;      const allProducts = productsData.products || [];&#13;&#10;&#13;&#10;      // Match products to farmer using multiple strategies&#13;&#10;      const farmerProducts = allProducts.filter((product) =&gt; {&#13;&#10;        const productFarmerId =&#13;&#10;          product.farmer?.id || product.farmer?._id || product.farmerId;&#13;&#10;        const productFarmerName = product.farmer?.name || product.farmerName;&#13;&#10;&#13;&#10;        // Try matching by ID first (handles both old format like 'farmer_001' and new MongoDB ObjectIds)&#13;&#10;        const matchesById = productFarmerId === farmerId;&#13;&#10;&#13;&#10;        // For new farmers, also try matching by MongoDB ObjectId string comparison&#13;&#10;        const matchesByObjectId =&#13;&#10;          product.farmer?._id === farmerId || product.farmerId === farmerId;&#13;&#10;&#13;&#10;        // For old farmers, also try matching by name&#13;&#10;        const farmerName = farmerData.farmer?.name;&#13;&#10;        const matchesByName = farmerName &amp;&amp; productFarmerName === farmerName;&#13;&#10;&#13;&#10;        // Also try matching by email for additional verification&#13;&#10;        const farmerEmail = farmerData.farmer?.email;&#13;&#10;        const productFarmerEmail = product.farmer?.email || product.farmerEmail;&#13;&#10;        const matchesByEmail =&#13;&#10;          farmerEmail &amp;&amp; productFarmerEmail === farmerEmail;&#13;&#10;&#13;&#10;        const isMatch =&#13;&#10;          matchesById || matchesByObjectId || matchesByName || matchesByEmail;&#13;&#10;&#13;&#10;        return isMatch;&#13;&#10;      });&#13;&#10;&#13;&#10;      // Now fetch orders with farmer information&#13;&#10;      const ordersResponse = await fetch(&#13;&#10;        `/api/orders?farmerId=${farmerId}&amp;farmerEmail=${farmerData.farmer?.email || &quot;&quot;}`,&#13;&#10;        {&#13;&#10;          headers: { &quot;Cache-Control&quot;: &quot;no-cache&quot; },&#13;&#10;        },&#13;&#10;      );&#13;&#10;&#13;&#10;      const ordersData = await ordersResponse.json();&#13;&#10;&#13;&#10;      setFarmer(farmerData.farmer);&#13;&#10;      setProducts(farmerProducts); // Use matched products instead of farmer.products&#13;&#10;&#13;&#10;      // Calculate stats using matched products&#13;&#10;      const totalProducts = farmerProducts.length;&#13;&#10;      const activeProducts = farmerProducts.filter((p) =&gt; p.stock &gt; 0).length;&#13;&#10;      const totalStock = farmerProducts.reduce(&#13;&#10;        (sum, p) =&gt; sum + (p.stock || 0),&#13;&#10;        0,&#13;&#10;      );&#13;&#10;      const averagePrice =&#13;&#10;        farmerProducts.length &gt; 0&#13;&#10;          ? (&#13;&#10;              farmerProducts.reduce((sum, p) =&gt; sum + (p.price || 0), 0) /&#13;&#10;              farmerProducts.length&#13;&#10;            ).toFixed(2)&#13;&#10;          : 0;&#13;&#10;&#13;&#10;      // Enhanced average rating calculation&#13;&#10;&#13;&#10;      let averageRating = 0;&#13;&#10;      if (farmerProducts.length &gt; 0) {&#13;&#10;        const ratingsData = farmerProducts.map((p) =&gt; ({&#13;&#10;          name: p.name,&#13;&#10;          rating: parseFloat(p.averageRating) || 0,&#13;&#10;          reviewsCount: p.reviews?.length || 0,&#13;&#10;        }));&#13;&#10;&#13;&#10;        // Calculate simple average of product ratings (only products with ratings)&#13;&#10;        const productsWithRatings = farmerProducts.filter(&#13;&#10;          (p) =&gt; parseFloat(p.averageRating) &gt; 0,&#13;&#10;        );&#13;&#10;        if (productsWithRatings.length &gt; 0) {&#13;&#10;          const totalRating = productsWithRatings.reduce((sum, p) =&gt; {&#13;&#10;            return sum + parseFloat(p.averageRating);&#13;&#10;          }, 0);&#13;&#10;&#13;&#10;          averageRating = (totalRating / productsWithRatings.length).toFixed(1);&#13;&#10;        }&#13;&#10;      } else {&#13;&#10;      }&#13;&#10;&#13;&#10;      // Get categories from products&#13;&#10;      const categories = [&#13;&#10;        ...new Set(farmerProducts.map((p) =&gt; p.category).filter(Boolean)),&#13;&#10;      ];&#13;&#10;&#13;&#10;      // Get recent reviews from products (existing logic)&#13;&#10;      const productReviews = farmerProducts.flatMap((p) =&gt;&#13;&#10;        (p.reviews || []).map((review) =&gt; ({&#13;&#10;          ...review,&#13;&#10;          productName: p.name,&#13;&#10;          productId: p._id,&#13;&#10;          source: &quot;product&quot;,&#13;&#10;          // Ensure we have a valid date - use current date as fallback if createdAt is missing&#13;&#10;          createdAt:&#13;&#10;            review.createdAt || review.date || new Date().toISOString(),&#13;&#10;        })),&#13;&#10;      );&#13;&#10;&#13;&#10;      // Fetch reviews from the separate reviews collection&#13;&#10;      let separateReviews = [];&#13;&#10;      try {&#13;&#10;        const reviewsResponse = await fetch(&#13;&#10;          `/api/reviews?farmerId=${farmerId}`,&#13;&#10;          {&#13;&#10;            headers: { &quot;Cache-Control&quot;: &quot;no-cache&quot; },&#13;&#10;          },&#13;&#10;        );&#13;&#10;&#13;&#10;        if (reviewsResponse.ok) {&#13;&#10;          const reviewsData = await reviewsResponse.json();&#13;&#10;          separateReviews = (reviewsData.reviews || []).map((review) =&gt; {&#13;&#10;            // Find the product info from farmer's products&#13;&#10;            const relatedProduct = farmerProducts.find(&#13;&#10;              (product) =&gt;&#13;&#10;                product._id === review.productId ||&#13;&#10;                product._id === review.product?._id,&#13;&#10;            );&#13;&#10;&#13;&#10;            return {&#13;&#10;              ...review,&#13;&#10;              source: &quot;reviews_collection&quot;,&#13;&#10;              // Map product information from the farmer's products&#13;&#10;              productName:&#13;&#10;                review.productName || relatedProduct?.name || &quot;Unknown Product&quot;,&#13;&#10;              productId:&#13;&#10;                review.productId || review.product?._id || relatedProduct?._id,&#13;&#10;              // Ensure we have consistent field names&#13;&#10;              createdAt:&#13;&#10;                review.createdAt || review.date || new Date().toISOString(),&#13;&#10;            };&#13;&#10;          });&#13;&#10;          console.log(&#13;&#10;            `Found ${separateReviews.length} reviews from reviews collection`,&#13;&#10;          );&#13;&#10;        }&#13;&#10;      } catch (error) {&#13;&#10;        console.warn(&quot;Failed to fetch reviews from reviews collection:&quot;, error);&#13;&#10;      }&#13;&#10;&#13;&#10;      // Combine and deduplicate reviews&#13;&#10;      const allReviews = [...productReviews, ...separateReviews]&#13;&#10;        .sort((a, b) =&gt; new Date(b.createdAt) - new Date(a.createdAt))&#13;&#10;        .slice(0, 10); // Get top 10 most recent reviews&#13;&#10;&#13;&#10;      // Calculate revenue from orders - ONLY DELIVERED ORDERS (like analytics tab)&#13;&#10;      const farmerOrders = (ordersData.orders || []).filter((order) =&gt; {&#13;&#10;        return (&#13;&#10;          order.items &amp;&amp;&#13;&#10;          order.items.some(&#13;&#10;            (item) =&gt;&#13;&#10;              item.farmerId === farmerId ||&#13;&#10;              item.farmer?.id === farmerId ||&#13;&#10;              item.farmer?._id === farmerId ||&#13;&#10;              item.farmerEmail === farmerData.farmer?.email,&#13;&#10;          )&#13;&#10;        );&#13;&#10;      });&#13;&#10;&#13;&#10;      // CRITICAL: Only count DELIVERED orders for revenue calculation (matching analytics tab)&#13;&#10;      const deliveredOrders = farmerOrders.filter(&#13;&#10;        (order) =&gt; order.status === ORDER_STATUS.DELIVERED,&#13;&#10;      );&#13;&#10;&#13;&#10;      // Calculate total revenue using ONLY delivered orders&#13;&#10;      const actualTotalRevenue = deliveredOrders.reduce(&#13;&#10;        (sum, order) =&gt; sum + (order.farmerSubtotal || order.total || 0),&#13;&#10;        0,&#13;&#10;      );&#13;&#10;&#13;&#10;      // Calculate monthly revenue using ONLY delivered orders from this month&#13;&#10;      const thisMonthDeliveredOrders = deliveredOrders.filter((order) =&gt; {&#13;&#10;        const orderDate = new Date(order.createdAt);&#13;&#10;        const currentDate = new Date();&#13;&#10;        return (&#13;&#10;          orderDate.getMonth() === currentDate.getMonth() &amp;&amp;&#13;&#10;          orderDate.getFullYear() === currentDate.getFullYear()&#13;&#10;        );&#13;&#10;      });&#13;&#10;&#13;&#10;      const monthlyRevenue = thisMonthDeliveredOrders.reduce(&#13;&#10;        (sum, order) =&gt; sum + (order.farmerSubtotal || order.total || 0),&#13;&#10;        0,&#13;&#10;      );&#13;&#10;&#13;&#10;      // Calculate community reach based on delivered orders only&#13;&#10;      const uniqueCustomers = new Set();&#13;&#10;      deliveredOrders.forEach((order) =&gt; {&#13;&#10;        if (order.userId) {&#13;&#10;          uniqueCustomers.add(order.userId);&#13;&#10;        }&#13;&#10;        if (order.email) {&#13;&#10;          uniqueCustomers.add(order.email);&#13;&#10;        }&#13;&#10;      });&#13;&#10;&#13;&#10;      const actualFamiliesServed = uniqueCustomers.size;&#13;&#10;&#13;&#10;      setReviews(allReviews);&#13;&#10;      setStats({&#13;&#10;        totalProducts,&#13;&#10;        activeProducts,&#13;&#10;        totalStock,&#13;&#10;        averagePrice,&#13;&#10;        averageRating,&#13;&#10;        categories,&#13;&#10;        totalReviews: allReviews.length,&#13;&#10;        familiesServed: actualFamiliesServed,&#13;&#10;        farmSize: farmerData.farmer.farmSize || 0,&#13;&#10;        farmSizeUnit: farmerData.farmer.farmSizeUnit || &quot;acres&quot;,&#13;&#10;        yearsOfExperience:&#13;&#10;          farmerData.farmer.yearsOfExperience ||&#13;&#10;          calculateYearsOfExperience(&#13;&#10;            farmerData.farmer.joinedDate,&#13;&#10;            farmerData.farmer.createdAt,&#13;&#10;          ),&#13;&#10;        certificationStatus: farmerData.farmer.isCertified&#13;&#10;          ? &quot;Certified&quot;&#13;&#10;          : &quot;In Progress&quot;,&#13;&#10;        farmingMethods: farmerData.farmer.farmingMethods || [&#13;&#10;          &quot;Organic&quot;,&#13;&#10;          &quot;Sustainable&quot;,&#13;&#10;        ],&#13;&#10;        monthlyRevenue: monthlyRevenue.toFixed(2),&#13;&#10;        totalRevenue: actualTotalRevenue.toFixed(2),&#13;&#10;        inventoryValue: (parseFloat(averagePrice) * totalStock).toFixed(2),&#13;&#10;      });&#13;&#10;    } catch (error) {&#13;&#10;      console.error(&quot;Error fetching farmer data:&quot;, error);&#13;&#10;      setError(error.message);&#13;&#10;    } finally {&#13;&#10;      setLoading(false);&#13;&#10;    }&#13;&#10;  };&#13;&#10;&#13;&#10;  if (loading) {&#13;&#10;    return (&#13;&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#13;&#10;        &lt;div className=&quot;flex items-center justify-center min-h-screen&quot;&gt;&#13;&#10;          &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;            &lt;div className=&quot;relative&quot;&gt;&#13;&#10;              &lt;div className=&quot;animate-spin rounded-full h-20 w-20 border-4 border-green-200 dark:border-gray-600 border-t-green-600 dark:border-t-green-400 mx-auto mb-6&quot;&gt;&lt;/div&gt;&#13;&#10;              &lt;div className=&quot;absolute inset-0 flex items-center justify-center&quot;&gt;&#13;&#10;                &lt;i className=&quot;fas fa-user-tie text-green-600 dark:text-green-400 text-2xl&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;              Loading Farmer Profile&#13;&#10;            &lt;/h2&gt;&#13;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;              Discovering their story...&#13;&#10;            &lt;/p&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    );&#13;&#10;  }&#13;&#10;&#13;&#10;  if (error || !farmer) {&#13;&#10;    return (&#13;&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-red-50 via-orange-50 to-yellow-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#13;&#10;        &lt;div className=&quot;flex items-center justify-center min-h-screen&quot;&gt;&#13;&#10;          &lt;div className=&quot;text-center max-w-md mx-auto p-6&quot;&gt;&#13;&#10;            &lt;div className=&quot;text-red-500 text-6xl mb-6&quot;&gt;&#13;&#10;              &lt;i className=&quot;fas fa-exclamation-triangle&quot;&gt;&lt;/i&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#13;&#10;              Farmer Not Found&#13;&#10;            &lt;/h2&gt;&#13;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-8&quot;&gt;&#13;&#10;              {error ||&#13;&#10;                &quot;The farmer you're looking for doesn't exist or has been removed.&quot;}&#13;&#10;            &lt;/p&gt;&#13;&#10;            &lt;div className=&quot;flex flex-col sm:flex-row gap-4 justify-center&quot;&gt;&#13;&#10;              &lt;button&#13;&#10;                onClick={() =&gt; router.back()}&#13;&#10;                className=&quot;bg-gray-600 hover:bg-gray-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#13;&#10;              &gt;&#13;&#10;                &lt;i className=&quot;fas fa-arrow-left mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;                Go Back&#13;&#10;              &lt;/button&gt;&#13;&#10;              &lt;Link&#13;&#10;                href=&quot;/farmers&quot;&#13;&#10;                className=&quot;bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#13;&#10;              &gt;&#13;&#10;                &lt;i className=&quot;fas fa-users mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;                Browse Farmers&#13;&#10;              &lt;/Link&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    );&#13;&#10;  }&#13;&#10;&#13;&#10;  return (&#13;&#10;    &lt;&gt;&#13;&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-green-50 via-emerald-50 to-teal-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#13;&#10;        {/* Hero Section with Dynamic Farmer Story */}&#13;&#10;        &lt;div className=&quot;relative overflow-hidden&quot;&gt;&#13;&#10;          &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-green-600 via-emerald-600 to-teal-600&quot;&gt;&lt;/div&gt;&#13;&#10;          &lt;div className=&quot;absolute inset-0 bg-black/20&quot;&gt;&lt;/div&gt;&#13;&#10;&#13;&#10;          &lt;div className=&quot;relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20&quot;&gt;&#13;&#10;            {/* Breadcrumb */}&#13;&#10;            &lt;nav className=&quot;flex mb-8&quot; aria-label=&quot;Breadcrumb&quot;&gt;&#13;&#10;              &lt;ol className=&quot;flex items-center space-x-2 text-sm&quot;&gt;&#13;&#10;                &lt;li&gt;&#13;&#10;                  &lt;Link&#13;&#10;                    href=&quot;/&quot;&#13;&#10;                    className=&quot;text-white/80 hover:text-white transition-colors flex items-center&quot;&#13;&#10;                  &gt;&#13;&#10;                    &lt;i className=&quot;fas fa-home mr-1&quot;&gt;&lt;/i&gt;&#13;&#10;                    Home&#13;&#10;                  &lt;/Link&gt;&#13;&#10;                &lt;/li&gt;&#13;&#10;                &lt;li&gt;&#13;&#10;                  &lt;i className=&quot;fas fa-chevron-right text-white/60 text-xs&quot;&gt;&lt;/i&gt;&#13;&#10;                &lt;/li&gt;&#13;&#10;                &lt;li&gt;&#13;&#10;                  &lt;Link&#13;&#10;                    href=&quot;/farmers&quot;&#13;&#10;                    className=&quot;text-white/80 hover:text-white transition-colors&quot;&#13;&#10;                  &gt;&#13;&#10;                    Farmers&#13;&#10;                  &lt;/Link&gt;&#13;&#10;                &lt;/li&gt;&#13;&#10;                &lt;li&gt;&#13;&#10;                  &lt;i className=&quot;fas fa-chevron-right text-white/60 text-xs&quot;&gt;&lt;/i&gt;&#13;&#10;                &lt;/li&gt;&#13;&#10;                &lt;li className=&quot;text-white font-medium&quot;&gt;{farmer.name}&lt;/li&gt;&#13;&#10;              &lt;/ol&gt;&#13;&#10;            &lt;/nav&gt;&#13;&#10;&#13;&#10;            {/* Dynamic Farmer Profile Header */}&#13;&#10;            &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-3 gap-12 items-start&quot;&gt;&#13;&#10;              {/* Profile Image and Basic Info */}&#13;&#10;              &lt;div className=&quot;text-center lg:text-left&quot;&gt;&#13;&#10;                &lt;div className=&quot;relative inline-block mb-6&quot;&gt;&#13;&#10;                  &lt;div className=&quot;w-48 h-48 mx-auto lg:mx-0 rounded-full bg-gradient-to-br from-white/20 to-white/10 backdrop-blur-sm border-4 border-white/30 overflow-hidden shadow-2xl&quot;&gt;&#13;&#10;                    {farmer.profilePicture ? (&#13;&#10;                      &lt;img&#13;&#10;                        src={farmer.profilePicture}&#13;&#10;                        alt={farmer.name}&#13;&#10;                        className=&quot;w-full h-full object-cover&quot;&#13;&#10;                      /&gt;&#13;&#10;                    ) : (&#13;&#10;                      &lt;div className=&quot;w-full h-full flex items-center justify-center&quot;&gt;&#13;&#10;                        &lt;i className=&quot;fas fa-user-tie text-6xl text-white/80&quot;&gt;&lt;/i&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    )}&#13;&#10;                  &lt;/div&gt;&#13;&#10;                  {farmer.verified &amp;&amp; (&#13;&#10;                    &lt;div className=&quot;absolute -top-2 -right-2 bg-green-500 text-white rounded-full p-3 shadow-lg&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-check text-lg&quot;&gt;&lt;/i&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  )}&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                &lt;h1 className=&quot;text-4xl lg:text-5xl font-bold text-white mb-2&quot;&gt;&#13;&#10;                  {farmer.name}&#13;&#10;                &lt;/h1&gt;&#13;&#10;                &lt;p className=&quot;text-xl text-white/90 mb-4&quot;&gt;&#13;&#10;                  {farmer.farmInfo?.farmName ||&#13;&#10;                    farmer.farmName ||&#13;&#10;                    `${farmer.name}'s Farm`}&#13;&#10;                &lt;/p&gt;&#13;&#10;                &lt;div className=&quot;flex items-center justify-center lg:justify-start text-white/80 mb-6&quot;&gt;&#13;&#10;                  &lt;i className=&quot;fas fa-map-marker-alt mr-2 text-yellow-400&quot;&gt;&lt;/i&gt;&#13;&#10;                  &lt;span className=&quot;text-lg&quot;&gt;&#13;&#10;                    {farmer.address?.street &amp;&amp; farmer.address?.city&#13;&#10;                      ? `${farmer.address.street}, ${farmer.address.city}${farmer.address.state ? `, ${farmer.address.state}` : &quot;&quot;}`&#13;&#10;                      : farmer.address?.city &amp;&amp; farmer.address?.state&#13;&#10;                        ? `${farmer.address.city}, ${farmer.address.state}${farmer.address.country ? `, ${farmer.address.country}` : &quot;&quot;}`&#13;&#10;                        : farmer.location || &quot;Location not specified&quot;}&#13;&#10;                  &lt;/span&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {/* Dynamic Quick Stats - Use stats.yearsOfExperience instead of recalculating */}&#13;&#10;                &lt;div className=&quot;grid grid-cols-2 gap-4 mb-8&quot;&gt;&#13;&#10;                  &lt;div className=&quot;bg-white/10 backdrop-blur-sm rounded-lg p-4 border border-white/20&quot;&gt;&#13;&#10;                    &lt;div className=&quot;text-2xl font-bold text-white&quot;&gt;&#13;&#10;                      {stats.yearsOfExperience}+&#13;&#10;                    &lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;text-white/80 text-sm&quot;&gt;&#13;&#10;                      Years Experience&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                  &lt;div className=&quot;bg-white/10 backdrop-blur-sm rounded-lg p-4 border border-white/20&quot;&gt;&#13;&#10;                    &lt;div className=&quot;text-2xl font-bold text-white&quot;&gt;&#13;&#10;                      {stats.totalProducts}&#13;&#10;                    &lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;text-white/80 text-sm&quot;&gt;Products&lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                  &lt;div className=&quot;bg-white/10 backdrop-blur-sm rounded-lg p-4 border border-white/20&quot;&gt;&#13;&#10;                    &lt;div className=&quot;text-2xl font-bold text-white&quot;&gt;&#13;&#10;                      {stats.averageRating || &quot;N/A&quot;}&#13;&#10;                    &lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;text-white/80 text-sm&quot;&gt;Avg Rating&lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                  &lt;div className=&quot;bg-white/10 backdrop-blur-sm rounded-lg p-4 border border-white/20&quot;&gt;&#13;&#10;                    &lt;div className=&quot;text-2xl font-bold text-white&quot;&gt;&#13;&#10;                      {stats.categories?.length || 0}&#13;&#10;                    &lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;text-white/80 text-sm&quot;&gt;Categories&lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;&#13;&#10;              {/* Dynamic Farmer's Mission &amp; Values */}&#13;&#10;              &lt;div className=&quot;lg:col-span-2&quot;&gt;&#13;&#10;                &lt;div className=&quot;bg-white/10 backdrop-blur-sm rounded-2xl p-8 border border-white/20&quot;&gt;&#13;&#10;                  &lt;h2 className=&quot;text-3xl font-bold text-white mb-6 flex items-center&quot;&gt;&#13;&#10;                    &lt;i className=&quot;fas fa-heart mr-3 text-red-400&quot;&gt;&lt;/i&gt;&#13;&#10;                    Our Mission&#13;&#10;                  &lt;/h2&gt;&#13;&#10;                  &lt;p className=&quot;text-white/90 text-lg leading-relaxed mb-6&quot;&gt;&#13;&#10;                    {farmer.bio ||&#13;&#10;                      `${farmer.name} is dedicated to providing the freshest, highest-quality produce through sustainable farming practices. Our farm has been serving the community with passion and commitment to environmental stewardship.`}&#13;&#10;                  &lt;/p&gt;&#13;&#10;                  {/* Dynamic Specializations - Only show once here */}&#13;&#10;                  {farmer.specializations &amp;&amp;&#13;&#10;                    farmer.specializations.length &gt; 0 &amp;&amp; (&#13;&#10;                      &lt;div className=&quot;mb-6&quot;&gt;&#13;&#10;                        &lt;h3 className=&quot;text-white font-semibold mb-3&quot;&gt;&#13;&#10;                          Our Specializations:&#13;&#10;                        &lt;/h3&gt;&#13;&#10;                        &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#13;&#10;                          {farmer.specializations.map((spec, index) =&gt; (&#13;&#10;                            &lt;span&#13;&#10;                              key={index}&#13;&#10;                              className=&quot;bg-white/20 backdrop-blur-sm text-white px-3 py-1 rounded-full text-sm font-medium border border-white/30&quot;&#13;&#10;                            &gt;&#13;&#10;                              {spec}&#13;&#10;                            &lt;/span&gt;&#13;&#10;                          ))}&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    )}&#13;&#10;                  {/* Dynamic Core Values based on farmer's specializations and methods */}&#13;&#10;                  &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-4&quot;&gt;&#13;&#10;                    {farmer.specializations &amp;&amp; farmer.specializations.length &gt; 0&#13;&#10;                      ? farmer.specializations&#13;&#10;                          .slice(0, 3)&#13;&#10;                          .map((specialization, index) =&gt;&#13;&#10;                            renderSpecializationCard(specialization, index),&#13;&#10;                          )&#13;&#10;                      : renderFallbackCoreValues()}&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        {/* Dynamic Main Content Tabs */}&#13;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16&quot;&gt;&#13;&#10;          {/* Tab Navigation */}&#13;&#10;          &lt;div className=&quot;flex flex-wrap justify-center gap-2 mb-12&quot;&gt;&#13;&#10;            {[&#13;&#10;              { id: &quot;story&quot;, label: &quot;Our Story&quot;, icon: &quot;fas fa-book-open&quot; },&#13;&#10;              {&#13;&#10;                id: &quot;products&quot;,&#13;&#10;                label: &quot;Product Overview&quot;,&#13;&#10;                icon: &quot;fas fa-seedling&quot;,&#13;&#10;              },&#13;&#10;              { id: &quot;reviews&quot;, label: &quot;Customer Reviews&quot;, icon: &quot;fas fa-star&quot; },&#13;&#10;              {&#13;&#10;                id: &quot;stats&quot;,&#13;&#10;                label: &quot;Farm Statistics&quot;,&#13;&#10;                icon: &quot;fas fa-chart-bar&quot;,&#13;&#10;              },&#13;&#10;            ].map((tab) =&gt; (&#13;&#10;              &lt;button&#13;&#10;                key={tab.id}&#13;&#10;                onClick={() =&gt; setActiveTab(tab.id)}&#13;&#10;                className={`px-6 py-3 rounded-full font-medium transition-all duration-300 flex items-center ${&#13;&#10;                  activeTab === tab.id&#13;&#10;                    ? &quot;bg-green-600 text-white shadow-lg&quot;&#13;&#10;                    : &quot;bg-white dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-green-50 dark:hover:bg-gray-700&quot;&#13;&#10;                }`}&#13;&#10;              &gt;&#13;&#10;                &lt;i className={`${tab.icon} mr-2`}&gt;&lt;/i&gt;&#13;&#10;                {tab.label}&#13;&#10;              &lt;/button&gt;&#13;&#10;            ))}&#13;&#10;          &lt;/div&gt;&#13;&#10;&#13;&#10;          {/* Dynamic Tab Content */}&#13;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-8&quot;&gt;&#13;&#10;            {activeTab === &quot;story&quot; &amp;&amp; (&#13;&#10;              &lt;div className=&quot;space-y-8&quot;&gt;&#13;&#10;                &lt;div className=&quot;text-center mb-8&quot;&gt;&#13;&#10;                  &lt;h2 className=&quot;text-4xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#13;&#10;                    Our Farming Journey&#13;&#10;                  &lt;/h2&gt;&#13;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg max-w-3xl mx-auto&quot;&gt;&#13;&#10;                    Every farm has a story. Here&amp;apos;s ours - a tale of&#13;&#10;                    passion, dedication, and love for the land.&#13;&#10;                  &lt;/p&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12 items-center&quot;&gt;&#13;&#10;                  &lt;div&gt;&#13;&#10;                    &lt;h3 className=&quot;text-2xl font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#13;&#10;                      {farmer.farmInfo?.farmName&#13;&#10;                        ? `About ${farmer.farmInfo.farmName}`&#13;&#10;                        : &quot;The Beginning&quot;}&#13;&#10;                    &lt;/h3&gt;&#13;&#10;&#13;&#10;                    {/* Dynamic Farm Description from Profile Settings */}&#13;&#10;                    &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed mb-6&quot;&gt;&#13;&#10;                      {farmer.farmInfo?.farmDescription ||&#13;&#10;                        farmer.bio ||&#13;&#10;                        `${farmer.name} started their farming journey in ${new Date(&#13;&#10;                          farmer.joinedDate || farmer.createdAt,&#13;&#10;                        ).getFullYear()} with a simple dream: to grow the best produce possible while caring for the environment. What began as a small family operation has grown into a trusted source of fresh, healthy food for our community.`}&#13;&#10;                    &lt;/p&gt;&#13;&#10;&#13;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#13;&#10;                      {/* Farm Established */}&#13;&#10;                      &lt;div className=&quot;flex items-center&quot;&gt;&#13;&#10;                        &lt;div className=&quot;w-10 h-10 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mr-4&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-calendar text-green-600 dark:text-green-400&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div&gt;&#13;&#10;                          &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                            Farm Established&#13;&#10;                          &lt;/h4&gt;&#13;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                            {farmer.farmInfo?.establishedYear ||&#13;&#10;                              new Date(&#13;&#10;                                farmer.joinedDate || farmer.createdAt,&#13;&#10;                              ).getFullYear()}&#13;&#10;                          &lt;/p&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;&#13;&#10;                      {/* Farm Type */}&#13;&#10;                      {farmer.farmInfo?.farmType &amp;&amp; (&#13;&#10;                        &lt;div className=&quot;flex items-center&quot;&gt;&#13;&#10;                          &lt;div className=&quot;w-10 h-10 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mr-4&quot;&gt;&#13;&#10;                            &lt;i className=&quot;fas fa-tractor text-blue-600 dark:text-blue-400&quot;&gt;&lt;/i&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div&gt;&#13;&#10;                            &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                              Farm Type&#13;&#10;                            &lt;/h4&gt;&#13;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                              {farmer.farmInfo.farmType}&#13;&#10;                            &lt;/p&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      )}&#13;&#10;&#13;&#10;                      {/* Farm Size */}&#13;&#10;                      {farmer.farmInfo?.farmSize &amp;&amp; (&#13;&#10;                        &lt;div className=&quot;flex items-center&quot;&gt;&#13;&#10;                          &lt;div className=&quot;w-10 h-10 bg-yellow-100 dark:bg-yellow-900 rounded-full flex items-center justify-center mr-4&quot;&gt;&#13;&#10;                            &lt;i className=&quot;fas fa-expand-arrows-alt text-yellow-600 dark:text-yellow-400&quot;&gt;&lt;/i&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div&gt;&#13;&#10;                            &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                              Farm Size&#13;&#10;                            &lt;/h4&gt;&#13;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                              {farmer.farmInfo.farmSize} acres&#13;&#10;                            &lt;/p&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      )}&#13;&#10;&#13;&#10;                      {/* Our Mission */}&#13;&#10;                      &lt;div className=&quot;flex items-center&quot;&gt;&#13;&#10;                        &lt;div className=&quot;w-10 h-10 bg-purple-100 dark:bg-purple-900 rounded-full flex items-center justify-center mr-4&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-heart text-purple-600 dark:text-purple-400&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div&gt;&#13;&#10;                          &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                            Our Mission&#13;&#10;                          &lt;/h4&gt;&#13;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                            Providing fresh, sustainable produce to our&#13;&#10;                            community&#13;&#10;                          &lt;/p&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;&#13;&#10;                      {/* Farming Philosophy */}&#13;&#10;                      &lt;div className=&quot;flex items-center&quot;&gt;&#13;&#10;                        &lt;div className=&quot;w-10 h-10 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mr-4&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-leaf text-green-600 dark:text-green-400&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div&gt;&#13;&#10;                          &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                            Farming Philosophy&#13;&#10;                          &lt;/h4&gt;&#13;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                            {farmer.farmInfo?.farmingMethods &amp;&amp;&#13;&#10;                            farmer.farmInfo.farmingMethods.length &gt; 0&#13;&#10;                              ? `${farmer.farmInfo.farmingMethods.join(&quot;, &quot;)} practices`&#13;&#10;                              : stats.farmingMethods?.length &gt; 0&#13;&#10;                                ? `${stats.farmingMethods.join(&quot;, &quot;)} practices`&#13;&#10;                                : &quot;Sustainable and eco-friendly methods&quot;}&#13;&#10;                          &lt;/p&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;&#13;&#10;                    {/* Certifications Section */}&#13;&#10;                    {farmer.farmInfo?.certifications &amp;&amp;&#13;&#10;                      farmer.farmInfo.certifications.length &gt; 0 &amp;&amp; (&#13;&#10;                        &lt;div className=&quot;mt-8&quot;&gt;&#13;&#10;                          &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#13;&#10;                            Our Certifications&#13;&#10;                          &lt;/h4&gt;&#13;&#10;                          &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#13;&#10;                            {farmer.farmInfo.certifications.map(&#13;&#10;                              (cert, index) =&gt; (&#13;&#10;                                &lt;span&#13;&#10;                                  key={index}&#13;&#10;                                  className=&quot;bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-3 py-1 rounded-full text-sm font-medium border border-green-200 dark:border-green-800&quot;&#13;&#10;                                &gt;&#13;&#10;                                  &lt;i className=&quot;fas fa-certificate mr-1&quot;&gt;&lt;/i&gt;&#13;&#10;                                  {cert}&#13;&#10;                                &lt;/span&gt;&#13;&#10;                              ),&#13;&#10;                            )}&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      )}&#13;&#10;                  &lt;/div&gt;&#13;&#10;&#13;&#10;                  &lt;div className=&quot;grid grid-cols-2 gap-4&quot;&gt;&#13;&#10;                    {/* Show farming achievements and highlights */}&#13;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900 dark:to-emerald-900 p-6 rounded-xl&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-certificate text-3xl text-green-600 dark:text-green-400 mb-4&quot;&gt;&lt;/i&gt;&#13;&#10;                      &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;                        {farmer.isCertified&#13;&#10;                          ? &quot;Certified Organic&quot;&#13;&#10;                          : farmer.farmInfo?.farmType || &quot;Quality Farming&quot;}&#13;&#10;                      &lt;/h4&gt;&#13;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#13;&#10;                        {farmer.isCertified&#13;&#10;                          ? &quot;Officially certified organic farming&quot;&#13;&#10;                          : farmer.farmInfo?.farmType&#13;&#10;                            ? `Specialized in ${farmer.farmInfo.farmType.toLowerCase()} farming`&#13;&#10;                            : &quot;Committed to quality and safety standards&quot;}&#13;&#10;                      &lt;/p&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;&#13;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900 dark:to-cyan-900 p-6 rounded-xl&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-users text-3xl text-blue-600 dark:text-blue-400 mb-4&quot;&gt;&lt;/i&gt;&#13;&#10;                      &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;                        Community Impact&#13;&#10;                      &lt;/h4&gt;&#13;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#13;&#10;                        Serving{&quot; &quot;}&#13;&#10;                        {farmer.address?.street &amp;&amp; farmer.address?.city&#13;&#10;                          ? `${farmer.address.street}, ${farmer.address.city}${farmer.address.state ? `, ${farmer.address.state}` : &quot;&quot;}`&#13;&#10;                          : farmer.address?.city &amp;&amp; farmer.address?.state&#13;&#10;                            ? `${farmer.address.city}, ${farmer.address.state}`&#13;&#10;                            : farmer.location || &quot;the community&quot;}{&quot; &quot;}&#13;&#10;                        with {stats.totalProducts} quality products&#13;&#10;                      &lt;/p&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;&#13;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900 dark:to-pink-900 p-6 rounded-xl&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-star text-3xl text-purple-600 dark:text-purple-400 mb-4&quot;&gt;&lt;/i&gt;&#13;&#10;                      &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;                        Customer Satisfaction&#13;&#10;                      &lt;/h4&gt;&#13;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#13;&#10;                        {stats.averageRating &gt; 0&#13;&#10;                          ? `${stats.averageRating}/5 average rating`&#13;&#10;                          : &quot;Building trust with every harvest&quot;}&#13;&#10;                      &lt;/p&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;&#13;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-yellow-50 to-orange-50 dark:from-yellow-900 dark:to-orange-900 p-6 rounded-xl&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-seedling text-3xl text-yellow-600 dark:text-yellow-400 mb-4&quot;&gt;&lt;/i&gt;&#13;&#10;                      &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;                        {farmer.farmInfo?.farmSize&#13;&#10;                          ? &quot;Farm Size&quot;&#13;&#10;                          : &quot;Product Variety&quot;}&#13;&#10;                      &lt;/h4&gt;&#13;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#13;&#10;                        {farmer.farmInfo?.farmSize&#13;&#10;                          ? `${farmer.farmInfo.farmSize} acres of sustainable farming`&#13;&#10;                          : `${stats.totalProducts} products across ${stats.categories?.length || 0} categories`}&#13;&#10;                      &lt;/p&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            )}&#13;&#10;&#13;&#10;            {activeTab === &quot;products&quot; &amp;&amp; (&#13;&#10;              &lt;div className=&quot;space-y-8&quot;&gt;&#13;&#10;                &lt;div className=&quot;text-center mb-8&quot;&gt;&#13;&#10;                  &lt;h2 className=&quot;text-4xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#13;&#10;                    Our Product Categories&#13;&#10;                  &lt;/h2&gt;&#13;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg max-w-3xl mx-auto&quot;&gt;&#13;&#10;                    We grow a diverse range of fresh produce across{&quot; &quot;}&#13;&#10;                    {stats.categories?.length || 0} categories.&#13;&#10;                  &lt;/p&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {stats.categories &amp;&amp; stats.categories.length &gt; 0 ? (&#13;&#10;                  &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12&quot;&gt;&#13;&#10;                    {stats.categories.map((category, index) =&gt; {&#13;&#10;                      const categoryProducts = products.filter(&#13;&#10;                        (p) =&gt; p.category === category,&#13;&#10;                      );&#13;&#10;                      const avgPrice =&#13;&#10;                        categoryProducts.length &gt; 0&#13;&#10;                          ? (&#13;&#10;                              categoryProducts.reduce(&#13;&#10;                                (sum, p) =&gt; sum + (p.price || 0),&#13;&#10;                                0,&#13;&#10;                              ) / categoryProducts.length&#13;&#10;                            ).toFixed(2)&#13;&#10;                          : 0;&#13;&#10;&#13;&#10;                      return (&#13;&#10;                        &lt;div&#13;&#10;                          key={index}&#13;&#10;                          className=&quot;bg-gradient-to-br from-green-50 to-emerald-50 dark:from-gray-700 dark:to-gray-600 p-8 rounded-xl shadow-lg&quot;&#13;&#10;                        &gt;&#13;&#10;                          &lt;div className=&quot;w-16 h-16 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-6&quot;&gt;&#13;&#10;                            &lt;i className=&quot;fas fa-leaf text-white text-2xl&quot;&gt;&lt;/i&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white text-center mb-4&quot;&gt;&#13;&#10;                            {category}&#13;&#10;                          &lt;/h3&gt;&#13;&#10;                          &lt;div className=&quot;text-center space-y-2&quot;&gt;&#13;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                              {categoryProducts.length} products&#13;&#10;                            &lt;/p&gt;&#13;&#10;                            &lt;p className=&quot;text-lg font-bold text-green-600 dark:text-green-400&quot;&gt;&#13;&#10;                              Avg: ${avgPrice}&#13;&#10;                            &lt;/p&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      );&#13;&#10;                    })}&#13;&#10;                  &lt;/div&gt;&#13;&#10;                ) : (&#13;&#10;                  &lt;div className=&quot;text-center py-12&quot;&gt;&#13;&#10;                    &lt;i className=&quot;fas fa-seedling text-6xl text-gray-300 dark:text-gray-600 mb-4&quot;&gt;&lt;/i&gt;&#13;&#10;                    &lt;p className=&quot;text-gray-500 dark:text-gray-400 text-lg&quot;&gt;&#13;&#10;                      No products available yet. Check back soon!&#13;&#10;                    &lt;/p&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                )}&#13;&#10;&#13;&#10;                {/* Featured Products Preview */}&#13;&#10;                {products.length &gt; 0 &amp;&amp; (&#13;&#10;                  &lt;div&gt;&#13;&#10;                    &lt;h3 className=&quot;text-2xl font-semibold text-gray-900 dark:text-white mb-6 text-center&quot;&gt;&#13;&#10;                      Featured Products&#13;&#10;                    &lt;/h3&gt;&#13;&#10;                    &lt;div className=&quot;space-y-6&quot;&gt;&#13;&#10;                      {products.slice(0, 3).map((product, index) =&gt; (&#13;&#10;                        &lt;div&#13;&#10;                          key={product._id}&#13;&#10;                          className={`flex ${&#13;&#10;                            index % 2 === 0 ? &quot;flex-row&quot; : &quot;flex-row-reverse&quot;&#13;&#10;                          } items-center gap-8 bg-gradient-to-r ${&#13;&#10;                            index % 3 === 0&#13;&#10;                              ? &quot;from-green-50 to-emerald-50 dark:from-green-900/30 dark:to-emerald-900/30&quot;&#13;&#10;                              : index % 3 === 1&#13;&#10;                                ? &quot;from-blue-50 to-cyan-50 dark:from-blue-900/30 dark:to-cyan-900/30&quot;&#13;&#10;                                : &quot;from-purple-50 to-pink-50 dark:from-purple-900/30 dark:to-pink-900/30&quot;&#13;&#10;                          } p-8 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-[1.02]`}&#13;&#10;                        &gt;&#13;&#10;                          {/* Product Image */}&#13;&#10;                          &lt;div className=&quot;flex-shrink-0&quot;&gt;&#13;&#10;                            &lt;div className=&quot;w-32 h-32 rounded-2xl overflow-hidden shadow-lg&quot;&gt;&#13;&#10;                              {product.images &amp;&amp; product.images[0] ? (&#13;&#10;                                &lt;img&#13;&#10;                                  src={product.images[0]}&#13;&#10;                                  alt={product.name}&#13;&#10;                                  className=&quot;w-full h-full object-cover&quot;&#13;&#10;                                /&gt;&#13;&#10;                              ) : (&#13;&#10;                                &lt;div className=&quot;w-full h-full bg-gray-200 dark:bg-gray-600 flex items-center justify-center&quot;&gt;&#13;&#10;                                  &lt;i className=&quot;fas fa-image text-gray-400 text-3xl&quot;&gt;&lt;/i&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;                              )}&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;&#13;&#10;                          {/* Product Info */}&#13;&#10;                          &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#13;&#10;                            &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#13;&#10;                              &lt;div className=&quot;flex-1&quot;&gt;&#13;&#10;                                &lt;h4 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;                                  {product.name}&#13;&#10;                                &lt;/h4&gt;&#13;&#10;                                &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-3&quot;&gt;&#13;&#10;                                  Category: {product.category}&#13;&#10;                                &lt;/p&gt;&#13;&#10;&#13;&#10;                                {/* Rating */}&#13;&#10;                                {product.averageRating &amp;&amp; (&#13;&#10;                                  &lt;div className=&quot;flex items-center mb-3&quot;&gt;&#13;&#10;                                    &lt;div className=&quot;flex text-yellow-400 mr-2&quot;&gt;&#13;&#10;                                      {[...Array(5)].map((_, i) =&gt; (&#13;&#10;                                        &lt;i&#13;&#10;                                          key={i}&#13;&#10;                                          className={`fas fa-star text-sm ${&#13;&#10;                                            i &lt;&#13;&#10;                                            Math.floor(product.averageRating)&#13;&#10;                                              ? &quot;text-yellow-400&quot;&#13;&#10;                                              : &quot;text-gray-300 dark:text-gray-600&quot;&#13;&#10;                                          }`}&#13;&#10;                                        &gt;&lt;/i&gt;&#13;&#10;                                      ))}&#13;&#10;                                    &lt;/div&gt;&#13;&#10;                                    &lt;span className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                                      ({product.averageRating}/5)&#13;&#10;                                    &lt;/span&gt;&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                )}&#13;&#10;&#13;&#10;                                {/* Product Description */}&#13;&#10;                                {product.description &amp;&amp; (&#13;&#10;                                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm mb-4 line-clamp-2&quot;&gt;&#13;&#10;                                    {product.description}&#13;&#10;                                  &lt;/p&gt;&#13;&#10;                                )}&#13;&#10;                              &lt;/div&gt;&#13;&#10;&#13;&#10;                              {/* Price and Actions */}&#13;&#10;                              &lt;div className=&quot;flex flex-col items-end gap-4 ml-6&quot;&gt;&#13;&#10;                                &lt;div className=&quot;text-right&quot;&gt;&#13;&#10;                                  &lt;div className=&quot;text-3xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#13;&#10;                                    ${product.price}&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                  &lt;div&#13;&#10;                                    className={`text-sm ${&#13;&#10;                                      product.stock &gt; 0&#13;&#10;                                        ? &quot;text-green-600 dark:text-green-400&quot;&#13;&#10;                                        : &quot;text-red-500&quot;&#13;&#10;                                    }`}&#13;&#10;                                  &gt;&#13;&#10;                                    {product.stock &gt; 0&#13;&#10;                                      ? `${product.stock} available`&#13;&#10;                                      : &quot;Out of stock&quot;}&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;&#13;&#10;                                &lt;div className=&quot;flex gap-3&quot;&gt;&#13;&#10;                                  &lt;button&#13;&#10;                                    className={`px-6 py-3 rounded-lg font-medium transition-all ${&#13;&#10;                                      product.stock &gt; 0&#13;&#10;                                        ? &quot;bg-green-600 hover:bg-green-700 text-white&quot;&#13;&#10;                                        : &quot;bg-gray-300 text-gray-500 cursor-not-allowed&quot;&#13;&#10;                                    }`}&#13;&#10;                                    disabled={product.stock === 0}&#13;&#10;                                  &gt;&#13;&#10;                                    &lt;i className=&quot;fas fa-cart-plus mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;                                    {product.stock &gt; 0&#13;&#10;                                      ? &quot;Add to Cart&quot;&#13;&#10;                                      : &quot;Sold Out&quot;}&#13;&#10;                                  &lt;/button&gt;&#13;&#10;&#13;&#10;                                  &lt;button className=&quot;p-3 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-600 dark:text-gray-300 rounded-lg transition-all&quot;&gt;&#13;&#10;                                    &lt;i className=&quot;fas fa-heart&quot;&gt;&lt;/i&gt;&#13;&#10;                                  &lt;/button&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;                              &lt;/div&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      ))}&#13;&#10;                    &lt;/div&gt;&#13;&#10;&#13;&#10;                    {/* View All Products Button */}&#13;&#10;                    &lt;div className=&quot;text-center mt-8&quot;&gt;&#13;&#10;                      &lt;Link&#13;&#10;                        href={`/farmers/${farmerId}/details`}&#13;&#10;                        className=&quot;inline-flex items-center px-8 py-4 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg&quot;&#13;&#10;                      &gt;&#13;&#10;                        &lt;i className=&quot;fas fa-store mr-3&quot;&gt;&lt;/i&gt;&#13;&#10;                        View All {stats.totalProducts} Products&#13;&#10;                        &lt;i className=&quot;fas fa-arrow-right ml-3&quot;&gt;&lt;/i&gt;&#13;&#10;                      &lt;/Link&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                )}&#13;&#10;              &lt;/div&gt;&#13;&#10;            )}&#13;&#10;&#13;&#10;            {activeTab === &quot;reviews&quot; &amp;&amp; (&#13;&#10;              &lt;div className=&quot;space-y-8&quot;&gt;&#13;&#10;                &lt;div className=&quot;text-center mb-12&quot;&gt;&#13;&#10;                  &lt;h2 className=&quot;text-4xl font-bold bg-gradient-to-r from-purple-600 via-pink-600 to-rose-600 bg-clip-text text-transparent mb-6&quot;&gt;&#13;&#10;                     Customer Testimonials &#13;&#10;                  &lt;/h2&gt;&#13;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg max-w-3xl mx-auto leading-relaxed&quot;&gt;&#13;&#10;                    Discover what our valued customers are saying about their&#13;&#10;                    experience with our fresh, quality produce and exceptional&#13;&#10;                    service.&#13;&#10;                  &lt;/p&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {reviews.length &gt; 0 ? (&#13;&#10;                  &lt;div className=&quot;space-y-8&quot;&gt;&#13;&#10;                    {/* Reviews Statistics Banner */}&#13;&#10;                    &lt;div className=&quot;bg-gradient-to-r from-purple-600 via-pink-600 to-rose-600 rounded-3xl p-8 mb-12&quot;&gt;&#13;&#10;                      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8 text-white text-center&quot;&gt;&#13;&#10;                        &lt;div className=&quot;group&quot;&gt;&#13;&#10;                          &lt;div className=&quot;text-5xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#13;&#10;                            {reviews.length}&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;text-white/90 text-lg&quot;&gt;&#13;&#10;                            Total Reviews&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;w-16 h-1 bg-white/30 mx-auto mt-2 rounded-full&quot;&gt;&lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;group&quot;&gt;&#13;&#10;                          &lt;div className=&quot;text-5xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#13;&#10;                            {stats.averageRating}★&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;text-white/90 text-lg&quot;&gt;&#13;&#10;                            Average Rating&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;flex justify-center mt-2&quot;&gt;&#13;&#10;                            {[...Array(5)].map((_, i) =&gt; (&#13;&#10;                              &lt;i&#13;&#10;                                key={i}&#13;&#10;                                className={`fas fa-star text-lg ${&#13;&#10;                                  i &lt; Math.floor(stats.averageRating || 0)&#13;&#10;                                    ? &quot;text-yellow-300&quot;&#13;&#10;                                    : &quot;text-white/30&quot;&#13;&#10;                                }`}&#13;&#10;                              &gt;&lt;/i&gt;&#13;&#10;                            ))}&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;group&quot;&gt;&#13;&#10;                          &lt;div className=&quot;text-5xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#13;&#10;                            98%&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;text-white/90 text-lg&quot;&gt;&#13;&#10;                            Satisfaction Rate&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;w-16 h-1 bg-white/30 mx-auto mt-2 rounded-full&quot;&gt;&lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;&#13;&#10;                    {/* Reviews Grid with Different Layouts */}&#13;&#10;                    &lt;div className=&quot;space-y-8&quot;&gt;&#13;&#10;                      {reviews.map((review, index) =&gt; {&#13;&#10;                        const layoutVariants = [&#13;&#10;                          &quot;premium-testimonial&quot;,&#13;&#10;                          &quot;modern-review&quot;,&#13;&#10;                          &quot;elegant-feedback&quot;,&#13;&#10;                          &quot;vibrant-comment&quot;,&#13;&#10;                          &quot;classic-review&quot;,&#13;&#10;                        ];&#13;&#10;                        const variant =&#13;&#10;                          layoutVariants[index % layoutVariants.length];&#13;&#10;&#13;&#10;                        // Premium Testimonial Layout&#13;&#10;                        if (variant === &quot;premium-testimonial&quot;) {&#13;&#10;                          return (&#13;&#10;                            &lt;div&#13;&#10;                              key={index}&#13;&#10;                              className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50 dark:from-indigo-900/20 dark:via-purple-900/20 dark:to-pink-900/20 p-8 hover:shadow-2xl transition-all duration-700 border-2 border-indigo-200 dark:border-indigo-800&quot;&#13;&#10;                            &gt;&#13;&#10;                              &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-indigo-400/5 to-purple-400/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#13;&#10;                              &lt;div className=&quot;absolute top-4 right-4 w-20 h-20 bg-indigo-100 dark:bg-indigo-800/30 rounded-full opacity-20 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#13;&#10;&#13;&#10;                              &lt;div className=&quot;relative z-10&quot;&gt;&#13;&#10;                                &lt;div className=&quot;flex items-start space-x-6&quot;&gt;&#13;&#10;                                  {/* Avatar Section */}&#13;&#10;                                  &lt;div className=&quot;flex-shrink-0&quot;&gt;&#13;&#10;                                    &lt;div className=&quot;w-20 h-20 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-2xl flex items-center justify-center text-white text-2xl font-bold shadow-lg group-hover:rotate-12 transition-transform duration-500&quot;&gt;&#13;&#10;                                      {(review.reviewer || &quot;A&quot;)&#13;&#10;                                        .charAt(0)&#13;&#10;                                        .toUpperCase()}&#13;&#10;                                    &lt;/div&gt;&#13;&#10;                                    &lt;div className=&quot;text-center mt-3&quot;&gt;&#13;&#10;                                      &lt;div className=&quot;flex justify-center space-x-1&quot;&gt;&#13;&#10;                                        {[...Array(5)].map((_, i) =&gt; (&#13;&#10;                                          &lt;i&#13;&#10;                                            key={i}&#13;&#10;                                            className={`fas fa-star text-lg ${&#13;&#10;                                              i &lt; review.rating&#13;&#10;                                                ? &quot;text-yellow-400&quot;&#13;&#10;                                                : &quot;text-gray-300 dark:text-gray-600&quot;&#13;&#10;                                            }`}&#13;&#10;                                          &gt;&lt;/i&gt;&#13;&#10;                                        ))}&#13;&#10;                                      &lt;/div&gt;&#13;&#10;                                      &lt;div className=&quot;text-sm text-indigo-600 dark:text-indigo-400 font-medium mt-1&quot;&gt;&#13;&#10;                                        {review.rating}/5 Stars&#13;&#10;                                      &lt;/div&gt;&#13;&#10;                                    &lt;/div&gt;&#13;&#10;                                  &lt;/div&gt;&#13;&#10;&#13;&#10;                                  {/* Content Section */}&#13;&#10;                                  &lt;div className=&quot;flex-1&quot;&gt;&#13;&#10;                                    &lt;div className=&quot;mb-4&quot;&gt;&#13;&#10;                                      &lt;h4 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;                                        {review.reviewer ||&#13;&#10;                                          &quot;Anonymous Customer&quot;}&#13;&#10;                                      &lt;/h4&gt;&#13;&#10;                                      &lt;div className=&quot;flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#13;&#10;                                        &lt;span className=&quot;flex items-center&quot;&gt;&#13;&#10;                                          &lt;i className=&quot;fas fa-box mr-2 text-purple-500&quot;&gt;&lt;/i&gt;&#13;&#10;                                          {review.productName}&#13;&#10;                                        &lt;/span&gt;&#13;&#10;                                        &lt;span className=&quot;flex items-center&quot;&gt;&#13;&#10;                                          &lt;i className=&quot;fas fa-calendar mr-2 text-indigo-500&quot;&gt;&lt;/i&gt;&#13;&#10;                                          {new Date(&#13;&#10;                                            review.createdAt,&#13;&#10;                                          ).toLocaleDateString()}&#13;&#10;                                        &lt;/span&gt;&#13;&#10;                                      &lt;/div&gt;&#13;&#10;                                    &lt;/div&gt;&#13;&#10;&#13;&#10;                                    &lt;div className=&quot;relative&quot;&gt;&#13;&#10;                                      &lt;div className=&quot;absolute -top-2 -left-2 text-6xl text-indigo-200 dark:text-indigo-800 opacity-50&quot;&gt;&#13;&#10;                                        &lt;i className=&quot;fas fa-quote-left&quot;&gt;&lt;/i&gt;&#13;&#10;                                      &lt;/div&gt;&#13;&#10;                                      &lt;p className=&quot;text-gray-700 dark:text-gray-300 text-lg leading-relaxed italic pl-8 pr-4&quot;&gt;&#13;&#10;                                        {review.comment}&#13;&#10;                                      &lt;/p&gt;&#13;&#10;                                      &lt;div className=&quot;absolute -bottom-2 -right-2 text-6xl text-indigo-200 dark:text-indigo-800 opacity-50 transform rotate-180&quot;&gt;&#13;&#10;                                        &lt;i className=&quot;fas fa-quote-left&quot;&gt;&lt;/i&gt;&#13;&#10;                                      &lt;/div&gt;&#13;&#10;                                    &lt;/div&gt;&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;                              &lt;/div&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          );&#13;&#10;                        }&#13;&#10;&#13;&#10;                        // Modern Review Layout&#13;&#10;                        if (variant === &quot;modern-review&quot;) {&#13;&#10;                          return (&#13;&#10;                            &lt;div&#13;&#10;                              key={index}&#13;&#10;                              className=&quot;group relative overflow-hidden rounded-2xl bg-white dark:bg-gray-800 shadow-xl hover:shadow-2xl transition-all duration-500 border-l-8 border-emerald-500&quot;&#13;&#10;                            &gt;&#13;&#10;                              &lt;div className=&quot;absolute inset-0 bg-gradient-to-r from-emerald-50/50 to-teal-50/50 dark:from-emerald-900/10 dark:to-teal-900/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#13;&#10;&#13;&#10;                              &lt;div className=&quot;relative z-10 p-8&quot;&gt;&#13;&#10;                                &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#13;&#10;                                  &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#13;&#10;                                    &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-emerald-400 to-teal-500 rounded-xl flex items-center justify-center text-white text-xl font-bold shadow-lg&quot;&gt;&#13;&#10;                                      {(review.reviewer || &quot;A&quot;)&#13;&#10;                                        .charAt(0)&#13;&#10;                                        .toUpperCase()}&#13;&#10;                                    &lt;/div&gt;&#13;&#10;                                    &lt;div&gt;&#13;&#10;                                      &lt;h4 className=&quot;text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                                        {review.reviewer ||&#13;&#10;                                          &quot;Anonymous Customer&quot;}&#13;&#10;                                      &lt;/h4&gt;&#13;&#10;                                      &lt;p className=&quot;text-emerald-600 dark:text-emerald-400 font-medium&quot;&gt;&#13;&#10;                                        Verified Purchase&#13;&#10;                                      &lt;/p&gt;&#13;&#10;                                    &lt;/div&gt;&#13;&#10;                                  &lt;/div&gt;&#13;&#10;&#13;&#10;                                  &lt;div className=&quot;text-right&quot;&gt;&#13;&#10;                                    &lt;div className=&quot;flex items-center space-x-1 justify-end mb-2&quot;&gt;&#13;&#10;                                      {[...Array(5)].map((_, i) =&gt; (&#13;&#10;                                        &lt;i&#13;&#10;                                          key={i}&#13;&#10;                                          className={`fas fa-star text-xl ${&#13;&#10;                                            i &lt; review.rating&#13;&#10;                                              ? &quot;text-yellow-400&quot;&#13;&#10;                                              : &quot;text-gray-300 dark:text-gray-600&quot;&#13;&#10;                                          }`}&#13;&#10;                                        &gt;&lt;/i&gt;&#13;&#10;                                      ))}&#13;&#10;                                    &lt;/div&gt;&#13;&#10;                                    &lt;div className=&quot;text-gray-500 dark:text-gray-400 text-sm&quot;&gt;&#13;&#10;                                      {new Date(&#13;&#10;                                        review.createdAt,&#13;&#10;                                      ).toLocaleDateString()}&#13;&#10;                                    &lt;/div&gt;&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;&#13;&#10;                                &lt;div className=&quot;mb-4&quot;&gt;&#13;&#10;                                  &lt;div className=&quot;inline-flex items-center bg-emerald-100 dark:bg-emerald-900/30 text-emerald-800 dark:text-emerald-300 px-3 py-1 rounded-full text-sm font-medium&quot;&gt;&#13;&#10;                                    &lt;i className=&quot;fas fa-leaf mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;                                    {review.productName}&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;&#13;&#10;                                &lt;p className=&quot;text-gray-700 dark:text-gray-300 text-lg leading-relaxed&quot;&gt;&#13;&#10;                                  {review.comment}&#13;&#10;                                &lt;/p&gt;&#13;&#10;                              &lt;/div&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          );&#13;&#10;                        }&#13;&#10;&#13;&#10;                        // Elegant Feedback Layout&#13;&#10;                        if (variant === &quot;elegant-feedback&quot;) {&#13;&#10;                          return (&#13;&#10;                            &lt;div&#13;&#10;                              key={index}&#13;&#10;                              className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-rose-50 via-pink-50 to-red-50 dark:from-rose-900/20 dark:via-pink-900/20 dark:to-red-900/20 p-8 hover:shadow-2xl transition-all duration-700 border border-rose-200 dark:border-rose-800&quot;&#13;&#10;                            &gt;&#13;&#10;                              &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-rose-400/5 to-pink-400/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#13;&#10;                              &lt;div className=&quot;absolute top-4 right-4 w-20 h-20 bg-rose-100 dark:bg-rose-800/30 rounded-full opacity-20 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#13;&#10;&#13;&#10;                              &lt;div className=&quot;relative z-10&quot;&gt;&#13;&#10;                                &lt;div className=&quot;text-center mb-6&quot;&gt;&#13;&#10;                                  &lt;div className=&quot;w-24 h-24 bg-gradient-to-br from-rose-400 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-4 shadow-xl group-hover:rotate-12 transition-transform duration-500&quot;&gt;&#13;&#10;                                    &lt;i className=&quot;fas fa-heart text-white text-2xl&quot;&gt;&lt;/i&gt;&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                  &lt;h4 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;                                    {review.reviewer || &quot;Happy Customer&quot;}&#13;&#10;                                  &lt;/h4&gt;&#13;&#10;                                  &lt;div className=&quot;flex justify-center space-x-1 mb-3&quot;&gt;&#13;&#10;                                    {[...Array(5)].map((_, i) =&gt; (&#13;&#10;                                      &lt;i&#13;&#10;                                        key={i}&#13;&#10;                                        className={`fas fa-star text-2xl ${&#13;&#10;                                          i &lt; review.rating&#13;&#10;                                            ? &quot;text-yellow-400&quot;&#13;&#10;                                            : &quot;text-gray-300 dark:text-gray-600&quot;&#13;&#10;                                        }`}&#13;&#10;                                      &gt;&lt;/i&gt;&#13;&#10;                                    ))}&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                  &lt;div className=&quot;inline-flex items-center bg-rose-100 dark:bg-rose-900/30 text-rose-800 dark:text-rose-300 px-4 py-2 rounded-full text-sm font-medium&quot;&gt;&#13;&#10;                                    &lt;i className=&quot;fas fa-apple-alt mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;                                    {review.productName}&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;&#13;&#10;                                &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;                                  &lt;p className=&quot;text-gray-700 dark:text-gray-300 text-xl leading-relaxed italic font-light&quot;&gt;&#13;&#10;                                    &amp;ldquo;{review.comment}&amp;rdquo;&#13;&#10;                                  &lt;/p&gt;&#13;&#10;                                  &lt;div className=&quot;mt-6 text-gray-500 dark:text-gray-400 text-sm&quot;&gt;&#13;&#10;                                    &lt;i className=&quot;fas fa-calendar-alt mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;                                    {new Date(&#13;&#10;                                      review.createdAt,&#13;&#10;                                    ).toLocaleDateString()}&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;                              &lt;/div&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          );&#13;&#10;                        }&#13;&#10;&#13;&#10;                        // Vibrant Comment Layout&#13;&#10;                        if (variant === &quot;vibrant-comment&quot;) {&#13;&#10;                          return (&#13;&#10;                            &lt;div&#13;&#10;                              key={index}&#13;&#10;                              className=&quot;group relative overflow-hidden rounded-2xl bg-gradient-to-r from-cyan-500 to-blue-600 p-8 hover:shadow-2xl transition-all duration-500 text-white&quot;&#13;&#10;                            &gt;&#13;&#10;                              &lt;div className=&quot;absolute inset-0 bg-gradient-to-r from-cyan-400/20 to-blue-400/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#13;&#10;                              &lt;div className=&quot;absolute top-0 right-0 w-40 h-40 bg-white/10 rounded-full transform translate-x-20 -translate-y-20 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#13;&#10;&#13;&#10;                              &lt;div className=&quot;relative z-10&quot;&gt;&#13;&#10;                                &lt;div className=&quot;flex items-start space-x-6&quot;&gt;&#13;&#10;                                  &lt;div className=&quot;flex-shrink-0&quot;&gt;&#13;&#10;                                    &lt;div className=&quot;w-18 h-18 bg-white/20 backdrop-blur-sm rounded-2xl flex items-center justify-center text-2xl font-bold shadow-lg&quot;&gt;&#13;&#10;                                      {(review.reviewer || &quot;A&quot;)&#13;&#10;                                        .charAt(0)&#13;&#10;                                        .toUpperCase()}&#13;&#10;                                    &lt;/div&gt;&#13;&#10;                                  &lt;/div&gt;&#13;&#10;&#13;&#10;                                  &lt;div className=&quot;flex-1&quot;&gt;&#13;&#10;                                    &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#13;&#10;                                      &lt;div className=&quot;flex-1&quot;&gt;&#13;&#10;                                        &lt;h4 className=&quot;text-xl font-bold mb-1&quot;&gt;&#13;&#10;                                          {review.reviewer || &quot;Valued Customer&quot;}&#13;&#10;                                        &lt;/h4&gt;&#13;&#10;                                        &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#13;&#10;                                          {[...Array(5)].map((_, i) =&gt; (&#13;&#10;                                            &lt;i&#13;&#10;                                              key={i}&#13;&#10;                                              className={`fas fa-star ${&#13;&#10;                                                i &lt; review.rating&#13;&#10;                                                  ? &quot;text-yellow-300&quot;&#13;&#10;                                                  : &quot;text-white/30&quot;&#13;&#10;                                              }`}&#13;&#10;                                            &gt;&lt;/i&gt;&#13;&#10;                                          ))}&#13;&#10;                                          &lt;span className=&quot;ml-2 text-white/90&quot;&gt;&#13;&#10;                                            ({review.rating}/5)&#13;&#10;                                          &lt;/span&gt;&#13;&#10;                                        &lt;/div&gt;&#13;&#10;                                      &lt;/div&gt;&#13;&#10;                                      &lt;div className=&quot;text-right text-white/80 text-sm&quot;&gt;&#13;&#10;                                        {new Date(&#13;&#10;                                          review.createdAt,&#13;&#10;                                        ).toLocaleDateString()}&#13;&#10;                                      &lt;/div&gt;&#13;&#10;                                    &lt;/div&gt;&#13;&#10;&#13;&#10;                                    &lt;div className=&quot;mb-4&quot;&gt;&#13;&#10;                                      &lt;span className=&quot;inline-flex items-center bg-white/20 backdrop-blur-sm text-white px-3 py-1 rounded-full text-sm&quot;&gt;&#13;&#10;                                        &lt;i className=&quot;fas fa-tag mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;                                        {review.productName}&#13;&#10;                                      &lt;/span&gt;&#13;&#10;                                    &lt;/div&gt;&#13;&#10;&#13;&#10;                                    &lt;p className=&quot;text-white/95 text-lg leading-relaxed&quot;&gt;&#13;&#10;                                      {review.comment}&#13;&#10;                                    &lt;/p&gt;&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;                              &lt;/div&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          );&#13;&#10;                        }&#13;&#10;&#13;&#10;                        // Classic Review Layout (Default)&#13;&#10;                        return (&#13;&#10;                          &lt;div&#13;&#10;                            key={index}&#13;&#10;                            className=&quot;group relative overflow-hidden rounded-xl bg-white dark:bg-gray-800 shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-200 dark:border-gray-700&quot;&#13;&#10;                          &gt;&#13;&#10;                            &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-gray-50/50 to-slate-50/50 dark:from-gray-700/50 dark:to-slate-700/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#13;&#10;&#13;&#10;                            &lt;div className=&quot;relative z-10 p-6&quot;&gt;&#13;&#10;                              &lt;div className=&quot;flex items-start justify-between mb-4&quot;&gt;&#13;&#10;                                &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#13;&#10;                                  &lt;div className=&quot;w-12 h-12 bg-gradient-to-br from-gray-400 to-slate-500 rounded-lg flex items-center justify-center text-white font-bold&quot;&gt;&#13;&#10;                                    {(review.reviewer || &quot;A&quot;)&#13;&#10;                                      .charAt(0)&#13;&#10;                                      .toUpperCase()}&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                  &lt;div&gt;&#13;&#10;                                    &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                                      {review.reviewer || &quot;Anonymous Customer&quot;}&#13;&#10;                                    &lt;/h4&gt;&#13;&#10;                                    &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#13;&#10;                                      {review.productName}&#13;&#10;                                    &lt;/p&gt;&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;&#13;&#10;                                &lt;div className=&quot;text-right&quot;&gt;&#13;&#10;                                  &lt;div className=&quot;flex items-center space-x-1 mb-1&quot;&gt;&#13;&#10;                                    {[...Array(5)].map((_, i) =&gt; (&#13;&#10;                                      &lt;i&#13;&#10;                                        key={i}&#13;&#10;                                        className={`fas fa-star text-sm ${&#13;&#10;                                          i &lt; review.rating&#13;&#10;                                            ? &quot;text-yellow-400&quot;&#13;&#10;                                            : &quot;text-gray-300 dark:text-gray-600&quot;&#13;&#10;                                        }`}&#13;&#10;                                      &gt;&lt;/i&gt;&#13;&#10;                                    ))}&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                  &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#13;&#10;                                    {new Date(&#13;&#10;                                      review.createdAt,&#13;&#10;                                    ).toLocaleDateString()}&#13;&#10;                                  &lt;/div&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;                              &lt;/div&gt;&#13;&#10;&#13;&#10;                              &lt;p className=&quot;text-gray-700 dark:text-gray-300 leading-relaxed&quot;&gt;&#13;&#10;                                {review.comment}&#13;&#10;                              &lt;/p&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        );&#13;&#10;                      })}&#13;&#10;                    &lt;/div&gt;&#13;&#10;&#13;&#10;                    {/* Customer Satisfaction Footer */}&#13;&#10;                    &lt;div className=&quot;bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 rounded-3xl p-8 mt-12 border border-green-200 dark:border-green-800&quot;&gt;&#13;&#10;                      &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;                        &lt;div className=&quot;w-20 h-20 bg-gradient-to-br from-green-500 to-emerald-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-xl&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-thumbs-up text-white text-3xl&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;h3 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#13;&#10;                          Thank You for Your Trust! &#13;&#10;                        &lt;/h3&gt;&#13;&#10;                        &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg max-w-2xl mx-auto leading-relaxed&quot;&gt;&#13;&#10;                          Your feedback helps us grow better produce and serve&#13;&#10;                          our community with excellence. Every review makes a&#13;&#10;                          difference in our farming journey.&#13;&#10;                        &lt;/p&gt;&#13;&#10;                        &lt;div className=&quot;mt-6 flex justify-center space-x-8&quot;&gt;&#13;&#10;                          &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;                            &lt;div className=&quot;text-3xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#13;&#10;                              100%&#13;&#10;                            &lt;/div&gt;&#13;&#10;                            &lt;div className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#13;&#10;                              Fresh Guarantee&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;                            &lt;div className=&quot;text-3xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#13;&#10;                              24/7&#13;&#10;                            &lt;/div&gt;&#13;&#10;                            &lt;div className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#13;&#10;                              Customer Support&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;                            &lt;div className=&quot;text-3xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#13;&#10;                              Fast&#13;&#10;                            &lt;/div&gt;&#13;&#10;                            &lt;div className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#13;&#10;                              Delivery&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                ) : (&#13;&#10;                  &lt;div className=&quot;text-center py-20&quot;&gt;&#13;&#10;                    &lt;div className=&quot;w-32 h-32 bg-gradient-to-br from-purple-100 to-pink-100 dark:from-purple-900/30 dark:to-pink-900/30 rounded-full flex items-center justify-center mx-auto mb-8 shadow-xl&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-comment-dots text-6xl text-purple-400 dark:text-purple-300&quot;&gt;&lt;/i&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                    &lt;h3 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#13;&#10;                      No Reviews Yet&#13;&#10;                    &lt;/h3&gt;&#13;&#10;                    &lt;p className=&quot;text-gray-500 dark:text-gray-400 text-xl max-w-md mx-auto leading-relaxed mb-8&quot;&gt;&#13;&#10;                      Be the first to share your experience with our fresh&#13;&#10;                      produce! Your feedback helps us serve you better.&#13;&#10;                    &lt;/p&gt;&#13;&#10;                    &lt;div className=&quot;inline-flex items-center bg-gradient-to-r from-purple-500 to-pink-600 text-white px-8 py-4 rounded-2xl font-semibold text-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-star mr-3&quot;&gt;&lt;/i&gt;&#13;&#10;                      Leave the First Review&#13;&#10;                      &lt;i className=&quot;fas fa-arrow-right ml-3&quot;&gt;&lt;/i&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                )}&#13;&#10;              &lt;/div&gt;&#13;&#10;            )}&#13;&#10;&#13;&#10;            {activeTab === &quot;stats&quot; &amp;&amp; (&#13;&#10;              &lt;div className=&quot;space-y-8&quot;&gt;&#13;&#10;                &lt;div className=&quot;text-center mb-12&quot;&gt;&#13;&#10;                  &lt;h2 className=&quot;text-4xl font-bold bg-gradient-to-r from-emerald-600 via-teal-600 to-cyan-600 bg-clip-text text-transparent mb-6&quot;&gt;&#13;&#10;                     Farm Analytics Dashboard &#13;&#10;                  &lt;/h2&gt;&#13;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg max-w-3xl mx-auto leading-relaxed&quot;&gt;&#13;&#10;                    Discover the comprehensive insights behind our farm&amp;apos;s&#13;&#10;                    productivity, community impact, and sustainable growth&#13;&#10;                    journey.&#13;&#10;                  &lt;/p&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {/* Primary Statistics Showcase */}&#13;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12&quot;&gt;&#13;&#10;                  {/* Holographic Products Card */}&#13;&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-emerald-50 via-green-50 to-teal-50 dark:from-emerald-900/20 dark:via-green-900/20 dark:to-teal-900/20 p-8 hover:shadow-2xl transition-all duration-700 border border-emerald-200 dark:border-emerald-800&quot;&gt;&#13;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-emerald-400/10 to-teal-400/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;absolute top-4 right-4 w-16 h-16 bg-emerald-100 dark:bg-emerald-800/30 rounded-full opacity-20 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#13;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#13;&#10;                        &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-emerald-500 to-green-600 rounded-2xl flex items-center justify-center transform group-hover:rotate-12 transition-transform duration-500 shadow-lg&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-seedling text-2xl text-white&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;text-right&quot;&gt;&#13;&#10;                          &lt;div className=&quot;text-4xl font-bold text-emerald-600 dark:text-emerald-400 mb-1&quot;&gt;&#13;&#10;                            {stats.totalProducts}&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;text-emerald-500 dark:text-emerald-300 text-sm font-medium&quot;&gt;&#13;&#10;                            Total Products&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                      &lt;div className=&quot;space-y-3&quot;&gt;&#13;&#10;                        &lt;div className=&quot;flex justify-between text-gray-700 dark:text-gray-300&quot;&gt;&#13;&#10;                          &lt;span&gt;Active Items&lt;/span&gt;&#13;&#10;                          &lt;span className=&quot;font-bold text-green-600 dark:text-green-400&quot;&gt;&#13;&#10;                            {stats.activeProducts}&#13;&#10;                          &lt;/span&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;w-full bg-emerald-100 dark:bg-emerald-900/30 rounded-full h-3&quot;&gt;&#13;&#10;                          &lt;div&#13;&#10;                            className=&quot;bg-gradient-to-r from-emerald-500 to-green-500 h-3 rounded-full transition-all duration-1000 shadow-sm&quot;&#13;&#10;                            style={{&#13;&#10;                              width: `${(stats.activeProducts / stats.totalProducts) * 100}%`,&#13;&#10;                            }}&#13;&#10;                          &gt;&lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;text-center text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#13;&#10;                          {(&#13;&#10;                            (stats.activeProducts / stats.totalProducts) *&#13;&#10;                            100&#13;&#10;                          ).toFixed(0)}&#13;&#10;                          % availability rate&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;&#13;&#10;                  {/* Crystal Inventory Card */}&#13;&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-blue-50 via-cyan-50 to-indigo-50 dark:from-blue-900/20 dark:via-cyan-900/20 dark:to-indigo-900/20 p-8 hover:shadow-2xl transition-all duration-700 border border-blue-200 dark:border-blue-800&quot;&gt;&#13;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-blue-400/10 to-cyan-400/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;absolute -top-4 -right-4 w-20 h-20 bg-blue-100 dark:bg-blue-800/30 rounded-full opacity-20 group-hover:scale-125 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#13;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#13;&#10;                        &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-blue-500 to-cyan-600 rounded-2xl flex items-center justify-center transform group-hover:scale-110 transition-transform duration-500 shadow-lg&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-boxes text-2xl text-white&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;text-right&quot;&gt;&#13;&#10;                          &lt;div className=&quot;text-4xl font-bold text-blue-600 dark:text-blue-400 mb-1&quot;&gt;&#13;&#10;                            {stats.totalStock}&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;text-blue-500 dark:text-blue-300 text-sm font-medium&quot;&gt;&#13;&#10;                            Items in Stock&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                      &lt;div className=&quot;grid grid-cols-2 gap-4&quot;&gt;&#13;&#10;                        &lt;div className=&quot;text-center p-3 bg-white/50 dark:bg-blue-900/20 rounded-xl&quot;&gt;&#13;&#10;                          &lt;div className=&quot;text-lg font-bold text-cyan-600 dark:text-cyan-400&quot;&gt;&#13;&#10;                            {stats.categories?.length || 0}&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                            Categories&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;text-center p-3 bg-white/50 dark:bg-blue-900/20 rounded-xl&quot;&gt;&#13;&#10;                          &lt;div className=&quot;text-lg font-bold text-indigo-600 dark:text-indigo-400&quot;&gt;&#13;&#10;                            ${stats.averagePrice}&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                            Avg Price&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;&#13;&#10;                  {/* Prismatic Community Impact */}&#13;&#10;                  {/* Dynamic Farm Specializations Card */}&#13;&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-emerald-50 via-teal-50 to-cyan-50 dark:from-emerald-900/20 dark:via-teal-900/20 dark:to-cyan-900/20 p-8 hover:shadow-2xl transition-all duration-700 border border-emerald-200 dark:border-emerald-800&quot;&gt;&#13;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-emerald-400/10 to-teal-400/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;absolute top-4 right-4 w-16 h-16 bg-emerald-100 dark:bg-emerald-800/30 rounded-full opacity-20 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#13;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#13;&#10;                        &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-emerald-500 to-teal-600 rounded-2xl flex items-center justify-center transform group-hover:rotate-12 transition-transform duration-500 shadow-lg&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-spa text-2xl text-white&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;text-right&quot;&gt;&#13;&#10;                          &lt;div className=&quot;text-4xl font-bold text-emerald-600 dark:text-emerald-400 mb-1&quot;&gt;&#13;&#10;                            {farmer.specializations?.length ||&#13;&#10;                              stats.categories?.length ||&#13;&#10;                              3}&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;text-emerald-500 dark:text-emerald-300 text-sm font-medium&quot;&gt;&#13;&#10;                            Specializations&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                      &lt;div className=&quot;space-y-3&quot;&gt;&#13;&#10;                        &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;                          &lt;div className=&quot;flex flex-wrap gap-1 justify-center mb-3&quot;&gt;&#13;&#10;                            {(&#13;&#10;                              farmer.specializations?.slice(0, 3) ||&#13;&#10;                              stats.categories?.slice(0, 3) || [&#13;&#10;                                &quot;Organic&quot;,&#13;&#10;                                &quot;Fresh&quot;,&#13;&#10;                                &quot;Quality&quot;,&#13;&#10;                              ]&#13;&#10;                            ).map((spec, index) =&gt; {&#13;&#10;                              const icons = {&#13;&#10;                                Grains: &quot;fas fa-seedling&quot;,&#13;&#10;                                Fruits: &quot;fas fa-apple-alt&quot;,&#13;&#10;                                Vegetables: &quot;fas fa-carrot&quot;,&#13;&#10;                                Herbs: &quot;fas fa-leaf&quot;,&#13;&#10;                                Honey: &quot;fas fa-bug&quot;,&#13;&#10;                                Dairy: &quot;fas fa-glass-whiskey&quot;,&#13;&#10;                                Organic: &quot;fas fa-leaf&quot;,&#13;&#10;                                Fresh: &quot;fas fa-sun&quot;,&#13;&#10;                                Quality: &quot;fas fa-star&quot;,&#13;&#10;                              };&#13;&#10;                              const colors = [&#13;&#10;                                &quot;text-emerald-500&quot;,&#13;&#10;                                &quot;text-teal-500&quot;,&#13;&#10;                                &quot;text-cyan-500&quot;,&#13;&#10;                              ];&#13;&#10;                              return (&#13;&#10;                                &lt;div&#13;&#10;                                  key={index}&#13;&#10;                                  className=&quot;flex items-center bg-white/70 dark:bg-emerald-900/30 rounded-full px-2 py-1&quot;&#13;&#10;                                &gt;&#13;&#10;                                  &lt;i&#13;&#10;                                    className={`${icons[spec] || &quot;fas fa-spa&quot;} ${colors[index % 3]} text-xs mr-1`}&#13;&#10;                                  &gt;&lt;/i&gt;&#13;&#10;                                  &lt;span className=&quot;text-xs font-medium text-gray-700 dark:text-gray-300&quot;&gt;&#13;&#10;                                    {spec}&#13;&#10;                                  &lt;/span&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;                              );&#13;&#10;                            })}&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#13;&#10;                          &lt;div className=&quot;flex-1 h-2 bg-emerald-100 dark:bg-emerald-900/30 rounded-full overflow-hidden&quot;&gt;&#13;&#10;                            &lt;div&#13;&#10;                              className=&quot;h-full bg-gradient-to-r from-emerald-500 to-teal-500 rounded-full animate-pulse&quot;&#13;&#10;                              style={{ width: &quot;90%&quot; }}&#13;&#10;                            &gt;&lt;/div&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;span className=&quot;text-xs text-emerald-600 dark:text-emerald-400 font-medium&quot;&gt;&#13;&#10;                            Expert&#13;&#10;                          &lt;/span&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;text-center text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#13;&#10;                          Premium farm specialties&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;&#13;&#10;                  {/* Luminous Performance */}&#13;&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-amber-50 via-yellow-50 to-orange-50 dark:from-amber-900/20 dark:via-yellow-900/20 dark:to-orange-900/20 p-8 hover:shadow-2xl transition-all duration-700 border border-amber-200 dark:border-amber-800&quot;&gt;&#13;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-amber-400/10 to-orange-400/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;absolute top-0 left-0 w-24 h-24 bg-amber-100 dark:bg-amber-800/30 rounded-full opacity-20 transform -translate-x-12 -translate-y-12 group-hover:scale-150 transition-transform duration-700&quot;&gt;&lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#13;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#13;&#10;                        &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-amber-500 to-orange-600 rounded-2xl flex items-center justify-center transform group-hover:scale-110 transition-transform duration-500 shadow-lg&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-star text-2xl text-white&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;text-right&quot;&gt;&#13;&#10;                          &lt;div className=&quot;text-4xl font-bold text-amber-600 dark:text-amber-400 mb-1&quot;&gt;&#13;&#10;                            {stats.averageRating || &quot;N/A&quot;}&#13;&#10;                          &lt;/div&gt;&#13;&#10;                          &lt;div className=&quot;text-amber-500 dark:text-amber-300 text-sm font-medium&quot;&gt;&#13;&#10;                            Average Rating&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                      &lt;div className=&quot;space-y-3&quot;&gt;&#13;&#10;                        &lt;div className=&quot;flex justify-between text-gray-700 dark:text-gray-300&quot;&gt;&#13;&#10;                          &lt;span&gt;Total Reviews&lt;/span&gt;&#13;&#10;                          &lt;span className=&quot;font-bold text-orange-600 dark:text-orange-400&quot;&gt;&#13;&#10;                            {stats.totalReviews}&#13;&#10;                          &lt;/span&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#13;&#10;                          {[...Array(5)].map((_, i) =&gt; (&#13;&#10;                            &lt;i&#13;&#10;                              key={i}&#13;&#10;                              className={`fas fa-star text-lg ${&#13;&#10;                                i &lt; Math.floor(stats.averageRating || 0)&#13;&#10;                                  ? &quot;text-amber-400&quot;&#13;&#10;                                  : &quot;text-gray-300 dark:text-gray-600&quot;&#13;&#10;                              }`}&#13;&#10;                            &gt;&lt;/i&gt;&#13;&#10;                          ))}&#13;&#10;                          &lt;span className=&quot;ml-2 text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#13;&#10;                            ({stats.averageRating}/5.0)&#13;&#10;                          &lt;/span&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {/* Enhanced Farm Details Grid */}&#13;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12&quot;&gt;&#13;&#10;                  {/* Experience Showcase */}&#13;&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-gradient-to-br from-indigo-100 to-purple-100 dark:from-indigo-900/30 dark:to-purple-900/30 p-6 hover:shadow-xl transition-all duration-500 border-l-4 border-indigo-500&quot;&gt;&#13;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-indigo-500/5 to-purple-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#13;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#13;&#10;                        &lt;div className=&quot;w-12 h-12 bg-indigo-500 rounded-xl flex items-center justify-center transform group-hover:rotate-12 transition-transform duration-300&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-clock text-white text-lg&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;text-3xl font-bold text-indigo-600 dark:text-indigo-400&quot;&gt;&#13;&#10;                          {stats.yearsOfExperience}+&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        Years of Experience&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        Dedicated farming expertise&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Farm Size Display */}&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-gradient-to-br from-green-100 to-emerald-100 dark:from-green-900/30 dark:to-emerald-900/30 p-6 hover:shadow-xl transition-all duration-500 border-l-4 border-green-500&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-green-500/5 to-emerald-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                        &lt;div className=&quot;w-12 h-12 bg-green-500 rounded-xl flex items-center justify-center transform group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-map text-white text-lg&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-green-600 dark:text-green-400&quot;&gt;&#10;                          {farmer.farmInfo?.farmSize || stats.farmSize || &quot;5&quot;}{&quot; &quot;}&#10;                          {farmer.farmInfo?.farmSizeUnit ||&#10;                            stats.farmSizeUnit ||&#10;                            &quot;acres&quot;}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        Farm Size&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        Total cultivated area&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Certification Status */}&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-gradient-to-br from-blue-100 to-cyan-100 dark:from-blue-900/30 dark:to-cyan-900/30 p-6 hover:shadow-xl transition-all duration-500 border-l-4 border-blue-500&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-blue-500/5 to-cyan-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                        &lt;div className=&quot;w-12 h-12 bg-blue-500 rounded-xl flex items-center justify-center transform group-hover:bounce transition-transform duration-300&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-certificate text-white text-lg&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&#10;                          className={`px-3 py-1 rounded-full text-sm font-medium ${&#10;                            stats.certificationStatus === &quot;Certified&quot;&#10;                              ? &quot;bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300&quot;&#10;                              : &quot;bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300&quot;&#10;                          }`}&#10;                        &gt;&#10;                          {stats.certificationStatus}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        Certification&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        Quality assurance status&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Farming Methods */}&#10;                  &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-gradient-to-br from-orange-100 to-red-100 dark:from-orange-900/30 dark:to-red-900/30 p-6 hover:shadow-xl transition-all duration-500 border-l-4 border-orange-500&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-orange-500/5 to-red-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;relative z-10&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                        &lt;div className=&quot;w-12 h-12 bg-orange-500 rounded-xl flex items-center justify-center transform group-hover:rotate-45 transition-transform duration-300&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-leaf text-white text-lg&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-3xl font-bold text-orange-600 dark:text-orange-400&quot;&gt;&#10;                          {stats.farmingMethods?.length || 2}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                        Methods Used&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-sm&quot;&gt;&#10;                        Sustainable practices&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Revenue Analytics Section */}&#10;                &lt;div className=&quot;bg-gradient-to-br from-slate-50 to-gray-100 dark:from-slate-900/50 dark:to-gray-900/50 rounded-3xl p-8 mb-12 border border-slate-200 dark:border-slate-700&quot;&gt;&#10;                  &lt;div className=&quot;text-center mb-8&quot;&gt;&#10;                    &lt;h3 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                       Revenue Analytics&#10;                    &lt;/h3&gt;&#10;                    &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Financial performance and growth metrics&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8&quot;&gt;&#10;                    {/* Monthly Revenue */}&#10;                    &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-white dark:bg-slate-800 p-6 shadow-lg hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                      &lt;div className=&quot;absolute top-0 right-0 w-20 h-20 bg-gradient-to-br from-emerald-400/20 to-green-400/20 rounded-full transform translate-x-10 -translate-y-10 group-hover:scale-150 transition-transform duration-500&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;relative z-10&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                          &lt;div className=&quot;w-12 h-12 bg-emerald-100 dark:bg-emerald-900/30 rounded-xl flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-calendar-alt text-emerald-600 dark:text-emerald-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;span className=&quot;text-xs bg-emerald-100 dark:bg-emerald-900/30 text-emerald-600 dark:text-emerald-400 px-2 py-1 rounded-full font-medium&quot;&gt;&#10;                            This Month&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-3xl font-bold text-emerald-600 dark:text-emerald-400 mb-2&quot;&gt;&#10;                          BDT {stats.monthlyRevenue}&#10;                        &lt;/div&gt;&#10;                        &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;                          Monthly Revenue&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-gray-500 dark:text-gray-400 text-sm&quot;&gt;&#10;                          Current month earnings&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Total Revenue */}&#10;                    &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-white dark:bg-slate-800 p-6 shadow-lg hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                      &lt;div className=&quot;absolute bottom-0 left-0 w-24 h-24 bg-gradient-to-br from-blue-400/20 to-cyan-400/20 rounded-full transform -translate-x-12 translate-y-12 group-hover:scale-150 transition-transform duration-500&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;relative z-10&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                          &lt;div className=&quot;w-12 h-12 bg-blue-100 dark:bg-blue-900/30 rounded-xl flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-chart-line text-blue-600 dark:text-blue-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;span className=&quot;text-xs bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 px-2 py-1 rounded-full font-medium&quot;&gt;&#10;                            All Time&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-3xl font-bold text-blue-600 dark:text-blue-400 mb-2&quot;&gt;&#10;                          BDT {stats.totalRevenue}&#10;                        &lt;/div&gt;&#10;                        &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;                          Total Revenue&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-gray-500 dark:text-gray-400 text-sm&quot;&gt;&#10;                          Lifetime earnings&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Inventory Value */}&#10;                    &lt;div className=&quot;group relative overflow-hidden rounded-2xl bg-white dark:bg-slate-800 p-6 shadow-lg hover:shadow-xl transition-all duration-300&quot;&gt;&#10;                      &lt;div className=&quot;absolute top-1/2 right-0 w-16 h-16 bg-gradient-to-br from-purple-400/20 to-pink-400/20 rounded-full transform translate-x-8 -translate-y-8 group-hover:scale-150 transition-transform duration-500&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;relative z-10&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                          &lt;div className=&quot;w-12 h-12 bg-purple-100 dark:bg-purple-900/30 rounded-xl flex items-center justify-center&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-warehouse text-purple-600 dark:text-purple-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;span className=&quot;text-xs bg-purple-100 dark:bg-purple-900/30 text-purple-600 dark:text-purple-400 px-2 py-1 rounded-full font-medium&quot;&gt;&#10;                            Current&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-3xl font-bold text-purple-600 dark:text-purple-400 mb-2&quot;&gt;&#10;                          BDT {stats.inventoryValue}&#10;                        &lt;/div&gt;&#10;                        &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-1&quot;&gt;&#10;                          Inventory Value&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-gray-500 dark:text-gray-400 text-sm&quot;&gt;&#10;                          Stock worth&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Farming Methods Showcase - Updated to use database data */}&#10;                {farmer.farmInfo?.farmingMethods &amp;&amp;&#10;                  farmer.farmInfo.farmingMethods.length &gt; 0 &amp;&amp; (&#10;                    &lt;div className=&quot;mb-12&quot;&gt;&#10;                      &lt;div className=&quot;text-center mb-8&quot;&gt;&#10;                        &lt;h3 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                           Our Farming Philosophy&#10;                        &lt;/h3&gt;&#10;                        &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Sustainable and innovative agricultural practices&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#10;                        {farmer.farmInfo.farmingMethods.map((method, index) =&gt; {&#10;                          const config = methodConfig[method] || {&#10;                            icon: &quot;fas fa-tractor&quot;,&#10;                            color: &quot;text-gray-600 dark:text-gray-400&quot;,&#10;                            description: &quot;Specialized farming technique&quot;,&#10;                          };&#10;&#10;                          return (&#10;                            &lt;div&#10;                              key={index}&#10;                              className=&quot;group relative overflow-hidden rounded-2xl bg-white dark:bg-gray-800 p-8 shadow-lg hover:shadow-2xl transition-all duration-500 border-t-4 border-green-500&quot;&#10;                            &gt;&#10;                              &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-green-50/50 to-emerald-50/50 dark:from-green-900/10 dark:to-emerald-900/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;                              &lt;div className=&quot;relative z-10 text-center&quot;&gt;&#10;                                &lt;div className=&quot;w-20 h-20 bg-gradient-to-br from-green-100 to-emerald-100 dark:from-green-900/30 dark:to-emerald-900/30 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                                  &lt;i&#10;                                    className={`${config.icon} text-4xl ${config.color}`}&#13;&#10;                                  &gt;&lt;/i&gt;&#13;&#10;                                &lt;/div&gt;&#13;&#10;                                &lt;h4 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-3&quot;&gt;&#13;&#10;                                  {method}&#13;&#10;                                &lt;/h4&gt;&#13;&#10;                                &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#13;&#10;                                  {config.description}&#13;&#10;                                &lt;/p&gt;&#13;&#10;                              &lt;/div&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          );&#13;&#10;                        })}&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  )}&#13;&#10;&#13;&#10;                {/* Growth Metrics Footer */}&#13;&#10;                &lt;div className=&quot;bg-gradient-to-r from-green-600 to-emerald-600 rounded-3xl p-8 text-white&quot;&gt;&#13;&#10;                  &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;                    &lt;h3 className=&quot;text-2xl font-bold mb-6&quot;&gt;&#13;&#10;                       Growth Trajectory&#13;&#10;                    &lt;/h3&gt;&#13;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8&quot;&gt;&#13;&#10;                      &lt;div className=&quot;group&quot;&gt;&#13;&#10;                        &lt;div className=&quot;text-4xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#13;&#10;                          {(&#13;&#10;                            (stats.activeProducts / stats.totalProducts) *&#13;&#10;                            100&#13;&#10;                          ).toFixed(0)}&#13;&#10;                          %&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;text-white/90&quot;&gt;&#13;&#10;                          Product Availability&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                      &lt;div className=&quot;group&quot;&gt;&#13;&#10;                        &lt;div className=&quot;text-4xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#13;&#10;                          {stats.familiesServed}+&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-white/90&quot;&gt;Community Reach&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;group&quot;&gt;&#10;                        &lt;div className=&quot;text-4xl font-bold mb-2 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                          {stats.averageRating || &quot;4.8&quot;}★&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-white/90&quot;&gt;&#10;                          Customer Satisfaction&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Dynamic Action Section */}&#10;        &lt;div className=&quot;bg-gradient-to-r from-green-600 to-emerald-600&quot;&gt;&#10;          &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16&quot;&gt;&#10;            &lt;div className=&quot;text-center&quot;&gt;&#10;              &lt;h2 className=&quot;text-4xl font-bold text-white mb-8&quot;&gt;&#10;                Ready to Experience {farmer.farmName || `${farmer.name}'s Farm`}&#10;                ?&#10;              &lt;/h2&gt;&#10;              &lt;div className=&quot;grid grid-cols-1 md:grid-cols-3 gap-8&quot;&gt;&#10;                &lt;Link&#10;                  href={`/farmers/${farmerId}/details`}&#10;                  className=&quot;group bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white p-8 rounded-2xl transition-all duration-300 border border-white/30 transform hover:scale-105&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-store text-4xl mb-4 group-hover:scale-110 transition-transform&quot;&gt;&lt;/i&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold mb-2&quot;&gt;&#10;                    Browse {stats.totalProducts} Products&#10;                  &lt;/h3&gt;&#10;                  &lt;p className=&quot;text-white/90&quot;&gt;&#10;                    Explore our full product catalog&#10;                  &lt;/p&gt;&#10;                &lt;/Link&gt;&#10;&#10;                &lt;div className=&quot;group bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white p-8 rounded-2xl transition-all duration-300 border border-white/30 transform hover:scale-105 cursor-pointer&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-star text-4xl mb-4 group-hover:scale-110 transition-transform&quot;&gt;&lt;/i&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold mb-2&quot;&gt;&#10;                    {stats.averageRating}/5 Rating&#10;                  &lt;/h3&gt;&#10;                  &lt;p className=&quot;text-white/90&quot;&gt;See what customers say&lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;group bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white p-8 rounded-2xl transition-all duration-300 border border-white/30 transform hover:scale-105 cursor-pointer&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-envelope text-4xl mb-4 group-hover:scale-110 transition-transform&quot;&gt;&lt;/i&gt;&#10;                  &lt;h3 className=&quot;text-xl font-bold mb-2&quot;&gt;&#10;                    Contact {farmer.name}&#10;                  &lt;/h3&gt;&#10;                  &lt;p className=&quot;text-white/90&quot;&gt;Get in touch with questions&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/forgot-password/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/forgot-password/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState } from &quot;react&quot;;&#10;import Link from &quot;next/link&quot;;&#10;&#10;export default function ForgotPassword() {&#10;  const [email, setEmail] = useState(&quot;&quot;);&#10;  const [loading, setLoading] = useState(false);&#10;  const [success, setSuccess] = useState(false);&#10;  const [error, setError] = useState(&quot;&quot;);&#10;&#10;  const handleSubmit = async (e) =&gt; {&#10;    e.preventDefault();&#10;    setLoading(true);&#10;    setError(&quot;&quot;);&#10;&#10;    try {&#10;      const response = await fetch(&quot;/api/auth/forgot-password&quot;, {&#10;        method: &quot;POST&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify({ email }),&#10;      });&#10;&#10;      const data = await response.json();&#10;&#10;      if (response.ok) {&#10;        setSuccess(true);&#10;      } else {&#10;        setError(data.error || &quot;Failed to send reset email&quot;);&#10;      }&#10;    } catch (error) {&#10;      setError(&quot;An error occurred. Please try again.&quot;);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900&quot;&gt;&#10;      &lt;div className=&quot;flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-md w-full space-y-8&quot;&gt;&#10;          {/* Header */}&#10;          &lt;div className=&quot;text-center&quot;&gt;&#10;            &lt;div className=&quot;flex justify-center mb-6&quot;&gt;&#10;              &lt;div className=&quot;bg-green-500 p-3 rounded-full&quot;&gt;&#10;                &lt;i className=&quot;fas fa-key text-white text-2xl&quot;&gt;&lt;/i&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;h2 className=&quot;text-3xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;              {success ? &quot;Check Your Email&quot; : &quot;Reset your password&quot;}&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;mt-2 text-gray-600 dark:text-gray-400&quot;&gt;&#10;              {success&#10;                ? &quot;We've sent a password reset link to your email address&quot;&#10;                : &quot;Enter your email address and we'll send you a link to reset your password&quot;}&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Reset Password Form */}&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 py-8 px-6 shadow-xl rounded-2xl&quot;&gt;&#10;            {success ? (&#10;              &lt;div className=&quot;text-center space-y-4&quot;&gt;&#10;                &lt;div className=&quot;bg-green-50 dark:bg-green-900 border border-green-200 dark:border-green-700 rounded-lg p-4&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center justify-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-check-circle text-green-500 mr-3 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;div&gt;&#10;                      &lt;h4 className=&quot;text-green-800 dark:text-green-200 font-medium&quot;&gt;&#10;                        Email sent successfully!&#10;                      &lt;/h4&gt;&#10;                      &lt;p className=&quot;text-green-700 dark:text-green-300 text-sm mt-1&quot;&gt;&#10;                        Check your email for password reset instructions.&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  Didn't receive the email? Check your spam folder or try again.&#10;                &lt;/p&gt;&#10;                &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; {&#10;                      setSuccess(false);&#10;                      setEmail(&quot;&quot;);&#10;                    }}&#10;                    className=&quot;flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700&quot;&#10;                  &gt;&#10;                    Send Again&#10;                  &lt;/button&gt;&#10;                  &lt;Link&#10;                    href=&quot;/login&quot;&#10;                    className=&quot;flex-1 bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 text-center&quot;&#10;                  &gt;&#10;                    Back to Login&#10;                  &lt;/Link&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            ) : (&#10;              &lt;&gt;&#10;                {error &amp;&amp; (&#10;                  &lt;div className=&quot;bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mb-4&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-exclamation-circle mr-2&quot;&gt;&lt;/i&gt;&#10;                    {error}&#10;                  &lt;/div&gt;&#10;                )}&#10;&#10;                &lt;form onSubmit={handleSubmit} className=&quot;space-y-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;email&quot;&#10;                      className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                    &gt;&#10;                      Email Address&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;input&#10;                        id=&quot;email&quot;&#10;                        name=&quot;email&quot;&#10;                        type=&quot;email&quot;&#10;                        autoComplete=&quot;email&quot;&#10;                        required&#10;                        value={email}&#10;                        onChange={(e) =&gt; setEmail(e.target.value)}&#10;                        className=&quot;w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 dark:bg-gray-700 dark:text-white&quot;&#10;                        placeholder=&quot;john@example.com&quot;&#10;                      /&gt;&#10;                      &lt;i className=&quot;fas fa-envelope absolute left-3 top-3.5 text-gray-400&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;button&#10;                    type=&quot;submit&quot;&#10;                    disabled={loading}&#10;                    className=&quot;w-full bg-green-600 hover:bg-green-700 text-white py-3 px-4 rounded-lg font-medium transition duration-200 transform hover:scale-105 disabled:opacity-50&quot;&#10;                  &gt;&#10;                    {loading ? (&#10;                      &lt;&gt;&#10;                        &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        Sending...&#10;                      &lt;/&gt;&#10;                    ) : (&#10;                      &lt;&gt;&#10;                        &lt;i className=&quot;fas fa-paper-plane mr-2&quot;&gt;&lt;/i&gt;&#10;                        Send Reset Link&#10;                      &lt;/&gt;&#10;                    )}&#10;                  &lt;/button&gt;&#10;                &lt;/form&gt;&#10;&#10;                {/* Back to Login Link */}&#10;                &lt;div className=&quot;mt-6 text-center&quot;&gt;&#10;                  &lt;Link&#10;                    href=&quot;/login&quot;&#10;                    className=&quot;inline-flex items-center text-sm text-green-600 hover:text-green-500 dark:text-green-400 dark:hover:text-green-300&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-arrow-left mr-2&quot;&gt;&lt;/i&gt;&#10;                    Back to login&#10;                  &lt;/Link&gt;&#10;                &lt;/div&gt;&#10;              &lt;/&gt;&#10;            )}&#10;          &lt;/div&gt;&#10;&#10;          {/* Additional Help */}&#10;          &lt;div className=&quot;bg-blue-50 dark:bg-blue-900 p-4 rounded-lg&quot;&gt;&#10;            &lt;h3 className=&quot;text-sm font-medium text-blue-800 dark:text-blue-200 mb-2&quot;&gt;&#10;              &lt;i className=&quot;fas fa-info-circle mr-2&quot;&gt;&lt;/i&gt;&#10;              Need help?&#10;            &lt;/h3&gt;&#10;            &lt;div className=&quot;text-xs text-blue-700 dark:text-blue-300 space-y-1&quot;&gt;&#10;              &lt;p&gt;&#10;                • Check your spam/junk folder if you don't receive the email&#10;              &lt;/p&gt;&#10;              &lt;p&gt;• Make sure you entered the correct email address&lt;/p&gt;&#10;              &lt;p&gt;• Contact support if you continue having issues&lt;/p&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useState } from &quot;react&quot;;&#10;import Link from &quot;next/link&quot;;&#10;&#10;export default function ForgotPassword() {&#10;  const [email, setEmail] = useState(&quot;&quot;);&#10;  const [loading, setLoading] = useState(false);&#10;  const [success, setSuccess] = useState(false);&#10;  const [error, setError] = useState(&quot;&quot;);&#10;&#10;  const handleSubmit = async (e) =&gt; {&#10;    e.preventDefault();&#10;    setLoading(true);&#10;    setError(&quot;&quot;);&#10;&#10;    try {&#10;      const response = await fetch(&quot;/api/auth/forgot-password&quot;, {&#10;        method: &quot;POST&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify({ email }),&#10;      });&#10;&#10;      const data = await response.json();&#10;&#10;      if (response.ok) {&#10;        setSuccess(true);&#10;      } else {&#10;        setError(data.error || &quot;Failed to send reset email&quot;);&#10;      }&#10;    } catch (error) {&#10;      setError(&quot;An error occurred. Please try again.&quot;);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900&quot;&gt;&#10;      &lt;div className=&quot;flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-md w-full space-y-8&quot;&gt;&#10;          {/* Header */}&#10;          &lt;div className=&quot;text-center&quot;&gt;&#10;            &lt;div className=&quot;flex justify-center mb-6&quot;&gt;&#10;              &lt;div className=&quot;bg-green-500 p-3 rounded-full&quot;&gt;&#10;                &lt;i className=&quot;fas fa-key text-white text-2xl&quot;&gt;&lt;/i&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;h2 className=&quot;text-3xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;              {success ? &quot;Check Your Email&quot; : &quot;Reset your password&quot;}&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;mt-2 text-gray-600 dark:text-gray-400&quot;&gt;&#10;              {success&#10;                ? &quot;We've sent a password reset link to your email address&quot;&#10;                : &quot;Enter your email address and we'll send you a link to reset your password&quot;}&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Reset Password Form */}&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 py-8 px-6 shadow-xl rounded-2xl&quot;&gt;&#10;            {success ? (&#10;              &lt;div className=&quot;text-center space-y-4&quot;&gt;&#10;                &lt;div className=&quot;bg-green-50 dark:bg-green-900 border border-green-200 dark:border-green-700 rounded-lg p-4&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center justify-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-check-circle text-green-500 mr-3 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;div&gt;&#10;                      &lt;h4 className=&quot;text-green-800 dark:text-green-200 font-medium&quot;&gt;&#10;                        Email sent successfully!&#10;                      &lt;/h4&gt;&#10;                      &lt;p className=&quot;text-green-700 dark:text-green-300 text-sm mt-1&quot;&gt;&#10;                        Check your email for password reset instructions.&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  Didn't receive the email? Check your spam folder or try again.&#10;                &lt;/p&gt;&#10;                &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; {&#10;                      setSuccess(false);&#10;                      setEmail(&quot;&quot;);&#10;                    }}&#10;                    className=&quot;flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700&quot;&#10;                  &gt;&#10;                    Send Again&#10;                  &lt;/button&gt;&#10;                  &lt;Link&#10;                    href=&quot;/login&quot;&#10;                    className=&quot;flex-1 bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 text-center&quot;&#10;                  &gt;&#10;                    Back to Login&#10;                  &lt;/Link&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            ) : (&#10;              &lt;&gt;&#10;                {error &amp;&amp; (&#10;                  &lt;div className=&quot;bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mb-4&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-exclamation-circle mr-2&quot;&gt;&lt;/i&gt;&#10;                    {error}&#10;                  &lt;/div&gt;&#10;                )}&#10;&#10;                &lt;form onSubmit={handleSubmit} className=&quot;space-y-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;email&quot;&#10;                      className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                    &gt;&#10;                      Email Address&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;input&#10;                        id=&quot;email&quot;&#10;                        name=&quot;email&quot;&#10;                        type=&quot;email&quot;&#10;                        autoComplete=&quot;email&quot;&#10;                        required&#10;                        value={email}&#10;                        onChange={(e) =&gt; setEmail(e.target.value)}&#10;                        className=&quot;w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 dark:bg-gray-700 dark:text-white&quot;&#10;                        placeholder=&quot;john@example.com&quot;&#10;                      /&gt;&#10;                      &lt;i className=&quot;fas fa-envelope absolute left-3 top-3.5 text-gray-400&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;button&#10;                    type=&quot;submit&quot;&#10;                    disabled={loading}&#10;                    className=&quot;w-full bg-green-600 hover:bg-green-700 text-white py-3 px-4 rounded-lg font-medium transition duration-200 transform hover:scale-105 disabled:opacity-50&quot;&#10;                  &gt;&#10;                    {loading ? (&#10;                      &lt;&gt;&#10;                        &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        Sending...&#10;                      &lt;/&gt;&#10;                    ) : (&#10;                      &lt;&gt;&#10;                        &lt;i className=&quot;fas fa-paper-plane mr-2&quot;&gt;&lt;/i&gt;&#10;                        Send Reset Link&#10;                      &lt;/&gt;&#10;                    )}&#10;                  &lt;/button&gt;&#10;                &lt;/form&gt;&#10;&#10;                {/* Back to Login Link */}&#10;                &lt;div className=&quot;mt-6 text-center&quot;&gt;&#10;                  &lt;Link&#10;                    href=&quot;/login&quot;&#10;                    className=&quot;inline-flex items-center text-sm text-green-600 hover:text-green-500 dark:text-green-400 dark:hover:text-green-300&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-arrow-left mr-2&quot;&gt;&lt;/i&gt;&#10;                    Back to login&#10;                  &lt;/Link&gt;&#10;                &lt;/div&gt;&#10;              &lt;/&gt;&#10;            )}&#10;          &lt;/div&gt;&#10;&#10;          {/* Additional Help */}&#10;          &lt;div className=&quot;bg-blue-50 dark:bg-blue-900 p-4 rounded-lg&quot;&gt;&#10;            &lt;h3 className=&quot;text-sm font-medium text-blue-800 dark:text-blue-200 mb-2&quot;&gt;&#10;              &lt;i className=&quot;fas fa-info-circle mr-2&quot;&gt;&lt;/i&gt;&#10;              Need help?&#10;            &lt;/h3&gt;&#10;            &lt;div className=&quot;text-xs text-blue-700 dark:text-blue-300 space-y-1&quot;&gt;&#10;              &lt;p&gt;&#10;                • Check your spam/junk folder if you don&amp;apos;t receive the email&#10;              &lt;/p&gt;&#10;              &lt;p&gt;• Make sure you entered the correct email address&lt;/p&gt;&#10;              &lt;p&gt;• Contact support if you continue having issues&lt;/p&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/layout.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/layout.js" />
              <option name="originalContent" value="import localFont from &quot;next/font/local&quot;;&#10;import &quot;./globals.css&quot;;&#10;import Providers from &quot;@/providers/Providers&quot;;&#10;import Navigation from &quot;@/components/Navigation&quot;;&#10;&#10;const geistSans = localFont({&#10;  src: &quot;./fonts/GeistVF.woff&quot;,&#10;  variable: &quot;--font-geist-sans&quot;,&#10;  weight: &quot;100 900&quot;,&#10;});&#10;const geistMono = localFont({&#10;  src: &quot;./fonts/GeistMonoVF.woff&quot;,&#10;  variable: &quot;--font-geist-mono&quot;,&#10;  weight: &quot;100 900&quot;,&#10;});&#10;&#10;export const metadata = {&#10;  title: &quot;FarmFresh - Local Farmer Booking&quot;,&#10;  description: &quot;Fresh Produce Direct from Farmers&quot;,&#10;};&#10;&#10;export default function RootLayout({ children, modal }) {&#10;  return (&#10;    &lt;html lang=&quot;en&quot; className=&quot;scroll-smooth&quot;&gt;&#10;      &lt;head&gt;&#10;        &lt;link&#10;          href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css&quot;&#10;          rel=&quot;stylesheet&quot;&#10;        /&gt;&#10;        {/* Blocking script to prevent flash of wrong theme */}&#10;        &lt;script&#10;          dangerouslySetInnerHTML={{&#10;            __html: `&#10;              (function() {&#10;                try {&#10;                  const savedTheme = localStorage.getItem('theme');&#10;                  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;&#10;                  &#10;                  if (savedTheme === 'dark' || (!savedTheme &amp;&amp; prefersDark)) {&#10;                    document.documentElement.classList.add('dark');&#10;                  }&#10;                } catch (e) {&#10;                  // Fallback to system preference on error&#10;                  try {&#10;                    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {&#10;                      document.documentElement.classList.add('dark');&#10;                    }&#10;                  } catch (e2) {&#10;                    // Do nothing if matchMedia is not supported&#10;                  }&#10;                }&#10;              })();&#10;            `,&#10;          }}&#10;        /&gt;&#10;      &lt;/head&gt;&#10;      &lt;body&#10;        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300`}&#10;      &gt;&#10;        &lt;Providers&gt;&#10;          &lt;Navigation /&gt;&#10;          {children}&#10;          {modal}&#10;        &lt;/Providers&gt;&#10;      &lt;/body&gt;&#10;    &lt;/html&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="import localFont from &quot;next/font/local&quot;;&#10;import &quot;./globals.css&quot;;&#10;import Providers from &quot;@/providers/Providers&quot;;&#10;import Navigation from &quot;@/components/Navigation&quot;;&#10;&#10;const geistSans = localFont({&#10;  src: &quot;./fonts/GeistVF.woff&quot;,&#10;  variable: &quot;--font-geist-sans&quot;,&#10;  weight: &quot;100 900&quot;,&#10;});&#10;const geistMono = localFont({&#10;  src: &quot;./fonts/GeistMonoVF.woff&quot;,&#10;  variable: &quot;--font-geist-mono&quot;,&#10;  weight: &quot;100 900&quot;,&#10;});&#10;&#10;export const metadata = {&#10;  title: &quot;FarmFresh - Local Farmer Booking&quot;,&#10;  description: &quot;Fresh Produce Direct from Farmers&quot;,&#10;};&#10;&#10;export default function RootLayout({ children, modal }) {&#10;  return (&#10;    &lt;html lang=&quot;en&quot; className=&quot;scroll-smooth&quot; suppressHydrationWarning&gt;&#10;      &lt;head&gt;&#10;        &lt;link&#10;          href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css&quot;&#10;          rel=&quot;stylesheet&quot;&#10;        /&gt;&#10;        {/* Blocking script to prevent flash of wrong theme */}&#10;        &lt;script&#10;          dangerouslySetInnerHTML={{&#10;            __html: `&#10;              (function() {&#10;                try {&#10;                  const savedTheme = localStorage.getItem('theme');&#10;                  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;&#10;                  &#10;                  if (savedTheme === 'dark' || (!savedTheme &amp;&amp; prefersDark)) {&#10;                    document.documentElement.classList.add('dark');&#10;                  }&#10;                } catch (e) {&#10;                  // Fallback to system preference on error&#10;                  try {&#10;                    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {&#10;                      document.documentElement.classList.add('dark');&#10;                    }&#10;                  } catch (e2) {&#10;                    // Do nothing if matchMedia is not supported&#10;                  }&#10;                }&#10;              })();&#10;            `,&#10;          }}&#10;        /&gt;&#10;      &lt;/head&gt;&#10;      &lt;body&#10;        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300`}&#10;      &gt;&#10;        &lt;Providers&gt;&#10;          &lt;Navigation /&gt;&#10;          {children}&#10;          {modal}&#10;        &lt;/Providers&gt;&#10;      &lt;/body&gt;&#10;    &lt;/html&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/products/page-simple.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/products/page-simple.js" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 pt-20&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4&quot;&gt;&#10;          &lt;div className=&quot;text-center py-12&quot;&gt;&#10;            &lt;p className=&quot;text-red-600&quot;&gt;Error loading products: {error.message}&lt;/p&gt;&#10;            &lt;button&#10;              onClick={() =&gt; refetchProducts()}&#10;              className=&quot;mt-4 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600&quot;&#10;            &gt;&#10;              Try Again&#10;            &lt;/button&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50 pt-20&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4&quot;&gt;&#10;        {/* Header */}&#10;        &lt;div className=&quot;py-8&quot;&gt;&#10;          &lt;h1 className=&quot;text-3xl font-bold text-gray-900 mb-2&quot;&gt;All Products&lt;/h1&gt;&#10;          &lt;p className=&quot;text-gray-600&quot;&gt;&#10;            Showing {displayProducts.length} products (sorted by newest first)&#10;          &lt;/p&gt;&#10;          &lt;button&#10;            onClick={() =&gt; {&#10;              console.log(&quot; Manual refresh triggered&quot;);&#10;              productsCache.invalidateProducts();&#10;            }}&#10;            className=&quot;mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600&quot;&#10;          &gt;&#10;            Refresh Products&#10;          &lt;/button&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Products Grid */}&#10;        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 pb-12&quot;&gt;&#10;          {displayProducts.map((product) =&gt; (&#10;            &lt;ProductCard key={product._id} product={product} /&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;&#10;        {displayProducts.length === 0 &amp;&amp; (&#10;          &lt;div className=&quot;text-center py-12&quot;&gt;&#10;            &lt;p className=&quot;text-gray-500 text-lg&quot;&gt;No products available&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;&#10;      &lt;Footer /&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/products/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/products/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useEffect, useCallback, useMemo } from &quot;react&quot;;&#10;import { useSearchParams, useRouter } from &quot;next/navigation&quot;;&#10;import ProductCard from &quot;@/components/ProductCard&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;import { debounce } from &quot;@/utils/debounce&quot;;&#10;import { useUnifiedProductsData } from &quot;@/hooks/useUnifiedProductsData&quot;;&#10;import { useFarmersQuery, useFarmersCache } from &quot;@/hooks/useFarmersQuery&quot;;&#10;&#10;// Move constants outside component to prevent recreations&#10;const CATEGORY_OPTIONS = [&#10;  &quot;All Categories&quot;,&#10;  &quot;Vegetables&quot;,&#10;  &quot;Fruits&quot;,&#10;  &quot;Grains&quot;,&#10;  &quot;Dairy&quot;,&#10;  &quot;Honey&quot;,&#10;  &quot;Herbs&quot;,&#10;];&#10;&#10;const PRICE_RANGE_OPTIONS = [&#10;  { label: &quot;Under ৳50&quot;, min: 0, max: 49 },&#10;  { label: &quot;৳50 - ৳100&quot;, min: 50, max: 100 },&#10;  { label: &quot;৳100 - ৳200&quot;, min: 101, max: 200 },&#10;  { label: &quot;৳200 - ���500&quot;, min: 201, max: 500 },&#10;  { label: &quot;Above ৳500&quot;, min: 501, max: 9999 },&#10;];&#10;&#10;const TAG_OPTIONS = [&#10;  &quot;Organic&quot;,&#10;  &quot;Fresh&quot;,&#10;  &quot;Local&quot;,&#10;  &quot;Premium&quot;,&#10;  &quot;Seasonal&quot;,&#10;  &quot;Limited Stock&quot;,&#10;];&#10;&#10;const ITEMS_PER_PAGE = 12;&#10;&#10;export default function Products() {&#10;  const searchParams = useSearchParams();&#10;  const router = useRouter();&#10;&#10;  // Use unified caching system instead of separate caching&#10;  const farmersCache = useFarmersCache();&#10;&#10;  // Auto-refresh data when page becomes visible (handles browser tab switching)&#10;  useEffect(() =&gt; {&#10;    const handleVisibilityChange = () =&gt; {&#10;      if (!document.hidden) {&#10;        farmersCache.invalidateFarmers();&#10;      }&#10;    };&#10;&#10;    document.addEventListener(&quot;visibilitychange&quot;, handleVisibilityChange);&#10;    return () =&gt;&#10;      document.removeEventListener(&quot;visibilitychange&quot;, handleVisibilityChange);&#10;  }, [farmersCache]);&#10;&#10;  // Filter states - Initialize from URL params&#10;  const [filters, setFilters] = useState(() =&gt; ({&#10;    searchTerm: searchParams.get(&quot;search&quot;) || &quot;&quot;,&#10;    selectedCategory: searchParams.get(&quot;category&quot;) || &quot;All Categories&quot;,&#10;    selectedPriceRanges: searchParams.get(&quot;priceRanges&quot;)?.split(&quot;,&quot;) || [],&#10;    selectedRatings: searchParams.get(&quot;ratings&quot;)?.split(&quot;,&quot;).map(Number) || [],&#10;    selectedFarmers: searchParams.get(&quot;farmers&quot;)?.split(&quot;,&quot;) || [],&#10;    selectedTags: searchParams.get(&quot;tags&quot;)?.split(&quot;,&quot;) || [],&#10;    priceRangeSlider: [&#10;      Number(searchParams.get(&quot;minPrice&quot;)) || 0,&#10;      Number(searchParams.get(&quot;maxPrice&quot;)) || 10000,&#10;    ],&#10;    sortBy: searchParams.get(&quot;sort&quot;) || &quot;newest&quot;,&#10;  }));&#10;&#10;  const [currentPage, setCurrentPage] = useState(&#10;    Number(searchParams.get(&quot;page&quot;)) || 1,&#10;  );&#10;  const [showMobileFilters, setShowMobileFilters] = useState(false);&#10;&#10;  // Use unified products data hook with same caching mechanism as dashboard&#10;  const {&#10;    products: allProducts,&#10;    isLoading: loading,&#10;    error,&#10;    refetch: refetchProducts,&#10;    refreshProducts,&#10;  } = useUnifiedProductsData(filters);&#10;&#10;  // Use React Query for farmers data&#10;  const { data: farmersData } = useFarmersQuery();&#10;&#10;  // Extract products and farmers from React Query data&#10;  const availableFarmers = useMemo(() =&gt; {&#10;    // Get farmers from the dedicated farmers query instead of product data&#10;    const farmers = farmersData?.farmers || [];&#10;&#10;    // Get unique farmer names from the farmers collection (fresh data)&#10;    const farmerNames = farmers&#10;      .map((farmer) =&gt; farmer.name)&#10;      .filter(Boolean)&#10;      .sort();&#10;&#10;    return farmerNames;&#10;  }, [farmersData]);&#10;&#10;  // Create a farmer lookup map for quick access&#10;  const farmerLookup = useMemo(() =&gt; {&#10;    const farmers = farmersData?.farmers || [];&#10;    const lookup = new Map();&#10;&#10;    // Create lookup by ID&#10;    farmers.forEach((farmer) =&gt; {&#10;      if (farmer._id) lookup.set(farmer._id, farmer);&#10;    });&#10;&#10;    // Also create lookup by email for additional matching&#10;    farmers.forEach((farmer) =&gt; {&#10;      if (farmer.email) lookup.set(farmer.email, farmer);&#10;    });&#10;&#10;    return lookup;&#10;  }, [farmersData]);&#10;&#10;  // Enhance products with fresh farmer data&#10;  const enhancedProducts = useMemo(() =&gt; {&#10;    return allProducts.map((product) =&gt; {&#10;      // Get all possible farmer identifiers from product&#10;      const productFarmerId =&#10;        product.farmer?.id || product.farmer?._id || product.farmerId;&#10;      const productFarmerEmail = product.farmer?.email || product.farmerEmail;&#10;      const productFarmerName = product.farmer?.name || product.farmerName;&#10;&#10;      // Look up fresh farmer data by ID first (most reliable)&#10;      let freshFarmer = null;&#10;      if (productFarmerId) {&#10;        freshFarmer = farmerLookup.get(productFarmerId);&#10;      }&#10;&#10;      // If no match by ID, try email&#10;      if (!freshFarmer &amp;&amp; productFarmerEmail) {&#10;        freshFarmer = farmerLookup.get(productFarmerEmail);&#10;      }&#10;&#10;      // If no match by ID or email, try finding by name (least reliable but necessary fallback)&#10;      if (!freshFarmer &amp;&amp; productFarmerName) {&#10;        const farmers = farmersData?.farmers || [];&#10;        freshFarmer = farmers.find(&#10;          (farmer) =&gt; farmer.name === productFarmerName,&#10;        );&#10;      }&#10;&#10;      // If we found fresh farmer data, enhance the product; otherwise keep original&#10;      if (freshFarmer) {&#10;        return {&#10;          ...product,&#10;          farmer: {&#10;            ...product.farmer,&#10;            name: freshFarmer.name,&#10;            email: freshFarmer.email,&#10;            phone: freshFarmer.phone,&#10;            id: freshFarmer._id,&#10;            _id: freshFarmer._id,&#10;          },&#10;          farmerName: freshFarmer.name,&#10;          farmerEmail: freshFarmer.email,&#10;          farmerId: freshFarmer._id, // Ensure farmerId is set&#10;        };&#10;      }&#10;&#10;      // No fresh farmer data found, return product with normalized farmer info&#10;      return {&#10;        ...product,&#10;        // Ensure farmerName is always available for display&#10;        farmerName:&#10;          productFarmerName ||&#10;          (typeof product.farmer === &quot;string&quot;&#10;            ? product.farmer&#10;            : &quot;Unknown Farmer&quot;),&#10;      };&#10;    });&#10;  }, [allProducts, farmerLookup, farmersData]);&#10;&#10;  // Listen for order completion events to refresh data - IMPROVED TO PREVENT RACE CONDITIONS&#10;  useEffect(() =&gt; {&#10;    const handleOrderComplete = (event) =&gt; {&#10;      const { orderId } = event.detail || {};&#10;      if (orderId) {&#10;        console.log(&quot; Order completed, refreshing product data&quot;);&#10;        // Longer delay to ensure backend has processed the update completely&#10;        setTimeout(() =&gt; {&#10;          farmersCache.invalidateFarmers();&#10;        }, 3000); // Increased to 3 seconds to prevent race conditions&#10;      }&#10;    };&#10;&#10;    const handleCartCheckout = (event) =&gt; {&#10;      console.log(&quot; Cart checkout completed, refreshing product data&quot;);&#10;      // Longer delay to ensure backend has processed the update completely&#10;      setTimeout(() =&gt; {&#10;        farmersCache.invalidateFarmers();&#10;      }, 3000); // Already correct at 3 seconds&#10;    };&#10;&#10;    // Listen for order completion events&#10;    window.addEventListener(&quot;orderCompleted&quot;, handleOrderComplete);&#10;    window.addEventListener(&quot;cartCheckoutCompleted&quot;, handleCartCheckout);&#10;&#10;    return () =&gt; {&#10;      window.removeEventListener(&quot;orderCompleted&quot;, handleOrderComplete);&#10;      window.removeEventListener(&quot;cartCheckoutCompleted&quot;, handleCartCheckout);&#10;    };&#10;  }, [farmersCache]);&#10;&#10;  // Memoized filtered and sorted products&#10;  const filteredProducts = useMemo(() =&gt; {&#10;    let filtered = [...enhancedProducts];&#10;&#10;    // Filter: Only show products that are available for purchase&#10;    // More flexible filtering to handle different status values and stock levels&#10;    filtered = filtered.filter((product) =&gt; {&#10;      // Don't show deleted products&#10;      if (product.status === &quot;deleted&quot;) return false;&#10;&#10;      // Don't show inactive products (if status is explicitly set to inactive)&#10;      if (product.status === &quot;inactive&quot;) return false;&#10;&#10;      // Show ALL products including stock-out ones&#10;      // Only exclude if stock is explicitly undefined/null AND status indicates unavailable&#10;      return true; // Show all active products regardless of stock level&#10;    });&#10;&#10;    // Apply search term filter&#10;    if (filters.searchTerm &amp;&amp; filters.searchTerm.trim()) {&#10;      const searchTerm = filters.searchTerm.toLowerCase().trim();&#10;      filtered = filtered.filter((product) =&gt; {&#10;        return (&#10;          product.name?.toLowerCase().includes(searchTerm) ||&#10;          product.description?.toLowerCase().includes(searchTerm) ||&#10;          product.category?.toLowerCase().includes(searchTerm) ||&#10;          product.farmerName?.toLowerCase().includes(searchTerm)&#10;        );&#10;      });&#10;    }&#10;&#10;    // Apply category filter&#10;    if (&#10;      filters.selectedCategory &amp;&amp;&#10;      filters.selectedCategory !== &quot;All Categories&quot;&#10;    ) {&#10;      filtered = filtered.filter((product) =&gt; {&#10;        return (&#10;          product.category?.toLowerCase() ===&#10;          filters.selectedCategory.toLowerCase()&#10;        );&#10;      });&#10;    }&#10;&#10;    // Apply price range checkboxes&#10;    if (filters.selectedPriceRanges.length &gt; 0) {&#10;      filtered = filtered.filter((product) =&gt; {&#10;        return filters.selectedPriceRanges.some((range) =&gt; {&#10;          const option = PRICE_RANGE_OPTIONS.find((opt) =&gt; opt.label === range);&#10;          const price = parseFloat(product.price) || 0;&#10;          return price &gt;= option.min &amp;&amp; price &lt;= option.max;&#10;        });&#10;      });&#10;    }&#10;&#10;    // Apply price range slider&#10;    filtered = filtered.filter((product) =&gt; {&#10;      const price = parseFloat(product.price) || 0;&#10;      return (&#10;        price &gt;= filters.priceRangeSlider[0] &amp;&amp;&#10;        price &lt;= filters.priceRangeSlider[1]&#10;      );&#10;    });&#10;&#10;    // Apply rating filters&#10;    if (filters.selectedRatings.length &gt; 0) {&#10;      filtered = filtered.filter((product) =&gt; {&#10;        const productRating = parseFloat(product.averageRating) || 0;&#10;        return filters.selectedRatings.some(&#10;          (rating) =&gt; productRating &gt;= rating,&#10;        );&#10;      });&#10;    }&#10;&#10;    // Apply farmer filters&#10;    if (filters.selectedFarmers.length &gt; 0) {&#10;      filtered = filtered.filter((product) =&gt; {&#10;        const farmerName = product.farmer?.name || product.farmerName || &quot;&quot;;&#10;        return filters.selectedFarmers.includes(farmerName);&#10;      });&#10;    }&#10;&#10;    // Apply tag filters&#10;    if (filters.selectedTags.length &gt; 0) {&#10;      filtered = filtered.filter((product) =&gt; {&#10;        return filters.selectedTags.some((tag) =&gt; {&#10;          switch (tag) {&#10;            case &quot;Organic&quot;:&#10;              return (&#10;                product.isOrganic === true ||&#10;                (product.tags &amp;&amp; product.tags.includes(&quot;organic&quot;))&#10;              );&#10;            case &quot;Fresh&quot;:&#10;              return (&#10;                product.isFresh === true ||&#10;                (product.tags &amp;&amp; product.tags.includes(&quot;fresh&quot;))&#10;              );&#10;            case &quot;Local&quot;:&#10;              return true;&#10;            case &quot;Premium&quot;:&#10;              return parseFloat(product.price) &gt; 200;&#10;            case &quot;Seasonal&quot;:&#10;              return parseInt(product.stock) &lt; 100;&#10;            case &quot;Limited Stock&quot;:&#10;              return parseInt(product.stock) &lt; 50;&#10;            default:&#10;              return product.tags &amp;&amp; product.tags.includes(tag.toLowerCase());&#10;          }&#10;        });&#10;      });&#10;    }&#10;&#10;    // Apply sorting&#10;    switch (filters.sortBy) {&#10;      case &quot;price-low&quot;:&#10;        filtered.sort((a, b) =&gt; parseFloat(a.price) - parseFloat(b.price));&#10;        break;&#10;      case &quot;price-high&quot;:&#10;        filtered.sort((a, b) =&gt; parseFloat(b.price) - parseFloat(a.price));&#10;        break;&#10;      case &quot;rating&quot;:&#10;        filtered.sort(&#10;          (a, b) =&gt;&#10;            (parseFloat(b.averageRating) || 0) -&#10;            (parseFloat(a.averageRating) || 0),&#10;        );&#10;        break;&#10;      case &quot;popular&quot;:&#10;        filtered.sort(&#10;          (a, b) =&gt;&#10;            (parseInt(b.purchaseCount) || 0) - (parseInt(a.purchaseCount) || 0),&#10;        );&#10;        break;&#10;      case &quot;newest&quot;:&#10;        filtered.sort((a, b) =&gt; new Date(b.createdAt) - new Date(a.createdAt));&#10;        break;&#10;      case &quot;oldest&quot;:&#10;        filtered.sort((a, b) =&gt; new Date(a.createdAt) - new Date(b.createdAt));&#10;        break;&#10;      default:&#10;        break;&#10;    }&#10;&#10;    return filtered;&#10;  }, [enhancedProducts, filters]);&#10;&#10;  // Memoized pagination data&#10;  const paginationData = useMemo(() =&gt; {&#10;    const totalProducts = filteredProducts.length;&#10;    const totalPages = Math.ceil(totalProducts / ITEMS_PER_PAGE);&#10;    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;&#10;    const endIndex = startIndex + ITEMS_PER_PAGE;&#10;    const paginatedProducts = filteredProducts.slice(startIndex, endIndex);&#10;&#10;    return {&#10;      products: paginatedProducts,&#10;      pagination: {&#10;        currentPage,&#10;        totalPages,&#10;        totalProducts,&#10;        hasNextPage: currentPage &lt; totalPages,&#10;        hasPrevPage: currentPage &gt; 1,&#10;      },&#10;    };&#10;  }, [filteredProducts, currentPage]);&#10;&#10;  // Update URL when filters change (with debouncing)&#10;  const updateURL = useCallback(&#10;    debounce(() =&gt; {&#10;      const params = new URLSearchParams();&#10;&#10;      // Only add non-default parameters to keep URLs clean&#10;      if (filters.searchTerm) params.set(&quot;search&quot;, filters.searchTerm);&#10;      if (filters.selectedCategory !== &quot;All Categories&quot;)&#10;        params.set(&quot;category&quot;, filters.selectedCategory);&#10;      if (filters.selectedPriceRanges.length &gt; 0)&#10;        params.set(&quot;priceRanges&quot;, filters.selectedPriceRanges.join(&quot;,&quot;));&#10;      if (filters.selectedRatings.length &gt; 0)&#10;        params.set(&quot;ratings&quot;, filters.selectedRatings.join(&quot;,&quot;));&#10;      if (filters.selectedFarmers.length &gt; 0)&#10;        params.set(&quot;farmers&quot;, filters.selectedFarmers.join(&quot;,&quot;));&#10;      if (filters.selectedTags.length &gt; 0)&#10;        params.set(&quot;tags&quot;, filters.selectedTags.join(&quot;,&quot;));&#10;      if (filters.priceRangeSlider[0] &gt; 0)&#10;        params.set(&quot;minPrice&quot;, filters.priceRangeSlider[0]);&#10;      if (filters.priceRangeSlider[1] &lt; 10000)&#10;        params.set(&quot;maxPrice&quot;, filters.priceRangeSlider[1]);&#10;      if (filters.sortBy !== &quot;newest&quot;) params.set(&quot;sort&quot;, filters.sortBy);&#10;      if (currentPage &gt; 1) params.set(&quot;page&quot;, currentPage);&#10;&#10;      const newURL = params.toString() ? `?${params.toString()}` : &quot;&quot;;&#10;      router.push(`/products${newURL}`, { scroll: false });&#10;    }, 300),&#10;    [filters, currentPage, router],&#10;  );&#10;&#10;  useEffect(() =&gt; {&#10;    updateURL();&#10;  }, [updateURL]);&#10;&#10;  // Handle filter changes&#10;  const handleFilterChange = useCallback((filterType, value) =&gt; {&#10;    setFilters((prev) =&gt; {&#10;      const newFilters = { ...prev };&#10;&#10;      switch (filterType) {&#10;        case &quot;searchTerm&quot;:&#10;          newFilters.searchTerm = value;&#10;          break;&#10;        case &quot;category&quot;:&#10;          newFilters.selectedCategory = value;&#10;          break;&#10;        case &quot;priceRange&quot;:&#10;          if (newFilters.selectedPriceRanges.includes(value)) {&#10;            newFilters.selectedPriceRanges =&#10;              newFilters.selectedPriceRanges.filter((range) =&gt; range !== value);&#10;          } else {&#10;            newFilters.selectedPriceRanges = [&#10;              ...newFilters.selectedPriceRanges,&#10;              value,&#10;            ];&#10;          }&#10;          break;&#10;        case &quot;rating&quot;:&#10;          if (newFilters.selectedRatings.includes(value)) {&#10;            newFilters.selectedRatings = newFilters.selectedRatings.filter(&#10;              (rating) =&gt; rating !== value,&#10;            );&#10;          } else {&#10;            newFilters.selectedRatings = [...newFilters.selectedRatings, value];&#10;          }&#10;          break;&#10;        case &quot;farmer&quot;:&#10;          if (newFilters.selectedFarmers.includes(value)) {&#10;            newFilters.selectedFarmers = newFilters.selectedFarmers.filter(&#10;              (farmer) =&gt; farmer !== value,&#10;            );&#10;          } else {&#10;            newFilters.selectedFarmers = [...newFilters.selectedFarmers, value];&#10;          }&#10;          break;&#10;        case &quot;tag&quot;:&#10;          if (newFilters.selectedTags.includes(value)) {&#10;            newFilters.selectedTags = newFilters.selectedTags.filter(&#10;              (tag) =&gt; tag !== value,&#10;            );&#10;          } else {&#10;            newFilters.selectedTags = [...newFilters.selectedTags, value];&#10;          }&#10;          break;&#10;        case &quot;priceSlider&quot;:&#10;          newFilters.priceRangeSlider = value;&#10;          break;&#10;        case &quot;sortBy&quot;:&#10;          newFilters.sortBy = value;&#10;          break;&#10;      }&#10;&#10;      return newFilters;&#10;    });&#10;&#10;    // Reset to first page when filters change&#10;    if (filterType !== &quot;sortBy&quot;) {&#10;      setCurrentPage(1);&#10;    }&#10;  }, []);&#10;&#10;  // Clear all filters&#10;  const clearAllFilters = useCallback(() =&gt; {&#10;    setFilters({&#10;      searchTerm: &quot;&quot;,&#10;      selectedCategory: &quot;All Categories&quot;,&#10;      selectedPriceRanges: [],&#10;      selectedRatings: [],&#10;      selectedFarmers: [],&#10;      selectedTags: [],&#10;      priceRangeSlider: [0, 10000],&#10;      sortBy: &quot;newest&quot;,&#10;    });&#10;    setCurrentPage(1);&#10;  }, []);&#10;&#10;  // Handle page changes&#10;  const handlePageChange = useCallback((page) =&gt; {&#10;    setCurrentPage(page);&#10;    window.scrollTo({ top: 0, behavior: &quot;smooth&quot; });&#10;  }, []);&#10;&#10;  // Refresh data&#10;  const refreshData = useCallback(() =&gt; {&#10;    refetchProducts();&#10;  }, [refetchProducts]);&#10;&#10;  // Get active filter count&#10;  const getActiveFilterCount = () =&gt; {&#10;    let count = 0;&#10;    if (filters.selectedCategory !== &quot;All Categories&quot;) count++;&#10;    if (filters.selectedPriceRanges.length &gt; 0) count++;&#10;    if (filters.selectedRatings.length &gt; 0) count++;&#10;    if (filters.selectedFarmers.length &gt; 0) count++;&#10;    if (filters.selectedTags.length &gt; 0) count++;&#10;    if (&#10;      filters.priceRangeSlider[0] !== 0 ||&#10;      filters.priceRangeSlider[1] !== 10000&#10;    )&#10;      count++;&#10;    return count;&#10;  };&#10;&#10;  // Handle error display&#10;  if (error) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#10;          &lt;i className=&quot;fas fa-exclamation-triangle text-6xl text-red-500 mb-4&quot;&gt;&lt;/i&gt;&#10;          &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;            Error Loading Products&#10;          &lt;/h3&gt;&#10;          &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;            {error.message || &quot;Something went wrong while loading products&quot;}&#10;          &lt;/p&gt;&#10;          &lt;button&#10;            onClick={() =&gt; refetchProducts()}&#10;            className=&quot;bg-primary-600 hover:bg-primary-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#10;          &gt;&#10;            Try Again&#10;          &lt;/button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  // Custom Loading Skeleton Components&#10;  const ProductCardSkeleton = ({ index }) =&gt; (&#10;    &lt;div&#10;      className=&quot;group bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden border border-gray-100 dark:border-gray-700 relative&quot;&#10;      style={{&#10;        animationDelay: `${index * 150}ms`,&#10;        animation: &quot;fadeInUp 0.6s ease-out forwards&quot;,&#10;      }}&#10;    &gt;&#10;      {/* Shimmer effect overlay */}&#10;      &lt;div className=&quot;absolute inset-0 -translate-x-full bg-gradient-to-r from-transparent via-white/20 to-transparent animate-shimmer&quot;&gt;&lt;/div&gt;&#10;&#10;      {/* Product Image Skeleton */}&#10;      &lt;div className=&quot;relative aspect-square bg-gradient-to-br from-gray-200 via-gray-300 to-gray-200 dark:from-gray-600 dark:via-gray-700 dark:to-gray-600 overflow-hidden&quot;&gt;&#10;        {/* Animated placeholder icons */}&#10;        &lt;div className=&quot;absolute inset-0 flex items-center justify-center&quot;&gt;&#10;          &lt;div className=&quot;animate-bounce&quot;&gt;&#10;            &lt;i className=&quot;fas fa-seedling text-4xl text-gray-400 dark:text-gray-500&quot;&gt;&lt;/i&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        {/* Floating particles effect */}&#10;        &lt;div className=&quot;absolute top-2 left-2 w-2 h-2 bg-green-400 rounded-full animate-ping opacity-60&quot;&gt;&lt;/div&gt;&#10;        &lt;div&#10;          className=&quot;absolute top-4 right-3 w-1.5 h-1.5 bg-yellow-400 rounded-full animate-pulse opacity-70&quot;&#10;          style={{ animationDelay: &quot;0.5s&quot; }}&#10;        &gt;&lt;/div&gt;&#10;        &lt;div&#10;          className=&quot;absolute bottom-3 left-4 w-1 h-1 bg-blue-400 rounded-full animate-bounce opacity-50&quot;&#10;          style={{ animationDelay: &quot;1s&quot; }}&#10;        &gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Content Skeleton */}&#10;      &lt;div className=&quot;p-6 space-y-4&quot;&gt;&#10;        {/* Category Badge */}&#10;        &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;          &lt;div className=&quot;h-6 w-20 bg-gradient-to-r from-green-200 to-green-300 dark:from-green-700 dark:to-green-600 rounded-full animate-pulse&quot;&gt;&lt;/div&gt;&#10;          &lt;div&#10;            className=&quot;h-5 w-12 bg-gradient-to-r from-blue-200 to-blue-300 dark:from-blue-700 dark:to-blue-600 rounded-full animate-pulse&quot;&#10;            style={{ animationDelay: &quot;0.2s&quot; }}&#10;          &gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Product Name */}&#10;        &lt;div className=&quot;space-y-2&quot;&gt;&#10;          &lt;div className=&quot;h-5 bg-gradient-to-r from-gray-300 via-gray-400 to-gray-300 dark:from-gray-600 dark:via-gray-500 dark:to-gray-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#10;          &lt;div&#10;            className=&quot;h-4 w-3/4 bg-gradient-to-r from-gray-250 via-gray-350 to-gray-250 dark:from-gray-650 dark:via-gray-550 dark:to-gray-650 rounded animate-pulse&quot;&#10;            style={{ animationDelay: &quot;0.3s&quot; }}&#10;          &gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Rating */}&#10;        &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;          &lt;div className=&quot;flex gap-1&quot;&gt;&#10;            {[1, 2, 3, 4, 5].map((star) =&gt; (&#10;              &lt;div&#10;                key={star}&#10;                className=&quot;w-4 h-4 bg-yellow-200 dark:bg-yellow-700 rounded animate-pulse&quot;&#10;                style={{ animationDelay: `${star * 0.1}s` }}&#10;              &gt;&lt;/div&gt;&#10;            ))}&#10;          &lt;/div&gt;&#10;          &lt;div&#10;            className=&quot;h-3 w-12 bg-gray-300 dark:bg-gray-600 rounded animate-pulse&quot;&#10;            style={{ animationDelay: &quot;0.8s&quot; }}&#10;          &gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Price */}&#10;        &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;          &lt;div className=&quot;space-y-1&quot;&gt;&#10;            &lt;div className=&quot;h-7 w-24 bg-gradient-to-r from-primary-200 to-primary-300 dark:from-primary-700 dark:to-primary-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#10;            &lt;div&#10;              className=&quot;h-3 w-16 bg-gray-300 dark:bg-gray-600 rounded animate-pulse&quot;&#10;              style={{ animationDelay: &quot;0.4s&quot; }}&#10;            &gt;&lt;/div&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;text-right space-y-1&quot;&gt;&#10;            &lt;div&#10;              className=&quot;h-4 w-20 bg-green-200 dark:bg-green-700 rounded animate-pulse&quot;&#10;              style={{ animationDelay: &quot;0.6s&quot; }}&#10;            &gt;&lt;/div&gt;&#10;            &lt;div&#10;              className=&quot;h-3 w-14 bg-gray-300 dark:bg-gray-600 rounded animate-pulse&quot;&#10;              style={{ animationDelay: &quot;0.7s&quot; }}&#10;            &gt;&lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Action Button */}&#10;        &lt;div&#10;          className=&quot;h-10 bg-gradient-to-r from-primary-300 via-primary-400 to-primary-300 dark:from-primary-600 dark:via-primary-700 dark:to-primary-600 rounded-lg animate-pulse&quot;&#10;          style={{ animationDelay: &quot;0.9s&quot; }}&#10;        &gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;&#10;  const FilterSidebarSkeleton = () =&gt; (&#10;    &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 space-y-6&quot;&gt;&#10;      {/* Header */}&#10;      &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;        &lt;div className=&quot;h-6 w-20 bg-gray-300 dark:bg-gray-600 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;        &lt;div className=&quot;h-5 w-5 bg-primary-300 dark:bg-primary-600 rounded-full animate-pulse&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Filter Sections */}&#10;      {[1, 2, 3, 4, 5].map((section) =&gt; (&#10;        &lt;div&#10;          key={section}&#10;          className=&quot;space-y-3&quot;&#10;          style={{ animationDelay: `${section * 0.1}s` }}&#10;        &gt;&#10;          &lt;div className=&quot;flex items-center gap-2 animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-4 w-4 bg-primary-300 dark:bg-primary-600 rounded&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;h-5 w-24 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;space-y-2 ml-2&quot;&gt;&#10;            {[1, 2, 3].map((item) =&gt; (&#10;              &lt;div&#10;                key={item}&#10;                className=&quot;flex items-center gap-2 animate-pulse&quot;&#10;                style={{ animationDelay: `${item * 0.05}s` }}&#10;              &gt;&#10;                &lt;div className=&quot;h-3 w-3 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-3 w-20 bg-gray-250 dark:bg-gray-650 rounded&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;            ))}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      ))}&#10;    &lt;/div&gt;&#10;  );&#10;&#10;  const HeaderSkeleton = () =&gt; (&#10;    &lt;div className=&quot;bg-gradient-to-r from-primary-600 to-emerald-600 text-white py-12&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        {/* Animated farm background */}&#10;        &lt;div className=&quot;absolute inset-0 opacity-10&quot;&gt;&#10;          &lt;div className=&quot;animate-float&quot; style={{ animationDelay: &quot;0s&quot; }}&gt;&#10;            &lt;i className=&quot;fas fa-tractor text-6xl absolute top-8 left-1/4&quot;&gt;&lt;/i&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;animate-float&quot; style={{ animationDelay: &quot;2s&quot; }}&gt;&#10;            &lt;i className=&quot;fas fa-leaf text-4xl absolute top-16 right-1/3&quot;&gt;&lt;/i&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;animate-float&quot; style={{ animationDelay: &quot;4s&quot; }}&gt;&#10;            &lt;i className=&quot;fas fa-seedling text-3xl absolute bottom-8 left-1/3&quot;&gt;&lt;/i&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;relative z-10&quot;&gt;&#10;          &lt;div className=&quot;h-10 w-64 bg-white/20 rounded-lg animate-pulse mb-4&quot;&gt;&lt;/div&gt;&#10;          &lt;div className=&quot;h-6 w-96 bg-white/15 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;&#10;          {/* Search results skeleton */}&#10;          &lt;div className=&quot;mt-6 p-4 bg-primary-700 rounded-lg animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;              &lt;div className=&quot;space-y-2&quot;&gt;&#10;                &lt;div className=&quot;h-4 w-48 bg-white/20 rounded&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-3 w-32 bg-white/15 rounded&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                &lt;div className=&quot;h-10 w-48 bg-white/20 rounded-lg&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-10 w-12 bg-white/15 rounded-lg&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;&#10;  if (loading &amp;&amp; allProducts.length === 0) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900&quot;&gt;&#10;        {/* Custom CSS animations */}&#10;        &lt;style jsx&gt;{`&#10;          @keyframes fadeInUp {&#10;            from {&#10;              opacity: 0;&#10;              transform: translateY(30px);&#10;            }&#10;            to {&#10;              opacity: 1;&#10;              transform: translateY(0);&#10;            }&#10;          }&#10;&#10;          @keyframes shimmer {&#10;            0% {&#10;              transform: translateX(-100%);&#10;            }&#10;            100% {&#10;              transform: translateX(100%);&#10;            }&#10;          }&#10;&#10;          @keyframes float {&#10;            0%,&#10;            100% {&#10;              transform: translateY(0px);&#10;            }&#10;            50% {&#10;              transform: translateY(-20px);&#10;            }&#10;          }&#10;&#10;          .animate-shimmer {&#10;            animation: shimmer 2s infinite;&#10;          }&#10;&#10;          .animate-float {&#10;            animation: float 6s ease-in-out infinite;&#10;          }&#10;        `}&lt;/style&gt;&#10;&#10;        {/* Header Skeleton */}&#10;        &lt;HeaderSkeleton /&gt;&#10;&#10;        {/* Main Content */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8&quot;&gt;&#10;          {/* Mobile Filter Toggle Skeleton */}&#10;          &lt;div className=&quot;lg:hidden mb-6&quot;&gt;&#10;            &lt;div className=&quot;w-full h-12 bg-white dark:bg-gray-800 rounded-lg border border-gray-300 dark:border-gray-600 animate-pulse&quot;&gt;&lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Active Filters Skeleton */}&#10;          &lt;div className=&quot;mb-6 p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;              &lt;div className=&quot;h-5 w-32 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;h-4 w-16 bg-primary-300 dark:bg-primary-600 rounded&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#10;              {[1, 2, 3, 4].map((item) =&gt; (&#10;                &lt;div&#10;                  key={item}&#10;                  className=&quot;h-6 w-20 bg-gradient-to-r from-primary-200 to-green-200 dark:from-primary-700 dark:to-green-700 rounded-full animate-pulse&quot;&#10;                  style={{ animationDelay: `${item * 0.1}s` }}&#10;                &gt;&lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-4 gap-8&quot;&gt;&#10;            {/* Filters Sidebar Skeleton */}&#10;            &lt;div className=&quot;lg:col-span-1&quot;&gt;&#10;              &lt;FilterSidebarSkeleton /&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Products Grid */}&#10;            &lt;div className=&quot;lg:col-span-3&quot;&gt;&#10;              {/* Sort and View Options Skeleton */}&#10;              &lt;div className=&quot;flex items-center justify-between mb-6 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm&quot;&gt;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center gap-2 animate-pulse&quot;&gt;&#10;                    &lt;div className=&quot;h-4 w-4 bg-primary-400 rounded animate-bounce&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-5 w-24 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex items-center text-primary-600 animate-pulse&quot;&gt;&#10;                    &lt;div className=&quot;h-4 w-4 bg-primary-400 rounded-full animate-spin mr-2&quot;&gt;&lt;/div&gt;&#10;                    &lt;div className=&quot;h-4 w-20 bg-primary-300 rounded&quot;&gt;&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;div className=&quot;h-4 w-16 bg-gray-300 dark:bg-gray-600 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-10 w-32 bg-gray-300 dark:bg-gray-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Products Grid Skeleton */}&#10;              &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#10;                {[...Array(9)].map((_, index) =&gt; (&#10;                  &lt;ProductCardSkeleton key={index} index={index} /&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;&#10;              {/* Pagination Skeleton */}&#10;              &lt;div className=&quot;flex justify-center items-center space-x-2 mt-8&quot;&gt;&#10;                &lt;div className=&quot;h-10 w-20 bg-gray-300 dark:bg-gray-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;flex space-x-1&quot;&gt;&#10;                  {[1, 2, 3, 4, 5].map((page) =&gt; (&#10;                    &lt;div&#10;                      key={page}&#10;                      className=&quot;h-10 w-10 bg-gray-300 dark:bg-gray-600 rounded-lg animate-pulse&quot;&#10;                      style={{ animationDelay: `${page * 0.1}s` }}&#10;                    &gt;&lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;h-10 w-16 bg-gray-300 dark:bg-gray-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900&quot;&gt;&#10;        {/* Products Header */}&#10;        &lt;div className=&quot;bg-primary-600 text-white py-12&quot;&gt;&#10;          &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;            &lt;h1 className=&quot;text-4xl font-bold mb-4&quot;&gt;Fresh Products&lt;/h1&gt;&#10;            &lt;p className=&quot;text-xl text-primary-100&quot;&gt;&#10;              Discover fresh, locally-sourced produce from our trusted farmers&#10;            &lt;/p&gt;&#10;&#10;            {/* Search Results Info */}&#10;            {(filters.searchTerm ||&#10;              filters.selectedCategory !== &quot;All Categories&quot;) &amp;&amp; (&#10;              &lt;div className=&quot;mt-6 p-4 bg-primary-700 rounded-lg&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between flex-wrap gap-2&quot;&gt;&#10;                  &lt;div&gt;&#10;                    {filters.searchTerm &amp;&amp; (&#10;                      &lt;p className=&quot;text-primary-100&quot;&gt;&#10;                        Search results for:{&quot; &quot;}&#10;                        &lt;span className=&quot;font-semibold text-white&quot;&gt;&#10;                          &quot;{filters.searchTerm}&quot;&#10;                        &lt;/span&gt;&#10;                      &lt;/p&gt;&#10;                    )}&#10;                    {filters.selectedCategory !== &quot;All Categories&quot; &amp;&amp; (&#10;                      &lt;p className=&quot;text-primary-100&quot;&gt;&#10;                        Category:{&quot; &quot;}&#10;                        &lt;span className=&quot;font-semibold text-white&quot;&gt;&#10;                          {filters.selectedCategory}&#10;                        &lt;/span&gt;&#10;                      &lt;/p&gt;&#10;                    )}&#10;                    &lt;p className=&quot;text-sm text-primary-200&quot;&gt;&#10;                      {paginationData.pagination.totalProducts} products found&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Search Bar in Results */}&#10;                  &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      placeholder=&quot;Search products...&quot;&#10;                      className=&quot;px-4 py-2 rounded-lg text-gray-900 focus:outline-none&quot;&#10;                      value={filters.searchTerm}&#10;                      onChange={(e) =&gt;&#10;                        handleFilterChange(&quot;searchTerm&quot;, e.target.value)&#10;                      }&#10;                      onKeyPress={(e) =&gt; e.key === &quot;Enter&quot; &amp;&amp; refetchProducts()}&#10;                    /&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; refetchProducts()}&#10;                      className=&quot;px-4 py-2 bg-primary-500 hover:bg-primary-400 rounded-lg transition&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-search&quot;&gt;&lt;/i&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Filters and Products */}&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8&quot;&gt;&#10;          {/* Mobile Filter Toggle */}&#10;          &lt;div className=&quot;lg:hidden mb-6&quot;&gt;&#10;            &lt;button&#10;              onClick={() =&gt; setShowMobileFilters(!showMobileFilters)}&#10;              className=&quot;w-full bg-white dark:bg-gray-800 text-gray-900 dark:text-white px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-between&quot;&#10;            &gt;&#10;              &lt;span className=&quot;flex items-center&quot;&gt;&#10;                &lt;i className=&quot;fas fa-filter mr-2&quot;&gt;&lt;/i&gt;&#10;                Filters&#10;                {getActiveFilterCount() &gt; 0 &amp;&amp; (&#10;                  &lt;span className=&quot;ml-2 bg-primary-600 text-white text-xs px-2 py-1 rounded-full&quot;&gt;&#10;                    {getActiveFilterCount()}&#10;                  &lt;/span&gt;&#10;                )}&#10;              &lt;/span&gt;&#10;              &lt;i&#10;                className={`fas fa-chevron-${showMobileFilters ? &quot;up&quot; : &quot;down&quot;}`}&#10;              &gt;&lt;/i&gt;&#10;            &lt;/button&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Active Filters Summary */}&#10;          {getActiveFilterCount() &gt; 0 &amp;&amp; (&#10;            &lt;div className=&quot;mb-6 p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;                &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Active Filters ({getActiveFilterCount()})&#10;                &lt;/h4&gt;&#10;                &lt;button&#10;                  onClick={clearAllFilters}&#10;                  className=&quot;text-sm text-primary-600 hover:text-primary-700 dark:text-primary-400&quot;&#10;                &gt;&#10;                  Clear All&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#10;                {filters.selectedCategory !== &quot;All Categories&quot; &amp;&amp; (&#10;                  &lt;span className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-primary-100 text-primary-800 dark:bg-primary-900 dark:text-primary-200&quot;&gt;&#10;                    Category: {filters.selectedCategory}&#10;                    &lt;button&#10;                      onClick={() =&gt;&#10;                        handleFilterChange(&quot;category&quot;, &quot;All Categories&quot;)&#10;                      }&#10;                      className=&quot;ml-2 text-primary-600 hover:text-primary-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                )}&#10;                {filters.selectedPriceRanges.map((range) =&gt; (&#10;                  &lt;span&#10;                    key={range}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200&quot;&#10;                  &gt;&#10;                    {range}&#10;                    &lt;button&#10;                      onClick={() =&gt; handleFilterChange(&quot;priceRange&quot;, range)}&#10;                      className=&quot;ml-2 text-green-600 hover:text-green-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {filters.selectedRatings.map((rating) =&gt; (&#10;                  &lt;span&#10;                    key={rating}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200&quot;&#10;                  &gt;&#10;                    {rating}+ Stars&#10;                    &lt;button&#10;                      onClick={() =&gt; handleFilterChange(&quot;rating&quot;, rating)}&#10;                      className=&quot;ml-2 text-yellow-600 hover:text-yellow-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {filters.selectedFarmers.map((farmer) =&gt; (&#10;                  &lt;span&#10;                    key={farmer}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200&quot;&#10;                  &gt;&#10;                    {farmer}&#10;                    &lt;button&#10;                      onClick={() =&gt; handleFilterChange(&quot;farmer&quot;, farmer)}&#10;                      className=&quot;ml-2 text-blue-600 hover:text-blue-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {filters.selectedTags.map((tag) =&gt; (&#10;                  &lt;span&#10;                    key={tag}&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200&quot;&#10;                  &gt;&#10;                    {tag}&#10;                    &lt;button&#10;                      onClick={() =&gt; handleFilterChange(&quot;tag&quot;, tag)}&#10;                      className=&quot;ml-2 text-purple-600 hover:text-purple-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                ))}&#10;                {(filters.priceRangeSlider[0] !== 0 ||&#10;                  filters.priceRangeSlider[1] !== 10000) &amp;&amp; (&#10;                  &lt;span className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200&quot;&gt;&#10;                    ৳{filters.priceRangeSlider[0]} - ৳&#10;                    {filters.priceRangeSlider[1]}&#10;                    &lt;button&#10;                      onClick={() =&gt;&#10;                        handleFilterChange(&quot;priceSlider&quot;, [0, 10000])&#10;                      }&#10;                      className=&quot;ml-2 text-orange-600 hover:text-orange-800&quot;&#10;                    &gt;&#10;                      ×&#10;                    &lt;/button&gt;&#10;                  &lt;/span&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;&#10;          &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-4 gap-8&quot;&gt;&#10;            {/* Filters Sidebar */}&#10;            &lt;div&#10;              className={`lg:col-span-1 ${&#10;                showMobileFilters ? &quot;block&quot; : &quot;hidden lg:block&quot;&#10;              }`}&#10;            &gt;&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 sticky top-24&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                  &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                    Filters&#10;                  &lt;/h3&gt;&#10;                  {getActiveFilterCount() &gt; 0 &amp;&amp; (&#10;                    &lt;span className=&quot;bg-primary-600 text-white text-xs px-2 py-1 rounded-full&quot;&gt;&#10;                      {getActiveFilterCount()}&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;&#10;                {/* Category Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-th-large mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Category&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2 max-h-48 overflow-y-auto&quot;&gt;&#10;                    {CATEGORY_OPTIONS.map((category) =&gt; (&#10;                      &lt;label&#10;                        key={category}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;radio&quot;&#10;                          name=&quot;category&quot;&#10;                          checked={filters.selectedCategory === category}&#10;                          onChange={() =&gt;&#10;                            handleFilterChange(&quot;category&quot;, category)&#10;                          }&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          {category}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Price Range */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-dollar-sign mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Price Range (৳)&#10;                  &lt;/h4&gt;&#10;&#10;                  {/* Custom Price Range Slider */}&#10;                  &lt;div className=&quot;mb-4&quot;&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;range&quot;&#10;                        min=&quot;0&quot;&#10;                        max=&quot;10000&quot;&#10;                        step=&quot;10&quot;&#10;                        value={filters.priceRangeSlider[0]}&#10;                        onChange={(e) =&gt;&#10;                          handleFilterChange(&quot;priceSlider&quot;, [&#10;                            +e.target.value,&#10;                            filters.priceRangeSlider[1],&#10;                          ])&#10;                        }&#10;                        className=&quot;absolute w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer&quot;&#10;                      /&gt;&#10;                      &lt;input&#10;                        type=&quot;range&quot;&#10;                        min=&quot;0&quot;&#10;                        max=&quot;10000&quot;&#10;                        step=&quot;10&quot;&#10;                        value={filters.priceRangeSlider[1]}&#10;                        onChange={(e) =&gt;&#10;                          handleFilterChange(&quot;priceSlider&quot;, [&#10;                            filters.priceRangeSlider[0],&#10;                            +e.target.value,&#10;                          ])&#10;                        }&#10;                        className=&quot;absolute w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer&quot;&#10;                      /&gt;&#10;                      &lt;div className=&quot;relative h-2 bg-gray-200 rounded-lg&quot;&gt;&#10;                        &lt;div&#10;                          className=&quot;absolute h-2 bg-primary-600 rounded-lg&quot;&#10;                          style={{&#10;                            left: `${(filters.priceRangeSlider[0] / 10000) * 100}%`,&#10;                            width: `${((filters.priceRangeSlider[1] - filters.priceRangeSlider[0]) / 10000) * 100}%`,&#10;                          }}&#10;                        &gt;&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;flex justify-between text-sm text-gray-600 dark:text-gray-400 mt-2&quot;&gt;&#10;                      &lt;span&gt;��{filters.priceRangeSlider[0]}&lt;/span&gt;&#10;                      &lt;span&gt;৳{filters.priceRangeSlider[1]}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#10;                    {PRICE_RANGE_OPTIONS.map((option) =&gt; (&#10;                      &lt;label&#10;                        key={option.label}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={filters.selectedPriceRanges.includes(&#10;                            option.label,&#10;                          )}&#10;                          onChange={() =&gt;&#10;                            handleFilterChange(&quot;priceRange&quot;, option.label)&#10;                          }&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          {option.label}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Rating Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-star mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Rating&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#10;                    {[5, 4, 3, 2, 1].map((rating) =&gt; (&#10;                      &lt;label&#10;                        key={rating}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={filters.selectedRatings.includes(rating)}&#10;                          onChange={() =&gt; handleFilterChange(&quot;rating&quot;, rating)}&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300 flex items-center&quot;&gt;&#10;                          {[...Array(rating)].map((_, i) =&gt; (&#10;                            &lt;i&#10;                              key={i}&#10;                              className=&quot;fas fa-star text-yellow-400 text-xs mr-1&quot;&#10;                            &gt;&lt;/i&gt;&#10;                          ))}&#10;                          {rating &lt; 5 &amp;&amp; &lt;span className=&quot;ml-1&quot;&gt;&amp; Up&lt;/span&gt;}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Farmer Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-user mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Farmer&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2 max-h-32 overflow-y-auto&quot;&gt;&#10;                    {availableFarmers.length &gt; 0 ? (&#10;                      availableFarmers.map((farmer) =&gt; (&#10;                        &lt;label&#10;                          key={farmer}&#10;                          className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                        &gt;&#10;                          &lt;input&#10;                            type=&quot;checkbox&quot;&#10;                            checked={filters.selectedFarmers.includes(farmer)}&#10;                            onChange={() =&gt;&#10;                              handleFilterChange(&quot;farmer&quot;, farmer)&#10;                            }&#10;                            className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                          /&gt;&#10;                          &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300 truncate&quot;&gt;&#10;                            {farmer}&#10;                          &lt;/span&gt;&#10;                        &lt;/label&gt;&#10;                      ))&#10;                    ) : (&#10;                      &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400 p-2&quot;&gt;&#10;                        Loading farmers...&#10;                      &lt;/p&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Tag Filter */}&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-tags mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    Tags&#10;                  &lt;/h4&gt;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#10;                    {TAG_OPTIONS.map((tag) =&gt; (&#10;                      &lt;label&#10;                        key={tag}&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#10;                      &gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={filters.selectedTags.includes(tag)}&#10;                          onChange={() =&gt; handleFilterChange(&quot;tag&quot;, tag)}&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          {tag}&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Clear Filters */}&#10;                &lt;div className=&quot;border-t border-gray-200 dark:border-gray-700 pt-4&quot;&gt;&#10;                  &lt;button&#10;                    onClick={clearAllFilters}&#10;                    disabled={getActiveFilterCount() === 0}&#10;                    className=&quot;w-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 py-2 rounded-lg font-medium hover:bg-gray-300 dark:hover:bg-gray-600 transition disabled:opacity-50 disabled:cursor-not-allowed&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-times mr-2&quot;&gt;&lt;/i&gt;&#10;                    Clear All Filters&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Products Grid */}&#10;            &lt;div className=&quot;lg:col-span-3&quot;&gt;&#10;              {/* Sort and View Options */}&#10;              &lt;div className=&quot;flex items-center justify-between mb-6 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm&quot;&gt;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;span className=&quot;text-gray-700 dark:text-gray-300 font-medium&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-box mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#10;                    {paginationData.pagination.totalProducts} products&#10;                  &lt;/span&gt;&#10;                  {loading &amp;&amp; (&#10;                    &lt;div className=&quot;flex items-center text-primary-600&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                      &lt;span className=&quot;text-sm&quot;&gt;Loading...&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;label className=&quot;text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                    Sort by:&#10;                  &lt;/label&gt;&#10;                  &lt;select&#10;                    value={filters.sortBy}&#10;                    onChange={(e) =&gt;&#10;                      handleFilterChange(&quot;sortBy&quot;, e.target.value)&#10;                    }&#10;                    className=&quot;border border-gray-300 dark:border-gray-600 rounded-lg px-3 py-2 bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary-500 text-sm&quot;&#10;                  &gt;&#10;                    &lt;option value=&quot;newest&quot;&gt;Newest First&lt;/option&gt;&#10;                    &lt;option value=&quot;oldest&quot;&gt;Oldest First&lt;/option&gt;&#10;                    &lt;option value=&quot;price-low&quot;&gt;Price: Low to High&lt;/option&gt;&#10;                    &lt;option value=&quot;price-high&quot;&gt;Price: High to Low&lt;/option&gt;&#10;                    &lt;option value=&quot;rating&quot;&gt;Highest Rated&lt;/option&gt;&#10;                    &lt;option value=&quot;popular&quot;&gt;Most Popular&lt;/option&gt;&#10;                  &lt;/select&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Products Grid */}&#10;              {loading ? (&#10;                &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#10;                  {[...Array(9)].map((_, index) =&gt; (&#10;                    &lt;div&#10;                      key={index}&#10;                      className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden animate-pulse&quot;&#10;                    &gt;&#10;                      &lt;div className=&quot;w-full h-48 bg-gray-300 dark:bg-gray-600&quot;&gt;&lt;/div&gt;&#10;                      &lt;div className=&quot;p-6&quot;&gt;&#10;                        &lt;div className=&quot;h-4 bg-gray-300 dark:bg-gray-600 rounded mb-2&quot;&gt;&lt;/div&gt;&#10;                        &lt;div className=&quot;h-3 bg-gray-300 dark:bg-gray-600 rounded mb-3 w-3/4&quot;&gt;&lt;/div&gt;&#10;                        &lt;div className=&quot;h-6 bg-gray-300 dark:bg-gray-600 rounded mb-4 w-1/2&quot;&gt;&lt;/div&gt;&#10;                        &lt;div className=&quot;h-8 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              ) : paginationData.products.length &gt; 0 ? (&#10;                &lt;&gt;&#10;                  &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#10;                    {paginationData.products.map((product, index) =&gt; (&#10;                      &lt;ProductCard&#10;                        key={`${product._id}-${product.farmerId || product.farmer?._id || &quot;unknown&quot;}-${index}`}&#10;                        product={product}&#10;                      /&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Pagination Component */}&#10;                  {paginationData.pagination.totalPages &gt; 1 &amp;&amp; (&#10;                    &lt;div className=&quot;flex justify-center items-center gap-2 mt-8&quot;&gt;&#10;                      &lt;button&#10;                        onClick={() =&gt;&#10;                          setCurrentPage((prev) =&gt; Math.max(prev - 1, 1))&#10;                        }&#10;                        disabled={!paginationData.pagination.hasPrevPage}&#10;                        className=&quot;px-3 py-2 rounded-lg border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 dark:hover:bg-gray-700 transition&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-chevron-left&quot;&gt;&lt;/i&gt;&#10;                      &lt;/button&gt;&#10;&#10;                      {Array.from(&#10;                        { length: paginationData.pagination.totalPages },&#10;                        (_, i) =&gt; i + 1,&#10;                      ).map((page) =&gt; (&#10;                        &lt;button&#10;                          key={page}&#10;                          onClick={() =&gt; setCurrentPage(page)}&#10;                          className={`px-3 py-2 rounded-lg transition ${&#10;                            page === paginationData.pagination.currentPage&#10;                              ? &quot;bg-primary-500 text-white&quot;&#10;                              : &quot;border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700&quot;&#10;                          }`}&#10;                        &gt;&#10;                          {page}&#10;                        &lt;/button&gt;&#10;                      ))}&#10;&#10;                      &lt;button&#10;                        onClick={() =&gt;&#10;                          setCurrentPage((prev) =&gt;&#10;                            Math.min(&#10;                              prev + 1,&#10;                              paginationData.pagination.totalPages,&#10;                            ),&#10;                          )&#10;                        }&#10;                        disabled={!paginationData.pagination.hasNextPage}&#10;                        className=&quot;px-3 py-2 rounded-lg border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 dark:hover:bg-gray-700 transition&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt;&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/&gt;&#10;              ) : (&#10;                &lt;div className=&quot;text-center py-12&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-search text-6xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                  &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                    No products found&#10;                  &lt;/h3&gt;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;                    Try adjusting your search criteria or browse all products&#10;                  &lt;/p&gt;&#10;                  &lt;button&#10;                    onClick={clearAllFilters}&#10;                    className=&quot;inline-block bg-primary-600 hover:bg-primary-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#10;                  &gt;&#10;                    Browse All Products&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#13;&#10;&#13;&#10;import { useState, useEffect, useCallback, useMemo } from &quot;react&quot;;&#13;&#10;import { useSearchParams, useRouter } from &quot;next/navigation&quot;;&#13;&#10;import ProductCard from &quot;@/components/ProductCard&quot;;&#13;&#10;import Footer from &quot;@/components/Footer&quot;;&#13;&#10;import { debounce } from &quot;@/utils/debounce&quot;;&#13;&#10;import { useUnifiedProductsData } from &quot;@/hooks/useUnifiedProductsData&quot;;&#13;&#10;import { useFarmersQuery, useFarmersCache } from &quot;@/hooks/useFarmersQuery&quot;;&#13;&#10;&#13;&#10;// Move constants outside component to prevent recreations&#13;&#10;const CATEGORY_OPTIONS = [&#13;&#10;  &quot;All Categories&quot;,&#13;&#10;  &quot;Vegetables&quot;,&#13;&#10;  &quot;Fruits&quot;,&#13;&#10;  &quot;Grains&quot;,&#13;&#10;  &quot;Dairy&quot;,&#13;&#10;  &quot;Honey&quot;,&#13;&#10;  &quot;Herbs&quot;,&#13;&#10;];&#13;&#10;&#13;&#10;const PRICE_RANGE_OPTIONS = [&#13;&#10;  { label: &quot;Under ৳50&quot;, min: 0, max: 49 },&#13;&#10;  { label: &quot;৳50 - ৳100&quot;, min: 50, max: 100 },&#13;&#10;  { label: &quot;৳100 - ৳200&quot;, min: 101, max: 200 },&#13;&#10;  { label: &quot;৳200 - ���500&quot;, min: 201, max: 500 },&#13;&#10;  { label: &quot;Above ৳500&quot;, min: 501, max: 9999 },&#13;&#10;];&#13;&#10;&#13;&#10;const TAG_OPTIONS = [&#13;&#10;  &quot;Organic&quot;,&#13;&#10;  &quot;Fresh&quot;,&#13;&#10;  &quot;Local&quot;,&#13;&#10;  &quot;Premium&quot;,&#13;&#10;  &quot;Seasonal&quot;,&#13;&#10;  &quot;Limited Stock&quot;,&#13;&#10;];&#13;&#10;&#13;&#10;const ITEMS_PER_PAGE = 12;&#13;&#10;&#13;&#10;export default function Products() {&#13;&#10;  const searchParams = useSearchParams();&#13;&#10;  const router = useRouter();&#13;&#10;&#13;&#10;  // Use unified caching system instead of separate caching&#13;&#10;  const farmersCache = useFarmersCache();&#13;&#10;&#13;&#10;  // Auto-refresh data when page becomes visible (handles browser tab switching)&#13;&#10;  useEffect(() =&gt; {&#13;&#10;    const handleVisibilityChange = () =&gt; {&#13;&#10;      if (!document.hidden) {&#13;&#10;        farmersCache.invalidateFarmers();&#13;&#10;      }&#13;&#10;    };&#13;&#10;&#13;&#10;    document.addEventListener(&quot;visibilitychange&quot;, handleVisibilityChange);&#13;&#10;    return () =&gt;&#13;&#10;      document.removeEventListener(&quot;visibilitychange&quot;, handleVisibilityChange);&#13;&#10;  }, [farmersCache]);&#13;&#10;&#13;&#10;  // Filter states - Initialize from URL params&#13;&#10;  const [filters, setFilters] = useState(() =&gt; ({&#13;&#10;    searchTerm: searchParams.get(&quot;search&quot;) || &quot;&quot;,&#13;&#10;    selectedCategory: searchParams.get(&quot;category&quot;) || &quot;All Categories&quot;,&#13;&#10;    selectedPriceRanges: searchParams.get(&quot;priceRanges&quot;)?.split(&quot;,&quot;) || [],&#13;&#10;    selectedRatings: searchParams.get(&quot;ratings&quot;)?.split(&quot;,&quot;).map(Number) || [],&#13;&#10;    selectedFarmers: searchParams.get(&quot;farmers&quot;)?.split(&quot;,&quot;) || [],&#13;&#10;    selectedTags: searchParams.get(&quot;tags&quot;)?.split(&quot;,&quot;) || [],&#13;&#10;    priceRangeSlider: [&#13;&#10;      Number(searchParams.get(&quot;minPrice&quot;)) || 0,&#13;&#10;      Number(searchParams.get(&quot;maxPrice&quot;)) || 10000,&#13;&#10;    ],&#13;&#10;    sortBy: searchParams.get(&quot;sort&quot;) || &quot;newest&quot;,&#13;&#10;  }));&#13;&#10;&#13;&#10;  const [currentPage, setCurrentPage] = useState(&#13;&#10;    Number(searchParams.get(&quot;page&quot;)) || 1,&#13;&#10;  );&#13;&#10;  const [showMobileFilters, setShowMobileFilters] = useState(false);&#13;&#10;&#13;&#10;  // Use unified products data hook with same caching mechanism as dashboard&#13;&#10;  const {&#13;&#10;    products: allProducts,&#13;&#10;    isLoading: loading,&#13;&#10;    error,&#13;&#10;    refetch: refetchProducts,&#13;&#10;    refreshProducts,&#13;&#10;  } = useUnifiedProductsData(filters);&#13;&#10;&#13;&#10;  // Use React Query for farmers data&#13;&#10;  const { data: farmersData } = useFarmersQuery();&#13;&#10;&#13;&#10;  // Extract products and farmers from React Query data&#13;&#10;  const availableFarmers = useMemo(() =&gt; {&#13;&#10;    // Get farmers from the dedicated farmers query instead of product data&#13;&#10;    const farmers = farmersData?.farmers || [];&#13;&#10;&#13;&#10;    // Get unique farmer names from the farmers collection (fresh data)&#13;&#10;    const farmerNames = farmers&#13;&#10;      .map((farmer) =&gt; farmer.name)&#13;&#10;      .filter(Boolean)&#13;&#10;      .sort();&#13;&#10;&#13;&#10;    return farmerNames;&#13;&#10;  }, [farmersData]);&#13;&#10;&#13;&#10;  // Create a farmer lookup map for quick access&#13;&#10;  const farmerLookup = useMemo(() =&gt; {&#13;&#10;    const farmers = farmersData?.farmers || [];&#13;&#10;    const lookup = new Map();&#13;&#10;&#13;&#10;    // Create lookup by ID&#13;&#10;    farmers.forEach((farmer) =&gt; {&#13;&#10;      if (farmer._id) lookup.set(farmer._id, farmer);&#13;&#10;    });&#13;&#10;&#13;&#10;    // Also create lookup by email for additional matching&#13;&#10;    farmers.forEach((farmer) =&gt; {&#13;&#10;      if (farmer.email) lookup.set(farmer.email, farmer);&#13;&#10;    });&#13;&#10;&#13;&#10;    return lookup;&#13;&#10;  }, [farmersData]);&#13;&#10;&#13;&#10;  // Enhance products with fresh farmer data&#13;&#10;  const enhancedProducts = useMemo(() =&gt; {&#13;&#10;    return allProducts.map((product) =&gt; {&#13;&#10;      // Get all possible farmer identifiers from product&#13;&#10;      const productFarmerId =&#13;&#10;        product.farmer?.id || product.farmer?._id || product.farmerId;&#13;&#10;      const productFarmerEmail = product.farmer?.email || product.farmerEmail;&#13;&#10;      const productFarmerName = product.farmer?.name || product.farmerName;&#13;&#10;&#13;&#10;      // Look up fresh farmer data by ID first (most reliable)&#13;&#10;      let freshFarmer = null;&#13;&#10;      if (productFarmerId) {&#13;&#10;        freshFarmer = farmerLookup.get(productFarmerId);&#13;&#10;      }&#13;&#10;&#13;&#10;      // If no match by ID, try email&#13;&#10;      if (!freshFarmer &amp;&amp; productFarmerEmail) {&#13;&#10;        freshFarmer = farmerLookup.get(productFarmerEmail);&#13;&#10;      }&#13;&#10;&#13;&#10;      // If no match by ID or email, try finding by name (least reliable but necessary fallback)&#13;&#10;      if (!freshFarmer &amp;&amp; productFarmerName) {&#13;&#10;        const farmers = farmersData?.farmers || [];&#13;&#10;        freshFarmer = farmers.find(&#13;&#10;          (farmer) =&gt; farmer.name === productFarmerName,&#13;&#10;        );&#13;&#10;      }&#13;&#10;&#13;&#10;      // If we found fresh farmer data, enhance the product; otherwise keep original&#13;&#10;      if (freshFarmer) {&#13;&#10;        return {&#13;&#10;          ...product,&#13;&#10;          farmer: {&#13;&#10;            ...product.farmer,&#13;&#10;            name: freshFarmer.name,&#13;&#10;            email: freshFarmer.email,&#13;&#10;            phone: freshFarmer.phone,&#13;&#10;            id: freshFarmer._id,&#13;&#10;            _id: freshFarmer._id,&#13;&#10;          },&#13;&#10;          farmerName: freshFarmer.name,&#13;&#10;          farmerEmail: freshFarmer.email,&#13;&#10;          farmerId: freshFarmer._id, // Ensure farmerId is set&#13;&#10;        };&#13;&#10;      }&#13;&#10;&#13;&#10;      // No fresh farmer data found, return product with normalized farmer info&#13;&#10;      return {&#13;&#10;        ...product,&#13;&#10;        // Ensure farmerName is always available for display&#13;&#10;        farmerName:&#13;&#10;          productFarmerName ||&#13;&#10;          (typeof product.farmer === &quot;string&quot;&#13;&#10;            ? product.farmer&#13;&#10;            : &quot;Unknown Farmer&quot;),&#13;&#10;      };&#13;&#10;    });&#13;&#10;  }, [allProducts, farmerLookup, farmersData]);&#13;&#10;&#13;&#10;  // Listen for order completion events to refresh data - IMPROVED TO PREVENT RACE CONDITIONS&#13;&#10;  useEffect(() =&gt; {&#13;&#10;    const handleOrderComplete = (event) =&gt; {&#13;&#10;      const { orderId } = event.detail || {};&#13;&#10;      if (orderId) {&#13;&#10;        console.log(&quot; Order completed, refreshing product data&quot;);&#13;&#10;        // Longer delay to ensure backend has processed the update completely&#13;&#10;        setTimeout(() =&gt; {&#13;&#10;          farmersCache.invalidateFarmers();&#13;&#10;        }, 3000); // Increased to 3 seconds to prevent race conditions&#13;&#10;      }&#13;&#10;    };&#13;&#10;&#13;&#10;    const handleCartCheckout = (event) =&gt; {&#13;&#10;      console.log(&quot; Cart checkout completed, refreshing product data&quot;);&#13;&#10;      // Longer delay to ensure backend has processed the update completely&#13;&#10;      setTimeout(() =&gt; {&#13;&#10;        farmersCache.invalidateFarmers();&#13;&#10;      }, 3000); // Already correct at 3 seconds&#13;&#10;    };&#13;&#10;&#13;&#10;    // Listen for order completion events&#13;&#10;    window.addEventListener(&quot;orderCompleted&quot;, handleOrderComplete);&#13;&#10;    window.addEventListener(&quot;cartCheckoutCompleted&quot;, handleCartCheckout);&#13;&#10;&#13;&#10;    return () =&gt; {&#13;&#10;      window.removeEventListener(&quot;orderCompleted&quot;, handleOrderComplete);&#13;&#10;      window.removeEventListener(&quot;cartCheckoutCompleted&quot;, handleCartCheckout);&#13;&#10;    };&#13;&#10;  }, [farmersCache]);&#13;&#10;&#13;&#10;  // Memoized filtered and sorted products&#13;&#10;  const filteredProducts = useMemo(() =&gt; {&#13;&#10;    let filtered = [...enhancedProducts];&#13;&#10;&#13;&#10;    // Filter: Only show products that are available for purchase&#13;&#10;    // More flexible filtering to handle different status values and stock levels&#13;&#10;    filtered = filtered.filter((product) =&gt; {&#13;&#10;      // Don't show deleted products&#13;&#10;      if (product.status === &quot;deleted&quot;) return false;&#13;&#10;&#13;&#10;      // Don't show inactive products (if status is explicitly set to inactive)&#13;&#10;      if (product.status === &quot;inactive&quot;) return false;&#13;&#10;&#13;&#10;      // Show ALL products including stock-out ones&#13;&#10;      // Only exclude if stock is explicitly undefined/null AND status indicates unavailable&#13;&#10;      return true; // Show all active products regardless of stock level&#13;&#10;    });&#13;&#10;&#13;&#10;    // Apply search term filter&#13;&#10;    if (filters.searchTerm &amp;&amp; filters.searchTerm.trim()) {&#13;&#10;      const searchTerm = filters.searchTerm.toLowerCase().trim();&#13;&#10;      filtered = filtered.filter((product) =&gt; {&#13;&#10;        return (&#13;&#10;          product.name?.toLowerCase().includes(searchTerm) ||&#13;&#10;          product.description?.toLowerCase().includes(searchTerm) ||&#13;&#10;          product.category?.toLowerCase().includes(searchTerm) ||&#13;&#10;          product.farmerName?.toLowerCase().includes(searchTerm)&#13;&#10;        );&#13;&#10;      });&#13;&#10;    }&#13;&#10;&#13;&#10;    // Apply category filter&#13;&#10;    if (&#13;&#10;      filters.selectedCategory &amp;&amp;&#13;&#10;      filters.selectedCategory !== &quot;All Categories&quot;&#13;&#10;    ) {&#13;&#10;      filtered = filtered.filter((product) =&gt; {&#13;&#10;        return (&#13;&#10;          product.category?.toLowerCase() ===&#13;&#10;          filters.selectedCategory.toLowerCase()&#13;&#10;        );&#13;&#10;      });&#13;&#10;    }&#13;&#10;&#13;&#10;    // Apply price range checkboxes&#13;&#10;    if (filters.selectedPriceRanges.length &gt; 0) {&#13;&#10;      filtered = filtered.filter((product) =&gt; {&#13;&#10;        return filters.selectedPriceRanges.some((range) =&gt; {&#13;&#10;          const option = PRICE_RANGE_OPTIONS.find((opt) =&gt; opt.label === range);&#13;&#10;          const price = parseFloat(product.price) || 0;&#13;&#10;          return price &gt;= option.min &amp;&amp; price &lt;= option.max;&#13;&#10;        });&#13;&#10;      });&#13;&#10;    }&#13;&#10;&#13;&#10;    // Apply price range slider&#13;&#10;    filtered = filtered.filter((product) =&gt; {&#13;&#10;      const price = parseFloat(product.price) || 0;&#13;&#10;      return (&#13;&#10;        price &gt;= filters.priceRangeSlider[0] &amp;&amp;&#13;&#10;        price &lt;= filters.priceRangeSlider[1]&#13;&#10;      );&#13;&#10;    });&#13;&#10;&#13;&#10;    // Apply rating filters&#13;&#10;    if (filters.selectedRatings.length &gt; 0) {&#13;&#10;      filtered = filtered.filter((product) =&gt; {&#13;&#10;        const productRating = parseFloat(product.averageRating) || 0;&#13;&#10;        return filters.selectedRatings.some(&#13;&#10;          (rating) =&gt; productRating &gt;= rating,&#13;&#10;        );&#13;&#10;      });&#13;&#10;    }&#13;&#10;&#13;&#10;    // Apply farmer filters&#13;&#10;    if (filters.selectedFarmers.length &gt; 0) {&#13;&#10;      filtered = filtered.filter((product) =&gt; {&#13;&#10;        const farmerName = product.farmer?.name || product.farmerName || &quot;&quot;;&#13;&#10;        return filters.selectedFarmers.includes(farmerName);&#13;&#10;      });&#13;&#10;    }&#13;&#10;&#13;&#10;    // Apply tag filters&#13;&#10;    if (filters.selectedTags.length &gt; 0) {&#13;&#10;      filtered = filtered.filter((product) =&gt; {&#13;&#10;        return filters.selectedTags.some((tag) =&gt; {&#13;&#10;          switch (tag) {&#13;&#10;            case &quot;Organic&quot;:&#13;&#10;              return (&#13;&#10;                product.isOrganic === true ||&#13;&#10;                (product.tags &amp;&amp; product.tags.includes(&quot;organic&quot;))&#13;&#10;              );&#13;&#10;            case &quot;Fresh&quot;:&#13;&#10;              return (&#13;&#10;                product.isFresh === true ||&#13;&#10;                (product.tags &amp;&amp; product.tags.includes(&quot;fresh&quot;))&#13;&#10;              );&#13;&#10;            case &quot;Local&quot;:&#13;&#10;              return true;&#13;&#10;            case &quot;Premium&quot;:&#13;&#10;              return parseFloat(product.price) &gt; 200;&#13;&#10;            case &quot;Seasonal&quot;:&#13;&#10;              return parseInt(product.stock) &lt; 100;&#13;&#10;            case &quot;Limited Stock&quot;:&#13;&#10;              return parseInt(product.stock) &lt; 50;&#13;&#10;            default:&#13;&#10;              return product.tags &amp;&amp; product.tags.includes(tag.toLowerCase());&#13;&#10;          }&#13;&#10;        });&#13;&#10;      });&#13;&#10;    }&#13;&#10;&#13;&#10;    // Apply sorting&#13;&#10;    switch (filters.sortBy) {&#13;&#10;      case &quot;price-low&quot;:&#13;&#10;        filtered.sort((a, b) =&gt; parseFloat(a.price) - parseFloat(b.price));&#13;&#10;        break;&#13;&#10;      case &quot;price-high&quot;:&#13;&#10;        filtered.sort((a, b) =&gt; parseFloat(b.price) - parseFloat(a.price));&#13;&#10;        break;&#13;&#10;      case &quot;rating&quot;:&#13;&#10;        filtered.sort(&#13;&#10;          (a, b) =&gt;&#13;&#10;            (parseFloat(b.averageRating) || 0) -&#13;&#10;            (parseFloat(a.averageRating) || 0),&#13;&#10;        );&#13;&#10;        break;&#13;&#10;      case &quot;popular&quot;:&#13;&#10;        filtered.sort(&#13;&#10;          (a, b) =&gt;&#13;&#10;            (parseInt(b.purchaseCount) || 0) - (parseInt(a.purchaseCount) || 0),&#13;&#10;        );&#13;&#10;        break;&#13;&#10;      case &quot;newest&quot;:&#13;&#10;        filtered.sort((a, b) =&gt; new Date(b.createdAt) - new Date(a.createdAt));&#13;&#10;        break;&#13;&#10;      case &quot;oldest&quot;:&#13;&#10;        filtered.sort((a, b) =&gt; new Date(a.createdAt) - new Date(b.createdAt));&#13;&#10;        break;&#13;&#10;      default:&#13;&#10;        break;&#13;&#10;    }&#13;&#10;&#13;&#10;    return filtered;&#13;&#10;  }, [enhancedProducts, filters]);&#13;&#10;&#13;&#10;  // Memoized pagination data&#13;&#10;  const paginationData = useMemo(() =&gt; {&#13;&#10;    const totalProducts = filteredProducts.length;&#13;&#10;    const totalPages = Math.ceil(totalProducts / ITEMS_PER_PAGE);&#13;&#10;    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;&#13;&#10;    const endIndex = startIndex + ITEMS_PER_PAGE;&#13;&#10;    const paginatedProducts = filteredProducts.slice(startIndex, endIndex);&#13;&#10;&#13;&#10;    return {&#13;&#10;      products: paginatedProducts,&#13;&#10;      pagination: {&#13;&#10;        currentPage,&#13;&#10;        totalPages,&#13;&#10;        totalProducts,&#13;&#10;        hasNextPage: currentPage &lt; totalPages,&#13;&#10;        hasPrevPage: currentPage &gt; 1,&#13;&#10;      },&#13;&#10;    };&#13;&#10;  }, [filteredProducts, currentPage]);&#13;&#10;&#13;&#10;  // Update URL when filters change (with debouncing)&#13;&#10;  const updateURL = useCallback(&#13;&#10;    debounce(() =&gt; {&#13;&#10;      const params = new URLSearchParams();&#13;&#10;&#13;&#10;      // Only add non-default parameters to keep URLs clean&#13;&#10;      if (filters.searchTerm) params.set(&quot;search&quot;, filters.searchTerm);&#13;&#10;      if (filters.selectedCategory !== &quot;All Categories&quot;)&#13;&#10;        params.set(&quot;category&quot;, filters.selectedCategory);&#13;&#10;      if (filters.selectedPriceRanges.length &gt; 0)&#13;&#10;        params.set(&quot;priceRanges&quot;, filters.selectedPriceRanges.join(&quot;,&quot;));&#13;&#10;      if (filters.selectedRatings.length &gt; 0)&#13;&#10;        params.set(&quot;ratings&quot;, filters.selectedRatings.join(&quot;,&quot;));&#13;&#10;      if (filters.selectedFarmers.length &gt; 0)&#13;&#10;        params.set(&quot;farmers&quot;, filters.selectedFarmers.join(&quot;,&quot;));&#13;&#10;      if (filters.selectedTags.length &gt; 0)&#13;&#10;        params.set(&quot;tags&quot;, filters.selectedTags.join(&quot;,&quot;));&#13;&#10;      if (filters.priceRangeSlider[0] &gt; 0)&#13;&#10;        params.set(&quot;minPrice&quot;, filters.priceRangeSlider[0]);&#13;&#10;      if (filters.priceRangeSlider[1] &lt; 10000)&#13;&#10;        params.set(&quot;maxPrice&quot;, filters.priceRangeSlider[1]);&#13;&#10;      if (filters.sortBy !== &quot;newest&quot;) params.set(&quot;sort&quot;, filters.sortBy);&#13;&#10;      if (currentPage &gt; 1) params.set(&quot;page&quot;, currentPage);&#13;&#10;&#13;&#10;      const newURL = params.toString() ? `?${params.toString()}` : &quot;&quot;;&#13;&#10;      router.push(`/products${newURL}`, { scroll: false });&#13;&#10;    }, 300),&#13;&#10;    [filters, currentPage, router],&#13;&#10;  );&#13;&#10;&#13;&#10;  useEffect(() =&gt; {&#13;&#10;    updateURL();&#13;&#10;  }, [updateURL]);&#13;&#10;&#13;&#10;  // Handle filter changes&#13;&#10;  const handleFilterChange = useCallback((filterType, value) =&gt; {&#13;&#10;    setFilters((prev) =&gt; {&#13;&#10;      const newFilters = { ...prev };&#13;&#10;&#13;&#10;      switch (filterType) {&#13;&#10;        case &quot;searchTerm&quot;:&#13;&#10;          newFilters.searchTerm = value;&#13;&#10;          break;&#13;&#10;        case &quot;category&quot;:&#13;&#10;          newFilters.selectedCategory = value;&#13;&#10;          break;&#13;&#10;        case &quot;priceRange&quot;:&#13;&#10;          if (newFilters.selectedPriceRanges.includes(value)) {&#13;&#10;            newFilters.selectedPriceRanges =&#13;&#10;              newFilters.selectedPriceRanges.filter((range) =&gt; range !== value);&#13;&#10;          } else {&#13;&#10;            newFilters.selectedPriceRanges = [&#13;&#10;              ...newFilters.selectedPriceRanges,&#13;&#10;              value,&#13;&#10;            ];&#13;&#10;          }&#13;&#10;          break;&#13;&#10;        case &quot;rating&quot;:&#13;&#10;          if (newFilters.selectedRatings.includes(value)) {&#13;&#10;            newFilters.selectedRatings = newFilters.selectedRatings.filter(&#13;&#10;              (rating) =&gt; rating !== value,&#13;&#10;            );&#13;&#10;          } else {&#13;&#10;            newFilters.selectedRatings = [...newFilters.selectedRatings, value];&#13;&#10;          }&#13;&#10;          break;&#13;&#10;        case &quot;farmer&quot;:&#13;&#10;          if (newFilters.selectedFarmers.includes(value)) {&#13;&#10;            newFilters.selectedFarmers = newFilters.selectedFarmers.filter(&#13;&#10;              (farmer) =&gt; farmer !== value,&#13;&#10;            );&#13;&#10;          } else {&#13;&#10;            newFilters.selectedFarmers = [...newFilters.selectedFarmers, value];&#13;&#10;          }&#13;&#10;          break;&#13;&#10;        case &quot;tag&quot;:&#13;&#10;          if (newFilters.selectedTags.includes(value)) {&#13;&#10;            newFilters.selectedTags = newFilters.selectedTags.filter(&#13;&#10;              (tag) =&gt; tag !== value,&#13;&#10;            );&#13;&#10;          } else {&#13;&#10;            newFilters.selectedTags = [...newFilters.selectedTags, value];&#13;&#10;          }&#13;&#10;          break;&#13;&#10;        case &quot;priceSlider&quot;:&#13;&#10;          newFilters.priceRangeSlider = value;&#13;&#10;          break;&#13;&#10;        case &quot;sortBy&quot;:&#13;&#10;          newFilters.sortBy = value;&#13;&#10;          break;&#13;&#10;      }&#13;&#10;&#13;&#10;      return newFilters;&#13;&#10;    });&#13;&#10;&#13;&#10;    // Reset to first page when filters change&#13;&#10;    if (filterType !== &quot;sortBy&quot;) {&#13;&#10;      setCurrentPage(1);&#13;&#10;    }&#13;&#10;  }, []);&#13;&#10;&#13;&#10;  // Clear all filters&#13;&#10;  const clearAllFilters = useCallback(() =&gt; {&#13;&#10;    setFilters({&#13;&#10;      searchTerm: &quot;&quot;,&#13;&#10;      selectedCategory: &quot;All Categories&quot;,&#13;&#10;      selectedPriceRanges: [],&#13;&#10;      selectedRatings: [],&#13;&#10;      selectedFarmers: [],&#13;&#10;      selectedTags: [],&#13;&#10;      priceRangeSlider: [0, 10000],&#13;&#10;      sortBy: &quot;newest&quot;,&#13;&#10;    });&#13;&#10;    setCurrentPage(1);&#13;&#10;  }, []);&#13;&#10;&#13;&#10;  // Handle page changes&#13;&#10;  const handlePageChange = useCallback((page) =&gt; {&#13;&#10;    setCurrentPage(page);&#13;&#10;    window.scrollTo({ top: 0, behavior: &quot;smooth&quot; });&#13;&#10;  }, []);&#13;&#10;&#13;&#10;  // Refresh data&#13;&#10;  const refreshData = useCallback(() =&gt; {&#13;&#10;    refetchProducts();&#13;&#10;  }, [refetchProducts]);&#13;&#10;&#13;&#10;  // Get active filter count&#13;&#10;  const getActiveFilterCount = () =&gt; {&#13;&#10;    let count = 0;&#13;&#10;    if (filters.selectedCategory !== &quot;All Categories&quot;) count++;&#13;&#10;    if (filters.selectedPriceRanges.length &gt; 0) count++;&#13;&#10;    if (filters.selectedRatings.length &gt; 0) count++;&#13;&#10;    if (filters.selectedFarmers.length &gt; 0) count++;&#13;&#10;    if (filters.selectedTags.length &gt; 0) count++;&#13;&#10;    if (&#13;&#10;      filters.priceRangeSlider[0] !== 0 ||&#13;&#10;      filters.priceRangeSlider[1] !== 10000&#13;&#10;    )&#13;&#10;      count++;&#13;&#10;    return count;&#13;&#10;  };&#13;&#10;&#13;&#10;  // Handle error display&#13;&#10;  if (error) {&#13;&#10;    return (&#13;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center&quot;&gt;&#13;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;          &lt;i className=&quot;fas fa-exclamation-triangle text-6xl text-red-500 mb-4&quot;&gt;&lt;/i&gt;&#13;&#10;          &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;            Error Loading Products&#13;&#10;          &lt;/h3&gt;&#13;&#10;          &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#13;&#10;            {error.message || &quot;Something went wrong while loading products&quot;}&#13;&#10;          &lt;/p&gt;&#13;&#10;          &lt;button&#13;&#10;            onClick={() =&gt; refetchProducts()}&#13;&#10;            className=&quot;bg-primary-600 hover:bg-primary-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#13;&#10;          &gt;&#13;&#10;            Try Again&#13;&#10;          &lt;/button&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    );&#13;&#10;  }&#13;&#10;&#13;&#10;  // Custom Loading Skeleton Components&#13;&#10;  const ProductCardSkeleton = ({ index }) =&gt; (&#13;&#10;    &lt;div&#13;&#10;      className=&quot;group bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden border border-gray-100 dark:border-gray-700 relative&quot;&#13;&#10;      style={{&#13;&#10;        animationDelay: `${index * 150}ms`,&#13;&#10;        animation: &quot;fadeInUp 0.6s ease-out forwards&quot;,&#13;&#10;      }}&#13;&#10;    &gt;&#13;&#10;      {/* Shimmer effect overlay */}&#13;&#10;      &lt;div className=&quot;absolute inset-0 -translate-x-full bg-gradient-to-r from-transparent via-white/20 to-transparent animate-shimmer&quot;&gt;&lt;/div&gt;&#13;&#10;&#13;&#10;      {/* Product Image Skeleton */}&#13;&#10;      &lt;div className=&quot;relative aspect-square bg-gradient-to-br from-gray-200 via-gray-300 to-gray-200 dark:from-gray-600 dark:via-gray-700 dark:to-gray-600 overflow-hidden&quot;&gt;&#13;&#10;        {/* Animated placeholder icons */}&#13;&#10;        &lt;div className=&quot;absolute inset-0 flex items-center justify-center&quot;&gt;&#13;&#10;          &lt;div className=&quot;animate-bounce&quot;&gt;&#13;&#10;            &lt;i className=&quot;fas fa-seedling text-4xl text-gray-400 dark:text-gray-500&quot;&gt;&lt;/i&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;        {/* Floating particles effect */}&#13;&#10;        &lt;div className=&quot;absolute top-2 left-2 w-2 h-2 bg-green-400 rounded-full animate-ping opacity-60&quot;&gt;&lt;/div&gt;&#13;&#10;        &lt;div&#13;&#10;          className=&quot;absolute top-4 right-3 w-1.5 h-1.5 bg-yellow-400 rounded-full animate-pulse opacity-70&quot;&#13;&#10;          style={{ animationDelay: &quot;0.5s&quot; }}&#13;&#10;        &gt;&lt;/div&gt;&#13;&#10;        &lt;div&#13;&#10;          className=&quot;absolute bottom-3 left-4 w-1 h-1 bg-blue-400 rounded-full animate-bounce opacity-50&quot;&#13;&#10;          style={{ animationDelay: &quot;1s&quot; }}&#13;&#10;        &gt;&lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;&#13;&#10;      {/* Content Skeleton */}&#13;&#10;      &lt;div className=&quot;p-6 space-y-4&quot;&gt;&#13;&#10;        {/* Category Badge */}&#13;&#10;        &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#13;&#10;          &lt;div className=&quot;h-6 w-20 bg-gradient-to-r from-green-200 to-green-300 dark:from-green-700 dark:to-green-600 rounded-full animate-pulse&quot;&gt;&lt;/div&gt;&#13;&#10;          &lt;div&#13;&#10;            className=&quot;h-5 w-12 bg-gradient-to-r from-blue-200 to-blue-300 dark:from-blue-700 dark:to-blue-600 rounded-full animate-pulse&quot;&#13;&#10;            style={{ animationDelay: &quot;0.2s&quot; }}&#13;&#10;          &gt;&lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        {/* Product Name */}&#13;&#10;        &lt;div className=&quot;space-y-2&quot;&gt;&#13;&#10;          &lt;div className=&quot;h-5 bg-gradient-to-r from-gray-300 via-gray-400 to-gray-300 dark:from-gray-600 dark:via-gray-500 dark:to-gray-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#13;&#10;          &lt;div&#13;&#10;            className=&quot;h-4 w-3/4 bg-gradient-to-r from-gray-250 via-gray-350 to-gray-250 dark:from-gray-650 dark:via-gray-550 dark:to-gray-650 rounded animate-pulse&quot;&#13;&#10;            style={{ animationDelay: &quot;0.3s&quot; }}&#13;&#10;          &gt;&lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        {/* Rating */}&#13;&#10;        &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#13;&#10;          &lt;div className=&quot;flex gap-1&quot;&gt;&#13;&#10;            {[1, 2, 3, 4, 5].map((star) =&gt; (&#13;&#10;              &lt;div&#13;&#10;                key={star}&#13;&#10;                className=&quot;w-4 h-4 bg-yellow-200 dark:bg-yellow-700 rounded animate-pulse&quot;&#13;&#10;                style={{ animationDelay: `${star * 0.1}s` }}&#13;&#10;              &gt;&lt;/div&gt;&#13;&#10;            ))}&#13;&#10;          &lt;/div&gt;&#13;&#10;          &lt;div&#13;&#10;            className=&quot;h-3 w-12 bg-gray-300 dark:bg-gray-600 rounded animate-pulse&quot;&#13;&#10;            style={{ animationDelay: &quot;0.8s&quot; }}&#13;&#10;          &gt;&lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        {/* Price */}&#13;&#10;        &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#13;&#10;          &lt;div className=&quot;space-y-1&quot;&gt;&#13;&#10;            &lt;div className=&quot;h-7 w-24 bg-gradient-to-r from-primary-200 to-primary-300 dark:from-primary-700 dark:to-primary-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#13;&#10;            &lt;div&#13;&#10;              className=&quot;h-3 w-16 bg-gray-300 dark:bg-gray-600 rounded animate-pulse&quot;&#13;&#10;              style={{ animationDelay: &quot;0.4s&quot; }}&#13;&#10;            &gt;&lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;          &lt;div className=&quot;text-right space-y-1&quot;&gt;&#13;&#10;            &lt;div&#13;&#10;              className=&quot;h-4 w-20 bg-green-200 dark:bg-green-700 rounded animate-pulse&quot;&#13;&#10;              style={{ animationDelay: &quot;0.6s&quot; }}&#13;&#10;            &gt;&lt;/div&gt;&#13;&#10;            &lt;div&#13;&#10;              className=&quot;h-3 w-14 bg-gray-300 dark:bg-gray-600 rounded animate-pulse&quot;&#13;&#10;              style={{ animationDelay: &quot;0.7s&quot; }}&#13;&#10;            &gt;&lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        {/* Action Button */}&#13;&#10;        &lt;div&#13;&#10;          className=&quot;h-10 bg-gradient-to-r from-primary-300 via-primary-400 to-primary-300 dark:from-primary-600 dark:via-primary-700 dark:to-primary-600 rounded-lg animate-pulse&quot;&#13;&#10;          style={{ animationDelay: &quot;0.9s&quot; }}&#13;&#10;        &gt;&lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;  );&#13;&#10;&#13;&#10;  const FilterSidebarSkeleton = () =&gt; (&#13;&#10;    &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 space-y-6&quot;&gt;&#13;&#10;      {/* Header */}&#13;&#10;      &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#13;&#10;        &lt;div className=&quot;h-6 w-20 bg-gray-300 dark:bg-gray-600 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#13;&#10;        &lt;div className=&quot;h-5 w-5 bg-primary-300 dark:bg-primary-600 rounded-full animate-pulse&quot;&gt;&lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;&#13;&#10;      {/* Filter Sections */}&#13;&#10;      {[1, 2, 3, 4, 5].map((section) =&gt; (&#13;&#10;        &lt;div&#13;&#10;          key={section}&#13;&#10;          className=&quot;space-y-3&quot;&#13;&#10;          style={{ animationDelay: `${section * 0.1}s` }}&#13;&#10;        &gt;&#13;&#10;          &lt;div className=&quot;flex items-center gap-2 animate-pulse&quot;&gt;&#13;&#10;            &lt;div className=&quot;h-4 w-4 bg-primary-300 dark:bg-primary-600 rounded&quot;&gt;&lt;/div&gt;&#13;&#10;            &lt;div className=&quot;h-5 w-24 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;          &lt;div className=&quot;space-y-2 ml-2&quot;&gt;&#13;&#10;            {[1, 2, 3].map((item) =&gt; (&#13;&#10;              &lt;div&#13;&#10;                key={item}&#13;&#10;                className=&quot;flex items-center gap-2 animate-pulse&quot;&#13;&#10;                style={{ animationDelay: `${item * 0.05}s` }}&#13;&#10;              &gt;&#13;&#10;                &lt;div className=&quot;h-3 w-3 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#13;&#10;                &lt;div className=&quot;h-3 w-20 bg-gray-250 dark:bg-gray-650 rounded&quot;&gt;&lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            ))}&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      ))}&#13;&#10;    &lt;/div&gt;&#13;&#10;  );&#13;&#10;&#13;&#10;  const HeaderSkeleton = () =&gt; (&#13;&#10;    &lt;div className=&quot;bg-gradient-to-r from-primary-600 to-emerald-600 text-white py-12&quot;&gt;&#13;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#13;&#10;        {/* Animated farm background */}&#13;&#10;        &lt;div className=&quot;absolute inset-0 opacity-10&quot;&gt;&#13;&#10;          &lt;div className=&quot;animate-float&quot; style={{ animationDelay: &quot;0s&quot; }}&gt;&#13;&#10;            &lt;i className=&quot;fas fa-tractor text-6xl absolute top-8 left-1/4&quot;&gt;&lt;/i&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;          &lt;div className=&quot;animate-float&quot; style={{ animationDelay: &quot;2s&quot; }}&gt;&#13;&#10;            &lt;i className=&quot;fas fa-leaf text-4xl absolute top-16 right-1/3&quot;&gt;&lt;/i&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;          &lt;div className=&quot;animate-float&quot; style={{ animationDelay: &quot;4s&quot; }}&gt;&#13;&#10;            &lt;i className=&quot;fas fa-seedling text-3xl absolute bottom-8 left-1/3&quot;&gt;&lt;/i&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div className=&quot;relative z-10&quot;&gt;&#13;&#10;          &lt;div className=&quot;h-10 w-64 bg-white/20 rounded-lg animate-pulse mb-4&quot;&gt;&lt;/div&gt;&#13;&#10;          &lt;div className=&quot;h-6 w-96 bg-white/15 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#13;&#10;&#13;&#10;          {/* Search results skeleton */}&#13;&#10;          &lt;div className=&quot;mt-6 p-4 bg-primary-700 rounded-lg animate-pulse&quot;&gt;&#13;&#10;            &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#13;&#10;              &lt;div className=&quot;space-y-2&quot;&gt;&#13;&#10;                &lt;div className=&quot;h-4 w-48 bg-white/20 rounded&quot;&gt;&lt;/div&gt;&#13;&#10;                &lt;div className=&quot;h-3 w-32 bg-white/15 rounded&quot;&gt;&lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;              &lt;div className=&quot;flex gap-2&quot;&gt;&#13;&#10;                &lt;div className=&quot;h-10 w-48 bg-white/20 rounded-lg&quot;&gt;&lt;/div&gt;&#13;&#10;                &lt;div className=&quot;h-10 w-12 bg-white/15 rounded-lg&quot;&gt;&lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;  );&#13;&#10;&#13;&#10;  if (loading &amp;&amp; allProducts.length === 0) {&#13;&#10;    return (&#13;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900&quot;&gt;&#13;&#10;        {/* Custom CSS animations */}&#13;&#10;        &lt;style jsx&gt;{`&#13;&#10;          @keyframes fadeInUp {&#13;&#10;            from {&#13;&#10;              opacity: 0;&#13;&#10;              transform: translateY(30px);&#13;&#10;            }&#13;&#10;            to {&#13;&#10;              opacity: 1;&#13;&#10;              transform: translateY(0);&#13;&#10;            }&#13;&#10;          }&#13;&#10;&#13;&#10;          @keyframes shimmer {&#13;&#10;            0% {&#13;&#10;              transform: translateX(-100%);&#13;&#10;            }&#13;&#10;            100% {&#13;&#10;              transform: translateX(100%);&#13;&#10;            }&#13;&#10;          }&#13;&#10;&#13;&#10;          @keyframes float {&#13;&#10;            0%,&#13;&#10;            100% {&#13;&#10;              transform: translateY(0px);&#13;&#10;            }&#13;&#10;            50% {&#13;&#10;              transform: translateY(-20px);&#13;&#10;            }&#13;&#10;          }&#13;&#10;&#13;&#10;          .animate-shimmer {&#13;&#10;            animation: shimmer 2s infinite;&#13;&#10;          }&#13;&#10;&#13;&#10;          .animate-float {&#13;&#10;            animation: float 6s ease-in-out infinite;&#13;&#10;          }&#13;&#10;        `}&lt;/style&gt;&#13;&#10;&#13;&#10;        {/* Header Skeleton */}&#13;&#10;        &lt;HeaderSkeleton /&gt;&#13;&#10;&#13;&#10;        {/* Main Content */}&#13;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8&quot;&gt;&#13;&#10;          {/* Mobile Filter Toggle Skeleton */}&#13;&#10;          &lt;div className=&quot;lg:hidden mb-6&quot;&gt;&#13;&#10;            &lt;div className=&quot;w-full h-12 bg-white dark:bg-gray-800 rounded-lg border border-gray-300 dark:border-gray-600 animate-pulse&quot;&gt;&lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;&#13;&#10;          {/* Active Filters Skeleton */}&#13;&#10;          &lt;div className=&quot;mb-6 p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 animate-pulse&quot;&gt;&#13;&#10;            &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#13;&#10;              &lt;div className=&quot;h-5 w-32 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#13;&#10;              &lt;div className=&quot;h-4 w-16 bg-primary-300 dark:bg-primary-600 rounded&quot;&gt;&lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#13;&#10;              {[1, 2, 3, 4].map((item) =&gt; (&#13;&#10;                &lt;div&#13;&#10;                  key={item}&#13;&#10;                  className=&quot;h-6 w-20 bg-gradient-to-r from-primary-200 to-green-200 dark:from-primary-700 dark:to-green-700 rounded-full animate-pulse&quot;&#13;&#10;                  style={{ animationDelay: `${item * 0.1}s` }}&#13;&#10;                &gt;&lt;/div&gt;&#13;&#10;              ))}&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;&#13;&#10;          &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-4 gap-8&quot;&gt;&#13;&#10;            {/* Filters Sidebar Skeleton */}&#13;&#10;            &lt;div className=&quot;lg:col-span-1&quot;&gt;&#13;&#10;              &lt;FilterSidebarSkeleton /&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;&#13;&#10;            {/* Products Grid */}&#13;&#10;            &lt;div className=&quot;lg:col-span-3&quot;&gt;&#13;&#10;              {/* Sort and View Options Skeleton */}&#13;&#10;              &lt;div className=&quot;flex items-center justify-between mb-6 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm&quot;&gt;&#13;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#13;&#10;                  &lt;div className=&quot;flex items-center gap-2 animate-pulse&quot;&gt;&#13;&#10;                    &lt;div className=&quot;h-4 w-4 bg-primary-400 rounded animate-bounce&quot;&gt;&lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;h-5 w-24 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                  &lt;div className=&quot;flex items-center text-primary-600 animate-pulse&quot;&gt;&#13;&#10;                    &lt;div className=&quot;h-4 w-4 bg-primary-400 rounded-full animate-spin mr-2&quot;&gt;&lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;h-4 w-20 bg-primary-300 rounded&quot;&gt;&lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#13;&#10;                  &lt;div className=&quot;h-4 w-16 bg-gray-300 dark:bg-gray-600 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#13;&#10;                  &lt;div className=&quot;h-10 w-32 bg-gray-300 dark:bg-gray-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;&#13;&#10;              {/* Products Grid Skeleton */}&#13;&#10;              &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#13;&#10;                {[...Array(9)].map((_, index) =&gt; (&#13;&#10;                  &lt;ProductCardSkeleton key={index} index={index} /&gt;&#13;&#10;                ))}&#13;&#10;              &lt;/div&gt;&#13;&#10;&#13;&#10;              {/* Pagination Skeleton */}&#13;&#10;              &lt;div className=&quot;flex justify-center items-center space-x-2 mt-8&quot;&gt;&#13;&#10;                &lt;div className=&quot;h-10 w-20 bg-gray-300 dark:bg-gray-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#13;&#10;                &lt;div className=&quot;flex space-x-1&quot;&gt;&#13;&#10;                  {[1, 2, 3, 4, 5].map((page) =&gt; (&#13;&#10;                    &lt;div&#13;&#10;                      key={page}&#13;&#10;                      className=&quot;h-10 w-10 bg-gray-300 dark:bg-gray-600 rounded-lg animate-pulse&quot;&#13;&#10;                      style={{ animationDelay: `${page * 0.1}s` }}&#13;&#10;                    &gt;&lt;/div&gt;&#13;&#10;                  ))}&#13;&#10;                &lt;/div&gt;&#13;&#10;                &lt;div className=&quot;h-10 w-16 bg-gray-300 dark:bg-gray-600 rounded-lg animate-pulse&quot;&gt;&lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    );&#13;&#10;  }&#13;&#10;&#13;&#10;  return (&#13;&#10;    &lt;&gt;&#13;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900&quot;&gt;&#13;&#10;        {/* Products Header */}&#13;&#10;        &lt;div className=&quot;bg-primary-600 text-white py-12&quot;&gt;&#13;&#10;          &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#13;&#10;            &lt;h1 className=&quot;text-4xl font-bold mb-4&quot;&gt;Fresh Products&lt;/h1&gt;&#13;&#10;            &lt;p className=&quot;text-xl text-primary-100&quot;&gt;&#13;&#10;              Discover fresh, locally-sourced produce from our trusted farmers&#13;&#10;            &lt;/p&gt;&#13;&#10;&#13;&#10;            {/* Search Results Info */}&#13;&#10;            {(filters.searchTerm ||&#13;&#10;              filters.selectedCategory !== &quot;All Categories&quot;) &amp;&amp; (&#13;&#10;              &lt;div className=&quot;mt-6 p-4 bg-primary-700 rounded-lg&quot;&gt;&#13;&#10;                &lt;div className=&quot;flex items-center justify-between flex-wrap gap-2&quot;&gt;&#13;&#10;                  &lt;div&gt;&#13;&#10;                    {filters.searchTerm &amp;&amp; (&#13;&#10;                      &lt;p className=&quot;text-primary-100&quot;&gt;&#13;&#10;                        Search results for:{&quot; &quot;}&#13;&#10;                        &lt;span className=&quot;font-semibold text-white&quot;&gt;&#13;&#10;                          &amp;quot;{filters.searchTerm}&amp;quot;&#13;&#10;                        &lt;/span&gt;&#13;&#10;                      &lt;/p&gt;&#13;&#10;                    )}&#13;&#10;                    {filters.selectedCategory !== &quot;All Categories&quot; &amp;&amp; (&#13;&#10;                      &lt;p className=&quot;text-primary-100&quot;&gt;&#13;&#10;                        Category:{&quot; &quot;}&#13;&#10;                        &lt;span className=&quot;font-semibold text-white&quot;&gt;&#13;&#10;                          {filters.selectedCategory}&#13;&#10;                        &lt;/span&gt;&#13;&#10;                      &lt;/p&gt;&#13;&#10;                    )}&#13;&#10;                    &lt;p className=&quot;text-sm text-primary-200&quot;&gt;&#13;&#10;                      {paginationData.pagination.totalProducts} products found&#13;&#10;                    &lt;/p&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;&#13;&#10;                  {/* Search Bar in Results */}&#13;&#10;                  &lt;div className=&quot;flex gap-2&quot;&gt;&#13;&#10;                    &lt;input&#13;&#10;                      type=&quot;text&quot;&#13;&#10;                      placeholder=&quot;Search products...&quot;&#13;&#10;                      className=&quot;px-4 py-2 rounded-lg text-gray-900 focus:outline-none&quot;&#13;&#10;                      value={filters.searchTerm}&#13;&#10;                      onChange={(e) =&gt;&#13;&#10;                        handleFilterChange(&quot;searchTerm&quot;, e.target.value)&#13;&#10;                      }&#13;&#10;                      onKeyPress={(e) =&gt; e.key === &quot;Enter&quot; &amp;&amp; refetchProducts()}&#13;&#10;                    /&gt;&#13;&#10;                    &lt;button&#13;&#10;                      onClick={() =&gt; refetchProducts()}&#13;&#10;                      className=&quot;px-4 py-2 bg-primary-500 hover:bg-primary-400 rounded-lg transition&quot;&#13;&#10;                    &gt;&#13;&#10;                      &lt;i className=&quot;fas fa-search&quot;&gt;&lt;/i&gt;&#13;&#10;                    &lt;/button&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            )}&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        {/* Filters and Products */}&#13;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8&quot;&gt;&#13;&#10;          {/* Mobile Filter Toggle */}&#13;&#10;          &lt;div className=&quot;lg:hidden mb-6&quot;&gt;&#13;&#10;            &lt;button&#13;&#10;              onClick={() =&gt; setShowMobileFilters(!showMobileFilters)}&#13;&#10;              className=&quot;w-full bg-white dark:bg-gray-800 text-gray-900 dark:text-white px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-between&quot;&#13;&#10;            &gt;&#13;&#10;              &lt;span className=&quot;flex items-center&quot;&gt;&#13;&#10;                &lt;i className=&quot;fas fa-filter mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;                Filters&#13;&#10;                {getActiveFilterCount() &gt; 0 &amp;&amp; (&#13;&#10;                  &lt;span className=&quot;ml-2 bg-primary-600 text-white text-xs px-2 py-1 rounded-full&quot;&gt;&#13;&#10;                    {getActiveFilterCount()}&#13;&#10;                  &lt;/span&gt;&#13;&#10;                )}&#13;&#10;              &lt;/span&gt;&#13;&#10;              &lt;i&#13;&#10;                className={`fas fa-chevron-${showMobileFilters ? &quot;up&quot; : &quot;down&quot;}`}&#13;&#10;              &gt;&lt;/i&gt;&#13;&#10;            &lt;/button&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;&#13;&#10;          {/* Active Filters Summary */}&#13;&#10;          {getActiveFilterCount() &gt; 0 &amp;&amp; (&#13;&#10;            &lt;div className=&quot;mb-6 p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700&quot;&gt;&#13;&#10;              &lt;div className=&quot;flex items-center justify-between mb-3&quot;&gt;&#13;&#10;                &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                  Active Filters ({getActiveFilterCount()})&#13;&#10;                &lt;/h4&gt;&#13;&#10;                &lt;button&#13;&#10;                  onClick={clearAllFilters}&#13;&#10;                  className=&quot;text-sm text-primary-600 hover:text-primary-700 dark:text-primary-400&quot;&#13;&#10;                &gt;&#13;&#10;                  Clear All&#13;&#10;                &lt;/button&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;              &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;&#13;&#10;                {filters.selectedCategory !== &quot;All Categories&quot; &amp;&amp; (&#13;&#10;                  &lt;span className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-primary-100 text-primary-800 dark:bg-primary-900 dark:text-primary-200&quot;&gt;&#13;&#10;                    Category: {filters.selectedCategory}&#13;&#10;                    &lt;button&#13;&#10;                      onClick={() =&gt;&#13;&#10;                        handleFilterChange(&quot;category&quot;, &quot;All Categories&quot;)&#13;&#10;                      }&#13;&#10;                      className=&quot;ml-2 text-primary-600 hover:text-primary-800&quot;&#13;&#10;                    &gt;&#13;&#10;                      ×&#13;&#10;                    &lt;/button&gt;&#13;&#10;                  &lt;/span&gt;&#13;&#10;                )}&#13;&#10;                {filters.selectedPriceRanges.map((range) =&gt; (&#13;&#10;                  &lt;span&#13;&#10;                    key={range}&#13;&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200&quot;&#13;&#10;                  &gt;&#13;&#10;                    {range}&#13;&#10;                    &lt;button&#13;&#10;                      onClick={() =&gt; handleFilterChange(&quot;priceRange&quot;, range)}&#13;&#10;                      className=&quot;ml-2 text-green-600 hover:text-green-800&quot;&#13;&#10;                    &gt;&#13;&#10;                      ×&#13;&#10;                    &lt;/button&gt;&#13;&#10;                  &lt;/span&gt;&#13;&#10;                ))}&#13;&#10;                {filters.selectedRatings.map((rating) =&gt; (&#13;&#10;                  &lt;span&#13;&#10;                    key={rating}&#13;&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200&quot;&#13;&#10;                  &gt;&#13;&#10;                    {rating}+ Stars&#13;&#10;                    &lt;button&#13;&#10;                      onClick={() =&gt; handleFilterChange(&quot;rating&quot;, rating)}&#13;&#10;                      className=&quot;ml-2 text-yellow-600 hover:text-yellow-800&quot;&#13;&#10;                    &gt;&#13;&#10;                      ×&#13;&#10;                    &lt;/button&gt;&#13;&#10;                  &lt;/span&gt;&#13;&#10;                ))}&#13;&#10;                {filters.selectedFarmers.map((farmer) =&gt; (&#13;&#10;                  &lt;span&#13;&#10;                    key={farmer}&#13;&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200&quot;&#13;&#10;                  &gt;&#13;&#10;                    {farmer}&#13;&#10;                    &lt;button&#13;&#10;                      onClick={() =&gt; handleFilterChange(&quot;farmer&quot;, farmer)}&#13;&#10;                      className=&quot;ml-2 text-blue-600 hover:text-blue-800&quot;&#13;&#10;                    &gt;&#13;&#10;                      ×&#13;&#10;                    &lt;/button&gt;&#13;&#10;                  &lt;/span&gt;&#13;&#10;                ))}&#13;&#10;                {filters.selectedTags.map((tag) =&gt; (&#13;&#10;                  &lt;span&#13;&#10;                    key={tag}&#13;&#10;                    className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200&quot;&#13;&#10;                  &gt;&#13;&#10;                    {tag}&#13;&#10;                    &lt;button&#13;&#10;                      onClick={() =&gt; handleFilterChange(&quot;tag&quot;, tag)}&#13;&#10;                      className=&quot;ml-2 text-purple-600 hover:text-purple-800&quot;&#13;&#10;                    &gt;&#13;&#10;                      ×&#13;&#10;                    &lt;/button&gt;&#13;&#10;                  &lt;/span&gt;&#13;&#10;                ))}&#13;&#10;                {(filters.priceRangeSlider[0] !== 0 ||&#13;&#10;                  filters.priceRangeSlider[1] !== 10000) &amp;&amp; (&#13;&#10;                  &lt;span className=&quot;inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200&quot;&gt;&#13;&#10;                    ৳{filters.priceRangeSlider[0]} - ৳&#13;&#10;                    {filters.priceRangeSlider[1]}&#13;&#10;                    &lt;button&#13;&#10;                      onClick={() =&gt;&#13;&#10;                        handleFilterChange(&quot;priceSlider&quot;, [0, 10000])&#13;&#10;                      }&#13;&#10;                      className=&quot;ml-2 text-orange-600 hover:text-orange-800&quot;&#13;&#10;                    &gt;&#13;&#10;                      ×&#13;&#10;                    &lt;/button&gt;&#13;&#10;                  &lt;/span&gt;&#13;&#10;                )}&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          )}&#13;&#10;&#13;&#10;          &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-4 gap-8&quot;&gt;&#13;&#10;            {/* Filters Sidebar */}&#13;&#10;            &lt;div&#13;&#10;              className={`lg:col-span-1 ${&#13;&#10;                showMobileFilters ? &quot;block&quot; : &quot;hidden lg:block&quot;&#13;&#10;              }`}&#13;&#10;            &gt;&#13;&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 sticky top-24&quot;&gt;&#13;&#10;                &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#13;&#10;                  &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                    Filters&#13;&#10;                  &lt;/h3&gt;&#13;&#10;                  {getActiveFilterCount() &gt; 0 &amp;&amp; (&#13;&#10;                    &lt;span className=&quot;bg-primary-600 text-white text-xs px-2 py-1 rounded-full&quot;&gt;&#13;&#10;                      {getActiveFilterCount()}&#13;&#10;                    &lt;/span&gt;&#13;&#10;                  )}&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {/* Category Filter */}&#13;&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#13;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#13;&#10;                    &lt;i className=&quot;fas fa-th-large mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#13;&#10;                    Category&#13;&#10;                  &lt;/h4&gt;&#13;&#10;                  &lt;div className=&quot;space-y-2 max-h-48 overflow-y-auto&quot;&gt;&#13;&#10;                    {CATEGORY_OPTIONS.map((category) =&gt; (&#13;&#10;                      &lt;label&#13;&#10;                        key={category}&#13;&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#13;&#10;                      &gt;&#13;&#10;                        &lt;input&#13;&#10;                          type=&quot;radio&quot;&#13;&#10;                          name=&quot;category&quot;&#13;&#10;                          checked={filters.selectedCategory === category}&#13;&#10;                          onChange={() =&gt;&#13;&#10;                            handleFilterChange(&quot;category&quot;, category)&#13;&#10;                          }&#13;&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#13;&#10;                        /&gt;&#13;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#13;&#10;                          {category}&#13;&#10;                        &lt;/span&gt;&#13;&#10;                      &lt;/label&gt;&#13;&#10;                    ))}&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {/* Price Range */}&#13;&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#13;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#13;&#10;                    &lt;i className=&quot;fas fa-dollar-sign mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#13;&#10;                    Price Range (৳)&#13;&#10;                  &lt;/h4&gt;&#13;&#10;&#13;&#10;                  {/* Custom Price Range Slider */}&#13;&#10;                  &lt;div className=&quot;mb-4&quot;&gt;&#13;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#13;&#10;                      &lt;input&#13;&#10;                        type=&quot;range&quot;&#13;&#10;                        min=&quot;0&quot;&#13;&#10;                        max=&quot;10000&quot;&#13;&#10;                        step=&quot;10&quot;&#13;&#10;                        value={filters.priceRangeSlider[0]}&#13;&#10;                        onChange={(e) =&gt;&#13;&#10;                          handleFilterChange(&quot;priceSlider&quot;, [&#13;&#10;                            +e.target.value,&#13;&#10;                            filters.priceRangeSlider[1],&#13;&#10;                          ])&#13;&#10;                        }&#13;&#10;                        className=&quot;absolute w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer&quot;&#13;&#10;                      /&gt;&#13;&#10;                      &lt;input&#13;&#10;                        type=&quot;range&quot;&#13;&#10;                        min=&quot;0&quot;&#13;&#10;                        max=&quot;10000&quot;&#13;&#10;                        step=&quot;10&quot;&#13;&#10;                        value={filters.priceRangeSlider[1]}&#13;&#10;                        onChange={(e) =&gt;&#13;&#10;                          handleFilterChange(&quot;priceSlider&quot;, [&#13;&#10;                            filters.priceRangeSlider[0],&#13;&#10;                            +e.target.value,&#13;&#10;                          ])&#13;&#10;                        }&#13;&#10;                        className=&quot;absolute w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer&quot;&#13;&#10;                      /&gt;&#13;&#10;                      &lt;div className=&quot;relative h-2 bg-gray-200 rounded-lg&quot;&gt;&#13;&#10;                        &lt;div&#13;&#10;                          className=&quot;absolute h-2 bg-primary-600 rounded-lg&quot;&#13;&#10;                          style={{&#13;&#10;                            left: `${(filters.priceRangeSlider[0] / 10000) * 100}%`,&#13;&#10;                            width: `${((filters.priceRangeSlider[1] - filters.priceRangeSlider[0]) / 10000) * 100}%`,&#13;&#10;                          }}&#13;&#10;                        &gt;&lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                    &lt;div className=&quot;flex justify-between text-sm text-gray-600 dark:text-gray-400 mt-2&quot;&gt;&#13;&#10;                      &lt;span&gt;��{filters.priceRangeSlider[0]}&lt;/span&gt;&#13;&#10;                      &lt;span&gt;৳{filters.priceRangeSlider[1]}&lt;/span&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;&#13;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#13;&#10;                    {PRICE_RANGE_OPTIONS.map((option) =&gt; (&#13;&#10;                      &lt;label&#13;&#10;                        key={option.label}&#13;&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#13;&#10;                      &gt;&#13;&#10;                        &lt;input&#13;&#10;                          type=&quot;checkbox&quot;&#13;&#10;                          checked={filters.selectedPriceRanges.includes(&#13;&#10;                            option.label,&#13;&#10;                          )}&#13;&#10;                          onChange={() =&gt;&#13;&#10;                            handleFilterChange(&quot;priceRange&quot;, option.label)&#13;&#10;                          }&#13;&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#13;&#10;                        /&gt;&#13;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#13;&#10;                          {option.label}&#13;&#10;                        &lt;/span&gt;&#13;&#10;                      &lt;/label&gt;&#13;&#10;                    ))}&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {/* Rating Filter */}&#13;&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#13;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#13;&#10;                    &lt;i className=&quot;fas fa-star mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#13;&#10;                    Rating&#13;&#10;                  &lt;/h4&gt;&#13;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#13;&#10;                    {[5, 4, 3, 2, 1].map((rating) =&gt; (&#13;&#10;                      &lt;label&#13;&#10;                        key={rating}&#13;&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#13;&#10;                      &gt;&#13;&#10;                        &lt;input&#13;&#10;                          type=&quot;checkbox&quot;&#13;&#10;                          checked={filters.selectedRatings.includes(rating)}&#13;&#10;                          onChange={() =&gt; handleFilterChange(&quot;rating&quot;, rating)}&#13;&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#13;&#10;                        /&gt;&#13;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300 flex items-center&quot;&gt;&#13;&#10;                          {[...Array(rating)].map((_, i) =&gt; (&#13;&#10;                            &lt;i&#13;&#10;                              key={i}&#13;&#10;                              className=&quot;fas fa-star text-yellow-400 text-xs mr-1&quot;&#13;&#10;                            &gt;&lt;/i&gt;&#13;&#10;                          ))}&#13;&#10;                          {rating &lt; 5 &amp;&amp; &lt;span className=&quot;ml-1&quot;&gt;&amp; Up&lt;/span&gt;}&#13;&#10;                        &lt;/span&gt;&#13;&#10;                      &lt;/label&gt;&#13;&#10;                    ))}&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {/* Farmer Filter */}&#13;&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#13;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#13;&#10;                    &lt;i className=&quot;fas fa-user mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#13;&#10;                    Farmer&#13;&#10;                  &lt;/h4&gt;&#13;&#10;                  &lt;div className=&quot;space-y-2 max-h-32 overflow-y-auto&quot;&gt;&#13;&#10;                    {availableFarmers.length &gt; 0 ? (&#13;&#10;                      availableFarmers.map((farmer) =&gt; (&#13;&#10;                        &lt;label&#13;&#10;                          key={farmer}&#13;&#10;                          className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#13;&#10;                        &gt;&#13;&#10;                          &lt;input&#13;&#10;                            type=&quot;checkbox&quot;&#13;&#10;                            checked={filters.selectedFarmers.includes(farmer)}&#13;&#10;                            onChange={() =&gt;&#13;&#10;                              handleFilterChange(&quot;farmer&quot;, farmer)&#13;&#10;                            }&#13;&#10;                            className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#13;&#10;                          /&gt;&#13;&#10;                          &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300 truncate&quot;&gt;&#13;&#10;                            {farmer}&#13;&#10;                          &lt;/span&gt;&#13;&#10;                        &lt;/label&gt;&#13;&#10;                      ))&#13;&#10;                    ) : (&#13;&#10;                      &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400 p-2&quot;&gt;&#13;&#10;                        Loading farmers...&#13;&#10;                      &lt;/p&gt;&#13;&#10;                    )}&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {/* Tag Filter */}&#13;&#10;                &lt;div className=&quot;mb-6&quot;&gt;&#13;&#10;                  &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#13;&#10;                    &lt;i className=&quot;fas fa-tags mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#13;&#10;                    Tags&#13;&#10;                  &lt;/h4&gt;&#13;&#10;                  &lt;div className=&quot;space-y-2&quot;&gt;&#13;&#10;                    {TAG_OPTIONS.map((tag) =&gt; (&#13;&#10;                      &lt;label&#13;&#10;                        key={tag}&#13;&#10;                        className=&quot;flex items-center hover:bg-gray-50 dark:hover:bg-gray-700 p-2 rounded cursor-pointer&quot;&#13;&#10;                      &gt;&#13;&#10;                        &lt;input&#13;&#10;                          type=&quot;checkbox&quot;&#13;&#10;                          checked={filters.selectedTags.includes(tag)}&#13;&#10;                          onChange={() =&gt; handleFilterChange(&quot;tag&quot;, tag)}&#13;&#10;                          className=&quot;rounded border-gray-300 text-primary-600 focus:ring-primary-500&quot;&#13;&#10;                        /&gt;&#13;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#13;&#10;                          {tag}&#13;&#10;                        &lt;/span&gt;&#13;&#10;                      &lt;/label&gt;&#13;&#10;                    ))}&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {/* Clear Filters */}&#13;&#10;                &lt;div className=&quot;border-t border-gray-200 dark:border-gray-700 pt-4&quot;&gt;&#13;&#10;                  &lt;button&#13;&#10;                    onClick={clearAllFilters}&#13;&#10;                    disabled={getActiveFilterCount() === 0}&#13;&#10;                    className=&quot;w-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 py-2 rounded-lg font-medium hover:bg-gray-300 dark:hover:bg-gray-600 transition disabled:opacity-50 disabled:cursor-not-allowed&quot;&#13;&#10;                  &gt;&#13;&#10;                    &lt;i className=&quot;fas fa-times mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;                    Clear All Filters&#13;&#10;                  &lt;/button&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;&#13;&#10;            {/* Products Grid */}&#13;&#10;            &lt;div className=&quot;lg:col-span-3&quot;&gt;&#13;&#10;              {/* Sort and View Options */}&#13;&#10;              &lt;div className=&quot;flex items-center justify-between mb-6 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm&quot;&gt;&#13;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#13;&#10;                  &lt;span className=&quot;text-gray-700 dark:text-gray-300 font-medium&quot;&gt;&#13;&#10;                    &lt;i className=&quot;fas fa-box mr-2 text-primary-600&quot;&gt;&lt;/i&gt;&#13;&#10;                    {paginationData.pagination.totalProducts} products&#13;&#10;                  &lt;/span&gt;&#13;&#10;                  {loading &amp;&amp; (&#13;&#10;                    &lt;div className=&quot;flex items-center text-primary-600&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;                      &lt;span className=&quot;text-sm&quot;&gt;Loading...&lt;/span&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  )}&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#13;&#10;                  &lt;label className=&quot;text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#13;&#10;                    Sort by:&#13;&#10;                  &lt;/label&gt;&#13;&#10;                  &lt;select&#13;&#10;                    value={filters.sortBy}&#13;&#10;                    onChange={(e) =&gt;&#13;&#10;                      handleFilterChange(&quot;sortBy&quot;, e.target.value)&#13;&#10;                    }&#13;&#10;                    className=&quot;border border-gray-300 dark:border-gray-600 rounded-lg px-3 py-2 bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary-500 text-sm&quot;&#13;&#10;                  &gt;&#13;&#10;                    &lt;option value=&quot;newest&quot;&gt;Newest First&lt;/option&gt;&#13;&#10;                    &lt;option value=&quot;oldest&quot;&gt;Oldest First&lt;/option&gt;&#13;&#10;                    &lt;option value=&quot;price-low&quot;&gt;Price: Low to High&lt;/option&gt;&#13;&#10;                    &lt;option value=&quot;price-high&quot;&gt;Price: High to Low&lt;/option&gt;&#13;&#10;                    &lt;option value=&quot;rating&quot;&gt;Highest Rated&lt;/option&gt;&#13;&#10;                    &lt;option value=&quot;popular&quot;&gt;Most Popular&lt;/option&gt;&#13;&#10;                  &lt;/select&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;&#13;&#10;              {/* Products Grid */}&#13;&#10;              {loading ? (&#13;&#10;                &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#13;&#10;                  {[...Array(9)].map((_, index) =&gt; (&#13;&#10;                    &lt;div&#13;&#10;                      key={index}&#13;&#10;                      className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden animate-pulse&quot;&#13;&#10;                    &gt;&#13;&#10;                      &lt;div className=&quot;w-full h-48 bg-gray-300 dark:bg-gray-600&quot;&gt;&lt;/div&gt;&#13;&#10;                      &lt;div className=&quot;p-6&quot;&gt;&#13;&#10;                        &lt;div className=&quot;h-4 bg-gray-300 dark:bg-gray-600 rounded mb-2&quot;&gt;&lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;h-3 bg-gray-300 dark:bg-gray-600 rounded mb-3 w-3/4&quot;&gt;&lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;h-6 bg-gray-300 dark:bg-gray-600 rounded mb-4 w-1/2&quot;&gt;&lt;/div&gt;&#13;&#10;                        &lt;div className=&quot;h-8 bg-gray-300 dark:bg-gray-600 rounded&quot;&gt;&lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  ))}&#13;&#10;                &lt;/div&gt;&#13;&#10;              ) : paginationData.products.length &gt; 0 ? (&#13;&#10;                &lt;&gt;&#13;&#10;                  &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#13;&#10;                    {paginationData.products.map((product, index) =&gt; (&#13;&#10;                      &lt;ProductCard&#13;&#10;                        key={`${product._id}-${product.farmerId || product.farmer?._id || &quot;unknown&quot;}-${index}`}&#13;&#10;                        product={product}&#13;&#10;                      /&gt;&#13;&#10;                    ))}&#13;&#10;                  &lt;/div&gt;&#13;&#10;&#13;&#10;                  {/* Pagination Component */}&#13;&#10;                  {paginationData.pagination.totalPages &gt; 1 &amp;&amp; (&#13;&#10;                    &lt;div className=&quot;flex justify-center items-center gap-2 mt-8&quot;&gt;&#13;&#10;                      &lt;button&#13;&#10;                        onClick={() =&gt;&#13;&#10;                          setCurrentPage((prev) =&gt; Math.max(prev - 1, 1))&#13;&#10;                        }&#13;&#10;                        disabled={!paginationData.pagination.hasPrevPage}&#13;&#10;                        className=&quot;px-3 py-2 rounded-lg border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 dark:hover:bg-gray-700 transition&quot;&#13;&#10;                      &gt;&#13;&#10;                        &lt;i className=&quot;fas fa-chevron-left&quot;&gt;&lt;/i&gt;&#13;&#10;                      &lt;/button&gt;&#13;&#10;&#13;&#10;                      {Array.from(&#13;&#10;                        { length: paginationData.pagination.totalPages },&#13;&#10;                        (_, i) =&gt; i + 1,&#13;&#10;                      ).map((page) =&gt; (&#13;&#10;                        &lt;button&#13;&#10;                          key={page}&#13;&#10;                          onClick={() =&gt; setCurrentPage(page)}&#13;&#10;                          className={`px-3 py-2 rounded-lg transition ${&#13;&#10;                            page === paginationData.pagination.currentPage&#13;&#10;                              ? &quot;bg-primary-500 text-white&quot;&#13;&#10;                              : &quot;border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700&quot;&#13;&#10;                          }`}&#13;&#10;                        &gt;&#13;&#10;                          {page}&#13;&#10;                        &lt;/button&gt;&#13;&#10;                      ))}&#13;&#10;&#13;&#10;                      &lt;button&#13;&#10;                        onClick={() =&gt;&#13;&#10;                          setCurrentPage((prev) =&gt;&#13;&#10;                            Math.min(&#13;&#10;                              prev + 1,&#13;&#10;                              paginationData.pagination.totalPages,&#13;&#10;                            ),&#13;&#10;                          )&#13;&#10;                        }&#13;&#10;                        disabled={!paginationData.pagination.hasNextPage}&#13;&#10;                        className=&quot;px-3 py-2 rounded-lg border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50 dark:hover:bg-gray-700 transition&quot;&#13;&#10;                      &gt;&#13;&#10;                        &lt;i className=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt;&#13;&#10;                      &lt;/button&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  )}&#13;&#10;                &lt;/&gt;&#13;&#10;              ) : (&#13;&#10;                &lt;div className=&quot;text-center py-12&quot;&gt;&#13;&#10;                  &lt;i className=&quot;fas fa-search text-6xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#13;&#10;                  &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;                    No products found&#13;&#10;                  &lt;/h3&gt;&#13;&#10;                  &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#13;&#10;                    Try adjusting your search criteria or browse all products&#13;&#10;                  &lt;/p&gt;&#13;&#10;                  &lt;button&#13;&#10;                    onClick={clearAllFilters}&#13;&#10;                    className=&quot;inline-block bg-primary-600 hover:bg-primary-700 text-white px-6 py-3 rounded-lg font-medium transition&quot;&#13;&#10;                  &gt;&#13;&#10;                    Browse All Products&#13;&#10;                  &lt;/button&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              )}&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;      &lt;Footer /&gt;&#13;&#10;    &lt;/&gt;&#13;&#10;  );&#13;&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/profile/farmer.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/profile/farmer.js" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { useAuth } from &quot;../../contexts/AuthContext&quot;;&#10;import { useRouter } from &quot;next/navigation&quot;;&#10;import { useTheme } from &quot;../../contexts/ThemeContext&quot;;&#10;&#10;export default function FarmerProfilePage() {&#10;  const { user, isAuthenticated, updateUser } = useAuth();&#10;  const { isDarkMode } = useTheme();&#10;  const router = useRouter();&#10;&#10;  const [activeTab, setActiveTab] = useState(&quot;personal&quot;);&#10;  const [loading, setLoading] = useState(false);&#10;  const [message, setMessage] = useState({ type: &quot;&quot;, text: &quot;&quot; });&#10;  const [profileData, setProfileData] = useState({&#10;    name: &quot;&quot;,&#10;    email: &quot;&quot;,&#10;    phone: &quot;&quot;,&#10;    farmInfo: {&#10;      farmName: &quot;&quot;,&#10;      farmDescription: &quot;&quot;,&#10;      farmSize: &quot;&quot;,&#10;      farmType: &quot;&quot;,&#10;      certifications: [],&#10;      establishedYear: &quot;&quot;,&#10;      farmingMethods: [],&#10;    },&#10;    address: {&#10;      street: &quot;&quot;,&#10;      city: &quot;&quot;,&#10;      state: &quot;&quot;,&#10;      zipCode: &quot;&quot;,&#10;      country: &quot;&quot;,&#10;    },&#10;    businessInfo: {&#10;      businessLicense: &quot;&quot;,&#10;      taxId: &quot;&quot;,&#10;      deliveryRadius: &quot;&quot;,&#10;      minimumOrder: &quot;&quot;,&#10;      website: &quot;&quot;,&#10;      socialMedia: {&#10;        facebook: &quot;&quot;,&#10;        instagram: &quot;&quot;,&#10;        twitter: &quot;&quot;,&#10;      },&#10;    },&#10;    preferences: {&#10;      notifications: {&#10;        email: true,&#10;        sms: false,&#10;        orderUpdates: true,&#10;        lowStockAlerts: true,&#10;        customerMessages: true,&#10;        marketingUpdates: false,&#10;      },&#10;      language: &quot;en&quot;,&#10;      currency: &quot;USD&quot;,&#10;      autoAcceptOrders: false,&#10;      showFarmLocation: true,&#10;    },&#10;    security: {&#10;      currentPassword: &quot;&quot;,&#10;      newPassword: &quot;&quot;,&#10;      confirmPassword: &quot;&quot;,&#10;    },&#10;  });&#10;&#10;  // Redirect if not authenticated or not a farmer&#10;  useEffect(() =&gt; {&#10;    if (!isAuthenticated) {&#10;      router.push(&quot;/login&quot;);&#10;      return;&#10;    }&#10;&#10;    // Check if user is a farmer, if not redirect to regular profile&#10;    if (user &amp;&amp; user.role !== &quot;farmer&quot;) {&#10;      router.push(&quot;/profile&quot;);&#10;      return;&#10;    }&#10;&#10;    // Initialize profile data with user data&#10;    if (user) {&#10;      setProfileData((prev) =&gt; ({&#10;        ...prev,&#10;        name: user.name || &quot;&quot;,&#10;        email: user.email || &quot;&quot;,&#10;        phone: user.phone || &quot;&quot;,&#10;        address: user.address || prev.address,&#10;        farmInfo: user.farmInfo || prev.farmInfo,&#10;        businessInfo: user.businessInfo || prev.businessInfo,&#10;        preferences: user.preferences || prev.preferences,&#10;      }));&#10;    }&#10;  }, [user, isAuthenticated, router]);&#10;&#10;  const handleInputChange = (field, value) =&gt; {&#10;    setProfileData((prev) =&gt; ({&#10;      ...prev,&#10;      [field]: value,&#10;    }));&#10;  };&#10;&#10;  const handleNestedChange = (section, subsection, field, value) =&gt; {&#10;    if (subsection) {&#10;      setProfileData((prev) =&gt; ({&#10;        ...prev,&#10;        [section]: {&#10;          ...prev[section],&#10;          [subsection]: {&#10;            ...prev[section][subsection],&#10;            [field]: value,&#10;          },&#10;        },&#10;      }));&#10;    } else {&#10;      setProfileData((prev) =&gt; ({&#10;        ...prev,&#10;        [section]: {&#10;          ...prev[section],&#10;          [field]: value,&#10;        },&#10;      }));&#10;    }&#10;  };&#10;&#10;  const handleArrayChange = (section, field, value) =&gt; {&#10;    const arrayValue = value.split(&quot;,&quot;).map(item =&gt; item.trim()).filter(item =&gt; item);&#10;    setProfileData((prev) =&gt; ({&#10;      ...prev,&#10;      [section]: {&#10;        ...prev[section],&#10;        [field]: arrayValue,&#10;      },&#10;    }));&#10;  };&#10;&#10;  const handlePersonalInfoUpdate = async () =&gt; {&#10;    try {&#10;      setLoading(true);&#10;      setMessage({ type: &quot;&quot;, text: &quot;&quot; });&#10;&#10;      const response = await fetch(&quot;/api/auth/users&quot;, {&#10;        method: &quot;PUT&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify({&#10;          name: profileData.name,&#10;          phone: profileData.phone,&#10;          address: profileData.address,&#10;          farmInfo: profileData.farmInfo,&#10;          businessInfo: profileData.businessInfo,&#10;          preferences: profileData.preferences,&#10;        }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        const updatedUser = await response.json();&#10;        updateUser(updatedUser.user);&#10;        setMessage({ type: &quot;success&quot;, text: &quot;Profile updated successfully!&quot; });&#10;&#10;        // Also update localStorage to persist data&#10;        localStorage.setItem(&#10;          &quot;farmfresh_user&quot;,&#10;          JSON.stringify(updatedUser.user),&#10;        );&#10;      } else {&#10;        const errorData = await response.json();&#10;        setMessage({&#10;          type: &quot;error&quot;,&#10;          text: errorData.error || &quot;Failed to update profile&quot;,&#10;        });&#10;      }&#10;    } catch (error) {&#10;      setMessage({&#10;        type: &quot;error&quot;,&#10;        text: &quot;An error occurred while updating profile&quot;,&#10;      });&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  const handlePasswordChange = async () =&gt; {&#10;    try {&#10;      setLoading(true);&#10;      setMessage({ type: &quot;&quot;, text: &quot;&quot; });&#10;&#10;      if (&#10;        profileData.security.newPassword !==&#10;        profileData.security.confirmPassword&#10;      ) {&#10;        setMessage({ type: &quot;error&quot;, text: &quot;New passwords don't match&quot; });&#10;        return;&#10;      }&#10;&#10;      if (profileData.security.newPassword.length &lt; 6) {&#10;        setMessage({&#10;          type: &quot;error&quot;,&#10;          text: &quot;Password must be at least 6 characters long&quot;,&#10;        });&#10;        return;&#10;      }&#10;&#10;      const response = await fetch(&quot;/api/auth/users&quot;, {&#10;        method: &quot;PUT&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify({&#10;          currentPassword: profileData.security.currentPassword,&#10;          newPassword: profileData.security.newPassword,&#10;        }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        setMessage({ type: &quot;success&quot;, text: &quot;Password updated successfully!&quot; });&#10;        setProfileData((prev) =&gt; ({&#10;          ...prev,&#10;          security: {&#10;            currentPassword: &quot;&quot;,&#10;            newPassword: &quot;&quot;,&#10;            confirmPassword: &quot;&quot;,&#10;          },&#10;        }));&#10;      } else {&#10;        const errorData = await response.json();&#10;        setMessage({&#10;          type: &quot;error&quot;,&#10;          text: errorData.error || &quot;Failed to update password&quot;,&#10;        });&#10;      }&#10;    } catch (error) {&#10;      setMessage({&#10;        type: &quot;error&quot;,&#10;        text: &quot;An error occurred while updating password&quot;,&#10;      });&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  const tabs = [&#10;    { id: &quot;personal&quot;, label: &quot;Personal Info&quot;, icon: &quot;fas fa-user&quot; },&#10;    { id: &quot;farm&quot;, label: &quot;Farm Info&quot;, icon: &quot;fas fa-seedling&quot; },&#10;    { id: &quot;business&quot;, label: &quot;Business&quot;, icon: &quot;fas fa-building&quot; },&#10;    { id: &quot;address&quot;, label: &quot;Address&quot;, icon: &quot;fas fa-map-marker-alt&quot; },&#10;    { id: &quot;preferences&quot;, label: &quot;Preferences&quot;, icon: &quot;fas fa-cog&quot; },&#10;    { id: &quot;security&quot;, label: &quot;Security&quot;, icon: &quot;fas fa-shield-alt&quot; },&#10;  ];&#10;&#10;  if (!isAuthenticated) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        {/* Header */}&#10;        &lt;div className=&quot;mb-8&quot;&gt;&#10;          &lt;h1 className=&quot;text-3xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;            Farmer Profile Settings&#10;          &lt;/h1&gt;&#10;          &lt;p className=&quot;mt-2 text-gray-600 dark:text-gray-400&quot;&gt;&#10;            Manage your farmer account settings and farm information&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg shadow-sm&quot;&gt;&#10;          {/* Tab Navigation */}&#10;          &lt;div className=&quot;border-b border-gray-200 dark:border-gray-700&quot;&gt;&#10;            &lt;nav className=&quot;flex space-x-8 px-6 overflow-x-auto&quot;&gt;&#10;              {tabs.map((tab) =&gt; (&#10;                &lt;button&#10;                  key={tab.id}&#10;                  onClick={() =&gt; setActiveTab(tab.id)}&#10;                  className={`py-4 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 whitespace-nowrap ${&#10;                    activeTab === tab.id&#10;                      ? &quot;border-primary-500 text-primary-600 dark:text-primary-400&quot;&#10;                      : &quot;border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300&quot;&#10;                  }`}&#10;                &gt;&#10;                  &lt;i className={tab.icon}&gt;&lt;/i&gt;&#10;                  &lt;span&gt;{tab.label}&lt;/span&gt;&#10;                &lt;/button&gt;&#10;              ))}&#10;            &lt;/nav&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Tab Content */}&#10;          &lt;div className=&quot;p-6&quot;&gt;&#10;            {message.text &amp;&amp; (&#10;              &lt;div&#10;                className={`mb-4 p-4 rounded-md ${&#10;                  message.type === &quot;success&quot;&#10;                    ? &quot;bg-green-50 dark:bg-green-900 text-green-700 dark:text-green-300 border border-green-200 dark:border-green-800&quot;&#10;                    : &quot;bg-red-50 dark:bg-red-900 text-red-700 dark:text-red-300 border border-red-200 dark:border-red-800&quot;&#10;                }`}&#10;              &gt;&#10;                {message.text}&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {/* Personal Information Tab */}&#10;            {activeTab === &quot;personal&quot; &amp;&amp; (&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Personal Information&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Full Name&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      value={profileData.name}&#10;                      onChange={(e) =&gt;&#10;                        handleInputChange(&quot;name&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Email Address&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;email&quot;&#10;                      value={profileData.email}&#10;                      disabled&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-gray-50 dark:bg-gray-600 text-gray-500 dark:text-gray-400&quot;&#10;                    /&gt;&#10;                    &lt;p className=&quot;mt-1 text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                      Email cannot be changed&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Phone Number&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;tel&quot;&#10;                      value={profileData.phone}&#10;                      onChange={(e) =&gt;&#10;                        handleInputChange(&quot;phone&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;button&#10;                  onClick={handlePersonalInfoUpdate}&#10;                  disabled={loading}&#10;                  className=&quot;bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed&quot;&#10;                &gt;&#10;                  {loading ? &quot;Saving...&quot; : &quot;Save Changes&quot;}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {/* Farm Information Tab */}&#10;            {activeTab === &quot;farm&quot; &amp;&amp; (&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Farm Information&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Farm Name *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      value={profileData.farmInfo.farmName}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;farmInfo&quot;, &quot;&quot;, &quot;farmName&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Green Valley Farm&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Farm Type&#10;                    &lt;/label&gt;&#10;                    &lt;select&#10;                      value={profileData.farmInfo.farmType}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;farmInfo&quot;, &quot;&quot;, &quot;farmType&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    &gt;&#10;                      &lt;option value=&quot;&quot;&gt;Select Farm Type&lt;/option&gt;&#10;                      &lt;option value=&quot;organic&quot;&gt;Organic Farm&lt;/option&gt;&#10;                      &lt;option value=&quot;conventional&quot;&gt;Conventional Farm&lt;/option&gt;&#10;                      &lt;option value=&quot;hydroponic&quot;&gt;Hydroponic Farm&lt;/option&gt;&#10;                      &lt;option value=&quot;greenhouse&quot;&gt;Greenhouse Farm&lt;/option&gt;&#10;                      &lt;option value=&quot;mixed&quot;&gt;Mixed Farm&lt;/option&gt;&#10;                    &lt;/select&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Farm Size (acres)&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;number&quot;&#10;                      value={profileData.farmInfo.farmSize}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;farmInfo&quot;, &quot;&quot;, &quot;farmSize&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;10&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Established Year&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;number&quot;&#10;                      value={profileData.farmInfo.establishedYear}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;farmInfo&quot;, &quot;&quot;, &quot;establishedYear&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;2020&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;md:col-span-2&quot;&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Farm Description&#10;                    &lt;/label&gt;&#10;                    &lt;textarea&#10;                      value={profileData.farmInfo.farmDescription}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;farmInfo&quot;, &quot;&quot;, &quot;farmDescription&quot;, e.target.value)&#10;                      }&#10;                      rows={4}&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Tell customers about your farm, your farming philosophy, and what makes your products special...&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Certifications (comma-separated)&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      value={profileData.farmInfo.certifications.join(&quot;, &quot;)}&#10;                      onChange={(e) =&gt;&#10;                        handleArrayChange(&quot;farmInfo&quot;, &quot;certifications&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Organic Certified, Non-GMO, USDA Organic&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Farming Methods (comma-separated)&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      value={profileData.farmInfo.farmingMethods.join(&quot;, &quot;)}&#10;                      onChange={(e) =&gt;&#10;                        handleArrayChange(&quot;farmInfo&quot;, &quot;farmingMethods&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Sustainable, Pesticide-free, Crop Rotation&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;button&#10;                  onClick={handlePersonalInfoUpdate}&#10;                  disabled={loading}&#10;                  className=&quot;bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed&quot;&#10;                &gt;&#10;                  {loading ? &quot;Saving...&quot; : &quot;Save Farm Information&quot;}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {/* Business Information Tab */}&#10;            {activeTab === &quot;business&quot; &amp;&amp; (&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Business Information&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Business License&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      value={profileData.businessInfo.businessLicense}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;businessInfo&quot;, &quot;&quot;, &quot;businessLicense&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Tax ID&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      value={profileData.businessInfo.taxId}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;businessInfo&quot;, &quot;&quot;, &quot;taxId&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Delivery Radius (miles)&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;number&quot;&#10;                      value={profileData.businessInfo.deliveryRadius}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;businessInfo&quot;, &quot;&quot;, &quot;deliveryRadius&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;25&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Minimum Order ($)&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;number&quot;&#10;                      value={profileData.businessInfo.minimumOrder}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;businessInfo&quot;, &quot;&quot;, &quot;minimumOrder&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;25&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Website&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;url&quot;&#10;                      value={profileData.businessInfo.website}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;businessInfo&quot;, &quot;&quot;, &quot;website&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;https://yourfarm.com&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Social Media */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Facebook&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;url&quot;&#10;                      value={profileData.businessInfo.socialMedia.facebook}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;businessInfo&quot;, &quot;socialMedia&quot;, &quot;facebook&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;https://facebook.com/yourfarm&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Instagram&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;url&quot;&#10;                      value={profileData.businessInfo.socialMedia.instagram}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;businessInfo&quot;, &quot;socialMedia&quot;, &quot;instagram&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;https://instagram.com/yourfarm&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Twitter&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;url&quot;&#10;                      value={profileData.businessInfo.socialMedia.twitter}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;businessInfo&quot;, &quot;socialMedia&quot;, &quot;twitter&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;https://twitter.com/yourfarm&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;button&#10;                  onClick={handlePersonalInfoUpdate}&#10;                  disabled={loading}&#10;                  className=&quot;bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed&quot;&#10;                &gt;&#10;                  {loading ? &quot;Saving...&quot; : &quot;Save Business Information&quot;}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {/* Address Tab */}&#10;            {activeTab === &quot;address&quot; &amp;&amp; (&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Farm Address&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                  &lt;div className=&quot;md:col-span-2&quot;&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Street Address&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      value={profileData.address.street}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;address&quot;, &quot;&quot;, &quot;street&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      City&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      value={profileData.address.city}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;address&quot;, &quot;&quot;, &quot;city&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      State/Province&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      value={profileData.address.state}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;address&quot;, &quot;&quot;, &quot;state&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      ZIP/Postal Code&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      value={profileData.address.zipCode}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;address&quot;, &quot;&quot;, &quot;zipCode&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Country&#10;                    &lt;/label&gt;&#10;                    &lt;select&#10;                      value={profileData.address.country}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;address&quot;, &quot;&quot;, &quot;country&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    &gt;&#10;                      &lt;option value=&quot;&quot;&gt;Select Country&lt;/option&gt;&#10;                      &lt;option value=&quot;US&quot;&gt;United States&lt;/option&gt;&#10;                      &lt;option value=&quot;CA&quot;&gt;Canada&lt;/option&gt;&#10;                      &lt;option value=&quot;UK&quot;&gt;United Kingdom&lt;/option&gt;&#10;                      &lt;option value=&quot;AU&quot;&gt;Australia&lt;/option&gt;&#10;                      &lt;option value=&quot;DE&quot;&gt;Germany&lt;/option&gt;&#10;                      &lt;option value=&quot;FR&quot;&gt;France&lt;/option&gt;&#10;                    &lt;/select&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;button&#10;                  onClick={handlePersonalInfoUpdate}&#10;                  disabled={loading}&#10;                  className=&quot;bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed&quot;&#10;                &gt;&#10;                  {loading ? &quot;Saving...&quot; : &quot;Save Address&quot;}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {/* Preferences Tab */}&#10;            {activeTab === &quot;preferences&quot; &amp;&amp; (&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Preferences&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h4 className=&quot;text-md font-medium text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                      Notification Preferences&#10;                    &lt;/h4&gt;&#10;                    &lt;div className=&quot;space-y-3&quot;&gt;&#10;                      &lt;label className=&quot;flex items-center&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={profileData.preferences.notifications.email}&#10;                          onChange={(e) =&gt;&#10;                            handleNestedChange(&quot;preferences&quot;, &quot;notifications&quot;, &quot;email&quot;, e.target.checked)&#10;                          }&#10;                          className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          Email notifications&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;&#10;                      &lt;label className=&quot;flex items-center&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={profileData.preferences.notifications.sms}&#10;                          onChange={(e) =&gt;&#10;                            handleNestedChange(&quot;preferences&quot;, &quot;notifications&quot;, &quot;sms&quot;, e.target.checked)&#10;                          }&#10;                          className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          SMS notifications&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;&#10;                      &lt;label className=&quot;flex items-center&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={profileData.preferences.notifications.orderUpdates}&#10;                          onChange={(e) =&gt;&#10;                            handleNestedChange(&quot;preferences&quot;, &quot;notifications&quot;, &quot;orderUpdates&quot;, e.target.checked)&#10;                          }&#10;                          className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          Order status updates&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;&#10;                      &lt;label className=&quot;flex items-center&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={profileData.preferences.notifications.lowStockAlerts}&#10;                          onChange={(e) =&gt;&#10;                            handleNestedChange(&quot;preferences&quot;, &quot;notifications&quot;, &quot;lowStockAlerts&quot;, e.target.checked)&#10;                          }&#10;                          className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          Low stock alerts&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;&#10;                      &lt;label className=&quot;flex items-center&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={profileData.preferences.notifications.customerMessages}&#10;                          onChange={(e) =&gt;&#10;                            handleNestedChange(&quot;preferences&quot;, &quot;notifications&quot;, &quot;customerMessages&quot;, e.target.checked)&#10;                          }&#10;                          className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          Customer messages&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;&#10;                      &lt;label className=&quot;flex items-center&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={profileData.preferences.notifications.marketingUpdates}&#10;                          onChange={(e) =&gt;&#10;                            handleNestedChange(&quot;preferences&quot;, &quot;notifications&quot;, &quot;marketingUpdates&quot;, e.target.checked)&#10;                          }&#10;                          className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          Marketing updates&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;h4 className=&quot;text-md font-medium text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                      Business Preferences&#10;                    &lt;/h4&gt;&#10;                    &lt;div className=&quot;space-y-3&quot;&gt;&#10;                      &lt;label className=&quot;flex items-center&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={profileData.preferences.autoAcceptOrders}&#10;                          onChange={(e) =&gt;&#10;                            handleNestedChange(&quot;preferences&quot;, &quot;&quot;, &quot;autoAcceptOrders&quot;, e.target.checked)&#10;                          }&#10;                          className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          Auto-accept orders&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;&#10;                      &lt;label className=&quot;flex items-center&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;checkbox&quot;&#10;                          checked={profileData.preferences.showFarmLocation}&#10;                          onChange={(e) =&gt;&#10;                            handleNestedChange(&quot;preferences&quot;, &quot;&quot;, &quot;showFarmLocation&quot;, e.target.checked)&#10;                          }&#10;                          className=&quot;rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50&quot;&#10;                        /&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm text-gray-700 dark:text-gray-300&quot;&gt;&#10;                          Show farm location to customers&#10;                        &lt;/span&gt;&#10;                      &lt;/label&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                    &lt;div&gt;&#10;                      &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                        Language&#10;                      &lt;/label&gt;&#10;                      &lt;select&#10;                        value={profileData.preferences.language}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;preferences&quot;, &quot;&quot;, &quot;language&quot;, e.target.value)&#10;                        }&#10;                        className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      &gt;&#10;                        &lt;option value=&quot;en&quot;&gt;English&lt;/option&gt;&#10;                        &lt;option value=&quot;es&quot;&gt;Spanish&lt;/option&gt;&#10;                        &lt;option value=&quot;fr&quot;&gt;French&lt;/option&gt;&#10;                        &lt;option value=&quot;de&quot;&gt;German&lt;/option&gt;&#10;                      &lt;/select&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div&gt;&#10;                      &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                        Currency&#10;                      &lt;/label&gt;&#10;                      &lt;select&#10;                        value={profileData.preferences.currency}&#10;                        onChange={(e) =&gt;&#10;                          handleNestedChange(&quot;preferences&quot;, &quot;&quot;, &quot;currency&quot;, e.target.value)&#10;                        }&#10;                        className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                      &gt;&#10;                        &lt;option value=&quot;USD&quot;&gt;USD ($)&lt;/option&gt;&#10;                        &lt;option value=&quot;EUR&quot;&gt;EUR (€)&lt;/option&gt;&#10;                        &lt;option value=&quot;GBP&quot;&gt;GBP (£)&lt;/option&gt;&#10;                        &lt;option value=&quot;CAD&quot;&gt;CAD ($)&lt;/option&gt;&#10;                      &lt;/select&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;button&#10;                  onClick={handlePersonalInfoUpdate}&#10;                  disabled={loading}&#10;                  className=&quot;bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed&quot;&#10;                &gt;&#10;                  {loading ? &quot;Saving...&quot; : &quot;Save Preferences&quot;}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {/* Security Tab */}&#10;            {activeTab === &quot;security&quot; &amp;&amp; (&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Security Settings&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;max-w-md space-y-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Current Password&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;password&quot;&#10;                      value={profileData.security.currentPassword}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;security&quot;, &quot;&quot;, &quot;currentPassword&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      New Password&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;password&quot;&#10;                      value={profileData.security.newPassword}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;security&quot;, &quot;&quot;, &quot;newPassword&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Confirm New Password&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;password&quot;&#10;                      value={profileData.security.confirmPassword}&#10;                      onChange={(e) =&gt;&#10;                        handleNestedChange(&quot;security&quot;, &quot;&quot;, &quot;confirmPassword&quot;, e.target.value)&#10;                      }&#10;                      className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;button&#10;                    onClick={handlePasswordChange}&#10;                    disabled={loading}&#10;                    className=&quot;bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed&quot;&#10;                  &gt;&#10;                    {loading ? &quot;Updating...&quot; : &quot;Update Password&quot;}&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/check-farmer-methods.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/check-farmer-methods.js" />
              <option name="updatedContent" value="const { MongoClient, ObjectId } = require(&quot;mongodb&quot;);&#10;&#10;async function checkFarmerFarmingMethods() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017/farmfresh&quot;);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot; CHECKING FARMERS' FARMING METHODS\n&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Get all farmers&#10;    console.log(&quot;1.  CHECKING ALL FARMERS FOR FARMING METHODS:&quot;);&#10;    const allFarmers = await db.collection(&quot;farmers&quot;).find({}).toArray();&#10;&#10;    console.log(`Total farmers found: ${allFarmers.length}\n`);&#10;&#10;    const farmersWithMethods = [];&#10;    const farmersWithoutMethods = [];&#10;&#10;    allFarmers.forEach(farmer =&gt; {&#10;      const hasFarmingMethods = farmer.farmingMethods &amp;&amp; &#10;                               Array.isArray(farmer.farmingMethods) &amp;&amp; &#10;                               farmer.farmingMethods.length &gt; 0;&#10;&#10;      if (hasFarmingMethods) {&#10;        farmersWithMethods.push(farmer);&#10;      } else {&#10;        farmersWithoutMethods.push(farmer);&#10;      }&#10;    });&#10;&#10;    // Show farmers WITH farming methods&#10;    console.log(`2. ✅ FARMERS WITH FARMING METHODS (${farmersWithMethods.length}):`);&#10;    farmersWithMethods.forEach(farmer =&gt; {&#10;      console.log(`- ${farmer.name} (${farmer._id}):`);&#10;      console.log(`  Email: ${farmer.email}`);&#10;      console.log(`  Farm: ${farmer.farmName || 'N/A'}`);&#10;      console.log(`  Farming Methods: [${farmer.farmingMethods.join(', ')}]`);&#10;      console.log(`  Method Count: ${farmer.farmingMethods.length}`);&#10;      console.log('');&#10;    });&#10;&#10;    // Show farmers WITHOUT farming methods&#10;    console.log(`3. ❌ FARMERS WITHOUT FARMING METHODS (${farmersWithoutMethods.length}):`);&#10;    farmersWithoutMethods.forEach(farmer =&gt; {&#10;      console.log(`- ${farmer.name} (${farmer._id}):`);&#10;      console.log(`  Email: ${farmer.email}`);&#10;      console.log(`  Farm: ${farmer.farmName || 'N/A'}`);&#10;      console.log(`  Farming Methods: ${farmer.farmingMethods || 'undefined'}`);&#10;      console.log('');&#10;    });&#10;&#10;    // Check for different data patterns&#10;    console.log(&quot;4.  DETAILED FARMING METHODS ANALYSIS:&quot;);&#10;    &#10;    const methodCounts = {};&#10;    const uniqueMethods = new Set();&#10;&#10;    farmersWithMethods.forEach(farmer =&gt; {&#10;      farmer.farmingMethods.forEach(method =&gt; {&#10;        uniqueMethods.add(method);&#10;        methodCounts[method] = (methodCounts[method] || 0) + 1;&#10;      });&#10;    });&#10;&#10;    console.log(&quot;Unique farming methods found:&quot;);&#10;    Array.from(uniqueMethods).sort().forEach(method =&gt; {&#10;      console.log(`  - &quot;${method}&quot; (used by ${methodCounts[method]} farmer(s))`);&#10;    });&#10;&#10;    // Check for empty arrays or null values&#10;    console.log(&quot;\n5.  CHECKING FOR EDGE CASES:&quot;);&#10;    &#10;    const emptyArrayFarmers = allFarmers.filter(farmer =&gt; &#10;      farmer.farmingMethods &amp;&amp; &#10;      Array.isArray(farmer.farmingMethods) &amp;&amp; &#10;      farmer.farmingMethods.length === 0&#10;    );&#10;    &#10;    const nullMethodsFarmers = allFarmers.filter(farmer =&gt; &#10;      farmer.farmingMethods === null&#10;    );&#10;    &#10;    const undefinedMethodsFarmers = allFarmers.filter(farmer =&gt; &#10;      farmer.farmingMethods === undefined&#10;    );&#10;&#10;    console.log(`Farmers with empty farming methods array: ${emptyArrayFarmers.length}`);&#10;    emptyArrayFarmers.forEach(farmer =&gt; {&#10;      console.log(`  - ${farmer.name} (${farmer._id}): []`);&#10;    });&#10;&#10;    console.log(`Farmers with null farming methods: ${nullMethodsFarmers.length}`);&#10;    nullMethodsFarmers.forEach(farmer =&gt; {&#10;      console.log(`  - ${farmer.name} (${farmer._id}): null`);&#10;    });&#10;&#10;    console.log(`Farmers with undefined farming methods: ${undefinedMethodsFarmers.length}`);&#10;    undefinedMethodsFarmers.forEach(farmer =&gt; {&#10;      console.log(`  - ${farmer.name} (${farmer._id}): undefined`);&#10;    });&#10;&#10;    // Check if any farmers have farming methods in their products instead&#10;    console.log(&quot;\n6.  CHECKING PRODUCTS FOR FARMING METHODS:&quot;);&#10;    &#10;    const productsWithMethods = await db.collection(&quot;products&quot;).find({&#10;      farmingMethods: { $exists: true, $ne: null }&#10;    }).toArray();&#10;&#10;    console.log(`Products with farming methods: ${productsWithMethods.length}`);&#10;    productsWithMethods.forEach(product =&gt; {&#10;      console.log(`  - ${product.name} (Farmer: ${product.farmerName || product.farmer?.name}):`);&#10;      console.log(`    Methods: ${product.farmingMethods}`);&#10;    });&#10;&#10;    // Summary statistics&#10;    console.log(&quot;\n7.  SUMMARY STATISTICS:&quot;);&#10;    console.log(`Total Farmers: ${allFarmers.length}`);&#10;    console.log(`Farmers with farming methods: ${farmersWithMethods.length} (${((farmersWithMethods.length/allFarmers.length)*100).toFixed(1)}%)`);&#10;    console.log(`Farmers without farming methods: ${farmersWithoutMethods.length} (${((farmersWithoutMethods.length/allFarmers.length)*100).toFixed(1)}%)`);&#10;    console.log(`Total unique farming methods: ${uniqueMethods.size}`);&#10;    console.log(`Most common farming method: ${Object.entries(methodCounts).sort((a,b) =&gt; b[1] - a[1])[0]?.[0] || 'None'}`);&#10;&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;checkFarmerFarmingMethods().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/check-mismatch.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/check-mismatch.js" />
              <option name="updatedContent" value="// Simple script to check the review-product mismatch&#10;const { MongoClient } = require('mongodb');&#10;&#10;async function checkMismatch() {&#10;  const client = new MongoClient('mongodb://localhost:27017');&#10;  await client.connect();&#10;  const db = client.db('farmfresh');&#10;  &#10;  console.log(' Checking product-review mismatch...\n');&#10;  &#10;  // Get all products&#10;  const products = await db.collection('products').find({}).toArray();&#10;  console.log(` Total products: ${products.length}`);&#10;  console.log('Product IDs:', products.slice(0, 5).map(p =&gt; p._id.toString()));&#10;  &#10;  // Get all reviews  &#10;  const reviews = await db.collection('reviews').find({}).toArray();&#10;  console.log(`\n Total reviews: ${reviews.length}`);&#10;  console.log('Review product IDs:', reviews.map(r =&gt; r.productId));&#10;  &#10;  // Check for matches&#10;  const productIds = products.map(p =&gt; p._id.toString());&#10;  const reviewProductIds = reviews.map(r =&gt; r.productId);&#10;  &#10;  const matches = productIds.filter(pid =&gt; reviewProductIds.includes(pid));&#10;  console.log(`\n✅ Matching product-review pairs: ${matches.length}`);&#10;  &#10;  if (matches.length &gt; 0) {&#10;    console.log('Matched IDs:', matches);&#10;    &#10;    // Show which products have reviews&#10;    for (const matchId of matches) {&#10;      const product = products.find(p =&gt; p._id.toString() === matchId);&#10;      const productReviews = reviews.filter(r =&gt; r.productId === matchId);&#10;      console.log(`- ${product.name}: ${productReviews.length} reviews`);&#10;    }&#10;  } else {&#10;    console.log('\n❌ No matches found!');&#10;    console.log('This means the existing reviews belong to products that no longer exist');&#10;    console.log('or have different IDs than the current products in the database');&#10;  }&#10;  &#10;  await client.close();&#10;}&#10;&#10;checkMismatch().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/check-nested-farming-methods.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/check-nested-farming-methods.js" />
              <option name="updatedContent" value="const { MongoClient, ObjectId } = require(&quot;mongodb&quot;);&#10;&#10;async function checkNestedFarmingMethods() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017/farmfresh&quot;);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot; CHECKING NESTED FARMING METHODS DATA\n&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Get all farmers and check nested farmInfo.farmingMethods&#10;    console.log(&quot;1.  CHECKING farmer.farmInfo.farmingMethods:&quot;);&#10;    const allFarmers = await db.collection(&quot;farmers&quot;).find({}).toArray();&#10;&#10;    const farmersWithNestedMethods = [];&#10;    const farmersWithoutNestedMethods = [];&#10;&#10;    allFarmers.forEach(farmer =&gt; {&#10;      const hasNestedMethods = farmer.farmInfo?.farmingMethods &amp;&amp; &#10;                              Array.isArray(farmer.farmInfo.farmingMethods) &amp;&amp; &#10;                              farmer.farmInfo.farmingMethods.length &gt; 0;&#10;&#10;      if (hasNestedMethods) {&#10;        farmersWithNestedMethods.push(farmer);&#10;      } else {&#10;        farmersWithoutNestedMethods.push(farmer);&#10;      }&#10;&#10;      // Log all farmers and their nested structure&#10;      console.log(`- ${farmer.name || 'unnamed'} (${farmer._id}):`);&#10;      console.log(`  farmInfo exists: ${!!farmer.farmInfo}`);&#10;      if (farmer.farmInfo) {&#10;        console.log(`  farmInfo.farmingMethods: ${farmer.farmInfo.farmingMethods || 'undefined'}`);&#10;        console.log(`  farmInfo keys: [${Object.keys(farmer.farmInfo).join(', ')}]`);&#10;      }&#10;      console.log('');&#10;    });&#10;&#10;    // Show farmers WITH nested farming methods&#10;    console.log(`\n2. ✅ FARMERS WITH NESTED FARMING METHODS (${farmersWithNestedMethods.length}):`);&#10;    farmersWithNestedMethods.forEach(farmer =&gt; {&#10;      console.log(`- ${farmer.name} (${farmer._id}):`);&#10;      console.log(`  farmInfo.farmingMethods: [${farmer.farmInfo.farmingMethods.join(', ')}]`);&#10;      console.log('');&#10;    });&#10;&#10;    // Check for other farmInfo fields that might contain farming data&#10;    console.log(&quot;3.  CHECKING OTHER FARMINFO FIELDS:&quot;);&#10;    allFarmers.forEach(farmer =&gt; {&#10;      if (farmer.farmInfo &amp;&amp; Object.keys(farmer.farmInfo).length &gt; 0) {&#10;        console.log(`- ${farmer.name} (${farmer._id}) farmInfo contains:`);&#10;        Object.entries(farmer.farmInfo).forEach(([key, value]) =&gt; {&#10;          console.log(`  ${key}: ${Array.isArray(value) ? `[${value.join(', ')}]` : value}`);&#10;        });&#10;        console.log('');&#10;      }&#10;    });&#10;&#10;    // Check if any farmers have hardcoded methods in the profile calculation&#10;    console.log(&quot;4.  CHECKING FOR PATTERNS IN FARMER DATA:&quot;);&#10;    &#10;    // Look for farmers who might have specializations that could be used as farming methods&#10;    const farmersWithSpecializations = allFarmers.filter(farmer =&gt; &#10;      farmer.specializations &amp;&amp; Array.isArray(farmer.specializations) &amp;&amp; farmer.specializations.length &gt; 0&#10;    );&#10;&#10;    console.log(`Farmers with specializations: ${farmersWithSpecializations.length}`);&#10;    farmersWithSpecializations.forEach(farmer =&gt; {&#10;      console.log(`- ${farmer.name}: [${farmer.specializations.join(', ')}]`);&#10;    });&#10;&#10;    // Check for any farming-related fields&#10;    console.log(&quot;\n5.  CHECKING ALL FARMER FIELDS FOR FARMING-RELATED DATA:&quot;);&#10;    allFarmers.forEach(farmer =&gt; {&#10;      const allFields = Object.keys(farmer);&#10;      const farmingFields = allFields.filter(field =&gt; &#10;        field.toLowerCase().includes('farm') || &#10;        field.toLowerCase().includes('method') || &#10;        field.toLowerCase().includes('practice') ||&#10;        field.toLowerCase().includes('organic') ||&#10;        field.toLowerCase().includes('sustainable')&#10;      );&#10;      &#10;      if (farmingFields.length &gt; 0) {&#10;        console.log(`- ${farmer.name} has farming-related fields: [${farmingFields.join(', ')}]`);&#10;        farmingFields.forEach(field =&gt; {&#10;          const value = farmer[field];&#10;          console.log(`  ${field}: ${Array.isArray(value) ? `[${value.join(', ')}]` : value}`);&#10;        });&#10;        console.log('');&#10;      }&#10;    });&#10;&#10;    // Summary&#10;    console.log(&quot;6.  SUMMARY:&quot;);&#10;    console.log(`Total farmers: ${allFarmers.length}`);&#10;    console.log(`Farmers with farmInfo: ${allFarmers.filter(f =&gt; f.farmInfo).length}`);&#10;    console.log(`Farmers with farmInfo.farmingMethods: ${farmersWithNestedMethods.length}`);&#10;    console.log(`Farmers with specializations: ${farmersWithSpecializations.length}`);&#10;&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;checkNestedFarmingMethods().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/clear-products-cache.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/clear-products-cache.js" />
              <option name="originalContent" value="&#10;        &quot; Manual cache clear: The cache will expire automatically in 5 minutes&quot;,&#10;      );&#10;    }&#10;&#10;    console.log(&quot;\n✅ Cache clearing process completed&quot;);&#10;    console.log(&#10;      &quot; If the issue persists, wait 5 minutes for cache TTL to expire or restart the Next.js server&quot;,&#10;    );&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot; Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;clearCacheAndVerify().catch(console.error);&#10;" />
              <option name="updatedContent" value="// Clear products cache to fix Green Beans display issue&#10;// This script will clear the response cache and force fresh data fetch&#10;&#10;const { MongoClient } = require(&quot;mongodb&quot;);&#10;&#10;// Use local MongoDB connection like the other debug files&#10;const MONGODB_URI = &quot;mongodb://localhost:27017/farmfresh&quot;;&#10;&#10;async function clearCacheAndVerify() {&#10;  console.log(&quot; Clearing products cache and verifying data...&quot;);&#10;&#10;  const client = new MongoClient(MONGODB_URI);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot;✅ Connected to MongoDB&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Check current Green Beans data&#10;    console.log(&quot;\n CHECKING CURRENT GREEN BEANS DATA:&quot;);&#10;    const greenBeans = await db.collection(&quot;products&quot;).findOne({&#10;      name: &quot;Green Beans&quot;,&#10;    });&#10;&#10;    if (greenBeans) {&#10;      console.log(&quot;Product Name:&quot;, greenBeans.name);&#10;      console.log(&quot;farmerId:&quot;, greenBeans.farmerId);&#10;      console.log(&quot;farmerEmail:&quot;, greenBeans.farmerEmail);&#10;      console.log(&quot;farmerName:&quot;, greenBeans.farmerName);&#10;      console.log(&quot;Embedded farmer._id:&quot;, greenBeans.farmer?._id);&#10;      console.log(&quot;Embedded farmer.name:&quot;, greenBeans.farmer?.name);&#10;      console.log(&quot;Embedded farmer.email:&quot;, greenBeans.farmer?.email);&#10;    } else {&#10;      console.log(&quot;❌ Green Beans not found&quot;);&#10;    }&#10;&#10;    // Check Mostafa's current products&#10;    console.log(&quot;\n MOSTAFA'S CURRENT PRODUCTS:&quot;);&#10;    const mostafaProducts = await db&#10;      .collection(&quot;products&quot;)&#10;      .find({&#10;        $or: [&#10;          { farmerId: &quot;farmer_006&quot; },&#10;          { &quot;farmer._id&quot;: &quot;farmer_006&quot; },&#10;          { farmerName: &quot;Mostafa Kabir&quot; },&#10;        ],&#10;      })&#10;      .toArray();&#10;&#10;    console.log(`Found ${mostafaProducts.length} products for Mostafa Kabir:`);&#10;    mostafaProducts.forEach((product) =&gt; {&#10;      console.log(`- ${product.name} (farmerId: ${product.farmerId})`);&#10;    });&#10;&#10;    // Check Mizanur's current products&#10;    console.log(&quot;\n MIZANUR'S CURRENT PRODUCTS:&quot;);&#10;    const mizanurProducts = await db&#10;      .collection(&quot;products&quot;)&#10;      .find({&#10;        $or: [&#10;          { farmerId: &quot;farmer_005&quot; },&#10;          { &quot;farmer._id&quot;: &quot;farmer_005&quot; },&#10;          { farmerName: &quot;Mizanur Rahman&quot; },&#10;        ],&#10;      })&#10;      .toArray();&#10;&#10;    console.log(`Found ${mizanurProducts.length} products for Mizanur Rahman:`);&#10;    mizanurProducts.forEach((product) =&gt; {&#10;      console.log(`- ${product.name} (farmerId: ${product.farmerId})`);&#10;    });&#10;&#10;    // Make HTTP request to clear API cache&#10;    console.log(&quot;\n Clearing API cache...&quot;);&#10;    try {&#10;      // This will trigger a fresh database query and clear the response cache&#10;      const response = await fetch(&#10;        &quot;http://localhost:3000/api/products?clearCache=true&amp;limit=1000&quot;,&#10;        {&#10;          headers: {&#10;            &quot;Cache-Control&quot;: &quot;no-cache&quot;,&#10;            Pragma: &quot;no-cache&quot;,&#10;          },&#10;        },&#10;      );&#10;&#10;      if (response.ok) {&#10;        console.log(&quot;✅ API cache cleared successfully&quot;);&#10;      } else {&#10;        console.log(&quot;⚠️  API cache clear request failed:&quot;, response.status);&#10;      }&#10;    } catch (error) {&#10;      console.log(&#10;        &quot;⚠️  Could not clear API cache via HTTP (server may be down):&quot;,&#10;        error.message,&#10;      );&#10;      console.log(&#10;        &quot; Manual cache clear: The cache will expire automatically in 5 minutes&quot;,&#10;      );&#10;    }&#10;&#10;    console.log(&quot;\n✅ Cache clearing process completed&quot;);&#10;    console.log(&#10;      &quot; If the issue persists, wait 5 minutes for cache TTL to expire or restart the Next.js server&quot;,&#10;    );&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot; Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;clearCacheAndVerify().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/AnalyticsLoadingSkeleton.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/AnalyticsLoadingSkeleton.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;export default function AnalyticsLoadingSkeleton() {&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-green-50 to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;      {/* Custom CSS animations for analytics */}&#10;      &lt;style jsx&gt;{`&#10;        @keyframes analyticsShimmer {&#10;          0% {&#10;            transform: translateX(-100%);&#10;          }&#10;          100% {&#10;            transform: translateX(100%);&#10;          }&#10;        }&#10;&#10;        @keyframes chartPulse {&#10;          0%,&#10;          100% {&#10;            opacity: 0.4;&#10;          }&#10;          50% {&#10;            opacity: 0.8;&#10;          }&#10;        }&#10;&#10;        @keyframes cardFloat {&#10;          0%,&#10;          100% {&#10;            transform: translateY(0px);&#10;          }&#10;          50% {&#10;            transform: translateY(-5px);&#10;          }&#10;        }&#10;&#10;        .animate-analytics-shimmer {&#10;          animation: analyticsShimmer 2s infinite;&#10;        }&#10;&#10;        .animate-chart-pulse {&#10;          animation: chartPulse 2s ease-in-out infinite;&#10;        }&#10;&#10;        .animate-card-float {&#10;          animation: cardFloat 3s ease-in-out infinite;&#10;        }&#10;      `}&lt;/style&gt;&#10;&#10;      {/* Enhanced Header Skeleton */}&#10;      &lt;div className=&quot;bg-white dark:bg-gray-800 shadow-2xl border-b border-gray-200 dark:border-gray-700&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8&quot;&gt;&#10;          &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center gap-6&quot;&gt;&#10;            &lt;div&gt;&#10;              &lt;div className=&quot;h-12 bg-gradient-to-r from-gray-300 to-gray-400 dark:from-gray-600 dark:to-gray-500 rounded-xl w-96 animate-chart-pulse mb-2&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;h-5 bg-gray-200 dark:bg-gray-600 rounded w-80 animate-pulse&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;flex flex-col gap-4&quot;&gt;&#10;              {/* Chart Type Selector Skeleton */}&#10;              &lt;div className=&quot;flex gap-3&quot;&gt;&#10;                {[1, 2, 3, 4].map((i) =&gt; (&#10;                  &lt;div&#10;                    key={i}&#10;                    className=&quot;h-10 bg-gray-200 dark:bg-gray-700 rounded-lg w-20 animate-pulse&quot;&#10;                    style={{ animationDelay: `${i * 100}ms` }}&#10;                  &gt;&lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;&#10;              {/* Time Range Selector Skeleton */}&#10;              &lt;div className=&quot;flex gap-3&quot;&gt;&#10;                {[1, 2, 3, 4, 5].map((i) =&gt; (&#10;                  &lt;div&#10;                    key={i}&#10;                    className=&quot;h-10 bg-gray-200 dark:bg-gray-700 rounded-lg w-16 animate-pulse&quot;&#10;                    style={{ animationDelay: `${i * 80}ms` }}&#10;                  &gt;&lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-8&quot;&gt;&#10;        {/* Summary Cards Skeleton */}&#10;        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6&quot;&gt;&#10;          {[&#10;            {&#10;              color: &quot;from-green-50 to-green-100&quot;,&#10;              darkColor: &quot;dark:from-green-900/20 dark:to-green-800/20&quot;,&#10;              borderColor: &quot;border-green-200 dark:border-green-700&quot;,&#10;            },&#10;            {&#10;              color: &quot;from-blue-50 to-blue-100&quot;,&#10;              darkColor: &quot;dark:from-blue-900/20 dark:to-blue-800/20&quot;,&#10;              borderColor: &quot;border-blue-200 dark:border-blue-700&quot;,&#10;            },&#10;            {&#10;              color: &quot;from-purple-50 to-purple-100&quot;,&#10;              darkColor: &quot;dark:from-purple-900/20 dark:to-purple-800/20&quot;,&#10;              borderColor: &quot;border-purple-200 dark:border-purple-700&quot;,&#10;            },&#10;            {&#10;              color: &quot;from-orange-50 to-orange-100&quot;,&#10;              darkColor: &quot;dark:from-orange-900/20 dark:to-orange-800/20&quot;,&#10;              borderColor: &quot;border-orange-200 dark:border-orange-700&quot;,&#10;            },&#10;            {&#10;              color: &quot;from-pink-50 to-pink-100&quot;,&#10;              darkColor: &quot;dark:from-pink-900/20 dark:to-pink-800/20&quot;,&#10;              borderColor: &quot;border-pink-200 dark:border-pink-700&quot;,&#10;            },&#10;          ].map((card, i) =&gt; (&#10;            &lt;div&#10;              key={i}&#10;              className={`bg-gradient-to-br ${card.color} ${card.darkColor} rounded-3xl p-6 shadow-xl border ${card.borderColor} animate-card-float`}&#10;              style={{ animationDelay: `${i * 200}ms` }}&#10;            &gt;&#10;              &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                &lt;div className=&quot;flex-1&quot;&gt;&#10;                  &lt;div className=&quot;h-4 bg-gray-300 dark:bg-gray-600 rounded w-20 mb-3 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-8 bg-gray-400 dark:bg-gray-500 rounded w-16 mb-2 animate-chart-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-3 bg-gray-300 dark:bg-gray-600 rounded w-24 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;p-4 bg-gray-200 dark:bg-gray-700 rounded-2xl&quot;&gt;&#10;                  &lt;div className=&quot;w-6 h-6 bg-gray-400 dark:bg-gray-500 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;&#10;        {/* Charts Grid Skeleton */}&#10;        &lt;div className=&quot;grid grid-cols-1 xl:grid-cols-2 gap-8&quot;&gt;&#10;          {[1, 2, 3, 4].map((i) =&gt; (&#10;            &lt;div&#10;              key={i}&#10;              className=&quot;bg-white dark:bg-gray-800 rounded-3xl p-6 shadow-2xl border border-gray-200 dark:border-gray-700 animate-card-float&quot;&#10;              style={{ animationDelay: `${i * 150}ms` }}&#10;            &gt;&#10;              &lt;div className=&quot;flex items-center mb-6&quot;&gt;&#10;                &lt;div className=&quot;w-6 h-6 bg-gray-400 dark:bg-gray-500 rounded mr-3 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-6 bg-gray-300 dark:bg-gray-600 rounded w-48 animate-pulse&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;relative h-96 bg-gray-100 dark:bg-gray-700 rounded-2xl overflow-hidden&quot;&gt;&#10;                {/* Chart skeleton with animated elements */}&#10;                &lt;div className=&quot;absolute inset-0 flex items-end justify-around p-4&quot;&gt;&#10;                  {[...Array(8)].map((_, j) =&gt; (&#10;                    &lt;div&#10;                      key={j}&#10;                      className=&quot;bg-gray-300 dark:bg-gray-600 rounded-t animate-chart-pulse&quot;&#10;                      style={{&#10;                        height: `${Math.random() * 60 + 20}%`,&#10;                        width: &quot;8%&quot;,&#10;                        animationDelay: `${j * 100}ms`,&#10;                      }}&#10;                    &gt;&lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;                {/* Shimmer overlay */}&#10;                &lt;div className=&quot;absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent animate-analytics-shimmer&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;export default function AnalyticsLoadingSkeleton() {&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 via-green-50 to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900&quot;&gt;&#10;      {/* Custom CSS animations for analytics */}&#10;      &lt;style jsx&gt;{`&#10;        @keyframes analyticsShimmer {&#10;          0% {&#10;            transform: translateX(-100%);&#10;          }&#10;          100% {&#10;            transform: translateX(100%);&#10;          }&#10;        }&#10;&#10;        @keyframes chartPulse {&#10;          0%,&#10;          100% {&#10;            opacity: 0.4;&#10;          }&#10;          50% {&#10;            opacity: 0.8;&#10;          }&#10;        }&#10;&#10;        @keyframes cardFloat {&#10;          0%,&#10;          100% {&#10;            transform: translateY(0px);&#10;          }&#10;          50% {&#10;            transform: translateY(-5px);&#10;          }&#10;        }&#10;&#10;        .animate-analytics-shimmer {&#10;          animation: analyticsShimmer 2s infinite;&#10;        }&#10;&#10;        .animate-chart-pulse {&#10;          animation: chartPulse 2s ease-in-out infinite;&#10;        }&#10;&#10;        .animate-card-float {&#10;          animation: cardFloat 3s ease-in-out infinite;&#10;        }&#10;      `}&lt;/style&gt;&#10;&#10;      {/* Enhanced Header Skeleton */}&#10;      &lt;div className=&quot;bg-white dark:bg-gray-800 shadow-2xl border-b border-gray-200 dark:border-gray-700&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8&quot;&gt;&#10;          &lt;div className=&quot;flex flex-col lg:flex-row justify-between items-start lg:items-center gap-6&quot;&gt;&#10;            &lt;div&gt;&#10;              &lt;div className=&quot;h-12 bg-gradient-to-r from-gray-300 to-gray-400 dark:from-gray-600 dark:to-gray-500 rounded-xl w-96 animate-chart-pulse mb-2&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;h-5 bg-gray-200 dark:bg-gray-600 rounded w-80 animate-pulse&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;flex flex-col gap-4&quot;&gt;&#10;              {/* Chart Type Selector Skeleton */}&#10;              &lt;div className=&quot;flex gap-3&quot;&gt;&#10;                {[1, 2, 3, 4].map((i) =&gt; (&#10;                  &lt;div&#10;                    key={i}&#10;                    className=&quot;h-10 bg-gray-200 dark:bg-gray-700 rounded-lg w-20 animate-pulse&quot;&#10;                    style={{ animationDelay: `${i * 100}ms` }}&#10;                  &gt;&lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;&#10;              {/* Time Range Selector Skeleton */}&#10;              &lt;div className=&quot;flex gap-3&quot;&gt;&#10;                {[1, 2, 3, 4, 5].map((i) =&gt; (&#10;                  &lt;div&#10;                    key={i}&#10;                    className=&quot;h-10 bg-gray-200 dark:bg-gray-700 rounded-lg w-16 animate-pulse&quot;&#10;                    style={{ animationDelay: `${i * 80}ms` }}&#10;                  &gt;&lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-8&quot;&gt;&#10;        {/* Summary Cards Skeleton */}&#10;        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6&quot;&gt;&#10;          {[&#10;            {&#10;              color: &quot;from-green-50 to-green-100&quot;,&#10;              darkColor: &quot;dark:from-green-900/20 dark:to-green-800/20&quot;,&#10;              borderColor: &quot;border-green-200 dark:border-green-700&quot;,&#10;            },&#10;            {&#10;              color: &quot;from-blue-50 to-blue-100&quot;,&#10;              darkColor: &quot;dark:from-blue-900/20 dark:to-blue-800/20&quot;,&#10;              borderColor: &quot;border-blue-200 dark:border-blue-700&quot;,&#10;            },&#10;            {&#10;              color: &quot;from-purple-50 to-purple-100&quot;,&#10;              darkColor: &quot;dark:from-purple-900/20 dark:to-purple-800/20&quot;,&#10;              borderColor: &quot;border-purple-200 dark:border-purple-700&quot;,&#10;            },&#10;            {&#10;              color: &quot;from-orange-50 to-orange-100&quot;,&#10;              darkColor: &quot;dark:from-orange-900/20 dark:to-orange-800/20&quot;,&#10;              borderColor: &quot;border-orange-200 dark:border-orange-700&quot;,&#10;            },&#10;            {&#10;              color: &quot;from-pink-50 to-pink-100&quot;,&#10;              darkColor: &quot;dark:from-pink-900/20 dark:to-pink-800/20&quot;,&#10;              borderColor: &quot;border-pink-200 dark:border-pink-700&quot;,&#10;            },&#10;          ].map((card, i) =&gt; (&#10;            &lt;div&#10;              key={i}&#10;              className={`bg-gradient-to-br ${card.color} ${card.darkColor} rounded-3xl p-6 shadow-xl border ${card.borderColor} animate-card-float`}&#10;              style={{ animationDelay: `${i * 200}ms` }}&#10;            &gt;&#10;              &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                &lt;div className=&quot;flex-1&quot;&gt;&#10;                  &lt;div className=&quot;h-4 bg-gray-300 dark:bg-gray-600 rounded w-20 mb-3 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-8 bg-gray-400 dark:bg-gray-500 rounded w-16 mb-2 animate-chart-pulse&quot;&gt;&lt;/div&gt;&#10;                  &lt;div className=&quot;h-3 bg-gray-300 dark:bg-gray-600 rounded w-24 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;p-4 bg-gray-200 dark:bg-gray-700 rounded-2xl&quot;&gt;&#10;                  &lt;div className=&quot;w-6 h-6 bg-gray-400 dark:bg-gray-500 rounded animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;&#10;        {/* Charts Grid Skeleton */}&#10;        &lt;div className=&quot;grid grid-cols-1 xl:grid-cols-2 gap-8&quot;&gt;&#10;          {[1, 2, 3, 4].map((i) =&gt; (&#10;            &lt;div&#10;              key={i}&#10;              className=&quot;bg-white dark:bg-gray-800 rounded-3xl p-6 shadow-2xl border border-gray-200 dark:border-gray-700 animate-card-float&quot;&#10;              style={{ animationDelay: `${i * 150}ms` }}&#10;            &gt;&#10;              &lt;div className=&quot;flex items-center mb-6&quot;&gt;&#10;                &lt;div className=&quot;w-6 h-6 bg-gray-400 dark:bg-gray-500 rounded mr-3 animate-pulse&quot;&gt;&lt;/div&gt;&#10;                &lt;div className=&quot;h-6 bg-gray-300 dark:bg-gray-600 rounded w-48 animate-pulse&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;relative h-96 bg-gray-100 dark:bg-gray-700 rounded-2xl overflow-hidden&quot;&gt;&#10;                {/* Chart skeleton with fixed heights to prevent hydration mismatch */}&#10;                &lt;div className=&quot;absolute inset-0 flex items-end justify-around p-4&quot;&gt;&#10;                  {[65, 45, 80, 35, 55, 40, 70, 50].map((height, j) =&gt; (&#10;                    &lt;div&#10;                      key={j}&#10;                      className=&quot;bg-gray-300 dark:bg-gray-600 rounded-t animate-chart-pulse&quot;&#10;                      style={{&#10;                        height: `${height}%`,&#10;                        width: &quot;8%&quot;,&#10;                        animationDelay: `${j * 100}ms`,&#10;                      }}&#10;                    &gt;&lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;                {/* Shimmer overlay */}&#10;                &lt;div className=&quot;absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent animate-analytics-shimmer&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/FarmerProfileView.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/FarmerProfileView.js" />
              <option name="originalContent" value="import Link from &quot;next/link&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;&#10;const FarmerProfileView = ({ farmer, farmerProducts }) =&gt; (&#10;  &lt;&gt;&#10;    &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;div className=&quot;bg-gradient-to-r from-green-600 to-emerald-600 rounded-2xl shadow-lg p-8 mb-8 text-white&quot;&gt;&#10;          &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;            &lt;div&gt;&#10;              &lt;h1 className=&quot;text-3xl font-bold mb-2&quot;&gt;{farmer.name}&lt;/h1&gt;&#10;              &lt;p className=&quot;text-green-100 mb-4&quot;&gt;{farmer.email}&lt;/p&gt;&#10;              &lt;div className=&quot;flex items-center space-x-4 text-sm&quot;&gt;&#10;                &lt;span className=&quot;flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-map-marker-alt mr-1&quot;&gt;&lt;/i&gt;&#10;                  {farmer.location || &quot;Location not specified&quot;}&#10;                &lt;/span&gt;&#10;                &lt;span className=&quot;flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-phone mr-1&quot;&gt;&lt;/i&gt;&#10;                  {farmer.phone || &quot;Phone not specified&quot;}&#10;                &lt;/span&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;text-right&quot;&gt;&#10;              &lt;div className=&quot;text-sm text-green-100 mb-1&quot;&gt;&#10;                Products Available&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;text-2xl font-bold&quot;&gt;{farmerProducts.length}&lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;mb-8&quot;&gt;&#10;          &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-6&quot;&gt;&#10;            Products from {farmer.name}&#10;          &lt;/h2&gt;&#10;&#10;          {farmerProducts.length &gt; 0 ? (&#10;            &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6&quot;&gt;&#10;              {farmerProducts.map((product) =&gt; (&#10;                &lt;ProductCard key={product._id} product={product} /&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          ) : (&#10;            &lt;div className=&quot;text-center py-12 bg-white dark:bg-gray-800 rounded-2xl shadow-lg&quot;&gt;&#10;              &lt;div className=&quot;w-16 h-16 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#10;                &lt;i className=&quot;fas fa-seedling text-2xl text-gray-400&quot;&gt;&lt;/i&gt;&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-lg font-medium text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                No Products Available&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                This farmer hasn&amp;apos;t listed any products yet.&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#10;          &lt;Link&#10;            href=&quot;/products&quot;&#10;            className=&quot;inline-flex items-center text-primary-600 hover:text-primary-700 font-medium&quot;&#10;          &gt;&#10;            &lt;i className=&quot;fas fa-arrow-left mr-2&quot;&gt;&lt;/i&gt;&#10;            Browse All Products&#10;          &lt;/Link&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;    &lt;Footer /&gt;&#10;  &lt;/&gt;&#10;);&#10;&#10;export default FarmerProfileView;&#10;" />
              <option name="updatedContent" value="import Link from &quot;next/link&quot;;&#13;&#10;import Footer from &quot;@/components/Footer&quot;;&#13;&#10;import ProductCard from &quot;./ProductCard&quot;;&#13;&#10;&#13;&#10;const FarmerProfileView = ({ farmer, farmerProducts }) =&gt; (&#13;&#10;  &lt;&gt;&#13;&#10;    &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#13;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#13;&#10;        &lt;div className=&quot;bg-gradient-to-r from-green-600 to-emerald-600 rounded-2xl shadow-lg p-8 mb-8 text-white&quot;&gt;&#13;&#10;          &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#13;&#10;            &lt;div&gt;&#13;&#10;              &lt;h1 className=&quot;text-3xl font-bold mb-2&quot;&gt;{farmer.name}&lt;/h1&gt;&#13;&#10;              &lt;p className=&quot;text-green-100 mb-4&quot;&gt;{farmer.email}&lt;/p&gt;&#13;&#10;              &lt;div className=&quot;flex items-center space-x-4 text-sm&quot;&gt;&#13;&#10;                &lt;span className=&quot;flex items-center&quot;&gt;&#13;&#10;                  &lt;i className=&quot;fas fa-map-marker-alt mr-1&quot;&gt;&lt;/i&gt;&#13;&#10;                  {farmer.location || &quot;Location not specified&quot;}&#13;&#10;                &lt;/span&gt;&#13;&#10;                &lt;span className=&quot;flex items-center&quot;&gt;&#13;&#10;                  &lt;i className=&quot;fas fa-phone mr-1&quot;&gt;&lt;/i&gt;&#13;&#10;                  {farmer.phone || &quot;Phone not specified&quot;}&#13;&#10;                &lt;/span&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &lt;div className=&quot;text-right&quot;&gt;&#13;&#10;              &lt;div className=&quot;text-sm text-green-100 mb-1&quot;&gt;&#13;&#10;                Products Available&#13;&#10;              &lt;/div&gt;&#13;&#10;              &lt;div className=&quot;text-2xl font-bold&quot;&gt;{farmerProducts.length}&lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div className=&quot;mb-8&quot;&gt;&#13;&#10;          &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-6&quot;&gt;&#13;&#10;            Products from {farmer.name}&#13;&#10;          &lt;/h2&gt;&#13;&#10;&#13;&#10;          {farmerProducts.length &gt; 0 ? (&#13;&#10;            &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6&quot;&gt;&#13;&#10;              {farmerProducts.map((product) =&gt; (&#13;&#10;                &lt;ProductCard key={product._id} product={product} /&gt;&#13;&#10;              ))}&#13;&#10;            &lt;/div&gt;&#13;&#10;          ) : (&#13;&#10;            &lt;div className=&quot;text-center py-12 bg-white dark:bg-gray-800 rounded-2xl shadow-lg&quot;&gt;&#13;&#10;              &lt;div className=&quot;w-16 h-16 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-4&quot;&gt;&#13;&#10;                &lt;i className=&quot;fas fa-seedling text-2xl text-gray-400&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;              &lt;h3 className=&quot;text-lg font-medium text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;                No Products Available&#13;&#10;              &lt;/h3&gt;&#13;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                This farmer hasn&amp;apos;t listed any products yet.&#13;&#10;              &lt;/p&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          )}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;          &lt;Link&#13;&#10;            href=&quot;/products&quot;&#13;&#10;            className=&quot;inline-flex items-center text-primary-600 hover:text-primary-700 font-medium&quot;&#13;&#10;          &gt;&#13;&#10;            &lt;i className=&quot;fas fa-arrow-left mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;            Browse All Products&#13;&#10;          &lt;/Link&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;    &lt;Footer /&gt;&#13;&#10;  &lt;/&gt;&#13;&#10;);&#13;&#10;&#13;&#10;export default FarmerProfileView;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/Navigation.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/Navigation.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import Link from &quot;next/link&quot;;&#10;import { useAuth } from &quot;@/contexts/AuthContext&quot;;&#10;import { useTheme } from &quot;@/contexts/ThemeContext&quot;;&#10;import { useFavorites } from &quot;@/contexts/FavoritesContext&quot;;&#10;import { useCart } from &quot;@/contexts/CartContext&quot;;&#10;import { useMessaging } from &quot;@/contexts/MessagingContext&quot;;&#10;import { signOut } from &quot;next-auth/react&quot;;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { usePathname, useRouter } from &quot;next/navigation&quot;;&#10;&#10;export default function Navigation() {&#10;  const { user, isAuthenticated, logout, updateUser } = useAuth();&#10;  const { isDarkMode, toggleDarkMode, isLoaded } = useTheme();&#10;  const { favorites } = useFavorites();&#10;  const { cartItems, cartCount } = useCart();&#10;  const { totalUnreadCount } = useMessaging();&#10;  const [showUserMenu, setShowUserMenu] = useState(false);&#10;  const [updatedUserName, setUpdatedUserName] = useState(user?.name || &quot;&quot;);&#10;  const [isMounted, setIsMounted] = useState(false);&#10;  const pathname = usePathname();&#10;  const router = useRouter();&#10;&#10;  // Prevent hydration mismatch by only rendering theme-dependent content after mount&#10;  useEffect(() =&gt; {&#10;    setIsMounted(true);&#10;  }, []);&#10;&#10;  // Fetch updated name from the database for farmers&#10;  useEffect(() =&gt; {&#10;    async function fetchUpdatedUserName() {&#10;      if (!user?.email || user?.userType !== &quot;farmer&quot;) return;&#10;&#10;      try {&#10;        console.log(&quot;Navigation: Fetching updated name for:&quot;, user.email);&#10;&#10;        // Fetch the latest farmer data with cache busting&#10;        const response = await fetch(&#10;          `/api/farmers?email=${encodeURIComponent(user.email)}&amp;exactMatch=true&amp;_t=${Date.now()}`,&#10;          {&#10;            headers: {&#10;              &quot;Cache-Control&quot;: &quot;no-cache, no-store, must-revalidate&quot;,&#10;              Pragma: &quot;no-cache&quot;,&#10;            },&#10;            cache: &quot;no-store&quot;,&#10;          },&#10;        );&#10;&#10;        if (response.ok) {&#10;          const data = await response.json();&#10;&#10;          if (data &amp;&amp; data.farmers &amp;&amp; data.farmers.length &gt; 0) {&#10;            // Find the farmer with the matching email&#10;            const farmer = data.farmers.find((f) =&gt; f.email === user.email);&#10;            if (farmer &amp;&amp; farmer.name !== user.name) {&#10;              console.log(&#10;                &quot;Navigation: Updating user name from&quot;,&#10;                user.name,&#10;                &quot;to&quot;,&#10;                farmer.name,&#10;              );&#10;              setUpdatedUserName(farmer.name);&#10;&#10;              // Also update the Auth context&#10;              updateUser({&#10;                ...user,&#10;                name: farmer.name,&#10;              });&#10;            }&#10;          }&#10;        }&#10;      } catch (error) {&#10;        console.error(&quot;Navigation: Error fetching updated name:&quot;, error);&#10;      }&#10;    }&#10;&#10;    fetchUpdatedUserName();&#10;  }, [user?.email, user?.userType]);&#10;&#10;  // Pages that should have simplified navigation (no search/cart)&#10;  const simplifiedPages = [&#10;    &quot;/login&quot;,&#10;    &quot;/register&quot;,&#10;    &quot;/forgot-password&quot;,&#10;    &quot;/reset-password&quot;,&#10;    &quot;/cart&quot;,&#10;    &quot;/create&quot;,&#10;    &quot;/manage&quot;,&#10;    &quot;/payment&quot;,&#10;    &quot;/bookings&quot;,&#10;    &quot;/farmer-orders&quot;,&#10;    &quot;/review&quot;,&#10;  ];&#10;&#10;  // Details page gets minimal navigation (only logo + dark mode)&#10;  const isDetailsPage = pathname === &quot;/details&quot;;&#10;  const isFarmersPage = pathname === &quot;/farmers&quot;;&#10;  const shouldShowSearchAndCart =&#10;    !simplifiedPages.includes(pathname) &amp;&amp; !isDetailsPage;&#10;  const shouldShowNavLinks = !isDetailsPage;&#10;  const shouldShowUserAuth = !isDetailsPage;&#10;&#10;  // Different search placeholders based on page&#10;  const getSearchPlaceholder = () =&gt; {&#10;    if (isFarmersPage) {&#10;      return &quot;Search farmers...&quot;;&#10;    }&#10;    return &quot;Search products...&quot;;&#10;  };&#10;&#10;  const handleLogout = async () =&gt; {&#10;    try {&#10;      // Close the user menu first&#10;      setShowUserMenu(false);&#10;&#10;      // Clear any existing modals or intercepted routes by going to home first&#10;      router.replace(&quot;/&quot;);&#10;&#10;      // Small delay to ensure navigation completes before sign out&#10;      await new Promise((resolve) =&gt; setTimeout(resolve, 100));&#10;&#10;      // Sign out from NextAuth and clear context&#10;      await signOut({ redirect: false });&#10;      logout();&#10;&#10;      // Ensure we stay on home page and refresh&#10;      router.replace(&quot;/&quot;);&#10;&#10;      // Force a hard refresh to clear any modal states&#10;      window.location.href = &quot;/&quot;;&#10;    } catch (error) {&#10;      console.error(&quot;Logout error:&quot;, error);&#10;      // Even if there's an error, still redirect to home&#10;      window.location.href = &quot;/&quot;;&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;nav className=&quot;bg-white dark:bg-gray-800 shadow-lg sticky top-0 z-50&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;div className=&quot;flex justify-between items-center h-16&quot;&gt;&#10;          {/* Logo */}&#10;          &lt;Link href=&quot;/&quot; className=&quot;flex items-center space-x-3&quot;&gt;&#10;            &lt;div className=&quot;bg-primary-500 p-2 rounded-lg&quot;&gt;&#10;              &lt;i className=&quot;fas fa-seedling text-white text-xl&quot;&gt;&lt;/i&gt;&#10;            &lt;/div&gt;&#10;            &lt;div&gt;&#10;              &lt;h1 className=&quot;text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                FarmFresh&#10;              &lt;/h1&gt;&#10;              &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                Local Farmer Booking&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;          &lt;/Link&gt;&#10;&#10;          {/* Search Bar (conditional) */}&#10;          {shouldShowSearchAndCart &amp;&amp; (&#10;            &lt;div className=&quot;hidden md:flex flex-1 max-w-lg mx-8&quot;&gt;&#10;              &lt;div className=&quot;relative w-full&quot;&gt;&#10;                &lt;input&#10;                  type=&quot;text&quot;&#10;                  placeholder={getSearchPlaceholder()}&#10;                  className=&quot;w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                /&gt;&#10;                &lt;div className=&quot;absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-search text-gray-400&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;&#10;          {/* Navigation Links (conditional) */}&#10;          {shouldShowNavLinks &amp;&amp; (&#10;            &lt;div className=&quot;hidden lg:flex items-center space-x-8&quot;&gt;&#10;              &lt;Link&#10;                href=&quot;/&quot;&#10;                className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                  pathname === &quot;/&quot;&#10;                    ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                    : &quot;&quot;&#10;                }`}&#10;              &gt;&#10;                Home&#10;              &lt;/Link&gt;&#10;              &lt;Link&#10;                href=&quot;/products&quot;&#10;                className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                  pathname === &quot;/products&quot;&#10;                    ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                    : &quot;&quot;&#10;                }`}&#10;              &gt;&#10;                Products&#10;              &lt;/Link&gt;&#10;              &lt;Link&#10;                href=&quot;/farmers&quot;&#10;                className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                  pathname === &quot;/farmers&quot;&#10;                    ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                    : &quot;&quot;&#10;                }`}&#10;              &gt;&#10;                Farmers&#10;              &lt;/Link&gt;&#10;&#10;              {/* Show different menu items based on user type */}&#10;              {isAuthenticated &amp;&amp; user?.userType === &quot;farmer&quot; &amp;&amp; (&#10;                &lt;&gt;&#10;                  &lt;Link&#10;                    href=&quot;/create&quot;&#10;                    className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                      pathname === &quot;/create&quot;&#10;                        ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                        : &quot;&quot;&#10;                    }`}&#10;                  &gt;&#10;                    Add Product&#10;                  &lt;/Link&gt;&#10;                  &lt;Link&#10;                    href=&quot;/manage&quot;&#10;                    className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                      pathname === &quot;/manage&quot;&#10;                        ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                        : &quot;&quot;&#10;                    }`}&#10;                  &gt;&#10;                    Manage Products&#10;                  &lt;/Link&gt;&#10;                &lt;/&gt;&#10;              )}&#10;&#10;              {/* Show My Orders for regular users */}&#10;              {isAuthenticated &amp;&amp; user?.userType !== &quot;farmer&quot; &amp;&amp; (&#10;                &lt;Link&#10;                  href=&quot;/bookings&quot;&#10;                  className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                    pathname === &quot;/bookings&quot;&#10;                      ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                      : &quot;&quot;&#10;                  }`}&#10;                &gt;&#10;                  My Orders&#10;                &lt;/Link&gt;&#10;              )}&#10;&#10;              &lt;Link&#10;                href=&quot;/about&quot;&#10;                className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                  pathname === &quot;/about&quot;&#10;                    ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                    : &quot;&quot;&#10;                }`}&#10;              &gt;&#10;                About&#10;              &lt;/Link&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;&#10;          {/* Right side icons and user menu */}&#10;          &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;            {/* Cart and Favorites (only for authenticated users and not on simplified pages) */}&#10;            {shouldShowSearchAndCart &amp;&amp; isAuthenticated &amp;&amp; (&#10;              &lt;&gt;&#10;                {/* Messages */}&#10;                &lt;Link&#10;                  href=&quot;/messages&quot;&#10;                  className=&quot;text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition relative&quot;&#10;                  title=&quot;Messages&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;far fa-envelope text-xl&quot;&gt;&lt;/i&gt;&#10;                  {totalUnreadCount &gt; 0 &amp;&amp; (&#10;                    &lt;span className=&quot;absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center&quot;&gt;&#10;                      {totalUnreadCount &gt; 9 ? &quot;9+&quot; : totalUnreadCount}&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/Link&gt;&#10;&#10;                &lt;Link&#10;                  href=&quot;/favorites&quot;&#10;                  className=&quot;text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition relative&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;far fa-heart text-xl&quot;&gt;&lt;/i&gt;&#10;                  {favorites.length &gt; 0 &amp;&amp; (&#10;                    &lt;span className=&quot;absolute -top-2 -right-2 bg-primary-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center&quot;&gt;&#10;                      {favorites.length}&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/Link&gt;&#10;                &lt;Link&#10;                  href=&quot;/cart&quot;&#10;                  className=&quot;text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition relative&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-shopping-cart text-xl&quot;&gt;&lt;/i&gt;&#10;                  {cartCount &gt; 0 &amp;&amp; (&#10;                    &lt;span className=&quot;absolute -top-2 -right-2 bg-primary-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center&quot;&gt;&#10;                      {cartCount}&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/Link&gt;&#10;              &lt;/&gt;&#10;            )}&#10;&#10;            {/* Dark mode toggle */}&#10;            &lt;button&#10;              onClick={toggleDarkMode}&#10;              className=&quot;text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition&quot;&#10;              title={&#10;                isMounted &amp;&amp; isLoaded&#10;                  ? isDarkMode&#10;                    ? &quot;Switch to light mode&quot;&#10;                    : &quot;Switch to dark mode&quot;&#10;                  : &quot;Toggle theme&quot;&#10;              }&#10;            &gt;&#10;              {isMounted &amp;&amp; isLoaded ? (&#10;                isDarkMode ? (&#10;                  &lt;i className=&quot;fas fa-sun text-xl&quot;&gt;&lt;/i&gt;&#10;                ) : (&#10;                  &lt;i className=&quot;fas fa-moon text-xl&quot;&gt;&lt;/i&gt;&#10;                )&#10;              ) : (&#10;                &lt;i className=&quot;fas fa-moon text-xl&quot;&gt;&lt;/i&gt;&#10;              )}&#10;            &lt;/button&gt;&#10;&#10;            {/* User Authentication (conditional) */}&#10;            {shouldShowUserAuth &amp;&amp; (&#10;              &lt;&gt;&#10;                {isAuthenticated ? (&#10;                  &lt;div className=&quot;relative&quot;&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; setShowUserMenu(!showUserMenu)}&#10;                      className=&quot;flex items-center space-x-2 text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition&quot;&#10;                    &gt;&#10;                      &lt;div className=&quot;w-8 h-8 bg-primary-500 rounded-full flex items-center justify-center&quot;&gt;&#10;                        &lt;span className=&quot;text-white text-sm font-medium&quot;&gt;&#10;                          {user?.name?.charAt(0)?.toUpperCase() || &quot;U&quot;}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;span className=&quot;hidden md:block&quot;&gt;{user?.name}&lt;/span&gt;&#10;                      &lt;i className=&quot;fas fa-chevron-down text-sm&quot;&gt;&lt;/i&gt;&#10;                    &lt;/button&gt;&#10;&#10;                    {/* User Dropdown Menu */}&#10;                    {showUserMenu &amp;&amp; (&#10;                      &lt;div className=&quot;absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 py-2&quot;&gt;&#10;                        &lt;div className=&quot;px-4 py-2 border-b border-gray-200 dark:border-gray-700&quot;&gt;&#10;                          &lt;p className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                            {user?.name}&#10;                          &lt;/p&gt;&#10;                          &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {user?.email}&#10;                          &lt;/p&gt;&#10;                          &lt;p className=&quot;text-xs text-primary-600 dark:text-primary-400 capitalize&quot;&gt;&#10;                            {user?.userType || &quot;User&quot;}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Farmer-specific menu items */}&#10;                        {user?.userType === &quot;farmer&quot; &amp;&amp; (&#10;                          &lt;&gt;&#10;                            &lt;Link&#10;                              href=&quot;/farmer-orders&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-clipboard-list mr-2&quot;&gt;&lt;/i&gt;&#10;                              Order Management&#10;                            &lt;/Link&gt;&#10;                            &lt;Link&#10;                              href=&quot;/create&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-plus mr-2&quot;&gt;&lt;/i&gt;&#10;                              Add Product&#10;                            &lt;/Link&gt;&#10;                            &lt;Link&#10;                              href=&quot;/manage&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-cog mr-2&quot;&gt;&lt;/i&gt;&#10;                              Manage Products&#10;                            &lt;/Link&gt;&#10;                          &lt;/&gt;&#10;                        )}&#10;&#10;                        {/* Regular user menu items */}&#10;                        {user?.userType !== &quot;farmer&quot; &amp;&amp; (&#10;                          &lt;&gt;&#10;                            &lt;Link&#10;                              href=&quot;/bookings&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-list mr-2&quot;&gt;&lt;/i&gt;&#10;                              My Orders&#10;                            &lt;/Link&gt;&#10;                            &lt;Link&#10;                              href=&quot;/favorites&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-heart mr-2&quot;&gt;&lt;/i&gt;&#10;                              Favorites&#10;                            &lt;/Link&gt;&#10;                            &lt;Link&#10;                              href=&quot;/cart&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-shopping-cart mr-2&quot;&gt;&lt;/i&gt;&#10;                              Cart&#10;                            &lt;/Link&gt;&#10;                            &lt;Link&#10;                              href=&quot;/cart&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-shopping-cart mr-2&quot;&gt;&lt;/i&gt;&#10;                              Cart&#10;                            &lt;/Link&gt;&#10;                          &lt;/&gt;&#10;                        )}&#10;&#10;                        {/* Common menu items */}&#10;                        &lt;div className=&quot;border-t border-gray-200 dark:border-gray-700 mt-2 pt-2&quot;&gt;&#10;                          &lt;Link&#10;                            href=&quot;/messages&quot;&#10;                            className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                            onClick={() =&gt; setShowUserMenu(false)}&#10;                          &gt;&#10;                            &lt;i className=&quot;fas fa-envelope mr-2&quot;&gt;&lt;/i&gt;&#10;                            Messages&#10;                            {totalUnreadCount &gt; 0 &amp;&amp; (&#10;                              &lt;span className=&quot;ml-2 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center inline-flex&quot;&gt;&#10;                                {totalUnreadCount &gt; 9 ? &quot;9+&quot; : totalUnreadCount}&#10;                              &lt;/span&gt;&#10;                            )}&#10;                          &lt;/Link&gt;&#10;                          &lt;Link&#10;                            href=&quot;/profile&quot;&#10;                            className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                            onClick={() =&gt; setShowUserMenu(false)}&#10;                          &gt;&#10;                            &lt;i className=&quot;fas fa-user mr-2&quot;&gt;&lt;/i&gt;&#10;                            Profile Settings&#10;                          &lt;/Link&gt;&#10;                          &lt;button&#10;                            onClick={handleLogout}&#10;                            className=&quot;w-full text-left px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                          &gt;&#10;                            &lt;i className=&quot;fas fa-sign-out-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                            Logout&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                ) : (&#10;                  &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                    &lt;Link&#10;                      href=&quot;/login&quot;&#10;                      className=&quot;text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition&quot;&#10;                    &gt;&#10;                      Login&#10;                    &lt;/Link&gt;&#10;                    &lt;Link&#10;                      href=&quot;/register&quot;&#10;                      className=&quot;bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg transition&quot;&#10;                    &gt;&#10;                      Sign Up&#10;                    &lt;/Link&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/&gt;&#10;            )}&#10;&#10;            {/* Mobile menu button */}&#10;            &lt;button className=&quot;lg:hidden text-gray-700 dark:text-gray-300&quot;&gt;&#10;              &lt;i className=&quot;fas fa-bars text-xl&quot;&gt;&lt;/i&gt;&#10;            &lt;/button&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/nav&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import Link from &quot;next/link&quot;;&#10;import { useAuth } from &quot;@/contexts/AuthContext&quot;;&#10;import { useTheme } from &quot;@/contexts/ThemeContext&quot;;&#10;import { useFavorites } from &quot;@/contexts/FavoritesContext&quot;;&#10;import { useCart } from &quot;@/contexts/CartContext&quot;;&#10;import { useMessaging } from &quot;@/contexts/MessagingContext&quot;;&#10;import { signOut } from &quot;next-auth/react&quot;;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { usePathname, useRouter } from &quot;next/navigation&quot;;&#10;&#10;export default function Navigation() {&#10;  const { user, isAuthenticated, logout, updateUser } = useAuth();&#10;  const { isDarkMode, toggleDarkMode, isLoaded } = useTheme();&#10;  const { favorites } = useFavorites();&#10;  const { cartItems, cartCount } = useCart();&#10;  const { totalUnreadCount } = useMessaging();&#10;  const [showUserMenu, setShowUserMenu] = useState(false);&#10;  const [updatedUserName, setUpdatedUserName] = useState(user?.name || &quot;&quot;);&#10;  const [isMounted, setIsMounted] = useState(false);&#10;  const pathname = usePathname();&#10;  const router = useRouter();&#10;&#10;  // Prevent hydration mismatch by only rendering theme-dependent content after mount&#10;  useEffect(() =&gt; {&#10;    setIsMounted(true);&#10;  }, []);&#10;&#10;  // Fetch updated name from the database for farmers&#10;  useEffect(() =&gt; {&#10;    async function fetchUpdatedUserName() {&#10;      if (!user?.email || user?.userType !== &quot;farmer&quot;) return;&#10;&#10;      try {&#10;        console.log(&quot;Navigation: Fetching updated name for:&quot;, user.email);&#10;&#10;        // Fetch the latest farmer data with cache busting&#10;        const response = await fetch(&#10;          `/api/farmers?email=${encodeURIComponent(user.email)}&amp;exactMatch=true&amp;_t=${Date.now()}`,&#10;          {&#10;            headers: {&#10;              &quot;Cache-Control&quot;: &quot;no-cache, no-store, must-revalidate&quot;,&#10;              Pragma: &quot;no-cache&quot;,&#10;            },&#10;            cache: &quot;no-store&quot;,&#10;          },&#10;        );&#10;&#10;        if (response.ok) {&#10;          const data = await response.json();&#10;&#10;          if (data &amp;&amp; data.farmers &amp;&amp; data.farmers.length &gt; 0) {&#10;            // Find the farmer with the matching email&#10;            const farmer = data.farmers.find((f) =&gt; f.email === user.email);&#10;            if (farmer &amp;&amp; farmer.name !== user.name) {&#10;              console.log(&#10;                &quot;Navigation: Updating user name from&quot;,&#10;                user.name,&#10;                &quot;to&quot;,&#10;                farmer.name,&#10;              );&#10;              setUpdatedUserName(farmer.name);&#10;&#10;              // Also update the Auth context&#10;              updateUser({&#10;                ...user,&#10;                name: farmer.name,&#10;              });&#10;            }&#10;          }&#10;        }&#10;      } catch (error) {&#10;        console.error(&quot;Navigation: Error fetching updated name:&quot;, error);&#10;      }&#10;    }&#10;&#10;    fetchUpdatedUserName();&#10;  }, [user?.email, user?.userType]);&#10;&#10;  // Pages that should have simplified navigation (no search/cart)&#10;  const simplifiedPages = [&#10;    &quot;/login&quot;,&#10;    &quot;/register&quot;,&#10;    &quot;/forgot-password&quot;,&#10;    &quot;/reset-password&quot;,&#10;    &quot;/cart&quot;,&#10;    &quot;/create&quot;,&#10;    &quot;/manage&quot;,&#10;    &quot;/payment&quot;,&#10;    &quot;/bookings&quot;,&#10;    &quot;/farmer-orders&quot;,&#10;    &quot;/review&quot;,&#10;  ];&#10;&#10;  // Details page gets minimal navigation (only logo + dark mode)&#10;  const isDetailsPage = pathname === &quot;/details&quot;;&#10;  const isFarmersPage = pathname === &quot;/farmers&quot;;&#10;  const shouldShowSearchAndCart =&#10;    !simplifiedPages.includes(pathname) &amp;&amp; !isDetailsPage;&#10;  const shouldShowNavLinks = !isDetailsPage;&#10;  const shouldShowUserAuth = !isDetailsPage;&#10;&#10;  // Different search placeholders based on page&#10;  const getSearchPlaceholder = () =&gt; {&#10;    if (isFarmersPage) {&#10;      return &quot;Search farmers...&quot;;&#10;    }&#10;    return &quot;Search products...&quot;;&#10;  };&#10;&#10;  const handleLogout = async () =&gt; {&#10;    try {&#10;      // Close the user menu first&#10;      setShowUserMenu(false);&#10;&#10;      // Clear any existing modals or intercepted routes by going to home first&#10;      router.replace(&quot;/&quot;);&#10;&#10;      // Small delay to ensure navigation completes before sign out&#10;      await new Promise((resolve) =&gt; setTimeout(resolve, 100));&#10;&#10;      // Sign out from NextAuth and clear context&#10;      await signOut({ redirect: false });&#10;      logout();&#10;&#10;      // Ensure we stay on home page and refresh&#10;      router.replace(&quot;/&quot;);&#10;&#10;      // Force a hard refresh to clear any modal states&#10;      window.location.href = &quot;/&quot;;&#10;    } catch (error) {&#10;      console.error(&quot;Logout error:&quot;, error);&#10;      // Even if there's an error, still redirect to home&#10;      window.location.href = &quot;/&quot;;&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;nav className=&quot;bg-white dark:bg-gray-800 shadow-lg sticky top-0 z-50&quot;&gt;&#10;      &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;        &lt;div className=&quot;flex justify-between items-center h-16&quot;&gt;&#10;          {/* Logo */}&#10;          &lt;Link href=&quot;/&quot; className=&quot;flex items-center space-x-3&quot;&gt;&#10;            &lt;div className=&quot;bg-primary-500 p-2 rounded-lg&quot;&gt;&#10;              &lt;i className=&quot;fas fa-seedling text-white text-xl&quot;&gt;&lt;/i&gt;&#10;            &lt;/div&gt;&#10;            &lt;div&gt;&#10;              &lt;h1 className=&quot;text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                FarmFresh&#10;              &lt;/h1&gt;&#10;              &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                Local Farmer Booking&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;          &lt;/Link&gt;&#10;&#10;          {/* Search Bar (conditional) */}&#10;          {shouldShowSearchAndCart &amp;&amp; (&#10;            &lt;div className=&quot;hidden md:flex flex-1 max-w-lg mx-8&quot;&gt;&#10;              &lt;div className=&quot;relative w-full&quot;&gt;&#10;                &lt;input&#10;                  type=&quot;text&quot;&#10;                  placeholder={getSearchPlaceholder()}&#10;                  className=&quot;w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                /&gt;&#10;                &lt;div className=&quot;absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-search text-gray-400&quot;&gt;&lt;/i&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;&#10;          {/* Navigation Links (conditional) */}&#10;          {shouldShowNavLinks &amp;&amp; (&#10;            &lt;div className=&quot;hidden lg:flex items-center space-x-8&quot;&gt;&#10;              &lt;Link&#10;                href=&quot;/&quot;&#10;                className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                  pathname === &quot;/&quot;&#10;                    ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                    : &quot;&quot;&#10;                }`}&#10;              &gt;&#10;                Home&#10;              &lt;/Link&gt;&#10;              &lt;Link&#10;                href=&quot;/products&quot;&#10;                className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                  pathname === &quot;/products&quot;&#10;                    ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                    : &quot;&quot;&#10;                }`}&#10;              &gt;&#10;                Products&#10;              &lt;/Link&gt;&#10;              &lt;Link&#10;                href=&quot;/farmers&quot;&#10;                className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                  pathname === &quot;/farmers&quot;&#10;                    ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                    : &quot;&quot;&#10;                }`}&#10;              &gt;&#10;                Farmers&#10;              &lt;/Link&gt;&#10;&#10;              {/* Show different menu items based on user type */}&#10;              {isAuthenticated &amp;&amp; user?.userType === &quot;farmer&quot; &amp;&amp; (&#10;                &lt;&gt;&#10;                  &lt;Link&#10;                    href=&quot;/create&quot;&#10;                    className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                      pathname === &quot;/create&quot;&#10;                        ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                        : &quot;&quot;&#10;                    }`}&#10;                  &gt;&#10;                    Add Product&#10;                  &lt;/Link&gt;&#10;                  &lt;Link&#10;                    href=&quot;/manage&quot;&#10;                    className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                      pathname === &quot;/manage&quot;&#10;                        ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                        : &quot;&quot;&#10;                    }`}&#10;                  &gt;&#10;                    Manage Products&#10;                  &lt;/Link&gt;&#10;                &lt;/&gt;&#10;              )}&#10;&#10;              {/* Show My Orders for regular users */}&#10;              {isAuthenticated &amp;&amp; user?.userType !== &quot;farmer&quot; &amp;&amp; (&#10;                &lt;Link&#10;                  href=&quot;/bookings&quot;&#10;                  className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                    pathname === &quot;/bookings&quot;&#10;                      ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                      : &quot;&quot;&#10;                  }`}&#10;                &gt;&#10;                  My Orders&#10;                &lt;/Link&gt;&#10;              )}&#10;&#10;              &lt;Link&#10;                href=&quot;/about&quot;&#10;                className={`text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition ${&#10;                  pathname === &quot;/about&quot;&#10;                    ? &quot;text-primary-600 dark:text-primary-400&quot;&#10;                    : &quot;&quot;&#10;                }`}&#10;              &gt;&#10;                About&#10;              &lt;/Link&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;&#10;          {/* Right side icons and user menu */}&#10;          &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;            {/* Cart and Favorites (only for authenticated users and not on simplified pages) */}&#10;            {shouldShowSearchAndCart &amp;&amp; isAuthenticated &amp;&amp; (&#10;              &lt;&gt;&#10;                {/* Messages */}&#10;                &lt;Link&#10;                  href=&quot;/messages&quot;&#10;                  className=&quot;text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition relative&quot;&#10;                  title=&quot;Messages&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;far fa-envelope text-xl&quot;&gt;&lt;/i&gt;&#10;                  {totalUnreadCount &gt; 0 &amp;&amp; (&#10;                    &lt;span className=&quot;absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center&quot;&gt;&#10;                      {totalUnreadCount &gt; 9 ? &quot;9+&quot; : totalUnreadCount}&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/Link&gt;&#10;&#10;                &lt;Link&#10;                  href=&quot;/favorites&quot;&#10;                  className=&quot;text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition relative&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;far fa-heart text-xl&quot;&gt;&lt;/i&gt;&#10;                  {favorites.length &gt; 0 &amp;&amp; (&#10;                    &lt;span className=&quot;absolute -top-2 -right-2 bg-primary-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center&quot;&gt;&#10;                      {favorites.length}&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/Link&gt;&#10;                &lt;Link&#10;                  href=&quot;/cart&quot;&#10;                  className=&quot;text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition relative&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-shopping-cart text-xl&quot;&gt;&lt;/i&gt;&#10;                  {cartCount &gt; 0 &amp;&amp; (&#10;                    &lt;span className=&quot;absolute -top-2 -right-2 bg-primary-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center&quot;&gt;&#10;                      {cartCount}&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/Link&gt;&#10;              &lt;/&gt;&#10;            )}&#10;&#10;            {/* Dark mode toggle */}&#10;            &lt;button&#10;              onClick={toggleDarkMode}&#10;              className=&quot;text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition&quot;&#10;              title={&#10;                isMounted &amp;&amp; isLoaded&#10;                  ? isDarkMode&#10;                    ? &quot;Switch to light mode&quot;&#10;                    : &quot;Switch to dark mode&quot;&#10;                  : &quot;Toggle theme&quot;&#10;              }&#10;            &gt;&#10;              {isMounted &amp;&amp; isLoaded ? (&#10;                isDarkMode ? (&#10;                  &lt;i className=&quot;fas fa-sun text-xl&quot;&gt;&lt;/i&gt;&#10;                ) : (&#10;                  &lt;i className=&quot;fas fa-moon text-xl&quot;&gt;&lt;/i&gt;&#10;                )&#10;              ) : (&#10;                &lt;i className=&quot;fas fa-moon text-xl&quot;&gt;&lt;/i&gt;&#10;              )}&#10;            &lt;/button&gt;&#10;&#10;            {/* User Authentication (conditional) */}&#10;            {shouldShowUserAuth &amp;&amp; (&#10;              &lt;&gt;&#10;                {isAuthenticated ? (&#10;                  &lt;div className=&quot;relative&quot;&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; setShowUserMenu(!showUserMenu)}&#10;                      className=&quot;flex items-center space-x-2 text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition&quot;&#10;                    &gt;&#10;                      &lt;div className=&quot;w-8 h-8 bg-primary-500 rounded-full flex items-center justify-center&quot;&gt;&#10;                        &lt;span className=&quot;text-white text-sm font-medium&quot;&gt;&#10;                          {user?.name?.charAt(0)?.toUpperCase() || &quot;U&quot;}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;span className=&quot;hidden md:block&quot;&gt;{user?.name}&lt;/span&gt;&#10;                      &lt;i className=&quot;fas fa-chevron-down text-sm&quot;&gt;&lt;/i&gt;&#10;                    &lt;/button&gt;&#10;&#10;                    {/* User Dropdown Menu */}&#10;                    {showUserMenu &amp;&amp; (&#10;                      &lt;div className=&quot;absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 py-2&quot;&gt;&#10;                        &lt;div className=&quot;px-4 py-2 border-b border-gray-200 dark:border-gray-700&quot;&gt;&#10;                          &lt;p className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                            {user?.name}&#10;                          &lt;/p&gt;&#10;                          &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {user?.email}&#10;                          &lt;/p&gt;&#10;                          &lt;p className=&quot;text-xs text-primary-600 dark:text-primary-400 capitalize&quot;&gt;&#10;                            {user?.userType || &quot;User&quot;}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Farmer-specific menu items */}&#10;                        {user?.userType === &quot;farmer&quot; &amp;&amp; (&#10;                          &lt;&gt;&#10;                            &lt;Link&#10;                              href=&quot;/farmer-orders&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-clipboard-list mr-2&quot;&gt;&lt;/i&gt;&#10;                              Order Management&#10;                            &lt;/Link&gt;&#10;                            &lt;Link&#10;                              href=&quot;/create&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-plus mr-2&quot;&gt;&lt;/i&gt;&#10;                              Add Product&#10;                            &lt;/Link&gt;&#10;                            &lt;Link&#10;                              href=&quot;/manage&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-cog mr-2&quot;&gt;&lt;/i&gt;&#10;                              Manage Products&#10;                            &lt;/Link&gt;&#10;                          &lt;/&gt;&#10;                        )}&#10;&#10;                        {/* Regular user menu items */}&#10;                        {user?.userType !== &quot;farmer&quot; &amp;&amp; (&#10;                          &lt;&gt;&#10;                            &lt;Link&#10;                              href=&quot;/bookings&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-list mr-2&quot;&gt;&lt;/i&gt;&#10;                              My Orders&#10;                            &lt;/Link&gt;&#10;                            &lt;Link&#10;                              href=&quot;/analytics&quot;&#10;                              className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                              onClick={() =&gt; setShowUserMenu(false)}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-chart-bar mr-2&quot;&gt;&lt;/i&gt;&#10;                              Analytics&#10;                            &lt;/Link&gt;&#10;                          &lt;/&gt;&#10;                        )}&#10;&#10;                        {/* Common menu items */}&#10;                        &lt;div className=&quot;border-t border-gray-200 dark:border-gray-700 mt-2 pt-2&quot;&gt;&#10;                          &lt;Link&#10;                            href=&quot;/messages&quot;&#10;                            className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                            onClick={() =&gt; setShowUserMenu(false)}&#10;                          &gt;&#10;                            &lt;i className=&quot;fas fa-envelope mr-2&quot;&gt;&lt;/i&gt;&#10;                            Messages&#10;                            {totalUnreadCount &gt; 0 &amp;&amp; (&#10;                              &lt;span className=&quot;ml-2 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center inline-flex&quot;&gt;&#10;                                {totalUnreadCount &gt; 9 ? &quot;9+&quot; : totalUnreadCount}&#10;                              &lt;/span&gt;&#10;                            )}&#10;                          &lt;/Link&gt;&#10;                          &lt;Link&#10;                            href=&quot;/profile&quot;&#10;                            className=&quot;block px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                            onClick={() =&gt; setShowUserMenu(false)}&#10;                          &gt;&#10;                            &lt;i className=&quot;fas fa-user mr-2&quot;&gt;&lt;/i&gt;&#10;                            Profile Settings&#10;                          &lt;/Link&gt;&#10;                          &lt;button&#10;                            onClick={handleLogout}&#10;                            className=&quot;w-full text-left px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700&quot;&#10;                          &gt;&#10;                            &lt;i className=&quot;fas fa-sign-out-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                            Logout&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                ) : (&#10;                  &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                    &lt;Link&#10;                      href=&quot;/login&quot;&#10;                      className=&quot;text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition&quot;&#10;                    &gt;&#10;                      Login&#10;                    &lt;/Link&gt;&#10;                    &lt;Link&#10;                      href=&quot;/register&quot;&#10;                      className=&quot;bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg transition&quot;&#10;                    &gt;&#10;                      Sign Up&#10;                    &lt;/Link&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/&gt;&#10;            )}&#10;&#10;            {/* Mobile menu button */}&#10;            &lt;button className=&quot;lg:hidden text-gray-700 dark:text-gray-300&quot;&gt;&#10;              &lt;i className=&quot;fas fa-bars text-xl&quot;&gt;&lt;/i&gt;&#10;            &lt;/button&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/nav&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/dashboard/tabs/DashboardTab.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/dashboard/tabs/DashboardTab.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useMemo } from &quot;react&quot;;&#10;import { useRouter } from &quot;next/navigation&quot;;&#10;import Link from &quot;next/link&quot;;&#10;&#10;export default function DashboardTab({&#10;  orders,&#10;  products,&#10;  formatPrice,&#10;  formatDate,&#10;  handleRefresh,&#10;  updateBulkProductsInCache, // Restore this prop&#10;  bulkUpdateProducts,&#10;}) {&#10;  const router = useRouter();&#10;  const [bulkUpdateModal, setBulkUpdateModal] = useState(false);&#10;  const [selectedProducts, setSelectedProducts] = useState([]);&#10;  const [bulkAction, setBulkAction] = useState(&quot;&quot;);&#10;  const [bulkValues, setBulkValues] = useState({&#10;    price: &quot;&quot;,&#10;    stock: &quot;&quot;,&#10;    status: &quot;&quot;,&#10;    category: &quot;&quot;,&#10;  });&#10;  const [bulkLoading, setBulkLoading] = useState(false);&#10;&#10;  // Quick Farm Tools handlers&#10;  const handleQuickTool = (toolType) =&gt; {&#10;    switch (toolType) {&#10;      case &quot;bulk-update&quot;:&#10;        setBulkUpdateModal(true);&#10;        break;&#10;      case &quot;inventory-sync&quot;:&#10;        router.push(&quot;/manage?tab=products&amp;action=inventory&quot;);&#10;        break;&#10;      case &quot;price-optimizer&quot;:&#10;        router.push(&quot;/manage?tab=analytics&amp;tool=pricing&quot;);&#10;        break;&#10;      case &quot;harvest-planner&quot;:&#10;        router.push(&quot;/manage?tab=dashboard&amp;tool=planner&quot;);&#10;        break;&#10;      default:&#10;        break;&#10;    }&#10;  };&#10;&#10;  // Bulk update functionality&#10;  const handleBulkUpdate = async () =&gt; {&#10;    if (!selectedProducts.length || !bulkAction) {&#10;      alert(&quot;Please select products and an action to perform.&quot;);&#10;      return;&#10;    }&#10;&#10;    setBulkLoading(true);&#10;    try {&#10;      const updateData = {};&#10;&#10;      switch (bulkAction) {&#10;        case &quot;price&quot;:&#10;          if (!bulkValues.price) {&#10;            alert(&quot;Please enter a price value.&quot;);&#10;            return;&#10;          }&#10;          updateData.price = parseFloat(bulkValues.price);&#10;          break;&#10;        case &quot;stock&quot;:&#10;          if (!bulkValues.stock) {&#10;            alert(&quot;Please enter a stock value.&quot;);&#10;            return;&#10;          }&#10;          updateData.stock = parseInt(bulkValues.stock);&#10;          break;&#10;        case &quot;status&quot;:&#10;          if (!bulkValues.status) {&#10;            alert(&quot;Please select a status.&quot;);&#10;            return;&#10;          }&#10;          updateData.status = bulkValues.status;&#10;          break;&#10;        case &quot;category&quot;:&#10;          if (!bulkValues.category) {&#10;            alert(&quot;Please enter a category.&quot;);&#10;            return;&#10;          }&#10;          updateData.category = bulkValues.category;&#10;          break;&#10;      }&#10;&#10;      // Use the bulkUpdateProducts function from hook (includes cache invalidation like farmer updates)&#10;      console.log(&quot; [DashboardTab] Calling bulkUpdateProducts...&quot;);&#10;      console.log(&quot; [DashboardTab] Selected products:&quot;, selectedProducts);&#10;      console.log(&quot; [DashboardTab] Update data:&quot;, updateData);&#10;      console.log(&#10;        &quot; [DashboardTab] Current products before update:&quot;,&#10;        products,&#10;      );&#10;&#10;      // DEBUG: Check if selected products are valid IDs&#10;      console.log(&quot; [DashboardTab] Selected product IDs type check:&quot;, {&#10;        selectedProducts: selectedProducts,&#10;        areStrings: selectedProducts.map((id) =&gt; typeof id),&#10;        validObjectIds: selectedProducts.map((id) =&gt; id &amp;&amp; id.length === 24),&#10;        productsInData: products.map((p) =&gt; ({&#10;          id: p._id || p.id,&#10;          name: p.name,&#10;        })),&#10;      });&#10;&#10;      const result = await bulkUpdateProducts(selectedProducts, updateData);&#10;&#10;      console.log(&quot; [DashboardTab] Bulk update result:&quot;, result);&#10;&#10;      if (result.success) {&#10;        console.log(&quot;✅ [DashboardTab] Bulk update API call successful&quot;);&#10;&#10;        alert(&#10;          `Successfully updated ${result.data.updatedCount || 1} products!`,&#10;        );&#10;&#10;        // REMOVED: Don't call handleRefresh() as it overrides optimistic updates&#10;        // The bulkUpdateProducts function already handles cache updates properly&#10;        //&#10;        // // FORCE immediate refresh to ensure dashboard updates&#10;        // console.log(&#10;        //   &quot; [DashboardTab] Forcing immediate refresh after bulk update...&quot;,&#10;        // );&#10;        // console.log(&#10;        //   &quot; [DashboardTab] handleRefresh function exists:&quot;,&#10;        //   !!handleRefresh,&#10;        // );&#10;&#10;        // if (handleRefresh) {&#10;        //   console.log(&quot; [DashboardTab] Calling handleRefresh...&quot;);&#10;        //   await handleRefresh(); // Force refresh dashboard data&#10;        //   console.log(&quot;✅ [DashboardTab] handleRefresh completed&quot;);&#10;        // } else {&#10;        //   console.error(&#10;        //     &quot;❌ [DashboardTab] handleRefresh function not available!&quot;,&#10;        //   );&#10;        // }&#10;&#10;        // // Log products after refresh to see if they changed&#10;        // console.log(&#10;        //   &quot; [DashboardTab] Products after refresh (should update via React state):&quot;,&#10;        // );&#10;        // setTimeout(() =&gt; {&#10;        //   console.log(&#10;        //     &quot; [DashboardTab] Products state after refresh:&quot;,&#10;        //     products.map((p) =&gt; ({&#10;        //       id: p._id,&#10;        //       name: p.name,&#10;        //       stock: p.stock,&#10;        //       price: p.price,&#10;        //       status: p.status,&#10;        //     })),&#10;        //   );&#10;        // }, 1000);&#10;&#10;        // Dispatch custom event to notify products page of bulk update&#10;        window.dispatchEvent(&#10;          new CustomEvent(&quot;productsBulkUpdated&quot;, {&#10;            detail: {&#10;              productIds: selectedProducts,&#10;              updateData: updateData,&#10;              timestamp: Date.now(),&#10;              cacheCleared: result.cacheCleared,&#10;            },&#10;          }),&#10;        );&#10;&#10;        // Also set localStorage flag for cross-tab communication&#10;        localStorage.setItem(&#10;          &quot;productsBulkUpdated&quot;,&#10;          JSON.stringify({&#10;            productIds: selectedProducts,&#10;            updateData: updateData,&#10;            timestamp: Date.now(),&#10;            cacheCleared: result.cacheCleared,&#10;          }),&#10;        );&#10;&#10;        // No need to force refresh - cache invalidation handles it automatically&#10;        // if (handleRefresh) {&#10;        //   handleRefresh(true); // Force refresh&#10;        // }&#10;&#10;        setBulkUpdateModal(false);&#10;        setSelectedProducts([]);&#10;        setBulkAction(&quot;&quot;);&#10;        setBulkValues({ price: &quot;&quot;, stock: &quot;&quot;, status: &quot;&quot;, category: &quot;&quot; });&#10;      } else {&#10;        throw new Error(result.error || &quot;Update failed&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Bulk update error:&quot;, error);&#10;      alert(`Error updating products: ${error.message}`);&#10;    } finally {&#10;      setBulkLoading(false);&#10;    }&#10;  };&#10;&#10;  const toggleProductSelection = (productId) =&gt; {&#10;    setSelectedProducts((prev) =&gt;&#10;      prev.includes(productId)&#10;        ? prev.filter((id) =&gt; id !== productId)&#10;        : [...prev, productId],&#10;    );&#10;  };&#10;&#10;  const selectAllProducts = () =&gt; {&#10;    if (selectedProducts.length === products.length) {&#10;      setSelectedProducts([]);&#10;    } else {&#10;      setSelectedProducts(products.map((p) =&gt; p._id));&#10;    }&#10;  };&#10;&#10;  // Calculate urgent action items&#10;  const actionItems = useMemo(() =&gt; {&#10;    const items = [];&#10;&#10;    // Low stock alerts&#10;    const lowStockProducts = products.filter(&#10;      (p) =&gt; p.stock &lt;= 5 &amp;&amp; p.stock &gt; 0,&#10;    );&#10;    if (lowStockProducts.length &gt; 0) {&#10;      items.push({&#10;        type: &quot;low-stock&quot;,&#10;        priority: &quot;high&quot;,&#10;        icon: &quot;fas fa-exclamation-triangle&quot;,&#10;        color: &quot;text-red-600&quot;,&#10;        bgColor: &quot;bg-red-50 dark:bg-red-900/20&quot;,&#10;        title: `${lowStockProducts.length} products low on stock`,&#10;        description: &quot;Restock needed to avoid stockouts&quot;,&#10;        action: &quot;View Products&quot;,&#10;        link: &quot;#products&quot;,&#10;      });&#10;    }&#10;&#10;    // Out of stock alerts&#10;    const outOfStockProducts = products.filter((p) =&gt; p.stock === 0);&#10;    if (outOfStockProducts.length &gt; 0) {&#10;      items.push({&#10;        type: &quot;out-of-stock&quot;,&#10;        priority: &quot;critical&quot;,&#10;        icon: &quot;fas fa-times-circle&quot;,&#10;        color: &quot;text-red-700&quot;,&#10;        bgColor: &quot;bg-red-100 dark:bg-red-900/30&quot;,&#10;        title: `${outOfStockProducts.length} products out of stock`,&#10;        description: &quot;Products unavailable for purchase&quot;,&#10;        action: &quot;Restock Now&quot;,&#10;        link: &quot;#products&quot;,&#10;      });&#10;    }&#10;&#10;    // Pending orders&#10;    const pendingOrders = orders.filter((o) =&gt; o.status === &quot;pending&quot;);&#10;    if (pendingOrders.length &gt; 0) {&#10;      items.push({&#10;        type: &quot;pending-orders&quot;,&#10;        priority: &quot;medium&quot;,&#10;        icon: &quot;fas fa-clock&quot;,&#10;        color: &quot;text-yellow-600&quot;,&#10;        bgColor: &quot;bg-yellow-50 dark:bg-yellow-900/20&quot;,&#10;        title: `${pendingOrders.length} orders awaiting processing`,&#10;        description: &quot;New orders need your attention&quot;,&#10;        action: &quot;Process Orders&quot;,&#10;        link: &quot;#orders&quot;,&#10;      });&#10;    }&#10;&#10;    // Products without images&#10;    const productsWithoutImages = products.filter(&#10;      (p) =&gt; !p.images || p.images.length === 0,&#10;    );&#10;    if (productsWithoutImages.length &gt; 0) {&#10;      items.push({&#10;        type: &quot;missing-images&quot;,&#10;        priority: &quot;low&quot;,&#10;        icon: &quot;fas fa-image&quot;,&#10;        color: &quot;text-blue-600&quot;,&#10;        bgColor: &quot;bg-blue-50 dark:bg-blue-900/20&quot;,&#10;        title: `${productsWithoutImages.length} products missing images`,&#10;        description: &quot;Add photos to boost sales&quot;,&#10;        action: &quot;Add Images&quot;,&#10;        link: &quot;#products&quot;,&#10;      });&#10;    }&#10;&#10;    return items.sort((a, b) =&gt; {&#10;      const priorityOrder = { critical: 3, high: 2, medium: 1, low: 0 };&#10;      return priorityOrder[b.priority] - priorityOrder[a.priority];&#10;    });&#10;  }, [products, orders]);&#10;&#10;  // Real-time activity feed&#10;  const activityFeed = useMemo(() =&gt; {&#10;    const activities = [];&#10;&#10;    // Recent orders&#10;    orders.slice(0, 5).forEach((order) =&gt; {&#10;      // Extract customer name from various possible fields&#10;      let customerName =&#10;        order.customerName ||&#10;        order.customerInfo?.name ||&#10;        order.shippingAddress?.name ||&#10;        order.billingAddress?.name;&#10;&#10;      // If no name found but we have userId, format it better&#10;      if (!customerName &amp;&amp; order.userId) {&#10;        // Check if userId looks like a MongoDB ObjectId (24 hex characters)&#10;        if (order.userId.match(/^[0-9a-fA-F]{24}$/)) {&#10;          customerName = `Customer ${order.userId.slice(-6).toUpperCase()}`;&#10;        } else {&#10;          customerName = order.userId;&#10;        }&#10;      }&#10;&#10;      // Final fallback&#10;      if (!customerName) {&#10;        customerName = &quot;Anonymous Customer&quot;;&#10;      }&#10;&#10;      activities.push({&#10;        type: &quot;order&quot;,&#10;        icon: &quot;fas fa-shopping-cart&quot;,&#10;        color: &quot;text-green-600&quot;,&#10;        title: `New order from ${customerName}`,&#10;        description: `${order.items?.length || 0} items • ${formatPrice(&#10;          order.total || 0,&#10;        )}`,&#10;        time: order.createdAt,&#10;        status: order.status,&#10;      });&#10;    });&#10;&#10;    return activities&#10;      .sort((a, b) =&gt; new Date(b.time) - new Date(a.time))&#10;      .slice(0, 8);&#10;  }, [orders, formatPrice]);&#10;&#10;  // Today's summary&#10;  const todaySummary = useMemo(() =&gt; {&#10;    const today = new Date().toISOString().split(&quot;T&quot;)[0];&#10;    const todayOrders = orders.filter((order) =&gt; {&#10;      const orderDate = new Date(order.createdAt).toISOString().split(&quot;T&quot;)[0];&#10;      return orderDate === today;&#10;    });&#10;&#10;    const todayRevenue = todayOrders.reduce(&#10;      (sum, order) =&gt; sum + (order.farmerSubtotal || order.total || 0),&#10;      0,&#10;    );&#10;&#10;    return {&#10;      ordersCount: todayOrders.length,&#10;      revenue: todayRevenue,&#10;      newCustomers: new Set(todayOrders.map((o) =&gt; o.customerEmail)).size,&#10;      topProduct: products.reduce((top, product) =&gt; {&#10;        const productOrdersToday = todayOrders.filter((order) =&gt;&#10;          order.items?.some(&#10;            (item) =&gt;&#10;              item.productId === product._id ||&#10;              item.product?._id === product._id,&#10;          ),&#10;        );&#10;        return productOrdersToday.length &gt; (top?.count || 0)&#10;          ? { ...product, count: productOrdersToday.length }&#10;          : top;&#10;      }, null),&#10;    };&#10;  }, [orders, products]);&#10;&#10;  // Seasonal recommendations&#10;  const seasonalRecommendations = useMemo(() =&gt; {&#10;    const currentMonth = new Date().getMonth();&#10;    const recommendations = [];&#10;&#10;    // Summer fruits and vegetables (June-August: months 5-7)&#10;    if (currentMonth &gt;= 5 &amp;&amp; currentMonth &lt;= 7) {&#10;      recommendations.push({&#10;        category: &quot;Summer Produce&quot;,&#10;        suggestion: &quot;Promote tomatoes, cucumbers, berries, and leafy greens&quot;,&#10;        icon: &quot;fas fa-sun&quot;,&#10;        color: &quot;text-orange-600&quot;,&#10;      });&#10;    }&#10;    // Fall harvest (September-November: months 8-10)&#10;    else if (currentMonth &gt;= 8 &amp;&amp; currentMonth &lt;= 10) {&#10;      recommendations.push({&#10;        category: &quot;Fall Harvest&quot;,&#10;        suggestion: &quot;Feature apples, pumpkins, root vegetables, and grains&quot;,&#10;        icon: &quot;fas fa-leaf&quot;,&#10;        color: &quot;text-orange-700&quot;,&#10;      });&#10;    }&#10;    // Winter storage crops (December-February: months 11, 0, 1)&#10;    else if (currentMonth === 11 || currentMonth &lt;= 1) {&#10;      recommendations.push({&#10;        category: &quot;Winter Storage&quot;,&#10;        suggestion:&#10;          &quot;Highlight preserved goods, winter squash, and dried products&quot;,&#10;        icon: &quot;fas fa-snowflake&quot;,&#10;        color: &quot;text-blue-600&quot;,&#10;      });&#10;    }&#10;    // Spring planting (March-May: months 2-4)&#10;    else {&#10;      recommendations.push({&#10;        category: &quot;Spring Fresh&quot;,&#10;        suggestion: &quot;Promote fresh herbs, early greens, and spring vegetables&quot;,&#10;        icon: &quot;fas fa-seedling&quot;,&#10;        color: &quot;text-green-600&quot;,&#10;      });&#10;    }&#10;&#10;    return recommendations;&#10;  }, []);&#10;&#10;  return (&#10;    &lt;div className=&quot;space-y-6&quot;&gt;&#10;      {/* Today's Overview */}&#10;      &lt;div className=&quot;bg-gradient-to-r from-green-500 to-green-600 rounded-xl shadow-lg p-6 text-white&quot;&gt;&#10;        &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;          &lt;div&gt;&#10;            &lt;h2 className=&quot;text-2xl font-bold&quot;&gt;Good morning, Farmer!&lt;/h2&gt;&#10;            &lt;p className=&quot;opacity-90&quot;&gt;&#10;              Here's what's happening on your farm today&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;text-right&quot;&gt;&#10;            &lt;p className=&quot;text-sm opacity-75&quot;&gt;&#10;              {new Date().toLocaleDateString()}&#10;            &lt;/p&gt;&#10;            &lt;p className=&quot;text-lg font-semibold&quot;&gt;&#10;              {new Date().toLocaleDateString(&quot;en-US&quot;, { weekday: &quot;long&quot; })}&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;grid grid-cols-2 md:grid-cols-4 gap-4&quot;&gt;&#10;          &lt;div className=&quot;bg-white/10 rounded-lg p-4&quot;&gt;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#10;              &lt;i className=&quot;fas fa-shopping-cart text-2xl mr-3&quot;&gt;&lt;/i&gt;&#10;              &lt;div&gt;&#10;                &lt;p className=&quot;text-2xl font-bold&quot;&gt;{todaySummary.ordersCount}&lt;/p&gt;&#10;                &lt;p className=&quot;text-sm opacity-75&quot;&gt;Orders Today&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;bg-white/10 rounded-lg p-4&quot;&gt;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#10;              &lt;i className=&quot;fas fa-dollar-sign text-2xl mr-3&quot;&gt;&lt;/i&gt;&#10;              &lt;div&gt;&#10;                &lt;p className=&quot;text-2xl font-bold&quot;&gt;&#10;                  {formatPrice(todaySummary.revenue)}&#10;                &lt;/p&gt;&#10;                &lt;p className=&quot;text-sm opacity-75&quot;&gt;Revenue Today&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;bg-white/10 rounded-lg p-4&quot;&gt;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#10;              &lt;i className=&quot;fas fa-users text-2xl mr-3&quot;&gt;&lt;/i&gt;&#10;              &lt;div&gt;&#10;                &lt;p className=&quot;text-2xl font-bold&quot;&gt;&#10;                  {todaySummary.newCustomers}&#10;                &lt;/p&gt;&#10;                &lt;p className=&quot;text-sm opacity-75&quot;&gt;New Customers&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;bg-white/10 rounded-lg p-4&quot;&gt;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#10;              &lt;i className=&quot;fas fa-star text-2xl mr-3&quot;&gt;&lt;/i&gt;&#10;              &lt;div&gt;&#10;                &lt;p className=&quot;text-lg font-bold&quot;&gt;&#10;                  {todaySummary.topProduct?.name || &quot;None&quot;}&#10;                &lt;/p&gt;&#10;                &lt;p className=&quot;text-sm opacity-75&quot;&gt;Top Product&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Action Items &amp; Quick Tools */}&#10;      &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-6&quot;&gt;&#10;        {/* Urgent Action Items */}&#10;        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6&quot;&gt;&#10;          &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;            &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;              &lt;i className=&quot;fas fa-bell text-orange-500 mr-2&quot;&gt;&lt;/i&gt;&#10;              Action Items&#10;            &lt;/h3&gt;&#10;            &lt;span className=&quot;bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-300 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;              {&#10;                actionItems.filter(&#10;                  (item) =&gt;&#10;                    item.priority === &quot;critical&quot; || item.priority === &quot;high&quot;,&#10;                ).length&#10;              }{&quot; &quot;}&#10;              urgent&#10;            &lt;/span&gt;&#10;          &lt;/div&gt;&#10;&#10;          {actionItems.length === 0 ? (&#10;            &lt;div className=&quot;text-center py-8&quot;&gt;&#10;              &lt;i className=&quot;fas fa-check-circle text-4xl text-green-500 mb-3&quot;&gt;&lt;/i&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;All caught up!&lt;/p&gt;&#10;              &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-500&quot;&gt;&#10;                No urgent action items at the moment.&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;          ) : (&#10;            &lt;div className=&quot;space-y-3&quot;&gt;&#10;              {actionItems.slice(0, 4).map((item, index) =&gt; (&#10;                &lt;div&#10;                  key={index}&#10;                  className={`${item.bgColor} rounded-lg p-4 border-l-4 border-current`}&#10;                &gt;&#10;                  &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#10;                    &lt;div className=&quot;flex items-start&quot;&gt;&#10;                      &lt;i&#10;                        className={`${item.icon} ${item.color} text-lg mr-3 mt-1`}&#10;                      &gt;&lt;/i&gt;&#10;                      &lt;div&gt;&#10;                        &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                          {item.title}&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#10;                          {item.description}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;button&#10;                      className={`${item.color} hover:underline text-sm font-medium`}&#10;                    &gt;&#10;                      {item.action}&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;&#10;        {/* Quick Farm Tools */}&#10;        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6&quot;&gt;&#10;          &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;            &lt;i className=&quot;fas fa-tools text-blue-500 mr-2&quot;&gt;&lt;/i&gt;&#10;            Quick Farm Tools&#10;          &lt;/h3&gt;&#10;&#10;          &lt;div className=&quot;grid grid-cols-2 gap-3&quot;&gt;&#10;            &lt;Link&#10;              href=&quot;/create&quot;&#10;              className=&quot;flex flex-col items-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg hover:bg-green-100 dark:hover:bg-green-900/40 transition text-center&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-plus text-green-600 dark:text-green-400 text-2xl mb-2&quot;&gt;&lt;/i&gt;&#10;              &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                Add Product&#10;              &lt;/span&gt;&#10;            &lt;/Link&gt;&#10;&#10;            &lt;button&#10;              onClick={() =&gt; setBulkUpdateModal(true)}&#10;              className=&quot;flex flex-col items-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-900/40 transition text-center&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-layer-group text-blue-600 dark:text-blue-400 text-2xl mb-2&quot;&gt;&lt;/i&gt;&#10;              &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                Bulk Update&#10;              &lt;/span&gt;&#10;            &lt;/button&gt;&#10;&#10;            &lt;Link&#10;              href=&quot;/farmer-orders&quot;&#10;              className=&quot;flex flex-col items-center p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg hover:bg-purple-100 dark:hover:bg-purple-900/40 transition text-center&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-clipboard-list text-purple-600 dark:text-purple-400 text-2xl mb-2&quot;&gt;&lt;/i&gt;&#10;              &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                Process Orders&#10;              &lt;/span&gt;&#10;            &lt;/Link&gt;&#10;&#10;            &lt;button&#10;              onClick={handleRefresh}&#10;              className=&quot;flex flex-col items-center p-4 bg-orange-50 dark:bg-orange-900/20 rounded-lg hover:bg-orange-100 dark:hover:bg-orange-900/40 transition text-center&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-sync-alt text-orange-600 dark:text-orange-400 text-2xl mb-2&quot;&gt;&lt;/i&gt;&#10;              &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                Refresh Data&#10;              &lt;/span&gt;&#10;            &lt;/button&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Activity Feed &amp; Seasonal Tips */}&#10;      &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-3 gap-6&quot;&gt;&#10;        {/* Real-time Activity Feed */}&#10;        &lt;div className=&quot;lg:col-span-2 bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6&quot;&gt;&#10;          &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;            &lt;i className=&quot;fas fa-activity text-green-500 mr-2&quot;&gt;&lt;/i&gt;&#10;            Live Farm Activity&#10;          &lt;/h3&gt;&#10;&#10;          {activityFeed.length === 0 ? (&#10;            &lt;div className=&quot;text-center py-8&quot;&gt;&#10;              &lt;i className=&quot;fas fa-calendar-day text-4xl text-gray-400 mb-3&quot;&gt;&lt;/i&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                No recent activity&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;          ) : (&#10;            &lt;div className=&quot;space-y-4 max-h-80 overflow-y-auto&quot;&gt;&#10;              {activityFeed.map((activity, index) =&gt; (&#10;                &lt;div&#10;                  key={index}&#10;                  className=&quot;flex items-start space-x-3 p-3 bg-gray-50 dark:bg-gray-700/50 rounded-lg&quot;&#10;                &gt;&#10;                  &lt;div className={`${activity.color} mt-1`}&gt;&#10;                    &lt;i className={activity.icon}&gt;&lt;/i&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#10;                    &lt;p className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                      {activity.title}&#10;                    &lt;/p&gt;&#10;                    &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      {activity.description}&#10;                    &lt;/p&gt;&#10;                    &lt;p className=&quot;text-xs text-gray-500 dark:text-gray-500 mt-1&quot;&gt;&#10;                      {formatDate(activity.time)}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                  {activity.status &amp;&amp; (&#10;                    &lt;span&#10;                      className={`px-2 py-1 rounded-full text-xs font-medium ${&#10;                        activity.status === &quot;pending&quot;&#10;                          ? &quot;bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300&quot;&#10;                          : activity.status === &quot;processing&quot;&#10;                            ? &quot;bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300&quot;&#10;                            : &quot;bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300&quot;&#10;                      }`}&#10;                    &gt;&#10;                      {activity.status}&#10;                    &lt;/span&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;&#10;        {/* Seasonal Recommendations */}&#10;        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6&quot;&gt;&#10;          &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;            &lt;i className=&quot;fas fa-lightbulb text-yellow-500 mr-2&quot;&gt;&lt;/i&gt;&#10;            Farm Tips&#10;          &lt;/h3&gt;&#10;&#10;          &lt;div className=&quot;space-y-4&quot;&gt;&#10;            {seasonalRecommendations.map((rec, index) =&gt; (&#10;              &lt;div&#10;                key={index}&#10;                className=&quot;p-4 bg-gradient-to-r from-gray-50 to-gray-100 dark:from-gray-700 dark:to-gray-600 rounded-lg&quot;&#10;              &gt;&#10;                &lt;div className=&quot;flex items-start&quot;&gt;&#10;                  &lt;i&#10;                    className={`${rec.icon} ${rec.color} text-xl mr-3 mt-1`}&#10;                  &gt;&lt;/i&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                      {rec.category}&#10;                    &lt;/h4&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#10;                      {rec.suggestion}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            ))}&#10;&#10;            &lt;div className=&quot;p-4 bg-gradient-to-r from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 rounded-lg border border-blue-200 dark:border-blue-700&quot;&gt;&#10;              &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white flex items-center&quot;&gt;&#10;                &lt;i className=&quot;fas fa-chart-line text-blue-600 mr-2&quot;&gt;&lt;/i&gt;&#10;                Growth Tip&#10;              &lt;/h4&gt;&#10;              &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#10;                Products with photos sell 3x better! Add high-quality images to&#10;                boost your sales.&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Enhanced Bulk Update Modal */}&#10;      {bulkUpdateModal &amp;&amp; (&#10;        &lt;div className=&quot;fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center p-4 z-50 animate-in fade-in duration-300&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-900 rounded-3xl w-full max-w-5xl max-h-[95vh] overflow-hidden shadow-2xl border border-gray-200 dark:border-gray-700 animate-in zoom-in duration-300&quot;&gt;&#10;            {/* Enhanced Header */}&#10;            &lt;div className=&quot;relative bg-gradient-to-r from-blue-600 to-purple-600 p-6 text-white&quot;&gt;&#10;              &lt;div className=&quot;absolute inset-0 bg-black/10&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;relative flex justify-between items-center&quot;&gt;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                  &lt;div className=&quot;p-3 bg-white/20 rounded-xl backdrop-blur-sm&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-layer-group text-2xl&quot;&gt;&lt;/i&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h3 className=&quot;text-2xl font-bold&quot;&gt;Bulk Update Products&lt;/h3&gt;&#10;                    &lt;p className=&quot;text-blue-100 mt-1&quot;&gt;&#10;                      Update multiple products at once to save time&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;button&#10;                  onClick={() =&gt; setBulkUpdateModal(false)}&#10;                  className=&quot;p-2 hover:bg-white/20 rounded-xl transition-colors&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-times text-xl&quot;&gt;&lt;/i&gt;&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;p-8 max-h-[calc(95vh-200px)] overflow-y-auto space-y-8&quot;&gt;&#10;              {/* Step Indicator */}&#10;              &lt;div className=&quot;flex items-center justify-center space-x-4 mb-8&quot;&gt;&#10;                &lt;div&#10;                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-all ${&#10;                    selectedProducts.length &gt; 0&#10;                      ? &quot;bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300&quot;&#10;                      : &quot;bg-gray-100 dark:bg-gray-700 text-gray-500&quot;&#10;                  }`}&#10;                &gt;&#10;                  &lt;div&#10;                    className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${&#10;                      selectedProducts.length &gt; 0&#10;                        ? &quot;bg-green-500 text-white&quot;&#10;                        : &quot;bg-gray-300 dark:bg-gray-600 text-gray-600 dark:text-gray-400&quot;&#10;                    }`}&#10;                  &gt;&#10;                    1&#10;                  &lt;/div&gt;&#10;                  &lt;span className=&quot;text-sm font-medium&quot;&gt;Select Products&lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div&#10;                  className={`w-8 h-0.5 transition-all ${&#10;                    selectedProducts.length &gt; 0 &amp;&amp; bulkAction&#10;                      ? &quot;bg-green-500&quot;&#10;                      : &quot;bg-gray-300 dark:bg-gray-600&quot;&#10;                  }`}&#10;                &gt;&lt;/div&gt;&#10;&#10;                &lt;div&#10;                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-all ${&#10;                    selectedProducts.length &gt; 0 &amp;&amp; bulkAction&#10;                      ? &quot;bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300&quot;&#10;                      : &quot;bg-gray-100 dark:bg-gray-700 text-gray-500&quot;&#10;                  }`}&#10;                &gt;&#10;                  &lt;div&#10;                    className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${&#10;                      selectedProducts.length &gt; 0 &amp;&amp; bulkAction&#10;                        ? &quot;bg-green-500 text-white&quot;&#10;                        : &quot;bg-gray-300 dark:bg-gray-600 text-gray-600 dark:text-gray-400&quot;&#10;                    }`}&#10;                  &gt;&#10;                    2&#10;                  &lt;/div&gt;&#10;                  &lt;span className=&quot;text-sm font-medium&quot;&gt;Choose Action&lt;/span&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div&#10;                  className={`w-8 h-0.5 transition-all ${&#10;                    selectedProducts.length &gt; 0 &amp;&amp;&#10;                    bulkAction &amp;&amp;&#10;                    (bulkValues.price ||&#10;                      bulkValues.stock ||&#10;                      bulkValues.status ||&#10;                      bulkValues.category)&#10;                      ? &quot;bg-green-500&quot;&#10;                      : &quot;bg-gray-300 dark:bg-gray-600&quot;&#10;                  }`}&#10;                &gt;&lt;/div&gt;&#10;&#10;                &lt;div&#10;                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-all ${&#10;                    selectedProducts.length &gt; 0 &amp;&amp;&#10;                    bulkAction &amp;&amp;&#10;                    (bulkValues.price ||&#10;                      bulkValues.stock ||&#10;                      bulkValues.status ||&#10;                      bulkValues.category)&#10;                      ? &quot;bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300&quot;&#10;                      : &quot;bg-gray-100 dark:bg-gray-700 text-gray-500&quot;&#10;                  }`}&#10;                &gt;&#10;                  &lt;div&#10;                    className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${&#10;                      selectedProducts.length &gt; 0 &amp;&amp;&#10;                      bulkAction &amp;&amp;&#10;                      (bulkValues.price ||&#10;                        bulkValues.stock ||&#10;                        bulkValues.status ||&#10;                        bulkValues.category)&#10;                        ? &quot;bg-green-500 text-white&quot;&#10;                        : &quot;bg-gray-300 dark:bg-gray-600 text-gray-600 dark:text-gray-400&quot;&#10;                    }`}&#10;                  &gt;&#10;                    3&#10;                  &lt;/div&gt;&#10;                  &lt;span className=&quot;text-sm font-medium&quot;&gt;Set Values&lt;/span&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Enhanced Product Selection */}&#10;              &lt;div className=&quot;bg-gray-50 dark:bg-gray-800/50 rounded-2xl p-6&quot;&gt;&#10;                &lt;div className=&quot;flex justify-between items-center mb-6&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                    &lt;div className=&quot;p-2 bg-blue-100 dark:bg-blue-900/30 rounded-lg&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-boxes text-blue-600 dark:text-blue-400&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div&gt;&#10;                      &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                        Select Products&#10;                      &lt;/h4&gt;&#10;                      &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        {selectedProducts.length} of {products.length} products&#10;                        selected&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                    {selectedProducts.length &gt; 0 &amp;&amp; (&#10;                      &lt;div className=&quot;px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full text-sm font-medium&quot;&gt;&#10;                        {selectedProducts.length} selected&#10;                      &lt;/div&gt;&#10;                    )}&#10;                    &lt;button&#10;                      onClick={selectAllProducts}&#10;                      className=&quot;px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-xl text-sm font-medium transition-colors flex items-center space-x-2&quot;&#10;                    &gt;&#10;                      &lt;i&#10;                        className={`fas ${&#10;                          selectedProducts.length === products.length&#10;                            ? &quot;fa-minus&quot;&#10;                            : &quot;fa-check-double&quot;&#10;                        }`}&#10;                      &gt;&lt;/i&gt;&#10;                      &lt;span&gt;&#10;                        {selectedProducts.length === products.length&#10;                          ? &quot;Deselect All&quot;&#10;                          : &quot;Select All&quot;}&#10;                      &lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Products Grid Container with proper spacing and no horizontal scroll */}&#10;                &lt;div className=&quot;mt-8&quot;&gt;&#10;                  &lt;div className=&quot;max-h-80 overflow-y-auto overflow-x-hidden scrollbar-thin scrollbar-track-gray-100 dark:scrollbar-track-gray-800 scrollbar-thumb-gray-300 dark:scrollbar-thumb-gray-600 hover:scrollbar-thumb-gray-400 dark:hover:scrollbar-thumb-gray-500&quot;&gt;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-1&quot;&gt;&#10;                      {products.map((product) =&gt; (&#10;                        &lt;div&#10;                          key={product._id}&#10;                          className={`group relative p-4 border-2 rounded-xl cursor-pointer transition-all duration-200 hover:shadow-lg ${&#10;                            selectedProducts.includes(product._id)&#10;                              ? &quot;border-blue-500 bg-blue-50 dark:bg-blue-900/20 shadow-md scale-[1.02]&quot;&#10;                              : &quot;border-gray-200 dark:border-gray-700 hover:border-blue-300 dark:hover:border-blue-600&quot;&#10;                          }`}&#10;                          onClick={() =&gt; toggleProductSelection(product._id)}&#10;                        &gt;&#10;                          {/* Selection indicator */}&#10;                          &lt;div&#10;                            className={`absolute -top-2 -right-2 w-6 h-6 rounded-full flex items-center justify-center transition-all ${&#10;                              selectedProducts.includes(product._id)&#10;                                ? &quot;bg-blue-500 text-white scale-110&quot;&#10;                                : &quot;bg-gray-200 dark:bg-gray-600 text-gray-400 group-hover:bg-blue-100 dark:group-hover:bg-blue-900&quot;&#10;                            }`}&#10;                          &gt;&#10;                            &lt;i&#10;                              className={`fas ${&#10;                                selectedProducts.includes(product._id)&#10;                                  ? &quot;fa-check&quot;&#10;                                  : &quot;fa-plus&quot;&#10;                              } text-xs`}&#10;                            &gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                            &lt;div&#10;                              className={`w-12 h-12 rounded-xl flex items-center justify-center transition-all ${&#10;                                selectedProducts.includes(product._id)&#10;                                  ? &quot;bg-blue-100 dark:bg-blue-800 text-blue-600 dark:text-blue-300&quot;&#10;                                  : &quot;bg-gray-100 dark:bg-gray-700 text-gray-400 group-hover:bg-blue-50 dark:group-hover:bg-blue-900/30&quot;&#10;                              }`}&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-box text-lg&quot;&gt;&lt;/i&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#10;                              &lt;p className=&quot;font-semibold text-gray-900 dark:text-white truncate text-sm&quot;&gt;&#10;                                {product.name}&#10;                              &lt;/p&gt;&#10;                              &lt;div className=&quot;flex items-center space-x-2 mt-1&quot;&gt;&#10;                                &lt;span&#10;                                  className={`px-2 py-0.5 rounded-full text-xs font-medium ${&#10;                                    product.stock &gt; 10&#10;                                      ? &quot;bg-green-100 text-green-700 dark:bg-green-900/30 dark:text-green-300&quot;&#10;                                      : product.stock &gt; 0&#10;                                        ? &quot;bg-yellow-100 text-yellow-700 dark:bg-yellow-900/30 dark:text-yellow-300&quot;&#10;                                        : &quot;bg-red-100 text-red-700 dark:bg-red-900/30 dark:text-red-300&quot;&#10;                                  }`}&#10;                                &gt;&#10;                                  {product.stock} in stock&#10;                                &lt;/span&gt;&#10;                                &lt;span className=&quot;text-xs text-gray-600 dark:text-gray-400 font-medium&quot;&gt;&#10;                                  {formatPrice(product.price)}&#10;                                &lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      ))}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Enhanced Bulk Action Selection */}&#10;              {selectedProducts.length &gt; 0 &amp;&amp; (&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-3 mb-6&quot;&gt;&#10;                    &lt;div className=&quot;p-2 bg-purple-100 dark:bg-purple-900/30 rounded-lg&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-magic text-purple-600 dark:text-purple-400&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div&gt;&#10;                      &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                        Choose Action&#10;                      &lt;/h4&gt;&#10;                      &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Select what you want to update&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4&quot;&gt;&#10;                    {[&#10;                      {&#10;                        value: &quot;price&quot;,&#10;                        label: &quot;Update Price&quot;,&#10;                        icon: &quot;fas fa-dollar-sign&quot;,&#10;                        color: &quot;green&quot;,&#10;                        description: &quot;Change product prices&quot;,&#10;                      },&#10;                      {&#10;                        value: &quot;stock&quot;,&#10;                        label: &quot;Update Stock&quot;,&#10;                        icon: &quot;fas fa-box&quot;,&#10;                        color: &quot;blue&quot;,&#10;                        description: &quot;Adjust inventory levels&quot;,&#10;                      },&#10;                      {&#10;                        value: &quot;status&quot;,&#10;                        label: &quot;Update Status&quot;,&#10;                        icon: &quot;fas fa-toggle-on&quot;,&#10;                        color: &quot;purple&quot;,&#10;                        description: &quot;Enable/disable products&quot;,&#10;                      },&#10;                      {&#10;                        value: &quot;category&quot;,&#10;                        label: &quot;Update Category&quot;,&#10;                        icon: &quot;fas fa-tags&quot;,&#10;                        color: &quot;orange&quot;,&#10;                        description: &quot;Change product categories&quot;,&#10;                      },&#10;                    ].map((action) =&gt; (&#10;                      &lt;button&#10;                        key={action.value}&#10;                        onClick={() =&gt; setBulkAction(action.value)}&#10;                        className={`group relative p-6 border-2 rounded-2xl text-center transition-all duration-200 hover:shadow-lg ${&#10;                          bulkAction === action.value&#10;                            ? `border-${action.color}-500 bg-${action.color}-50 dark:bg-${action.color}-900/20 shadow-md scale-[1.02]`&#10;                            : &quot;border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {/* Selection indicator */}&#10;                        &lt;div&#10;                          className={`absolute -top-2 -right-2 w-6 h-6 rounded-full flex items-center justify-center transition-all ${&#10;                            bulkAction === action.value&#10;                              ? `bg-${action.color}-500 text-white scale-110`&#10;                              : &quot;bg-gray-200 dark:bg-gray-600 text-gray-400 group-hover:scale-110&quot;&#10;                          }`}&#10;                        &gt;&#10;                          &lt;i&#10;                            className={`fas ${&#10;                              bulkAction === action.value&#10;                                ? &quot;fa-check&quot;&#10;                                : &quot;fa-plus&quot;&#10;                            } text-xs`}&#10;                          &gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div&#10;                          className={`w-16 h-16 mx-auto mb-4 rounded-2xl flex items-center justify-center transition-all ${&#10;                            bulkAction === action.value&#10;                              ? `bg-${action.color}-100 dark:bg-${action.color}-800 text-${action.color}-600 dark:text-${action.color}-300`&#10;                              : &quot;bg-gray-100 dark:bg-gray-700 text-gray-400 group-hover:bg-gray-200 dark:group-hover:bg-gray-600&quot;&#10;                          }`}&#10;                        &gt;&#10;                          &lt;i className={`${action.icon} text-2xl`}&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;h5 className=&quot;font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                          {action.label}&#10;                        &lt;/h5&gt;&#10;                        &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          {action.description}&#10;                        &lt;/p&gt;&#10;                      &lt;/button&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;&#10;              {/* Enhanced Input Fields */}&#10;              {bulkAction &amp;&amp; selectedProducts.length &gt; 0 &amp;&amp; (&#10;                &lt;div className=&quot;bg-gradient-to-r from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20 rounded-2xl p-6 border border-indigo-200 dark:border-indigo-800&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-3 mb-6&quot;&gt;&#10;                    &lt;div className=&quot;p-2 bg-indigo-100 dark:bg-indigo-900/30 rounded-lg&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-edit text-indigo-600 dark:text-indigo-400&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div&gt;&#10;                      &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                        Set New Value&#10;                      &lt;/h4&gt;&#10;                      &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        This will be applied to all {selectedProducts.length}{&quot; &quot;}&#10;                        selected products&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;max-w-md&quot;&gt;&#10;                    {bulkAction === &quot;price&quot; &amp;&amp; (&#10;                      &lt;div className=&quot;relative&quot;&gt;&#10;                        &lt;div className=&quot;absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-dollar-sign&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          step=&quot;0.01&quot;&#10;                          placeholder=&quot;0.00&quot;&#10;                          value={bulkValues.price}&#10;                          onChange={(e) =&gt;&#10;                            setBulkValues((prev) =&gt; ({&#10;                              ...prev,&#10;                              price: e.target.value,&#10;                            }))&#10;                          }&#10;                          className=&quot;w-full pl-10 pr-4 py-4 border-2 border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent dark:bg-gray-800 dark:text-white text-lg font-semibold transition-all&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;mt-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Enter the new price for all selected products&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;&#10;                    {bulkAction === &quot;stock&quot; &amp;&amp; (&#10;                      &lt;div className=&quot;relative&quot;&gt;&#10;                        &lt;div className=&quot;absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-box&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          placeholder=&quot;0&quot;&#10;                          value={bulkValues.stock}&#10;                          onChange={(e) =&gt;&#10;                            setBulkValues((prev) =&gt; ({&#10;                              ...prev,&#10;                              stock: e.target.value,&#10;                            }))&#10;                          }&#10;                          className=&quot;w-full pl-10 pr-4 py-4 border-2 border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent dark:bg-gray-800 dark:text-white text-lg font-semibold transition-all&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;mt-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Enter the new stock quantity for all selected products&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;&#10;                    {bulkAction === &quot;status&quot; &amp;&amp; (&#10;                      &lt;div className=&quot;relative&quot;&gt;&#10;                        &lt;div className=&quot;absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-toggle-on&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;select&#10;                          value={bulkValues.status}&#10;                          onChange={(e) =&gt;&#10;                            setBulkValues((prev) =&gt; ({&#10;                              ...prev,&#10;                              status: e.target.value,&#10;                            }))&#10;                          }&#10;                          className=&quot;w-full pl-10 pr-4 py-4 border-2 border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent dark:bg-gray-800 dark:text-white text-lg font-semibold transition-all&quot;&#10;                        &gt;&#10;                          &lt;option value=&quot;&quot;&gt;Select status&lt;/option&gt;&#10;                          &lt;option value=&quot;active&quot;&gt; Active&lt;/option&gt;&#10;                          &lt;option value=&quot;inactive&quot;&gt; Inactive&lt;/option&gt;&#10;                        &lt;/select&gt;&#10;                        &lt;div className=&quot;mt-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Choose the new status for all selected products&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;&#10;                    {bulkAction === &quot;category&quot; &amp;&amp; (&#10;                      &lt;div className=&quot;relative&quot;&gt;&#10;                        &lt;div className=&quot;absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-tags&quot;&gt;&lt;/i&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;input&#10;                          type=&quot;text&quot;&#10;                          placeholder=&quot;Category name&quot;&#10;                          value={bulkValues.category}&#10;                          onChange={(e) =&gt;&#10;                            setBulkValues((prev) =&gt; ({&#10;                              ...prev,&#10;                              category: e.target.value,&#10;                            }))&#10;                          }&#10;                          className=&quot;w-full pl-10 pr-4 py-4 border-2 border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent dark:bg-gray-800 dark:text-white text-lg font-semibold transition-all&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;mt-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Enter the new category for all selected products&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/div&gt;&#10;&#10;            {/* Enhanced Footer */}&#10;            &lt;div className=&quot;bg-gray-50 dark:bg-gray-800/50 px-8 py-6 border-t border-gray-200 dark:border-gray-700&quot;&gt;&#10;              &lt;div className=&quot;flex flex-col sm:flex-row justify-between items-center space-y-3 sm:space-y-0&quot;&gt;&#10;                &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  {selectedProducts.length &gt; 0 &amp;&amp;&#10;                  bulkAction &amp;&amp;&#10;                  (bulkValues.price ||&#10;                    bulkValues.stock ||&#10;                    bulkValues.status ||&#10;                    bulkValues.category) ? (&#10;                    &lt;span className=&quot;flex items-center space-x-2&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-info-circle text-blue-500&quot;&gt;&lt;/i&gt;&#10;                      &lt;span&gt;&#10;                        Ready to update {selectedProducts.length} products&#10;                      &lt;/span&gt;&#10;                    &lt;/span&gt;&#10;                  ) : (&#10;                    &lt;span&gt;Complete all steps to proceed with bulk update&lt;/span&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; setBulkUpdateModal(false)}&#10;                    className=&quot;px-6 py-3 border-2 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-xl hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors font-medium&quot;&#10;                  &gt;&#10;                    Cancel&#10;                  &lt;/button&gt;&#10;                  &lt;button&#10;                    onClick={handleBulkUpdate}&#10;                    disabled={&#10;                      !selectedProducts.length ||&#10;                      !bulkAction ||&#10;                      bulkLoading ||&#10;                      !(&#10;                        bulkValues.price ||&#10;                        bulkValues.stock ||&#10;                        bulkValues.status ||&#10;                        bulkValues.category&#10;                      )&#10;                    }&#10;                    className=&quot;px-8 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl hover:from-blue-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all font-semibold shadow-lg hover:shadow-xl disabled:shadow-none flex items-center space-x-2&quot;&#10;                  &gt;&#10;                    {bulkLoading ? (&#10;                      &lt;&gt;&#10;                        &lt;div className=&quot;w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin&quot;&gt;&lt;/div&gt;&#10;                        &lt;span&gt;Updating Products...&lt;/span&gt;&#10;                      &lt;/&gt;&#10;                    ) : (&#10;                      &lt;&gt;&#10;                        &lt;i className=&quot;fas fa-magic&quot;&gt;&lt;/i&gt;&#10;                        &lt;span&gt;Update {selectedProducts.length} Products&lt;/span&gt;&#10;                      &lt;/&gt;&#10;                    )}&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#13;&#10;&#13;&#10;import { useState, useMemo } from &quot;react&quot;;&#13;&#10;import { useRouter } from &quot;next/navigation&quot;;&#13;&#10;import Link from &quot;next/link&quot;;&#13;&#10;&#13;&#10;export default function DashboardTab({&#13;&#10;  orders,&#13;&#10;  products,&#13;&#10;  formatPrice,&#13;&#10;  formatDate,&#13;&#10;  handleRefresh,&#13;&#10;  updateBulkProductsInCache, // Restore this prop&#13;&#10;  bulkUpdateProducts,&#13;&#10;}) {&#13;&#10;  const router = useRouter();&#13;&#10;  const [bulkUpdateModal, setBulkUpdateModal] = useState(false);&#13;&#10;  const [selectedProducts, setSelectedProducts] = useState([]);&#13;&#10;  const [bulkAction, setBulkAction] = useState(&quot;&quot;);&#13;&#10;  const [bulkValues, setBulkValues] = useState({&#13;&#10;    price: &quot;&quot;,&#13;&#10;    stock: &quot;&quot;,&#13;&#10;    status: &quot;&quot;,&#13;&#10;    category: &quot;&quot;,&#13;&#10;  });&#13;&#10;  const [bulkLoading, setBulkLoading] = useState(false);&#13;&#10;&#13;&#10;  // Quick Farm Tools handlers&#13;&#10;  const handleQuickTool = (toolType) =&gt; {&#13;&#10;    switch (toolType) {&#13;&#10;      case &quot;bulk-update&quot;:&#13;&#10;        setBulkUpdateModal(true);&#13;&#10;        break;&#13;&#10;      case &quot;inventory-sync&quot;:&#13;&#10;        router.push(&quot;/manage?tab=products&amp;action=inventory&quot;);&#13;&#10;        break;&#13;&#10;      case &quot;price-optimizer&quot;:&#13;&#10;        router.push(&quot;/manage?tab=analytics&amp;tool=pricing&quot;);&#13;&#10;        break;&#13;&#10;      case &quot;harvest-planner&quot;:&#13;&#10;        router.push(&quot;/manage?tab=dashboard&amp;tool=planner&quot;);&#13;&#10;        break;&#13;&#10;      default:&#13;&#10;        break;&#13;&#10;    }&#13;&#10;  };&#13;&#10;&#13;&#10;  // Bulk update functionality&#13;&#10;  const handleBulkUpdate = async () =&gt; {&#13;&#10;    if (!selectedProducts.length || !bulkAction) {&#13;&#10;      alert(&quot;Please select products and an action to perform.&quot;);&#13;&#10;      return;&#13;&#10;    }&#13;&#10;&#13;&#10;    setBulkLoading(true);&#13;&#10;    try {&#13;&#10;      const updateData = {};&#13;&#10;&#13;&#10;      switch (bulkAction) {&#13;&#10;        case &quot;price&quot;:&#13;&#10;          if (!bulkValues.price) {&#13;&#10;            alert(&quot;Please enter a price value.&quot;);&#13;&#10;            return;&#13;&#10;          }&#13;&#10;          updateData.price = parseFloat(bulkValues.price);&#13;&#10;          break;&#13;&#10;        case &quot;stock&quot;:&#13;&#10;          if (!bulkValues.stock) {&#13;&#10;            alert(&quot;Please enter a stock value.&quot;);&#13;&#10;            return;&#13;&#10;          }&#13;&#10;          updateData.stock = parseInt(bulkValues.stock);&#13;&#10;          break;&#13;&#10;        case &quot;status&quot;:&#13;&#10;          if (!bulkValues.status) {&#13;&#10;            alert(&quot;Please select a status.&quot;);&#13;&#10;            return;&#13;&#10;          }&#13;&#10;          updateData.status = bulkValues.status;&#13;&#10;          break;&#13;&#10;        case &quot;category&quot;:&#13;&#10;          if (!bulkValues.category) {&#13;&#10;            alert(&quot;Please enter a category.&quot;);&#13;&#10;            return;&#13;&#10;          }&#13;&#10;          updateData.category = bulkValues.category;&#13;&#10;          break;&#13;&#10;      }&#13;&#10;&#13;&#10;      // Use the bulkUpdateProducts function from hook (includes cache invalidation like farmer updates)&#13;&#10;      console.log(&quot; [DashboardTab] Calling bulkUpdateProducts...&quot;);&#13;&#10;      console.log(&quot; [DashboardTab] Selected products:&quot;, selectedProducts);&#13;&#10;      console.log(&quot; [DashboardTab] Update data:&quot;, updateData);&#13;&#10;      console.log(&#13;&#10;        &quot; [DashboardTab] Current products before update:&quot;,&#13;&#10;        products,&#13;&#10;      );&#13;&#10;&#13;&#10;      // DEBUG: Check if selected products are valid IDs&#13;&#10;      console.log(&quot; [DashboardTab] Selected product IDs type check:&quot;, {&#13;&#10;        selectedProducts: selectedProducts,&#13;&#10;        areStrings: selectedProducts.map((id) =&gt; typeof id),&#13;&#10;        validObjectIds: selectedProducts.map((id) =&gt; id &amp;&amp; id.length === 24),&#13;&#10;        productsInData: products.map((p) =&gt; ({&#13;&#10;          id: p._id || p.id,&#13;&#10;          name: p.name,&#13;&#10;        })),&#13;&#10;      });&#13;&#10;&#13;&#10;      const result = await bulkUpdateProducts(selectedProducts, updateData);&#13;&#10;&#13;&#10;      console.log(&quot; [DashboardTab] Bulk update result:&quot;, result);&#13;&#10;&#13;&#10;      if (result.success) {&#13;&#10;        console.log(&quot;✅ [DashboardTab] Bulk update API call successful&quot;);&#13;&#10;&#13;&#10;        alert(&#13;&#10;          `Successfully updated ${result.data.updatedCount || 1} products!`,&#13;&#10;        );&#13;&#10;&#13;&#10;        // REMOVED: Don't call handleRefresh() as it overrides optimistic updates&#13;&#10;        // The bulkUpdateProducts function already handles cache updates properly&#13;&#10;        //&#13;&#10;        // // FORCE immediate refresh to ensure dashboard updates&#13;&#10;        // console.log(&#13;&#10;        //   &quot; [DashboardTab] Forcing immediate refresh after bulk update...&quot;,&#13;&#10;        // );&#13;&#10;        // console.log(&#13;&#10;        //   &quot; [DashboardTab] handleRefresh function exists:&quot;,&#13;&#10;        //   !!handleRefresh,&#13;&#10;        // );&#13;&#10;&#13;&#10;        // if (handleRefresh) {&#13;&#10;        //   console.log(&quot; [DashboardTab] Calling handleRefresh...&quot;);&#13;&#10;        //   await handleRefresh(); // Force refresh dashboard data&#13;&#10;        //   console.log(&quot;✅ [DashboardTab] handleRefresh completed&quot;);&#13;&#10;        // } else {&#13;&#10;        //   console.error(&#13;&#10;        //     &quot;❌ [DashboardTab] handleRefresh function not available!&quot;,&#13;&#10;        //   );&#13;&#10;        // }&#13;&#10;&#13;&#10;        // // Log products after refresh to see if they changed&#13;&#10;        // console.log(&#13;&#10;        //   &quot; [DashboardTab] Products after refresh (should update via React state):&quot;,&#13;&#10;        // );&#13;&#10;        // setTimeout(() =&gt; {&#13;&#10;        //   console.log(&#13;&#10;        //     &quot; [DashboardTab] Products state after refresh:&quot;,&#13;&#10;        //     products.map((p) =&gt; ({&#13;&#10;        //       id: p._id,&#13;&#10;        //       name: p.name,&#13;&#10;        //       stock: p.stock,&#13;&#10;        //       price: p.price,&#13;&#10;        //       status: p.status,&#13;&#10;        //     })),&#13;&#10;        //   );&#13;&#10;        // }, 1000);&#13;&#10;&#13;&#10;        // Dispatch custom event to notify products page of bulk update&#13;&#10;        window.dispatchEvent(&#13;&#10;          new CustomEvent(&quot;productsBulkUpdated&quot;, {&#13;&#10;            detail: {&#13;&#10;              productIds: selectedProducts,&#13;&#10;              updateData: updateData,&#13;&#10;              timestamp: Date.now(),&#13;&#10;              cacheCleared: result.cacheCleared,&#13;&#10;            },&#13;&#10;          }),&#13;&#10;        );&#13;&#10;&#13;&#10;        // Also set localStorage flag for cross-tab communication&#13;&#10;        localStorage.setItem(&#13;&#10;          &quot;productsBulkUpdated&quot;,&#13;&#10;          JSON.stringify({&#13;&#10;            productIds: selectedProducts,&#13;&#10;            updateData: updateData,&#13;&#10;            timestamp: Date.now(),&#13;&#10;            cacheCleared: result.cacheCleared,&#13;&#10;          }),&#13;&#10;        );&#13;&#10;&#13;&#10;        // No need to force refresh - cache invalidation handles it automatically&#13;&#10;        // if (handleRefresh) {&#13;&#10;        //   handleRefresh(true); // Force refresh&#13;&#10;        // }&#13;&#10;&#13;&#10;        setBulkUpdateModal(false);&#13;&#10;        setSelectedProducts([]);&#13;&#10;        setBulkAction(&quot;&quot;);&#13;&#10;        setBulkValues({ price: &quot;&quot;, stock: &quot;&quot;, status: &quot;&quot;, category: &quot;&quot; });&#13;&#10;      } else {&#13;&#10;        throw new Error(result.error || &quot;Update failed&quot;);&#13;&#10;      }&#13;&#10;    } catch (error) {&#13;&#10;      console.error(&quot;Bulk update error:&quot;, error);&#13;&#10;      alert(`Error updating products: ${error.message}`);&#13;&#10;    } finally {&#13;&#10;      setBulkLoading(false);&#13;&#10;    }&#13;&#10;  };&#13;&#10;&#13;&#10;  const toggleProductSelection = (productId) =&gt; {&#13;&#10;    setSelectedProducts((prev) =&gt;&#13;&#10;      prev.includes(productId)&#13;&#10;        ? prev.filter((id) =&gt; id !== productId)&#13;&#10;        : [...prev, productId],&#13;&#10;    );&#13;&#10;  };&#13;&#10;&#13;&#10;  const selectAllProducts = () =&gt; {&#13;&#10;    if (selectedProducts.length === products.length) {&#13;&#10;      setSelectedProducts([]);&#13;&#10;    } else {&#13;&#10;      setSelectedProducts(products.map((p) =&gt; p._id));&#13;&#10;    }&#13;&#10;  };&#13;&#10;&#13;&#10;  // Calculate urgent action items&#13;&#10;  const actionItems = useMemo(() =&gt; {&#13;&#10;    const items = [];&#13;&#10;&#13;&#10;    // Low stock alerts&#13;&#10;    const lowStockProducts = products.filter(&#13;&#10;      (p) =&gt; p.stock &lt;= 5 &amp;&amp; p.stock &gt; 0,&#13;&#10;    );&#13;&#10;    if (lowStockProducts.length &gt; 0) {&#13;&#10;      items.push({&#13;&#10;        type: &quot;low-stock&quot;,&#13;&#10;        priority: &quot;high&quot;,&#13;&#10;        icon: &quot;fas fa-exclamation-triangle&quot;,&#13;&#10;        color: &quot;text-red-600&quot;,&#13;&#10;        bgColor: &quot;bg-red-50 dark:bg-red-900/20&quot;,&#13;&#10;        title: `${lowStockProducts.length} products low on stock`,&#13;&#10;        description: &quot;Restock needed to avoid stockouts&quot;,&#13;&#10;        action: &quot;View Products&quot;,&#13;&#10;        link: &quot;#products&quot;,&#13;&#10;      });&#13;&#10;    }&#13;&#10;&#13;&#10;    // Out of stock alerts&#13;&#10;    const outOfStockProducts = products.filter((p) =&gt; p.stock === 0);&#13;&#10;    if (outOfStockProducts.length &gt; 0) {&#13;&#10;      items.push({&#13;&#10;        type: &quot;out-of-stock&quot;,&#13;&#10;        priority: &quot;critical&quot;,&#13;&#10;        icon: &quot;fas fa-times-circle&quot;,&#13;&#10;        color: &quot;text-red-700&quot;,&#13;&#10;        bgColor: &quot;bg-red-100 dark:bg-red-900/30&quot;,&#13;&#10;        title: `${outOfStockProducts.length} products out of stock`,&#13;&#10;        description: &quot;Products unavailable for purchase&quot;,&#13;&#10;        action: &quot;Restock Now&quot;,&#13;&#10;        link: &quot;#products&quot;,&#13;&#10;      });&#13;&#10;    }&#13;&#10;&#13;&#10;    // Pending orders&#13;&#10;    const pendingOrders = orders.filter((o) =&gt; o.status === &quot;pending&quot;);&#13;&#10;    if (pendingOrders.length &gt; 0) {&#13;&#10;      items.push({&#13;&#10;        type: &quot;pending-orders&quot;,&#13;&#10;        priority: &quot;medium&quot;,&#13;&#10;        icon: &quot;fas fa-clock&quot;,&#13;&#10;        color: &quot;text-yellow-600&quot;,&#13;&#10;        bgColor: &quot;bg-yellow-50 dark:bg-yellow-900/20&quot;,&#13;&#10;        title: `${pendingOrders.length} orders awaiting processing`,&#13;&#10;        description: &quot;New orders need your attention&quot;,&#13;&#10;        action: &quot;Process Orders&quot;,&#13;&#10;        link: &quot;#orders&quot;,&#13;&#10;      });&#13;&#10;    }&#13;&#10;&#13;&#10;    // Products without images&#13;&#10;    const productsWithoutImages = products.filter(&#13;&#10;      (p) =&gt; !p.images || p.images.length === 0,&#13;&#10;    );&#13;&#10;    if (productsWithoutImages.length &gt; 0) {&#13;&#10;      items.push({&#13;&#10;        type: &quot;missing-images&quot;,&#13;&#10;        priority: &quot;low&quot;,&#13;&#10;        icon: &quot;fas fa-image&quot;,&#13;&#10;        color: &quot;text-blue-600&quot;,&#13;&#10;        bgColor: &quot;bg-blue-50 dark:bg-blue-900/20&quot;,&#13;&#10;        title: `${productsWithoutImages.length} products missing images`,&#13;&#10;        description: &quot;Add photos to boost sales&quot;,&#13;&#10;        action: &quot;Add Images&quot;,&#13;&#10;        link: &quot;#products&quot;,&#13;&#10;      });&#13;&#10;    }&#13;&#10;&#13;&#10;    return items.sort((a, b) =&gt; {&#13;&#10;      const priorityOrder = { critical: 3, high: 2, medium: 1, low: 0 };&#13;&#10;      return priorityOrder[b.priority] - priorityOrder[a.priority];&#13;&#10;    });&#13;&#10;  }, [products, orders]);&#13;&#10;&#13;&#10;  // Real-time activity feed&#13;&#10;  const activityFeed = useMemo(() =&gt; {&#13;&#10;    const activities = [];&#13;&#10;&#13;&#10;    // Recent orders&#13;&#10;    orders.slice(0, 5).forEach((order) =&gt; {&#13;&#10;      // Extract customer name from various possible fields&#13;&#10;      let customerName =&#13;&#10;        order.customerName ||&#13;&#10;        order.customerInfo?.name ||&#13;&#10;        order.shippingAddress?.name ||&#13;&#10;        order.billingAddress?.name;&#13;&#10;&#13;&#10;      // If no name found but we have userId, format it better&#13;&#10;      if (!customerName &amp;&amp; order.userId) {&#13;&#10;        // Check if userId looks like a MongoDB ObjectId (24 hex characters)&#13;&#10;        if (order.userId.match(/^[0-9a-fA-F]{24}$/)) {&#13;&#10;          customerName = `Customer ${order.userId.slice(-6).toUpperCase()}`;&#13;&#10;        } else {&#13;&#10;          customerName = order.userId;&#13;&#10;        }&#13;&#10;      }&#13;&#10;&#13;&#10;      // Final fallback&#13;&#10;      if (!customerName) {&#13;&#10;        customerName = &quot;Anonymous Customer&quot;;&#13;&#10;      }&#13;&#10;&#13;&#10;      activities.push({&#13;&#10;        type: &quot;order&quot;,&#13;&#10;        icon: &quot;fas fa-shopping-cart&quot;,&#13;&#10;        color: &quot;text-green-600&quot;,&#13;&#10;        title: `New order from ${customerName}`,&#13;&#10;        description: `${order.items?.length || 0} items • ${formatPrice(&#13;&#10;          order.total || 0,&#13;&#10;        )}`,&#13;&#10;        time: order.createdAt,&#13;&#10;        status: order.status,&#13;&#10;      });&#13;&#10;    });&#13;&#10;&#13;&#10;    return activities&#13;&#10;      .sort((a, b) =&gt; new Date(b.time) - new Date(a.time))&#13;&#10;      .slice(0, 8);&#13;&#10;  }, [orders, formatPrice]);&#13;&#10;&#13;&#10;  // Today's summary&#13;&#10;  const todaySummary = useMemo(() =&gt; {&#13;&#10;    const today = new Date().toISOString().split(&quot;T&quot;)[0];&#13;&#10;    const todayOrders = orders.filter((order) =&gt; {&#13;&#10;      const orderDate = new Date(order.createdAt).toISOString().split(&quot;T&quot;)[0];&#13;&#10;      return orderDate === today;&#13;&#10;    });&#13;&#10;&#13;&#10;    const todayRevenue = todayOrders.reduce(&#13;&#10;      (sum, order) =&gt; sum + (order.farmerSubtotal || order.total || 0),&#13;&#10;      0,&#13;&#10;    );&#13;&#10;&#13;&#10;    return {&#13;&#10;      ordersCount: todayOrders.length,&#13;&#10;      revenue: todayRevenue,&#13;&#10;      newCustomers: new Set(todayOrders.map((o) =&gt; o.customerEmail)).size,&#13;&#10;      topProduct: products.reduce((top, product) =&gt; {&#13;&#10;        const productOrdersToday = todayOrders.filter((order) =&gt;&#13;&#10;          order.items?.some(&#13;&#10;            (item) =&gt;&#13;&#10;              item.productId === product._id ||&#13;&#10;              item.product?._id === product._id,&#13;&#10;          ),&#13;&#10;        );&#13;&#10;        return productOrdersToday.length &gt; (top?.count || 0)&#13;&#10;          ? { ...product, count: productOrdersToday.length }&#13;&#10;          : top;&#13;&#10;      }, null),&#13;&#10;    };&#13;&#10;  }, [orders, products]);&#13;&#10;&#13;&#10;  // Seasonal recommendations&#13;&#10;  const seasonalRecommendations = useMemo(() =&gt; {&#13;&#10;    const currentMonth = new Date().getMonth();&#13;&#10;    const recommendations = [];&#13;&#10;&#13;&#10;    // Summer fruits and vegetables (June-August: months 5-7)&#13;&#10;    if (currentMonth &gt;= 5 &amp;&amp; currentMonth &lt;= 7) {&#13;&#10;      recommendations.push({&#13;&#10;        category: &quot;Summer Produce&quot;,&#13;&#10;        suggestion: &quot;Promote tomatoes, cucumbers, berries, and leafy greens&quot;,&#13;&#10;        icon: &quot;fas fa-sun&quot;,&#13;&#10;        color: &quot;text-orange-600&quot;,&#13;&#10;      });&#13;&#10;    }&#13;&#10;    // Fall harvest (September-November: months 8-10)&#13;&#10;    else if (currentMonth &gt;= 8 &amp;&amp; currentMonth &lt;= 10) {&#13;&#10;      recommendations.push({&#13;&#10;        category: &quot;Fall Harvest&quot;,&#13;&#10;        suggestion: &quot;Feature apples, pumpkins, root vegetables, and grains&quot;,&#13;&#10;        icon: &quot;fas fa-leaf&quot;,&#13;&#10;        color: &quot;text-orange-700&quot;,&#13;&#10;      });&#13;&#10;    }&#13;&#10;    // Winter storage crops (December-February: months 11, 0, 1)&#13;&#10;    else if (currentMonth === 11 || currentMonth &lt;= 1) {&#13;&#10;      recommendations.push({&#13;&#10;        category: &quot;Winter Storage&quot;,&#13;&#10;        suggestion:&#13;&#10;          &quot;Highlight preserved goods, winter squash, and dried products&quot;,&#13;&#10;        icon: &quot;fas fa-snowflake&quot;,&#13;&#10;        color: &quot;text-blue-600&quot;,&#13;&#10;      });&#13;&#10;    }&#13;&#10;    // Spring planting (March-May: months 2-4)&#13;&#10;    else {&#13;&#10;      recommendations.push({&#13;&#10;        category: &quot;Spring Fresh&quot;,&#13;&#10;        suggestion: &quot;Promote fresh herbs, early greens, and spring vegetables&quot;,&#13;&#10;        icon: &quot;fas fa-seedling&quot;,&#13;&#10;        color: &quot;text-green-600&quot;,&#13;&#10;      });&#13;&#10;    }&#13;&#10;&#13;&#10;    return recommendations;&#13;&#10;  }, []);&#13;&#10;&#13;&#10;  return (&#13;&#10;    &lt;div className=&quot;space-y-6&quot;&gt;&#13;&#10;      {/* Today's Overview */}&#13;&#10;      &lt;div className=&quot;bg-gradient-to-r from-green-500 to-green-600 rounded-xl shadow-lg p-6 text-white&quot;&gt;&#13;&#10;        &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#13;&#10;          &lt;div&gt;&#13;&#10;            &lt;h2 className=&quot;text-2xl font-bold&quot;&gt;Good morning, Farmer!&lt;/h2&gt;&#13;&#10;            &lt;p className=&quot;opacity-90&quot;&gt;&#13;&#10;              Here&amp;apos;s what&amp;apos;s happening on your farm today&#13;&#10;            &lt;/p&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;          &lt;div className=&quot;text-right&quot;&gt;&#13;&#10;            &lt;p className=&quot;text-sm opacity-75&quot;&gt;&#13;&#10;              {new Date().toLocaleDateString()}&#13;&#10;            &lt;/p&gt;&#13;&#10;            &lt;p className=&quot;text-lg font-semibold&quot;&gt;&#13;&#10;              {new Date().toLocaleDateString(&quot;en-US&quot;, { weekday: &quot;long&quot; })}&#13;&#10;            &lt;/p&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        &lt;div className=&quot;grid grid-cols-2 md:grid-cols-4 gap-4&quot;&gt;&#13;&#10;          &lt;div className=&quot;bg-white/10 rounded-lg p-4&quot;&gt;&#13;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#13;&#10;              &lt;i className=&quot;fas fa-shopping-cart text-2xl mr-3&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;div&gt;&#13;&#10;                &lt;p className=&quot;text-2xl font-bold&quot;&gt;{todaySummary.ordersCount}&lt;/p&gt;&#13;&#10;                &lt;p className=&quot;text-sm opacity-75&quot;&gt;Orders Today&lt;/p&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;&#13;&#10;          &lt;div className=&quot;bg-white/10 rounded-lg p-4&quot;&gt;&#13;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#13;&#10;              &lt;i className=&quot;fas fa-dollar-sign text-2xl mr-3&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;div&gt;&#13;&#10;                &lt;p className=&quot;text-2xl font-bold&quot;&gt;&#13;&#10;                  {formatPrice(todaySummary.revenue)}&#13;&#10;                &lt;/p&gt;&#13;&#10;                &lt;p className=&quot;text-sm opacity-75&quot;&gt;Revenue Today&lt;/p&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;&#13;&#10;          &lt;div className=&quot;bg-white/10 rounded-lg p-4&quot;&gt;&#13;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#13;&#10;              &lt;i className=&quot;fas fa-users text-2xl mr-3&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;div&gt;&#13;&#10;                &lt;p className=&quot;text-2xl font-bold&quot;&gt;&#13;&#10;                  {todaySummary.newCustomers}&#13;&#10;                &lt;/p&gt;&#13;&#10;                &lt;p className=&quot;text-sm opacity-75&quot;&gt;New Customers&lt;/p&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;&#13;&#10;          &lt;div className=&quot;bg-white/10 rounded-lg p-4&quot;&gt;&#13;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#13;&#10;              &lt;i className=&quot;fas fa-star text-2xl mr-3&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;div&gt;&#13;&#10;                &lt;p className=&quot;text-lg font-bold&quot;&gt;&#13;&#10;                  {todaySummary.topProduct?.name || &quot;None&quot;}&#13;&#10;                &lt;/p&gt;&#13;&#10;                &lt;p className=&quot;text-sm opacity-75&quot;&gt;Top Product&lt;/p&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;&#13;&#10;      {/* Action Items &amp; Quick Tools */}&#13;&#10;      &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-6&quot;&gt;&#13;&#10;        {/* Urgent Action Items */}&#13;&#10;        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6&quot;&gt;&#13;&#10;          &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#13;&#10;            &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;              &lt;i className=&quot;fas fa-bell text-orange-500 mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;              Action Items&#13;&#10;            &lt;/h3&gt;&#13;&#10;            &lt;span className=&quot;bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-300 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#13;&#10;              {&#13;&#10;                actionItems.filter(&#13;&#10;                  (item) =&gt;&#13;&#10;                    item.priority === &quot;critical&quot; || item.priority === &quot;high&quot;,&#13;&#10;                ).length&#13;&#10;              }{&quot; &quot;}&#13;&#10;              urgent&#13;&#10;            &lt;/span&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;&#13;&#10;          {actionItems.length === 0 ? (&#13;&#10;            &lt;div className=&quot;text-center py-8&quot;&gt;&#13;&#10;              &lt;i className=&quot;fas fa-check-circle text-4xl text-green-500 mb-3&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;All caught up!&lt;/p&gt;&#13;&#10;              &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-500&quot;&gt;&#13;&#10;                No urgent action items at the moment.&#13;&#10;              &lt;/p&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          ) : (&#13;&#10;            &lt;div className=&quot;space-y-3&quot;&gt;&#13;&#10;              {actionItems.slice(0, 4).map((item, index) =&gt; (&#13;&#10;                &lt;div&#13;&#10;                  key={index}&#13;&#10;                  className={`${item.bgColor} rounded-lg p-4 border-l-4 border-current`}&#13;&#10;                &gt;&#13;&#10;                  &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#13;&#10;                    &lt;div className=&quot;flex items-start&quot;&gt;&#13;&#10;                      &lt;i&#13;&#10;                        className={`${item.icon} ${item.color} text-lg mr-3 mt-1`}&#13;&#10;                      &gt;&lt;/i&gt;&#13;&#10;                      &lt;div&gt;&#13;&#10;                        &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                          {item.title}&#13;&#10;                        &lt;/h4&gt;&#13;&#10;                        &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#13;&#10;                          {item.description}&#13;&#10;                        &lt;/p&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                    &lt;button&#13;&#10;                      className={`${item.color} hover:underline text-sm font-medium`}&#13;&#10;                    &gt;&#13;&#10;                      {item.action}&#13;&#10;                    &lt;/button&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              ))}&#13;&#10;            &lt;/div&gt;&#13;&#10;          )}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        {/* Quick Farm Tools */}&#13;&#10;        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6&quot;&gt;&#13;&#10;          &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#13;&#10;            &lt;i className=&quot;fas fa-tools text-blue-500 mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;            Quick Farm Tools&#13;&#10;          &lt;/h3&gt;&#13;&#10;&#13;&#10;          &lt;div className=&quot;grid grid-cols-2 gap-3&quot;&gt;&#13;&#10;            &lt;Link&#13;&#10;              href=&quot;/create&quot;&#13;&#10;              className=&quot;flex flex-col items-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg hover:bg-green-100 dark:hover:bg-green-900/40 transition text-center&quot;&#13;&#10;            &gt;&#13;&#10;              &lt;i className=&quot;fas fa-plus text-green-600 dark:text-green-400 text-2xl mb-2&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                Add Product&#13;&#10;              &lt;/span&gt;&#13;&#10;            &lt;/Link&gt;&#13;&#10;&#13;&#10;            &lt;button&#13;&#10;              onClick={() =&gt; setBulkUpdateModal(true)}&#13;&#10;              className=&quot;flex flex-col items-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-900/40 transition text-center&quot;&#13;&#10;            &gt;&#13;&#10;              &lt;i className=&quot;fas fa-layer-group text-blue-600 dark:text-blue-400 text-2xl mb-2&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                Bulk Update&#13;&#10;              &lt;/span&gt;&#13;&#10;            &lt;/button&gt;&#13;&#10;&#13;&#10;            &lt;Link&#13;&#10;              href=&quot;/farmer-orders&quot;&#13;&#10;              className=&quot;flex flex-col items-center p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg hover:bg-purple-100 dark:hover:bg-purple-900/40 transition text-center&quot;&#13;&#10;            &gt;&#13;&#10;              &lt;i className=&quot;fas fa-clipboard-list text-purple-600 dark:text-purple-400 text-2xl mb-2&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                Process Orders&#13;&#10;              &lt;/span&gt;&#13;&#10;            &lt;/Link&gt;&#13;&#10;&#13;&#10;            &lt;button&#13;&#10;              onClick={handleRefresh}&#13;&#10;              className=&quot;flex flex-col items-center p-4 bg-orange-50 dark:bg-orange-900/20 rounded-lg hover:bg-orange-100 dark:hover:bg-orange-900/40 transition text-center&quot;&#13;&#10;            &gt;&#13;&#10;              &lt;i className=&quot;fas fa-sync-alt text-orange-600 dark:text-orange-400 text-2xl mb-2&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                Refresh Data&#13;&#10;              &lt;/span&gt;&#13;&#10;            &lt;/button&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;&#13;&#10;      {/* Activity Feed &amp; Seasonal Tips */}&#13;&#10;      &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-3 gap-6&quot;&gt;&#13;&#10;        {/* Real-time Activity Feed */}&#13;&#10;        &lt;div className=&quot;lg:col-span-2 bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6&quot;&gt;&#13;&#10;          &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#13;&#10;            &lt;i className=&quot;fas fa-activity text-green-500 mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;            Live Farm Activity&#13;&#10;          &lt;/h3&gt;&#13;&#10;&#13;&#10;          {activityFeed.length === 0 ? (&#13;&#10;            &lt;div className=&quot;text-center py-8&quot;&gt;&#13;&#10;              &lt;i className=&quot;fas fa-calendar-day text-4xl text-gray-400 mb-3&quot;&gt;&lt;/i&gt;&#13;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                No recent activity&#13;&#10;              &lt;/p&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          ) : (&#13;&#10;            &lt;div className=&quot;space-y-4 max-h-80 overflow-y-auto&quot;&gt;&#13;&#10;              {activityFeed.map((activity, index) =&gt; (&#13;&#10;                &lt;div&#13;&#10;                  key={index}&#13;&#10;                  className=&quot;flex items-start space-x-3 p-3 bg-gray-50 dark:bg-gray-700/50 rounded-lg&quot;&#13;&#10;                &gt;&#13;&#10;                  &lt;div className={`${activity.color} mt-1`}&gt;&#13;&#10;                    &lt;i className={activity.icon}&gt;&lt;/i&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                  &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#13;&#10;                    &lt;p className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                      {activity.title}&#13;&#10;                    &lt;/p&gt;&#13;&#10;                    &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                      {activity.description}&#13;&#10;                    &lt;/p&gt;&#13;&#10;                    &lt;p className=&quot;text-xs text-gray-500 dark:text-gray-500 mt-1&quot;&gt;&#13;&#10;                      {formatDate(activity.time)}&#13;&#10;                    &lt;/p&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                  {activity.status &amp;&amp; (&#13;&#10;                    &lt;span&#13;&#10;                      className={`px-2 py-1 rounded-full text-xs font-medium ${&#13;&#10;                        activity.status === &quot;pending&quot;&#13;&#10;                          ? &quot;bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300&quot;&#13;&#10;                          : activity.status === &quot;processing&quot;&#13;&#10;                            ? &quot;bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300&quot;&#13;&#10;                            : &quot;bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300&quot;&#13;&#10;                      }`}&#13;&#10;                    &gt;&#13;&#10;                      {activity.status}&#13;&#10;                    &lt;/span&gt;&#13;&#10;                  )}&#13;&#10;                &lt;/div&gt;&#13;&#10;              ))}&#13;&#10;            &lt;/div&gt;&#13;&#10;          )}&#13;&#10;        &lt;/div&gt;&#13;&#10;&#13;&#10;        {/* Seasonal Recommendations */}&#13;&#10;        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6&quot;&gt;&#13;&#10;          &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#13;&#10;            &lt;i className=&quot;fas fa-lightbulb text-yellow-500 mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;            Farm Tips&#13;&#10;          &lt;/h3&gt;&#13;&#10;&#13;&#10;          &lt;div className=&quot;space-y-4&quot;&gt;&#13;&#10;            {seasonalRecommendations.map((rec, index) =&gt; (&#13;&#10;              &lt;div&#13;&#10;                key={index}&#13;&#10;                className=&quot;p-4 bg-gradient-to-r from-gray-50 to-gray-100 dark:from-gray-700 dark:to-gray-600 rounded-lg&quot;&#13;&#10;              &gt;&#13;&#10;                &lt;div className=&quot;flex items-start&quot;&gt;&#13;&#10;                  &lt;i&#13;&#10;                    className={`${rec.icon} ${rec.color} text-xl mr-3 mt-1`}&#13;&#10;                  &gt;&lt;/i&gt;&#13;&#10;                  &lt;div&gt;&#13;&#10;                    &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                      {rec.category}&#13;&#10;                    &lt;/h4&gt;&#13;&#10;                    &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#13;&#10;                      {rec.suggestion}&#13;&#10;                    &lt;/p&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            ))}&#13;&#10;&#13;&#10;            &lt;div className=&quot;p-4 bg-gradient-to-r from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 rounded-lg border border-blue-200 dark:border-blue-700&quot;&gt;&#13;&#10;              &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white flex items-center&quot;&gt;&#13;&#10;                &lt;i className=&quot;fas fa-chart-line text-blue-600 mr-2&quot;&gt;&lt;/i&gt;&#13;&#10;                Growth Tip&#13;&#10;              &lt;/h4&gt;&#13;&#10;              &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#13;&#10;                Products with photos sell 3x better! Add high-quality images to&#13;&#10;                boost your sales.&#13;&#10;              &lt;/p&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;&#13;&#10;      {/* Enhanced Bulk Update Modal */}&#13;&#10;      {bulkUpdateModal &amp;&amp; (&#13;&#10;        &lt;div className=&quot;fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center p-4 z-50 animate-in fade-in duration-300&quot;&gt;&#13;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-900 rounded-3xl w-full max-w-5xl max-h-[95vh] overflow-hidden shadow-2xl border border-gray-200 dark:border-gray-700 animate-in zoom-in duration-300&quot;&gt;&#13;&#10;            {/* Enhanced Header */}&#13;&#10;            &lt;div className=&quot;relative bg-gradient-to-r from-blue-600 to-purple-600 p-6 text-white&quot;&gt;&#13;&#10;              &lt;div className=&quot;absolute inset-0 bg-black/10&quot;&gt;&lt;/div&gt;&#13;&#10;              &lt;div className=&quot;relative flex justify-between items-center&quot;&gt;&#13;&#10;                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#13;&#10;                  &lt;div className=&quot;p-3 bg-white/20 rounded-xl backdrop-blur-sm&quot;&gt;&#13;&#10;                    &lt;i className=&quot;fas fa-layer-group text-2xl&quot;&gt;&lt;/i&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                  &lt;div&gt;&#13;&#10;                    &lt;h3 className=&quot;text-2xl font-bold&quot;&gt;Bulk Update Products&lt;/h3&gt;&#13;&#10;                    &lt;p className=&quot;text-blue-100 mt-1&quot;&gt;&#13;&#10;                      Update multiple products at once to save time&#13;&#10;                    &lt;/p&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;                &lt;button&#13;&#10;                  onClick={() =&gt; setBulkUpdateModal(false)}&#13;&#10;                  className=&quot;p-2 hover:bg-white/20 rounded-xl transition-colors&quot;&#13;&#10;                &gt;&#13;&#10;                  &lt;i className=&quot;fas fa-times text-xl&quot;&gt;&lt;/i&gt;&#13;&#10;                &lt;/button&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;&#13;&#10;            &lt;div className=&quot;p-8 max-h-[calc(95vh-200px)] overflow-y-auto space-y-8&quot;&gt;&#13;&#10;              {/* Step Indicator */}&#13;&#10;              &lt;div className=&quot;flex items-center justify-center space-x-4 mb-8&quot;&gt;&#13;&#10;                &lt;div&#13;&#10;                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-all ${&#13;&#10;                    selectedProducts.length &gt; 0&#13;&#10;                      ? &quot;bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300&quot;&#13;&#10;                      : &quot;bg-gray-100 dark:bg-gray-700 text-gray-500&quot;&#13;&#10;                  }`}&#13;&#10;                &gt;&#13;&#10;                  &lt;div&#13;&#10;                    className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${&#13;&#10;                      selectedProducts.length &gt; 0&#13;&#10;                        ? &quot;bg-green-500 text-white&quot;&#13;&#10;                        : &quot;bg-gray-300 dark:bg-gray-600 text-gray-600 dark:text-gray-400&quot;&#13;&#10;                    }`}&#13;&#10;                  &gt;&#13;&#10;                    1&#13;&#10;                  &lt;/div&gt;&#13;&#10;                  &lt;span className=&quot;text-sm font-medium&quot;&gt;Select Products&lt;/span&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                &lt;div&#13;&#10;                  className={`w-8 h-0.5 transition-all ${&#13;&#10;                    selectedProducts.length &gt; 0 &amp;&amp; bulkAction&#13;&#10;                      ? &quot;bg-green-500&quot;&#13;&#10;                      : &quot;bg-gray-300 dark:bg-gray-600&quot;&#13;&#10;                  }`}&#13;&#10;                &gt;&lt;/div&gt;&#13;&#10;&#13;&#10;                &lt;div&#13;&#10;                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-all ${&#13;&#10;                    selectedProducts.length &gt; 0 &amp;&amp; bulkAction&#13;&#10;                      ? &quot;bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300&quot;&#13;&#10;                      : &quot;bg-gray-100 dark:bg-gray-700 text-gray-500&quot;&#13;&#10;                  }`}&#13;&#10;                &gt;&#13;&#10;                  &lt;div&#13;&#10;                    className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${&#13;&#10;                      selectedProducts.length &gt; 0 &amp;&amp; bulkAction&#13;&#10;                        ? &quot;bg-green-500 text-white&quot;&#13;&#10;                        : &quot;bg-gray-300 dark:bg-gray-600 text-gray-600 dark:text-gray-400&quot;&#13;&#10;                    }`}&#13;&#10;                  &gt;&#13;&#10;                    2&#13;&#10;                  &lt;/div&gt;&#13;&#10;                  &lt;span className=&quot;text-sm font-medium&quot;&gt;Choose Action&lt;/span&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                &lt;div&#13;&#10;                  className={`w-8 h-0.5 transition-all ${&#13;&#10;                    selectedProducts.length &gt; 0 &amp;&amp;&#13;&#10;                    bulkAction &amp;&amp;&#13;&#10;                    (bulkValues.price ||&#13;&#10;                      bulkValues.stock ||&#13;&#10;                      bulkValues.status ||&#13;&#10;                      bulkValues.category)&#13;&#10;                      ? &quot;bg-green-500&quot;&#13;&#10;                      : &quot;bg-gray-300 dark:bg-gray-600&quot;&#13;&#10;                  }`}&#13;&#10;                &gt;&lt;/div&gt;&#13;&#10;&#13;&#10;                &lt;div&#13;&#10;                  className={`flex items-center space-x-2 px-4 py-2 rounded-full transition-all ${&#13;&#10;                    selectedProducts.length &gt; 0 &amp;&amp;&#13;&#10;                    bulkAction &amp;&amp;&#13;&#10;                    (bulkValues.price ||&#13;&#10;                      bulkValues.stock ||&#13;&#10;                      bulkValues.status ||&#13;&#10;                      bulkValues.category)&#13;&#10;                      ? &quot;bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300&quot;&#13;&#10;                      : &quot;bg-gray-100 dark:bg-gray-700 text-gray-500&quot;&#13;&#10;                  }`}&#13;&#10;                &gt;&#13;&#10;                  &lt;div&#13;&#10;                    className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold ${&#13;&#10;                      selectedProducts.length &gt; 0 &amp;&amp;&#13;&#10;                      bulkAction &amp;&amp;&#13;&#10;                      (bulkValues.price ||&#13;&#10;                        bulkValues.stock ||&#13;&#10;                        bulkValues.status ||&#13;&#10;                        bulkValues.category)&#13;&#10;                        ? &quot;bg-green-500 text-white&quot;&#13;&#10;                        : &quot;bg-gray-300 dark:bg-gray-600 text-gray-600 dark:text-gray-400&quot;&#13;&#10;                    }`}&#13;&#10;                  &gt;&#13;&#10;                    3&#13;&#10;                  &lt;/div&gt;&#13;&#10;                  &lt;span className=&quot;text-sm font-medium&quot;&gt;Set Values&lt;/span&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;&#13;&#10;              {/* Enhanced Product Selection */}&#13;&#10;              &lt;div className=&quot;bg-gray-50 dark:bg-gray-800/50 rounded-2xl p-6&quot;&gt;&#13;&#10;                &lt;div className=&quot;flex justify-between items-center mb-6&quot;&gt;&#13;&#10;                  &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#13;&#10;                    &lt;div className=&quot;p-2 bg-blue-100 dark:bg-blue-900/30 rounded-lg&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-boxes text-blue-600 dark:text-blue-400&quot;&gt;&lt;/i&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                    &lt;div&gt;&#13;&#10;                      &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                        Select Products&#13;&#10;                      &lt;/h4&gt;&#13;&#10;                      &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                        {selectedProducts.length} of {products.length} products&#13;&#10;                        selected&#13;&#10;                      &lt;/p&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;&#13;&#10;                  &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#13;&#10;                    {selectedProducts.length &gt; 0 &amp;&amp; (&#13;&#10;                      &lt;div className=&quot;px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full text-sm font-medium&quot;&gt;&#13;&#10;                        {selectedProducts.length} selected&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    )}&#13;&#10;                    &lt;button&#13;&#10;                      onClick={selectAllProducts}&#13;&#10;                      className=&quot;px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-xl text-sm font-medium transition-colors flex items-center space-x-2&quot;&#13;&#10;                    &gt;&#13;&#10;                      &lt;i&#13;&#10;                        className={`fas ${&#13;&#10;                          selectedProducts.length === products.length&#13;&#10;                            ? &quot;fa-minus&quot;&#13;&#10;                            : &quot;fa-check-double&quot;&#13;&#10;                        }`}&#13;&#10;                      &gt;&lt;/i&gt;&#13;&#10;                      &lt;span&gt;&#13;&#10;                        {selectedProducts.length === products.length&#13;&#10;                          ? &quot;Deselect All&quot;&#13;&#10;                          : &quot;Select All&quot;}&#13;&#10;                      &lt;/span&gt;&#13;&#10;                    &lt;/button&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                {/* Products Grid Container with proper spacing and no horizontal scroll */}&#13;&#10;                &lt;div className=&quot;mt-8&quot;&gt;&#13;&#10;                  &lt;div className=&quot;max-h-80 overflow-y-auto overflow-x-hidden scrollbar-thin scrollbar-track-gray-100 dark:scrollbar-track-gray-800 scrollbar-thumb-gray-300 dark:scrollbar-thumb-gray-600 hover:scrollbar-thumb-gray-400 dark:hover:scrollbar-thumb-gray-500&quot;&gt;&#13;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-1&quot;&gt;&#13;&#10;                      {products.map((product) =&gt; (&#13;&#10;                        &lt;div&#13;&#10;                          key={product._id}&#13;&#10;                          className={`group relative p-4 border-2 rounded-xl cursor-pointer transition-all duration-200 hover:shadow-lg ${&#13;&#10;                            selectedProducts.includes(product._id)&#13;&#10;                              ? &quot;border-blue-500 bg-blue-50 dark:bg-blue-900/20 shadow-md scale-[1.02]&quot;&#13;&#10;                              : &quot;border-gray-200 dark:border-gray-700 hover:border-blue-300 dark:hover:border-blue-600&quot;&#13;&#10;                          }`}&#13;&#10;                          onClick={() =&gt; toggleProductSelection(product._id)}&#13;&#10;                        &gt;&#13;&#10;                          {/* Selection indicator */}&#13;&#10;                          &lt;div&#13;&#10;                            className={`absolute -top-2 -right-2 w-6 h-6 rounded-full flex items-center justify-center transition-all ${&#13;&#10;                              selectedProducts.includes(product._id)&#13;&#10;                                ? &quot;bg-blue-500 text-white scale-110&quot;&#13;&#10;                                : &quot;bg-gray-200 dark:bg-gray-600 text-gray-400 group-hover:bg-blue-100 dark:group-hover:bg-blue-900&quot;&#13;&#10;                            }`}&#13;&#10;                          &gt;&#13;&#10;                            &lt;i&#13;&#10;                              className={`fas ${&#13;&#10;                                selectedProducts.includes(product._id)&#13;&#10;                                  ? &quot;fa-check&quot;&#13;&#10;                                  : &quot;fa-plus&quot;&#13;&#10;                              } text-xs`}&#13;&#10;                            &gt;&lt;/i&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;&#13;&#10;                          &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#13;&#10;                            &lt;div&#13;&#10;                              className={`w-12 h-12 rounded-xl flex items-center justify-center transition-all ${&#13;&#10;                                selectedProducts.includes(product._id)&#13;&#10;                                  ? &quot;bg-blue-100 dark:bg-blue-800 text-blue-600 dark:text-blue-300&quot;&#13;&#10;                                  : &quot;bg-gray-100 dark:bg-gray-700 text-gray-400 group-hover:bg-blue-50 dark:group-hover:bg-blue-900/30&quot;&#13;&#10;                              }`}&#13;&#10;                            &gt;&#13;&#10;                              &lt;i className=&quot;fas fa-box text-lg&quot;&gt;&lt;/i&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                            &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#13;&#10;                              &lt;p className=&quot;font-semibold text-gray-900 dark:text-white truncate text-sm&quot;&gt;&#13;&#10;                                {product.name}&#13;&#10;                              &lt;/p&gt;&#13;&#10;                              &lt;div className=&quot;flex items-center space-x-2 mt-1&quot;&gt;&#13;&#10;                                &lt;span&#13;&#10;                                  className={`px-2 py-0.5 rounded-full text-xs font-medium ${&#13;&#10;                                    product.stock &gt; 10&#13;&#10;                                      ? &quot;bg-green-100 text-green-700 dark:bg-green-900/30 dark:text-green-300&quot;&#13;&#10;                                      : product.stock &gt; 0&#13;&#10;                                        ? &quot;bg-yellow-100 text-yellow-700 dark:bg-yellow-900/30 dark:text-yellow-300&quot;&#13;&#10;                                        : &quot;bg-red-100 text-red-700 dark:bg-red-900/30 dark:text-red-300&quot;&#13;&#10;                                  }`}&#13;&#10;                                &gt;&#13;&#10;                                  {product.stock} in stock&#13;&#10;                                &lt;/span&gt;&#13;&#10;                                &lt;span className=&quot;text-xs text-gray-600 dark:text-gray-400 font-medium&quot;&gt;&#13;&#10;                                  {formatPrice(product.price)}&#13;&#10;                                &lt;/span&gt;&#13;&#10;                              &lt;/div&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                          &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      ))}&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;&#13;&#10;              {/* Enhanced Bulk Action Selection */}&#13;&#10;              {selectedProducts.length &gt; 0 &amp;&amp; (&#13;&#10;                &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700&quot;&gt;&#13;&#10;                  &lt;div className=&quot;flex items-center space-x-3 mb-6&quot;&gt;&#13;&#10;                    &lt;div className=&quot;p-2 bg-purple-100 dark:bg-purple-900/30 rounded-lg&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-magic text-purple-600 dark:text-purple-400&quot;&gt;&lt;/i&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                    &lt;div&gt;&#13;&#10;                      &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                        Choose Action&#13;&#10;                      &lt;/h4&gt;&#13;&#10;                      &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                        Select what you want to update&#13;&#10;                      &lt;/p&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;&#13;&#10;                  &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4&quot;&gt;&#13;&#10;                    {[&#13;&#10;                      {&#13;&#10;                        value: &quot;price&quot;,&#13;&#10;                        label: &quot;Update Price&quot;,&#13;&#10;                        icon: &quot;fas fa-dollar-sign&quot;,&#13;&#10;                        color: &quot;green&quot;,&#13;&#10;                        description: &quot;Change product prices&quot;,&#13;&#10;                      },&#13;&#10;                      {&#13;&#10;                        value: &quot;stock&quot;,&#13;&#10;                        label: &quot;Update Stock&quot;,&#13;&#10;                        icon: &quot;fas fa-box&quot;,&#13;&#10;                        color: &quot;blue&quot;,&#13;&#10;                        description: &quot;Adjust inventory levels&quot;,&#13;&#10;                      },&#13;&#10;                      {&#13;&#10;                        value: &quot;status&quot;,&#13;&#10;                        label: &quot;Update Status&quot;,&#13;&#10;                        icon: &quot;fas fa-toggle-on&quot;,&#13;&#10;                        color: &quot;purple&quot;,&#13;&#10;                        description: &quot;Enable/disable products&quot;,&#13;&#10;                      },&#13;&#10;                      {&#13;&#10;                        value: &quot;category&quot;,&#13;&#10;                        label: &quot;Update Category&quot;,&#13;&#10;                        icon: &quot;fas fa-tags&quot;,&#13;&#10;                        color: &quot;orange&quot;,&#13;&#10;                        description: &quot;Change product categories&quot;,&#13;&#10;                      },&#13;&#10;                    ].map((action) =&gt; (&#13;&#10;                      &lt;button&#13;&#10;                        key={action.value}&#13;&#10;                        onClick={() =&gt; setBulkAction(action.value)}&#13;&#10;                        className={`group relative p-6 border-2 rounded-2xl text-center transition-all duration-200 hover:shadow-lg ${&#13;&#10;                          bulkAction === action.value&#13;&#10;                            ? `border-${action.color}-500 bg-${action.color}-50 dark:bg-${action.color}-900/20 shadow-md scale-[1.02]`&#13;&#10;                            : &quot;border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600&quot;&#13;&#10;                        }`}&#13;&#10;                      &gt;&#13;&#10;                        {/* Selection indicator */}&#13;&#10;                        &lt;div&#13;&#10;                          className={`absolute -top-2 -right-2 w-6 h-6 rounded-full flex items-center justify-center transition-all ${&#13;&#10;                            bulkAction === action.value&#13;&#10;                              ? `bg-${action.color}-500 text-white scale-110`&#13;&#10;                              : &quot;bg-gray-200 dark:bg-gray-600 text-gray-400 group-hover:scale-110&quot;&#13;&#10;                          }`}&#13;&#10;                        &gt;&#13;&#10;                          &lt;i&#13;&#10;                            className={`fas ${&#13;&#10;                              bulkAction === action.value&#13;&#10;                                ? &quot;fa-check&quot;&#13;&#10;                                : &quot;fa-plus&quot;&#13;&#10;                            } text-xs`}&#13;&#10;                          &gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;&#13;&#10;                        &lt;div&#13;&#10;                          className={`w-16 h-16 mx-auto mb-4 rounded-2xl flex items-center justify-center transition-all ${&#13;&#10;                            bulkAction === action.value&#13;&#10;                              ? `bg-${action.color}-100 dark:bg-${action.color}-800 text-${action.color}-600 dark:text-${action.color}-300`&#13;&#10;                              : &quot;bg-gray-100 dark:bg-gray-700 text-gray-400 group-hover:bg-gray-200 dark:group-hover:bg-gray-600&quot;&#13;&#10;                          }`}&#13;&#10;                        &gt;&#13;&#10;                          &lt;i className={`${action.icon} text-2xl`}&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;h5 className=&quot;font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#13;&#10;                          {action.label}&#13;&#10;                        &lt;/h5&gt;&#13;&#10;                        &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                          {action.description}&#13;&#10;                        &lt;/p&gt;&#13;&#10;                      &lt;/button&gt;&#13;&#10;                    ))}&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              )}&#13;&#10;&#13;&#10;              {/* Enhanced Input Fields */}&#13;&#10;              {bulkAction &amp;&amp; selectedProducts.length &gt; 0 &amp;&amp; (&#13;&#10;                &lt;div className=&quot;bg-gradient-to-r from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20 rounded-2xl p-6 border border-indigo-200 dark:border-indigo-800&quot;&gt;&#13;&#10;                  &lt;div className=&quot;flex items-center space-x-3 mb-6&quot;&gt;&#13;&#10;                    &lt;div className=&quot;p-2 bg-indigo-100 dark:bg-indigo-900/30 rounded-lg&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-edit text-indigo-600 dark:text-indigo-400&quot;&gt;&lt;/i&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                    &lt;div&gt;&#13;&#10;                      &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white&quot;&gt;&#13;&#10;                        Set New Value&#13;&#10;                      &lt;/h4&gt;&#13;&#10;                      &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                        This will be applied to all {selectedProducts.length}{&quot; &quot;}&#13;&#10;                        selected products&#13;&#10;                      &lt;/p&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                  &lt;/div&gt;&#13;&#10;&#13;&#10;                  &lt;div className=&quot;max-w-md&quot;&gt;&#13;&#10;                    {bulkAction === &quot;price&quot; &amp;&amp; (&#13;&#10;                      &lt;div className=&quot;relative&quot;&gt;&#13;&#10;                        &lt;div className=&quot;absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-dollar-sign&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;input&#13;&#10;                          type=&quot;number&quot;&#13;&#10;                          step=&quot;0.01&quot;&#13;&#10;                          placeholder=&quot;0.00&quot;&#13;&#10;                          value={bulkValues.price}&#13;&#10;                          onChange={(e) =&gt;&#13;&#10;                            setBulkValues((prev) =&gt; ({&#13;&#10;                              ...prev,&#13;&#10;                              price: e.target.value,&#13;&#10;                            }))&#13;&#10;                          }&#13;&#10;                          className=&quot;w-full pl-10 pr-4 py-4 border-2 border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent dark:bg-gray-800 dark:text-white text-lg font-semibold transition-all&quot;&#13;&#10;                        /&gt;&#13;&#10;                        &lt;div className=&quot;mt-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                          Enter the new price for all selected products&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    )}&#13;&#10;&#13;&#10;                    {bulkAction === &quot;stock&quot; &amp;&amp; (&#13;&#10;                      &lt;div className=&quot;relative&quot;&gt;&#13;&#10;                        &lt;div className=&quot;absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-box&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;input&#13;&#10;                          type=&quot;number&quot;&#13;&#10;                          placeholder=&quot;0&quot;&#13;&#10;                          value={bulkValues.stock}&#13;&#10;                          onChange={(e) =&gt;&#13;&#10;                            setBulkValues((prev) =&gt; ({&#13;&#10;                              ...prev,&#13;&#10;                              stock: e.target.value,&#13;&#10;                            }))&#13;&#10;                          }&#13;&#10;                          className=&quot;w-full pl-10 pr-4 py-4 border-2 border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent dark:bg-gray-800 dark:text-white text-lg font-semibold transition-all&quot;&#13;&#10;                        /&gt;&#13;&#10;                        &lt;div className=&quot;mt-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                          Enter the new stock quantity for all selected products&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    )}&#13;&#10;&#13;&#10;                    {bulkAction === &quot;status&quot; &amp;&amp; (&#13;&#10;                      &lt;div className=&quot;relative&quot;&gt;&#13;&#10;                        &lt;div className=&quot;absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-toggle-on&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;select&#13;&#10;                          value={bulkValues.status}&#13;&#10;                          onChange={(e) =&gt;&#13;&#10;                            setBulkValues((prev) =&gt; ({&#13;&#10;                              ...prev,&#13;&#10;                              status: e.target.value,&#13;&#10;                            }))&#13;&#10;                          }&#13;&#10;                          className=&quot;w-full pl-10 pr-4 py-4 border-2 border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent dark:bg-gray-800 dark:text-white text-lg font-semibold transition-all&quot;&#13;&#10;                        &gt;&#13;&#10;                          &lt;option value=&quot;&quot;&gt;Select status&lt;/option&gt;&#13;&#10;                          &lt;option value=&quot;active&quot;&gt; Active&lt;/option&gt;&#13;&#10;                          &lt;option value=&quot;inactive&quot;&gt; Inactive&lt;/option&gt;&#13;&#10;                        &lt;/select&gt;&#13;&#10;                        &lt;div className=&quot;mt-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                          Choose the new status for all selected products&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    )}&#13;&#10;&#13;&#10;                    {bulkAction === &quot;category&quot; &amp;&amp; (&#13;&#10;                      &lt;div className=&quot;relative&quot;&gt;&#13;&#10;                        &lt;div className=&quot;absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500&quot;&gt;&#13;&#10;                          &lt;i className=&quot;fas fa-tags&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                        &lt;input&#13;&#10;                          type=&quot;text&quot;&#13;&#10;                          placeholder=&quot;Category name&quot;&#13;&#10;                          value={bulkValues.category}&#13;&#10;                          onChange={(e) =&gt;&#13;&#10;                            setBulkValues((prev) =&gt; ({&#13;&#10;                              ...prev,&#13;&#10;                              category: e.target.value,&#13;&#10;                            }))&#13;&#10;                          }&#13;&#10;                          className=&quot;w-full pl-10 pr-4 py-4 border-2 border-gray-300 dark:border-gray-600 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-transparent dark:bg-gray-800 dark:text-white text-lg font-semibold transition-all&quot;&#13;&#10;                        /&gt;&#13;&#10;                        &lt;div className=&quot;mt-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                          Enter the new category for all selected products&#13;&#10;                        &lt;/div&gt;&#13;&#10;                      &lt;/div&gt;&#13;&#10;                    )}&#13;&#10;                  &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              )}&#13;&#10;            &lt;/div&gt;&#13;&#10;&#13;&#10;            {/* Enhanced Footer */}&#13;&#10;            &lt;div className=&quot;bg-gray-50 dark:bg-gray-800/50 px-8 py-6 border-t border-gray-200 dark:border-gray-700&quot;&gt;&#13;&#10;              &lt;div className=&quot;flex flex-col sm:flex-row justify-between items-center space-y-3 sm:space-y-0&quot;&gt;&#13;&#10;                &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#13;&#10;                  {selectedProducts.length &gt; 0 &amp;&amp;&#13;&#10;                  bulkAction &amp;&amp;&#13;&#10;                  (bulkValues.price ||&#13;&#10;                    bulkValues.stock ||&#13;&#10;                    bulkValues.status ||&#13;&#10;                    bulkValues.category) ? (&#13;&#10;                    &lt;span className=&quot;flex items-center space-x-2&quot;&gt;&#13;&#10;                      &lt;i className=&quot;fas fa-info-circle text-blue-500&quot;&gt;&lt;/i&gt;&#13;&#10;                      &lt;span&gt;&#13;&#10;                        Ready to update {selectedProducts.length} products&#13;&#10;                      &lt;/span&gt;&#13;&#10;                    &lt;/span&gt;&#13;&#10;                  ) : (&#13;&#10;                    &lt;span&gt;Complete all steps to proceed with bulk update&lt;/span&gt;&#13;&#10;                  )}&#13;&#10;                &lt;/div&gt;&#13;&#10;&#13;&#10;                &lt;div className=&quot;flex space-x-3&quot;&gt;&#13;&#10;                  &lt;button&#13;&#10;                    onClick={() =&gt; setBulkUpdateModal(false)}&#13;&#10;                    className=&quot;px-6 py-3 border-2 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-xl hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors font-medium&quot;&#13;&#10;                  &gt;&#13;&#10;                    Cancel&#13;&#10;                  &lt;/button&gt;&#13;&#10;                  &lt;button&#13;&#10;                    onClick={handleBulkUpdate}&#13;&#10;                    disabled={&#13;&#10;                      !selectedProducts.length ||&#13;&#10;                      !bulkAction ||&#13;&#10;                      bulkLoading ||&#13;&#10;                      !(&#13;&#10;                        bulkValues.price ||&#13;&#10;                        bulkValues.stock ||&#13;&#10;                        bulkValues.status ||&#13;&#10;                        bulkValues.category&#13;&#10;                      )&#13;&#10;                    }&#13;&#10;                    className=&quot;px-8 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl hover:from-blue-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all font-semibold shadow-lg hover:shadow-xl disabled:shadow-none flex items-center space-x-2&quot;&#13;&#10;                  &gt;&#13;&#10;                    {bulkLoading ? (&#13;&#10;                      &lt;&gt;&#13;&#10;                        &lt;div className=&quot;w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin&quot;&gt;&lt;/div&gt;&#13;&#10;                        &lt;span&gt;Updating Products...&lt;/span&gt;&#13;&#10;                      &lt;/&gt;&#13;&#10;                    ) : (&#13;&#10;                      &lt;&gt;&#13;&#10;                        &lt;i className=&quot;fas fa-magic&quot;&gt;&lt;/i&gt;&#13;&#10;                        &lt;span&gt;Update {selectedProducts.length} Products&lt;/span&gt;&#13;&#10;                      &lt;/&gt;&#13;&#10;                    )}&#13;&#10;                  &lt;/button&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      )}&#13;&#10;    &lt;/div&gt;&#13;&#10;  );&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/correct-dill-oregano-ownership.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/correct-dill-oregano-ownership.js" />
              <option name="updatedContent" value="const { MongoClient, ObjectId } = require(&quot;mongodb&quot;);&#10;&#10;async function correctDillOreganoOwnership() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017/farmfresh&quot;);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot; CORRECTING DILL AND OREGANO OWNERSHIP\n&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // 1. Get Chashi Jashim's farmer data&#10;    console.log(&quot;1.  GETTING CHASHI JASHIM'S FARMER DATA:&quot;);&#10;    const chashiJashim = await db.collection(&quot;farmers&quot;).findOne({&#10;      _id: new ObjectId(&quot;688b3f4f37eade0f39f64de2&quot;)&#10;    });&#10;&#10;    if (!chashiJashim) {&#10;      console.log(&quot;❌ Chashi Jashim farmer not found!&quot;);&#10;      return;&#10;    }&#10;&#10;    console.log(`- ID: ${chashiJashim._id}`);&#10;    console.log(`- Name: ${chashiJashim.name}`);&#10;    console.log(`- Email: ${chashiJashim.email}`);&#10;&#10;    // 2. Get Ayesha Siddika's farmer data&#10;    console.log(&quot;\n2.  GETTING AYESHA SIDDIKA'S FARMER DATA:&quot;);&#10;    const ayesha = await db.collection(&quot;farmers&quot;).findOne({&#10;      _id: &quot;farmer_008&quot;&#10;    });&#10;&#10;    console.log(`- ID: ${ayesha._id}`);&#10;    console.log(`- Name: ${ayesha.name}`);&#10;    console.log(`- Email: ${ayesha.email}`);&#10;&#10;    // 3. Check current state before correction&#10;    console.log(&quot;\n3.  CURRENT STATE BEFORE CORRECTION:&quot;);&#10;    &#10;    const ayeshaProducts = await db.collection(&quot;products&quot;).find({&#10;      farmerId: &quot;farmer_008&quot;&#10;    }).toArray();&#10;    &#10;    console.log(`Ayesha currently has ${ayeshaProducts.length} products:`);&#10;    ayeshaProducts.forEach(p =&gt; console.log(`  - ${p.name}`));&#10;&#10;    const chashiProducts = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        { farmerId: chashiJashim._id.toString() },&#10;        { farmerId: new ObjectId(chashiJashim._id) }&#10;      ]&#10;    }).toArray();&#10;    &#10;    console.log(`Chashi Jashim currently has ${chashiProducts.length} products:`);&#10;    chashiProducts.forEach(p =&gt; console.log(`  - ${p.name}`));&#10;&#10;    // 4. Move Dill and Oregano to Chashi Jashim&#10;    console.log(&quot;\n4.  MOVING DILL AND OREGANO TO CHASHI JASHIM...&quot;);&#10;    &#10;    const productsToMove = [&quot;Dill&quot;, &quot;Oregano&quot;];&#10;    &#10;    for (const productName of productsToMove) {&#10;      console.log(`\nMoving ${productName}...`);&#10;      &#10;      const updateData = {&#10;        // Set top-level fields to Chashi Jashim&#10;        farmerId: chashiJashim._id.toString(),&#10;        farmerName: chashiJashim.name,&#10;        farmerEmail: chashiJashim.email,&#10;        &#10;        // Set embedded farmer object to Chashi Jashim&#10;        farmer: {&#10;          _id: chashiJashim._id.toString(),&#10;          name: chashiJashim.name,&#10;          email: chashiJashim.email,&#10;          farmName: chashiJashim.farmName,&#10;          location: chashiJashim.location,&#10;          phone: chashiJashim.phone,&#10;          specializations: chashiJashim.specializations || [],&#10;          farmingMethods: chashiJashim.farmingMethods || [],&#10;          verified: chashiJashim.verified || false&#10;        },&#10;        &#10;        // Update timestamp&#10;        updatedAt: new Date()&#10;      };&#10;&#10;      const result = await db.collection(&quot;products&quot;).updateOne(&#10;        { name: productName },&#10;        { $set: updateData }&#10;      );&#10;&#10;      console.log(`  ✅ Updated ${productName}: ${result.modifiedCount} document(s) modified`);&#10;    }&#10;&#10;    // 5. Verify the correction&#10;    console.log(&quot;\n5.  VERIFYING CORRECTION:&quot;);&#10;    &#10;    const updatedAyeshaProducts = await db.collection(&quot;products&quot;).find({&#10;      farmerId: &quot;farmer_008&quot;&#10;    }).toArray();&#10;    &#10;    console.log(`Ayesha now has ${updatedAyeshaProducts.length} products (should be 3):`);&#10;    updatedAyeshaProducts.forEach(p =&gt; console.log(`  - ${p.name}`));&#10;&#10;    const updatedChashiProducts = await db.collection(&quot;products&quot;).find({&#10;      farmerId: chashiJashim._id.toString()&#10;    }).toArray();&#10;    &#10;    console.log(`Chashi Jashim now has ${updatedChashiProducts.length} products:`);&#10;    updatedChashiProducts.forEach(p =&gt; console.log(`  - ${p.name}`));&#10;&#10;    // 6. Test frontend queries for both farmers&#10;    console.log(&quot;\n6.  TESTING FRONTEND QUERIES:&quot;);&#10;    &#10;    // Test Ayesha's query&#10;    const ayeshaFrontendQuery = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        { farmerId: &quot;farmer_008&quot; },&#10;        { &quot;farmer._id&quot;: &quot;farmer_008&quot; },&#10;        { farmerName: &quot;Ayesha Siddika&quot; },&#10;        { &quot;farmer.name&quot;: &quot;Ayesha Siddika&quot; }&#10;      ]&#10;    }).toArray();&#10;&#10;    console.log(`Ayesha's frontend query finds ${ayeshaFrontendQuery.length} products:`);&#10;    ayeshaFrontendQuery.forEach(p =&gt; console.log(`  - ${p.name}`));&#10;&#10;    // Test Chashi Jashim's query&#10;    const chashiFrontendQuery = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        { farmerId: chashiJashim._id.toString() },&#10;        { &quot;farmer._id&quot;: chashiJashim._id.toString() },&#10;        { farmerName: &quot;chashi jashim&quot; },&#10;        { &quot;farmer.name&quot;: &quot;chashi jashim&quot; }&#10;      ]&#10;    }).toArray();&#10;&#10;    console.log(`Chashi Jashim's frontend query finds ${chashiFrontendQuery.length} products:`);&#10;    chashiFrontendQuery.forEach(p =&gt; console.log(`  - ${p.name}`));&#10;&#10;    // 7. Final consistency check&#10;    console.log(&quot;\n7. ✅ FINAL CONSISTENCY CHECK:&quot;);&#10;    &#10;    const allProducts = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        { name: &quot;Dill&quot; },&#10;        { name: &quot;Oregano&quot; },&#10;        { name: &quot;Guava&quot; },&#10;        { name: &quot;Fresh Bananas&quot; },&#10;        { name: &quot;Forest Honey&quot; }&#10;      ]&#10;    }).toArray();&#10;&#10;    allProducts.forEach(p =&gt; {&#10;      const isConsistent = &#10;        p.farmerId === p.farmer?._id &amp;&amp;&#10;        p.farmerName === p.farmer?.name &amp;&amp;&#10;        p.farmerEmail === p.farmer?.email;&#10;      &#10;      console.log(`${p.name}: ${isConsistent ? '✅ Consistent' : '❌ Inconsistent'}`);&#10;      console.log(`  Owner: ${p.farmerName} (${p.farmerId})`);&#10;    });&#10;&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;correctDillOreganoOwnership().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/debug-ayesha-siddika.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/debug-ayesha-siddika.js" />
              <option name="updatedContent" value="const { MongoClient, ObjectId } = require(&quot;mongodb&quot;);&#10;&#10;async function debugAyeshaSiddika() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017/farmfresh&quot;);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot; DEBUGGING AYESHA SIDDIKA'S PRODUCT COUNT ISSUE\n&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // 1. Find Ayesha Siddika's farmer data&#10;    console.log(&quot;1.  CHECKING AYESHA SIDDIKA'S FARMER DATA:&quot;);&#10;    const ayesha = await db.collection(&quot;farmers&quot;).findOne({&#10;      $or: [&#10;        { _id: &quot;farmer_008&quot; },&#10;        { name: &quot;Ayesha Siddika&quot; },&#10;        { name: /ayesha.*siddika/i }&#10;      ]&#10;    });&#10;&#10;    if (ayesha) {&#10;      console.log(`- ID: ${ayesha._id}`);&#10;      console.log(`- Name: ${ayesha.name}`);&#10;      console.log(`- Email: ${ayesha.email}`);&#10;      console.log(`- Farm: ${ayesha.farmName}`);&#10;    } else {&#10;      console.log(&quot;❌ Ayesha Siddika farmer not found!&quot;);&#10;    }&#10;&#10;    // 2. Check ALL products for Ayesha Siddika using different criteria&#10;    console.log(&quot;\n2.  CHECKING ALL PRODUCTS FOR AYESHA SIDDIKA:&quot;);&#10;    &#10;    const ayeshaByFarmerId = await db.collection(&quot;products&quot;).find({&#10;      farmerId: &quot;farmer_008&quot;&#10;    }).toArray();&#10;    &#10;    const ayeshaByEmbeddedId = await db.collection(&quot;products&quot;).find({&#10;      &quot;farmer._id&quot;: &quot;farmer_008&quot;&#10;    }).toArray();&#10;    &#10;    const ayeshaByName = await db.collection(&quot;products&quot;).find({&#10;      farmerName: &quot;Ayesha Siddika&quot;&#10;    }).toArray();&#10;    &#10;    const ayeshaByEmbeddedName = await db.collection(&quot;products&quot;).find({&#10;      &quot;farmer.name&quot;: &quot;Ayesha Siddika&quot;&#10;    }).toArray();&#10;&#10;    console.log(`- By farmerId (farmer_008): ${ayeshaByFarmerId.length} products`);&#10;    ayeshaByFarmerId.forEach(p =&gt; console.log(`  * ${p.name} (status: ${p.status})`));&#10;    &#10;    console.log(`- By embedded farmer._id (farmer_008): ${ayeshaByEmbeddedId.length} products`);&#10;    ayeshaByEmbeddedId.forEach(p =&gt; console.log(`  * ${p.name} (status: ${p.status})`));&#10;    &#10;    console.log(`- By farmerName (Ayesha Siddika): ${ayeshaByName.length} products`);&#10;    ayeshaByName.forEach(p =&gt; console.log(`  * ${p.name} (status: ${p.status})`));&#10;    &#10;    console.log(`- By embedded farmer.name (Ayesha Siddika): ${ayeshaByEmbeddedName.length} products`);&#10;    ayeshaByEmbeddedName.forEach(p =&gt; console.log(`  * ${p.name} (status: ${p.status})`));&#10;&#10;    // 3. Check products that have inconsistent data related to Ayesha&#10;    console.log(&quot;\n3.  CHECKING FOR DATA INCONSISTENCIES RELATED TO AYESHA:&quot;);&#10;    const inconsistentProducts = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        // Products where farmerId is farmer_008 but embedded farmer data doesn't match&#10;        {&#10;          farmerId: &quot;farmer_008&quot;,&#10;          &quot;farmer.name&quot;: { $ne: &quot;Ayesha Siddika&quot; }&#10;        },&#10;        // Products where farmerName is Ayesha but farmerId doesn't match&#10;        {&#10;          farmerName: &quot;Ayesha Siddika&quot;,&#10;          farmerId: { $ne: &quot;farmer_008&quot; }&#10;        },&#10;        // Products where embedded farmer name mentions other farmers but top-level has Ayesha&#10;        {&#10;          $or: [&#10;            { farmerId: &quot;farmer_008&quot; },&#10;            { farmerName: &quot;Ayesha Siddika&quot; }&#10;          ],&#10;          &quot;farmer.name&quot;: { $exists: true, $ne: &quot;Ayesha Siddika&quot; }&#10;        }&#10;      ]&#10;    }).toArray();&#10;&#10;    console.log(`Found ${inconsistentProducts.length} products with inconsistent data:`);&#10;    inconsistentProducts.forEach(p =&gt; {&#10;      console.log(`- ${p.name}:`);&#10;      console.log(`  Top-level: farmerId=${p.farmerId}, farmerName=${p.farmerName}`);&#10;      console.log(`  Embedded: farmer._id=${p.farmer?._id}, farmer.name=${p.farmer?.name}`);&#10;    });&#10;&#10;    // 4. Create a comprehensive query like the frontend would use for Ayesha&#10;    console.log(&quot;\n4.  SIMULATING FRONTEND QUERY FOR AYESHA:&quot;);&#10;    const frontendQuery = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        { farmerId: &quot;farmer_008&quot; },&#10;        { &quot;farmer._id&quot;: &quot;farmer_008&quot; },&#10;        { farmerName: &quot;Ayesha Siddika&quot; },&#10;        { &quot;farmer.name&quot;: &quot;Ayesha Siddika&quot; }&#10;      ]&#10;    }).toArray();&#10;&#10;    console.log(`Frontend-style query found ${frontendQuery.length} products:`);&#10;    frontendQuery.forEach(p =&gt; {&#10;      console.log(`- ${p.name} (farmerId: ${p.farmerId}, farmerName: ${p.farmerName}, status: ${p.status})`);&#10;      console.log(`  Embedded: farmer._id=${p.farmer?._id}, farmer.name=${p.farmer?.name}`);&#10;    });&#10;&#10;    // 5. Check products that might have &quot;chashi jashim&quot; in embedded data&#10;    console.log(&quot;\n5.  CHECKING PRODUCTS WITH 'CHASHI JASHIM' IN EMBEDDED DATA:&quot;);&#10;    const chashiJashimProducts = await db.collection(&quot;products&quot;).find({&#10;      &quot;farmer.name&quot;: /chashi.*jashim/i&#10;    }).toArray();&#10;&#10;    console.log(`Found ${chashiJashimProducts.length} products with 'chashi jashim' in embedded farmer.name:`);&#10;    chashiJashimProducts.forEach(p =&gt; {&#10;      console.log(`- ${p.name}:`);&#10;      console.log(`  Top-level: farmerId=${p.farmerId}, farmerName=${p.farmerName}`);&#10;      console.log(`  Embedded: farmer._id=${p.farmer?._id}, farmer.name=${p.farmer?.name}`);&#10;    });&#10;&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;debugAyeshaSiddika().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/debug-farmer-products-issue.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/debug-farmer-products-issue.js" />
              <option name="updatedContent" value="const { MongoClient } = require(&quot;mongodb&quot;);&#10;&#10;async function debugFarmerProductsIssue() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017/farmfresh&quot;);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot; DEBUGGING MOSTAFA KABIR'S PRODUCT COUNT ISSUE\n&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // 1. Check current Green Beans data&#10;    console.log(&quot;1.  CHECKING GREEN BEANS CURRENT ASSIGNMENT:&quot;);&#10;    const greenBeans = await db.collection(&quot;products&quot;).findOne({&#10;      name: &quot;Green Beans&quot;&#10;    });&#10;    &#10;    if (greenBeans) {&#10;      console.log(`- Product: ${greenBeans.name}`);&#10;      console.log(`- farmerId: ${greenBeans.farmerId}`);&#10;      console.log(`- farmerName: ${greenBeans.farmerName}`);&#10;      console.log(`- farmerEmail: ${greenBeans.farmerEmail}`);&#10;      console.log(`- Embedded farmer._id: ${greenBeans.farmer?._id}`);&#10;      console.log(`- Embedded farmer.name: ${greenBeans.farmer?.name}`);&#10;      console.log(`- Status: ${greenBeans.status}`);&#10;    }&#10;&#10;    // 2. Check ALL products for Mostafa Kabir using different criteria&#10;    console.log(&quot;\n2.  CHECKING ALL PRODUCTS FOR MOSTAFA KABIR:&quot;);&#10;    &#10;    const mostafaByFarmerId = await db.collection(&quot;products&quot;).find({&#10;      farmerId: &quot;farmer_006&quot;&#10;    }).toArray();&#10;    &#10;    const mostafaByEmbeddedId = await db.collection(&quot;products&quot;).find({&#10;      &quot;farmer._id&quot;: &quot;farmer_006&quot;&#10;    }).toArray();&#10;    &#10;    const mostafaByName = await db.collection(&quot;products&quot;).find({&#10;      farmerName: &quot;Mostafa Kabir&quot;&#10;    }).toArray();&#10;    &#10;    const mostafaByEmbeddedName = await db.collection(&quot;products&quot;).find({&#10;      &quot;farmer.name&quot;: &quot;Mostafa Kabir&quot;&#10;    }).toArray();&#10;&#10;    console.log(`- By farmerId (farmer_006): ${mostafaByFarmerId.length} products`);&#10;    mostafaByFarmerId.forEach(p =&gt; console.log(`  * ${p.name}`));&#10;    &#10;    console.log(`- By embedded farmer._id (farmer_006): ${mostafaByEmbeddedId.length} products`);&#10;    mostafaByEmbeddedId.forEach(p =&gt; console.log(`  * ${p.name}`));&#10;    &#10;    console.log(`- By farmerName (Mostafa Kabir): ${mostafaByName.length} products`);&#10;    mostafaByName.forEach(p =&gt; console.log(`  * ${p.name}`));&#10;    &#10;    console.log(`- By embedded farmer.name (Mostafa Kabir): ${mostafaByEmbeddedName.length} products`);&#10;    mostafaByEmbeddedName.forEach(p =&gt; console.log(`  * ${p.name}`));&#10;&#10;    // 3. Check products that might still have mixed data&#10;    console.log(&quot;\n3.  CHECKING FOR DATA INCONSISTENCIES:&quot;);&#10;    const inconsistentProducts = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        // Products where top-level and embedded farmer data don't match&#10;        {&#10;          $and: [&#10;            { farmerId: { $exists: true } },&#10;            { &quot;farmer._id&quot;: { $exists: true } },&#10;            { $expr: { $ne: [&quot;$farmerId&quot;, &quot;$farmer._id&quot;] } }&#10;          ]&#10;        },&#10;        // Products where farmer names don't match&#10;        {&#10;          $and: [&#10;            { farmerName: { $exists: true } },&#10;            { &quot;farmer.name&quot;: { $exists: true } },&#10;            { $expr: { $ne: [&quot;$farmerName&quot;, &quot;$farmer.name&quot;] } }&#10;          ]&#10;        }&#10;      ]&#10;    }).toArray();&#10;&#10;    console.log(`Found ${inconsistentProducts.length} products with inconsistent farmer data:`);&#10;    inconsistentProducts.forEach(p =&gt; {&#10;      console.log(`- ${p.name}:`);&#10;      console.log(`  Top-level: farmerId=${p.farmerId}, farmerName=${p.farmerName}`);&#10;      console.log(`  Embedded: farmer._id=${p.farmer?._id}, farmer.name=${p.farmer?.name}`);&#10;    });&#10;&#10;    // 4. Create a comprehensive query like the frontend would use&#10;    console.log(&quot;\n4.  SIMULATING FRONTEND QUERY FOR MOSTAFA:&quot;);&#10;    const frontendQuery = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        { farmerId: &quot;farmer_006&quot; },&#10;        { &quot;farmer._id&quot;: &quot;farmer_006&quot; },&#10;        { farmerName: &quot;Mostafa Kabir&quot; },&#10;        { &quot;farmer.name&quot;: &quot;Mostafa Kabir&quot; }&#10;      ]&#10;    }).toArray();&#10;&#10;    console.log(`Frontend-style query found ${frontendQuery.length} products:`);&#10;    frontendQuery.forEach(p =&gt; {&#10;      console.log(`- ${p.name} (farmerId: ${p.farmerId}, status: ${p.status})`);&#10;    });&#10;&#10;    // 5. Check if there are deleted or inactive products being counted&#10;    console.log(&quot;\n5.  CHECKING PRODUCT STATUS:&quot;);&#10;    const activeProducts = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        { farmerId: &quot;farmer_006&quot; },&#10;        { &quot;farmer._id&quot;: &quot;farmer_006&quot; },&#10;        { farmerName: &quot;Mostafa Kabir&quot; },&#10;        { &quot;farmer.name&quot;: &quot;Mostafa Kabir&quot; }&#10;      ],&#10;      status: { $nin: [&quot;deleted&quot;, &quot;inactive&quot;] }&#10;    }).toArray();&#10;&#10;    console.log(`Active products for Mostafa: ${activeProducts.length}`);&#10;    activeProducts.forEach(p =&gt; {&#10;      console.log(`- ${p.name} (status: ${p.status})`);&#10;    });&#10;&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;debugFarmerProductsIssue().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/debug-fatema-data.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/debug-fatema-data.js" />
              <option name="originalContent" value="const { MongoClient } = require(&quot;mongodb&quot;);&#10;&#10;// MongoDB connection string - update this if needed&#10;const MONGODB_URI =&#10;  process.env.MONGODB_URI ||&#10;  &quot;mongodb+srv://admin:admin123@cluster0.mongodb.net/farmfresh?retryWrites=true&amp;w=majority&quot;;&#10;&#10;async function debugFatemaData() {&#10;  const client = new MongoClient(MONGODB_URI);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot;✅ Connected to MongoDB&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Find Fatema Begum farmer data&#10;    console.log(&quot;\n Searching for Fatema Begum farmer...&quot;);&#10;    const farmers = await db&#10;      .collection(&quot;farmers&quot;)&#10;      .find({&#10;        $or: [{ name: /fatema/i }, { name: /begum/i }, { email: /fatema/i }],&#10;      })&#10;      .toArray();&#10;&#10;    console.log(`Found ${farmers.length} farmers matching &quot;Fatema&quot;:`);&#10;    farmers.forEach((farmer, index) =&gt; {&#10;      console.log(`\n${index + 1}. Farmer:`, {&#10;        _id: farmer._id,&#10;        name: farmer.name,&#10;        email: farmer.email,&#10;        userId: farmer.userId,&#10;        createdAt: farmer.createdAt,&#10;      });&#10;    });&#10;&#10;    // Find all products associated with Fatema Begum&#10;    console.log(&quot;\n Searching for products associated with Fatema Begum...&quot;);&#10;&#10;    // Search by different possible farmer identifiers&#10;    const farmerIds = farmers.map((f) =&gt; f._id);&#10;    const farmerEmails = farmers.map((f) =&gt; f.email).filter(Boolean);&#10;    const farmerNames = farmers.map((f) =&gt; f.name).filter(Boolean);&#10;&#10;    const products = await db&#10;      .collection(&quot;products&quot;)&#10;      .find({&#10;        $or: [&#10;          { farmerId: { $in: farmerIds } },&#10;          { farmerEmail: { $in: farmerEmails } },&#10;          { farmerName: { $in: farmerNames } },&#10;          { &quot;farmer.id&quot;: { $in: farmerIds.map(String) } },&#10;          { &quot;farmer.email&quot;: { $in: farmerEmails } },&#10;          { &quot;farmer.name&quot;: { $in: farmerNames } },&#10;          // Also search by product name for Sweet Corn&#10;          { name: /sweet.*corn/i },&#10;          { name: /corn/i },&#10;        ],&#10;      })&#10;      .toArray();&#10;&#10;    console.log(`\nFound ${products.length} products:`);&#10;    products.forEach((product, index) =&gt; {&#10;      console.log(`\n${index + 1}. Product:`, {&#10;        _id: product._id,&#10;        name: product.name,&#10;        category: product.category,&#10;        price: product.price,&#10;        stock: product.stock,&#10;        status: product.status,&#10;        farmerId: product.farmerId,&#10;        farmerEmail: product.farmerEmail,&#10;        farmerName: product.farmerName,&#10;        farmer: product.farmer,&#10;        createdAt: product.createdAt,&#10;      });&#10;    });&#10;&#10;    // Find orders containing these products&#10;    console.log(&quot;\n Searching for orders containing these products...&quot;);&#10;&#10;    const productIds = products.map((p) =&gt; p._id.toString());&#10;    const productNames = products.map((p) =&gt; p.name);&#10;&#10;    const orders = await db&#10;      .collection(&quot;orders&quot;)&#10;      .find({&#10;        $or: [&#10;          { &quot;items.productId&quot;: { $in: productIds } },&#10;          { &quot;items.product._id&quot;: { $in: productIds } },&#10;          { &quot;items.product.name&quot;: { $in: productNames } },&#10;          { &quot;items.name&quot;: { $in: productNames } },&#10;          // Direct search for corn orders&#10;          { &quot;items.name&quot;: /corn/i },&#10;          { &quot;items.product.name&quot;: /corn/i },&#10;        ],&#10;      })&#10;      .toArray();&#10;&#10;    console.log(`\nFound ${orders.length} orders with these products:`);&#10;    orders.forEach((order, index) =&gt; {&#10;      console.log(`\n${index + 1}. Order:`, {&#10;        _id: order._id,&#10;        customerName: order.customerName,&#10;        status: order.status,&#10;        total: order.total,&#10;        farmerSubtotal: order.farmerSubtotal,&#10;        createdAt: order.createdAt,&#10;        items: order.items?.map((item) =&gt; ({&#10;          productId: item.productId,&#10;          name: item.name,&#10;          quantity: item.quantity,&#10;          price: item.price,&#10;          product: item.product&#10;            ? {&#10;                _id: item.product._id,&#10;                name: item.product.name,&#10;                farmerId: item.product.farmerId,&#10;                farmerEmail: item.product.farmerEmail,&#10;              }&#10;            : null,&#10;        })),&#10;      });&#10;    });&#10;&#10;    // Check for any corn-related products regardless of farmer&#10;    console.log(&quot;\n All corn products in database:&quot;);&#10;    const allCornProducts = await db&#10;      .collection(&quot;products&quot;)&#10;      .find({&#10;        name: /corn/i,&#10;      })&#10;      .toArray();&#10;&#10;    console.log(`Found ${allCornProducts.length} corn products:`);&#10;    allCornProducts.forEach((product, index) =&gt; {&#10;      console.log(`\n${index + 1}. Corn Product:`, {&#10;        _id: product._id,&#10;        name: product.name,&#10;        category: product.category,&#10;        farmerId: product.farmerId,&#10;        farmerEmail: product.farmerEmail,&#10;        farmerName: product.farmerName,&#10;        farmer: product.farmer,&#10;        status: product.status,&#10;      });&#10;    });&#10;&#10;    // Summary&#10;    console.log(&quot;\n SUMMARY:&quot;);&#10;    console.log(`- Farmers found: ${farmers.length}`);&#10;    console.log(`- Products found: ${products.length}`);&#10;    console.log(`- Orders found: ${orders.length}`);&#10;    console.log(`- Total corn products: ${allCornProducts.length}`);&#10;&#10;    // Check for data inconsistencies&#10;    console.log(&quot;\n⚠️  POTENTIAL ISSUES:&quot;);&#10;&#10;    products.forEach((product) =&gt; {&#10;      const issues = [];&#10;&#10;      if (&#10;        !product.farmerId &amp;&amp;&#10;        !product.farmerEmail &amp;&amp;&#10;        !product.farmerName &amp;&amp;&#10;        !product.farmer&#10;      ) {&#10;        issues.push(&quot;No farmer identification&quot;);&#10;      }&#10;&#10;      if (product.farmer &amp;&amp; (!product.farmerId || !product.farmerEmail)) {&#10;        issues.push(&quot;Farmer object exists but missing farmerId/farmerEmail&quot;);&#10;      }&#10;&#10;      if (&#10;        product.category &amp;&amp;&#10;        ![&quot;Vegetables&quot;, &quot;Fruits&quot;, &quot;Grains&quot;, &quot;Dairy&quot;, &quot;Honey&quot;, &quot;Herbs&quot;].includes(&#10;          product.category,&#10;        )&#10;      ) {&#10;        issues.push(`Unusual category: ${product.category}`);&#10;      }&#10;&#10;      if (issues.length &gt; 0) {&#10;        console.log(`\n- Product &quot;${product.name}&quot; (${product._id}):`, issues);&#10;      }&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n✅ Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;// Run the debug script&#10;debugFatemaData().catch(console.error);&#10;" />
              <option name="updatedContent" value="const { MongoClient } = require(&quot;mongodb&quot;);&#10;require(&quot;dotenv&quot;).config(); // Load environment variables&#10;&#10;// Try to get MongoDB URI from environment variables first&#10;const MONGODB_URI =&#10;  process.env.MONGODB_URI ||&#10;  process.env.MONGODB_URL ||&#10;  process.env.DATABASE_URL ||&#10;  &quot;mongodb://localhost:27017/farmfresh&quot;; // Fallback to local MongoDB&#10;&#10;async function debugFatemaData() {&#10;  const client = new MongoClient(MONGODB_URI);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot;✅ Connected to MongoDB&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Find Fatema Begum farmer data&#10;    console.log(&quot;\n Searching for Fatema Begum farmer...&quot;);&#10;    const farmers = await db&#10;      .collection(&quot;farmers&quot;)&#10;      .find({&#10;        $or: [{ name: /fatema/i }, { name: /begum/i }, { email: /fatema/i }],&#10;      })&#10;      .toArray();&#10;&#10;    console.log(`Found ${farmers.length} farmers matching &quot;Fatema&quot;:`);&#10;    farmers.forEach((farmer, index) =&gt; {&#10;      console.log(`\n${index + 1}. Farmer:`, {&#10;        _id: farmer._id,&#10;        name: farmer.name,&#10;        email: farmer.email,&#10;        userId: farmer.userId,&#10;        createdAt: farmer.createdAt,&#10;      });&#10;    });&#10;&#10;    // Find all products associated with Fatema Begum&#10;    console.log(&quot;\n Searching for products associated with Fatema Begum...&quot;);&#10;&#10;    // Search by different possible farmer identifiers&#10;    const farmerIds = farmers.map((f) =&gt; f._id);&#10;    const farmerEmails = farmers.map((f) =&gt; f.email).filter(Boolean);&#10;    const farmerNames = farmers.map((f) =&gt; f.name).filter(Boolean);&#10;&#10;    const products = await db&#10;      .collection(&quot;products&quot;)&#10;      .find({&#10;        $or: [&#10;          { farmerId: { $in: farmerIds } },&#10;          { farmerEmail: { $in: farmerEmails } },&#10;          { farmerName: { $in: farmerNames } },&#10;          { &quot;farmer.id&quot;: { $in: farmerIds.map(String) } },&#10;          { &quot;farmer.email&quot;: { $in: farmerEmails } },&#10;          { &quot;farmer.name&quot;: { $in: farmerNames } },&#10;          // Also search by product name for Sweet Corn&#10;          { name: /sweet.*corn/i },&#10;          { name: /corn/i },&#10;        ],&#10;      })&#10;      .toArray();&#10;&#10;    console.log(`\nFound ${products.length} products:`);&#10;    products.forEach((product, index) =&gt; {&#10;      console.log(`\n${index + 1}. Product:`, {&#10;        _id: product._id,&#10;        name: product.name,&#10;        category: product.category,&#10;        price: product.price,&#10;        stock: product.stock,&#10;        status: product.status,&#10;        farmerId: product.farmerId,&#10;        farmerEmail: product.farmerEmail,&#10;        farmerName: product.farmerName,&#10;        farmer: product.farmer,&#10;        createdAt: product.createdAt,&#10;      });&#10;    });&#10;&#10;    // Find orders containing these products&#10;    console.log(&quot;\n Searching for orders containing these products...&quot;);&#10;&#10;    const productIds = products.map((p) =&gt; p._id.toString());&#10;    const productNames = products.map((p) =&gt; p.name);&#10;&#10;    const orders = await db&#10;      .collection(&quot;orders&quot;)&#10;      .find({&#10;        $or: [&#10;          { &quot;items.productId&quot;: { $in: productIds } },&#10;          { &quot;items.product._id&quot;: { $in: productIds } },&#10;          { &quot;items.product.name&quot;: { $in: productNames } },&#10;          { &quot;items.name&quot;: { $in: productNames } },&#10;          // Direct search for corn orders&#10;          { &quot;items.name&quot;: /corn/i },&#10;          { &quot;items.product.name&quot;: /corn/i },&#10;        ],&#10;      })&#10;      .toArray();&#10;&#10;    console.log(`\nFound ${orders.length} orders with these products:`);&#10;    orders.forEach((order, index) =&gt; {&#10;      console.log(`\n${index + 1}. Order:`, {&#10;        _id: order._id,&#10;        customerName: order.customerName,&#10;        status: order.status,&#10;        total: order.total,&#10;        farmerSubtotal: order.farmerSubtotal,&#10;        createdAt: order.createdAt,&#10;        items: order.items?.map((item) =&gt; ({&#10;          productId: item.productId,&#10;          name: item.name,&#10;          quantity: item.quantity,&#10;          price: item.price,&#10;          product: item.product&#10;            ? {&#10;                _id: item.product._id,&#10;                name: item.product.name,&#10;                farmerId: item.product.farmerId,&#10;                farmerEmail: item.product.farmerEmail,&#10;              }&#10;            : null,&#10;        })),&#10;      });&#10;    });&#10;&#10;    // Check for any corn-related products regardless of farmer&#10;    console.log(&quot;\n All corn products in database:&quot;);&#10;    const allCornProducts = await db&#10;      .collection(&quot;products&quot;)&#10;      .find({&#10;        name: /corn/i,&#10;      })&#10;      .toArray();&#10;&#10;    console.log(`Found ${allCornProducts.length} corn products:`);&#10;    allCornProducts.forEach((product, index) =&gt; {&#10;      console.log(`\n${index + 1}. Corn Product:`, {&#10;        _id: product._id,&#10;        name: product.name,&#10;        category: product.category,&#10;        farmerId: product.farmerId,&#10;        farmerEmail: product.farmerEmail,&#10;        farmerName: product.farmerName,&#10;        farmer: product.farmer,&#10;        status: product.status,&#10;      });&#10;    });&#10;&#10;    // Summary&#10;    console.log(&quot;\n SUMMARY:&quot;);&#10;    console.log(`- Farmers found: ${farmers.length}`);&#10;    console.log(`- Products found: ${products.length}`);&#10;    console.log(`- Orders found: ${orders.length}`);&#10;    console.log(`- Total corn products: ${allCornProducts.length}`);&#10;&#10;    // Check for data inconsistencies&#10;    console.log(&quot;\n⚠️  POTENTIAL ISSUES:&quot;);&#10;&#10;    products.forEach((product) =&gt; {&#10;      const issues = [];&#10;&#10;      if (&#10;        !product.farmerId &amp;&amp;&#10;        !product.farmerEmail &amp;&amp;&#10;        !product.farmerName &amp;&amp;&#10;        !product.farmer&#10;      ) {&#10;        issues.push(&quot;No farmer identification&quot;);&#10;      }&#10;&#10;      if (product.farmer &amp;&amp; (!product.farmerId || !product.farmerEmail)) {&#10;        issues.push(&quot;Farmer object exists but missing farmerId/farmerEmail&quot;);&#10;      }&#10;&#10;      if (&#10;        product.category &amp;&amp;&#10;        ![&quot;Vegetables&quot;, &quot;Fruits&quot;, &quot;Grains&quot;, &quot;Dairy&quot;, &quot;Honey&quot;, &quot;Herbs&quot;].includes(&#10;          product.category,&#10;        )&#10;      ) {&#10;        issues.push(`Unusual category: ${product.category}`);&#10;      }&#10;&#10;      if (issues.length &gt; 0) {&#10;        console.log(`\n- Product &quot;${product.name}&quot; (${product._id}):`, issues);&#10;      }&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n✅ Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;// Run the debug script&#10;debugFatemaData().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/debug-hardcoded-farmer-status.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/debug-hardcoded-farmer-status.js" />
              <option name="updatedContent" value="const { MongoClient } = require(&quot;mongodb&quot;);&#10;debugHardcodedFarmerProducts().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/debug-old-reviews.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/debug-old-reviews.js" />
              <option name="updatedContent" value="// Debug why old products with reviews aren't showing ratings on products page&#10;const { MongoClient, ObjectId } = require('mongodb');&#10;&#10;async function debugOldProductReviews() {&#10;  const client = new MongoClient('mongodb://localhost:27017');&#10;  await client.connect();&#10;  const db = client.db('farmfresh');&#10;  &#10;  console.log(' Debugging old product reviews...\n');&#10;  &#10;  // Get all reviews&#10;  const allReviews = await db.collection('reviews').find({}).toArray();&#10;  console.log(` Total reviews in database: ${allReviews.length}`);&#10;  &#10;  // Get sample of old products (first 5)&#10;  const oldProducts = await db.collection('products').find({}).limit(5).toArray();&#10;  console.log(` Checking first 5 products:\n`);&#10;  &#10;  for (const product of oldProducts) {&#10;    const productId = product._id.toString();&#10;    const productReviews = allReviews.filter(review =&gt; review.productId === productId);&#10;    &#10;    console.log(`Product: ${product.name} (ID: ${productId})`);&#10;    console.log(`  Reviews found: ${productReviews.length}`);&#10;    if (productReviews.length &gt; 0) {&#10;      console.log(`  Sample review: ${productReviews[0].comment?.substring(0, 50)}...`);&#10;      console.log(`  Review rating: ${productReviews[0].rating}`);&#10;    }&#10;    console.log('');&#10;  }&#10;  &#10;  // Check the structure of all reviews&#10;  console.log(' All review product IDs:');&#10;  const reviewProductIds = [...new Set(allReviews.map(r =&gt; r.productId))];&#10;  reviewProductIds.forEach(id =&gt; {&#10;    const count = allReviews.filter(r =&gt; r.productId === id).length;&#10;    console.log(`  ${id}: ${count} reviews`);&#10;  });&#10;  &#10;  await client.close();&#10;}&#10;&#10;debugOldProductReviews().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/debug-reviews.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/debug-reviews.js" />
              <option name="updatedContent" value="// Quick debug script to check reviews and products&#10;const { MongoClient } = require('mongodb');&#10;&#10;async function debugReviews() {&#10;  const client = new MongoClient('mongodb://localhost:27017');&#10;  await client.connect();&#10;  const db = client.db('farmfresh');&#10;  &#10;  // Get sample products&#10;  const products = await db.collection('products').find({}).limit(3).toArray();&#10;  console.log('Sample products:');&#10;  products.forEach(p =&gt; console.log(`- ${p.name} (ID: ${p._id})`));&#10;  &#10;  console.log('\n');&#10;  &#10;  // Get sample reviews&#10;  const reviews = await db.collection('reviews').find({}).limit(5).toArray();&#10;  console.log('Sample reviews:');&#10;  reviews.forEach(r =&gt; console.log(`- Product ID: ${r.productId}, Rating: ${r.rating}, Comment: ${r.comment?.substring(0, 30)}...`));&#10;  &#10;  console.log('\n');&#10;  &#10;  // Check for ID matches&#10;  const productIds = products.map(p =&gt; p._id.toString());&#10;  const reviewProductIds = reviews.map(r =&gt; r.productId);&#10;  console.log('Product IDs:', productIds);&#10;  console.log('Review Product IDs:', reviewProductIds);&#10;  &#10;  const matches = productIds.filter(pid =&gt; reviewProductIds.includes(pid));&#10;  console.log('Matching IDs:', matches);&#10;  &#10;  await client.close();&#10;}&#10;&#10;debugReviews().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/farming-methods-section-corrected.txt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/farming-methods-section-corrected.txt" />
              <option name="updatedContent" value="                {/* Farming Methods Showcase - Updated to use database data */}&#10;                {farmer.farmInfo?.farmingMethods &amp;&amp; farmer.farmInfo.farmingMethods.length &gt; 0 &amp;&amp; (&#10;                  &lt;div className=&quot;mb-12&quot;&gt;&#10;                    &lt;div className=&quot;text-center mb-8&quot;&gt;&#10;                      &lt;h3 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                         Our Farming Philosophy&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Sustainable and innovative agricultural practices&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6&quot;&gt;&#10;                      {farmer.farmInfo.farmingMethods.map((method, index) =&gt; {&#10;                        const config = methodConfig[method] || {&#10;                          icon: &quot;fas fa-tractor&quot;,&#10;                          color: &quot;text-gray-600 dark:text-gray-400&quot;,&#10;                          description: &quot;Specialized farming technique&quot;,&#10;                        };&#10;&#10;                        return (&#10;                          &lt;div&#10;                            key={index}&#10;                            className=&quot;group relative overflow-hidden rounded-2xl bg-white dark:bg-gray-800 p-8 shadow-lg hover:shadow-2xl transition-all duration-500 border-t-4 border-green-500&quot;&#10;                          &gt;&#10;                            &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-green-50/50 to-emerald-50/50 dark:from-green-900/10 dark:to-emerald-900/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&lt;/div&gt;&#10;                            &lt;div className=&quot;relative z-10 text-center&quot;&gt;&#10;                              &lt;div className=&quot;w-20 h-20 bg-gradient-to-br from-green-100 to-emerald-100 dark:from-green-900/30 dark:to-emerald-900/30 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300&quot;&gt;&#10;                                &lt;i&#10;                                  className={`${config.icon} text-4xl ${config.color}`}&#10;                                &gt;&lt;/i&gt;&#10;                              &lt;/div&gt;&#10;                              &lt;h4 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                                {method}&#10;                              &lt;/h4&gt;&#10;                              &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;                                {config.description}&#10;                              &lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        );&#10;                      })}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                )}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/fix-ayesha-siddika-products.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/fix-ayesha-siddika-products.js" />
              <option name="updatedContent" value="const { MongoClient, ObjectId } = require(&quot;mongodb&quot;);&#10;&#10;async function fixAyeshaSiddikaProducts() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017/farmfresh&quot;);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot; FIXING AYESHA SIDDIKA'S PRODUCT DATA INCONSISTENCIES\n&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Get Ayesha Siddika's correct farmer data&#10;    console.log(&quot;1.  GETTING AYESHA SIDDIKA'S CORRECT DATA:&quot;);&#10;    const ayesha = await db.collection(&quot;farmers&quot;).findOne({&#10;      _id: &quot;farmer_008&quot;&#10;    });&#10;&#10;    if (!ayesha) {&#10;      console.log(&quot;❌ Ayesha Siddika farmer not found!&quot;);&#10;      return;&#10;    }&#10;&#10;    console.log(`- ID: ${ayesha._id}`);&#10;    console.log(`- Name: ${ayesha.name}`);&#10;    console.log(`- Email: ${ayesha.email}`);&#10;    console.log(`- Farm: ${ayesha.farmName}`);&#10;&#10;    // Find the problematic products (Dill and Oregano)&#10;    console.log(&quot;\n2.  FINDING PROBLEMATIC PRODUCTS:&quot;);&#10;    const problematicProducts = await db.collection(&quot;products&quot;).find({&#10;      farmerId: &quot;farmer_008&quot;,&#10;      farmerName: &quot;Ayesha Siddika&quot;,&#10;      &quot;farmer.name&quot;: &quot;chashi jashim&quot;&#10;    }).toArray();&#10;&#10;    console.log(`Found ${problematicProducts.length} products with inconsistent data:`);&#10;    problematicProducts.forEach(p =&gt; {&#10;      console.log(`- ${p.name}:`);&#10;      console.log(`  Current top-level: farmerId=${p.farmerId}, farmerName=${p.farmerName}`);&#10;      console.log(`  Current embedded: farmer._id=${p.farmer?._id}, farmer.name=${p.farmer?.name}`);&#10;    });&#10;&#10;    // Fix each problematic product&#10;    console.log(&quot;\n3.  FIXING EMBEDDED FARMER DATA...&quot;);&#10;    &#10;    for (const product of problematicProducts) {&#10;      console.log(`\nFixing ${product.name}...`);&#10;      &#10;      const updateData = {&#10;        // Ensure top-level fields are correct&#10;        farmerId: ayesha._id,&#10;        farmerName: ayesha.name,&#10;        farmerEmail: ayesha.email,&#10;        &#10;        // Fix the embedded farmer object&#10;        farmer: {&#10;          _id: ayesha._id,&#10;          name: ayesha.name,&#10;          email: ayesha.email,&#10;          farmName: ayesha.farmName,&#10;          location: ayesha.location,&#10;          phone: ayesha.phone,&#10;          specializations: ayesha.specializations || [],&#10;          farmingMethods: ayesha.farmingMethods || [],&#10;          verified: ayesha.verified || false&#10;        },&#10;        &#10;        // Update timestamp&#10;        updatedAt: new Date()&#10;      };&#10;&#10;      const result = await db.collection(&quot;products&quot;).updateOne(&#10;        { _id: product._id },&#10;        { $set: updateData }&#10;      );&#10;&#10;      console.log(`  ✅ Updated ${product.name}: ${result.modifiedCount} document(s) modified`);&#10;    }&#10;&#10;    // Verify the fixes&#10;    console.log(&quot;\n4.  VERIFYING FIXES:&quot;);&#10;    &#10;    const updatedProducts = await db.collection(&quot;products&quot;).find({&#10;      farmerId: &quot;farmer_008&quot;&#10;    }).toArray();&#10;&#10;    console.log(`\nAyesha Siddika now has ${updatedProducts.length} products with consistent data:`);&#10;    updatedProducts.forEach(p =&gt; {&#10;      const isConsistent = &#10;        p.farmerId === p.farmer?._id &amp;&amp;&#10;        p.farmerName === p.farmer?.name &amp;&amp;&#10;        p.farmerEmail === p.farmer?.email;&#10;      &#10;      console.log(`- ${p.name} ${isConsistent ? '✅' : '❌'}`);&#10;      if (!isConsistent) {&#10;        console.log(`  Top-level: farmerId=${p.farmerId}, farmerName=${p.farmerName}`);&#10;        console.log(`  Embedded: farmer._id=${p.farmer?._id}, farmer.name=${p.farmer?.name}`);&#10;      }&#10;    });&#10;&#10;    // Final test: Simulate frontend query&#10;    console.log(&quot;\n5.  FINAL TEST - SIMULATING FRONTEND QUERY:&quot;);&#10;    const frontendQuery = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        { farmerId: &quot;farmer_008&quot; },&#10;        { &quot;farmer._id&quot;: &quot;farmer_008&quot; },&#10;        { farmerName: &quot;Ayesha Siddika&quot; },&#10;        { &quot;farmer.name&quot;: &quot;Ayesha Siddika&quot; }&#10;      ]&#10;    }).toArray();&#10;&#10;    console.log(`Frontend query now finds ${frontendQuery.length} products for Ayesha Siddika:`);&#10;    frontendQuery.forEach(p =&gt; {&#10;      console.log(`- ${p.name} (status: ${p.status})`);&#10;    });&#10;&#10;    // Check if there are still any products with &quot;chashi jashim&quot;&#10;    console.log(&quot;\n6.  CHECKING FOR REMAINING 'CHASHI JASHIM' ISSUES:&quot;);&#10;    const chashiProducts = await db.collection(&quot;products&quot;).find({&#10;      &quot;farmer.name&quot;: /chashi.*jashim/i&#10;    }).toArray();&#10;&#10;    console.log(`Found ${chashiProducts.length} products still with 'chashi jashim':`);&#10;    chashiProducts.forEach(p =&gt; {&#10;      console.log(`- ${p.name}:`);&#10;      console.log(`  Top-level: farmerId=${p.farmerId}, farmerName=${p.farmerName}`);&#10;      console.log(`  Embedded: farmer.name=${p.farmer?.name}`);&#10;    });&#10;&#10;    if (chashiProducts.length &gt; 0) {&#10;      console.log(&quot;\n NOTE: These products may need manual review to determine correct farmer assignment.&quot;);&#10;    }&#10;&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;fixAyeshaSiddikaProducts().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/fix-green-beans-embedded-farmer.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/fix-green-beans-embedded-farmer.js" />
              <option name="updatedContent" value="const { MongoClient, ObjectId } = require(&quot;mongodb&quot;);&#10;&#10;async function fixGreenBeansEmbeddedFarmer() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017/farmfresh&quot;);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot; FIXING GREEN BEANS EMBEDDED FARMER DATA\n&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Find Green Beans product&#10;    const greenBeans = await db.collection(&quot;products&quot;).findOne({&#10;      name: &quot;Green Beans&quot;&#10;    });&#10;&#10;    if (!greenBeans) {&#10;      console.log(&quot;❌ Green Beans product not found!&quot;);&#10;      return;&#10;    }&#10;&#10;    console.log(&quot; CURRENT GREEN BEANS DATA:&quot;);&#10;    console.log(`- farmerId: ${greenBeans.farmerId}`);&#10;    console.log(`- farmerName: ${greenBeans.farmerName}`);&#10;    console.log(`- farmerEmail: ${greenBeans.farmerEmail}`);&#10;    console.log(`- Embedded farmer._id: ${greenBeans.farmer?._id}`);&#10;    console.log(`- Embedded farmer.name: ${greenBeans.farmer?.name}`);&#10;    console.log(`- Embedded farmer.email: ${greenBeans.farmer?.email}`);&#10;&#10;    // Get Mizanur Rahman's correct data&#10;    console.log(&quot;\n GETTING MIZANUR RAHMAN'S DATA:&quot;);&#10;    const mizanur = await db.collection(&quot;farmers&quot;).findOne({&#10;      $or: [&#10;        { _id: &quot;farmer_005&quot; },&#10;        { email: &quot;mizanur.rahman@farmfresh.com&quot; },&#10;        { name: &quot;Mizanur Rahman&quot; }&#10;      ]&#10;    });&#10;&#10;    if (!mizanur) {&#10;      console.log(&quot;❌ Mizanur Rahman farmer not found!&quot;);&#10;      return;&#10;    }&#10;&#10;    console.log(`- Mizanur's ID: ${mizanur._id}`);&#10;    console.log(`- Mizanur's Name: ${mizanur.name}`);&#10;    console.log(`- Mizanur's Email: ${mizanur.email}`);&#10;    console.log(`- Mizanur's Farm: ${mizanur.farmName}`);&#10;&#10;    // Update Green Beans with complete and consistent farmer data&#10;    console.log(&quot;\n UPDATING GREEN BEANS WITH CONSISTENT FARMER DATA...&quot;);&#10;    &#10;    const updateData = {&#10;      // Top-level fields (should already be correct but ensure consistency)&#10;      farmerId: mizanur._id,&#10;      farmerName: mizanur.name,&#10;      farmerEmail: mizanur.email,&#10;      &#10;      // Fix the embedded farmer object&#10;      farmer: {&#10;        _id: mizanur._id,&#10;        name: mizanur.name,&#10;        email: mizanur.email,&#10;        farmName: mizanur.farmName,&#10;        location: mizanur.location,&#10;        phone: mizanur.phone,&#10;        specializations: mizanur.specializations || [],&#10;        farmingMethods: mizanur.farmingMethods || [],&#10;        verified: mizanur.verified || false&#10;      },&#10;      &#10;      // Update timestamp&#10;      updatedAt: new Date()&#10;    };&#10;&#10;    const result = await db.collection(&quot;products&quot;).updateOne(&#10;      { name: &quot;Green Beans&quot; },&#10;      { $set: updateData }&#10;    );&#10;&#10;    console.log(`✅ Update result: ${result.modifiedCount} documents modified`);&#10;&#10;    // Verify the update&#10;    console.log(&quot;\n VERIFYING UPDATED GREEN BEANS DATA:&quot;);&#10;    const updatedGreenBeans = await db.collection(&quot;products&quot;).findOne({&#10;      name: &quot;Green Beans&quot;&#10;    });&#10;&#10;    console.log(`- farmerId: ${updatedGreenBeans.farmerId}`);&#10;    console.log(`- farmerName: ${updatedGreenBeans.farmerName}`);&#10;    console.log(`- farmerEmail: ${updatedGreenBeans.farmerEmail}`);&#10;    console.log(`- Embedded farmer._id: ${updatedGreenBeans.farmer?._id}`);&#10;    console.log(`- Embedded farmer.name: ${updatedGreenBeans.farmer?.name}`);&#10;    console.log(`- Embedded farmer.email: ${updatedGreenBeans.farmer?.email}`);&#10;&#10;    // Check consistency&#10;    const isConsistent = &#10;      updatedGreenBeans.farmerId === updatedGreenBeans.farmer._id &amp;&amp;&#10;      updatedGreenBeans.farmerName === updatedGreenBeans.farmer.name &amp;&amp;&#10;      updatedGreenBeans.farmerEmail === updatedGreenBeans.farmer.email;&#10;&#10;    console.log(`\nData is consistent: ${isConsistent ? '✅' : '❌'}`);&#10;&#10;    // Final verification: Check Mostafa's products&#10;    console.log(&quot;\n FINAL VERIFICATION - MOSTAFA'S PRODUCTS:&quot;);&#10;    const mostafaProducts = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        { farmerId: &quot;farmer_006&quot; },&#10;        { &quot;farmer._id&quot;: &quot;farmer_006&quot; },&#10;        { farmerName: &quot;Mostafa Kabir&quot; },&#10;        { &quot;farmer.name&quot;: &quot;Mostafa Kabir&quot; }&#10;      ]&#10;    }).toArray();&#10;&#10;    console.log(`Mostafa Kabir now has ${mostafaProducts.length} products:`);&#10;    mostafaProducts.forEach(p =&gt; {&#10;      console.log(`- ${p.name}`);&#10;    });&#10;&#10;    // Check Mizanur's products&#10;    console.log(&quot;\n MIZANUR'S PRODUCTS:&quot;);&#10;    const mizanurProducts = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        { farmerId: &quot;farmer_005&quot; },&#10;        { &quot;farmer._id&quot;: &quot;farmer_005&quot; },&#10;        { farmerName: &quot;Mizanur Rahman&quot; },&#10;        { &quot;farmer.name&quot;: &quot;Mizanur Rahman&quot; }&#10;      ]&#10;    }).toArray();&#10;&#10;    console.log(`Mizanur Rahman now has ${mizanurProducts.length} products:`);&#10;    mizanurProducts.forEach(p =&gt; {&#10;      console.log(`- ${p.name}`);&#10;    });&#10;&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;fixGreenBeansEmbeddedFarmer().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/fix-remaining-farmers.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/fix-remaining-farmers.js" />
              <option name="updatedContent" value="const { MongoClient, ObjectId } = require(&quot;mongodb&quot;);&#10;&#10;async function fixRemainingFarmers() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017/farmfresh&quot;);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot; FIXING REMAINING 3 FARMERS WITHOUT FARMING METHODS\n&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // The 3 farmers that failed in the previous script&#10;    const remainingFarmers = [&#10;      {&#10;        id: &quot;688b5723287e9adbc28801dc&quot;,&#10;        name: &quot;unnamed&quot;,&#10;        methods: [&quot;Sustainable&quot;, &quot;Traditional&quot;]&#10;      },&#10;      {&#10;        id: &quot;689054bb0f308009e3dd8225&quot;, &#10;        name: &quot;sharif hossain&quot;,&#10;        methods: [&quot;Free-range&quot;, &quot;Animal Welfare&quot;, &quot;Sustainable&quot;]&#10;      },&#10;      {&#10;        id: &quot;6898578b2fcd466685f715f5&quot;,&#10;        name: &quot;kashem ali&quot;, &#10;        methods: [&quot;Traditional&quot;, &quot;Grain Cultivation&quot;, &quot;Sustainable&quot;]&#10;      }&#10;    ];&#10;&#10;    console.log(&quot;1.  REMAINING FARMERS TO FIX:&quot;);&#10;    remainingFarmers.forEach(farmer =&gt; {&#10;      console.log(`- ${farmer.name} (${farmer.id}): [${farmer.methods.join(', ')}]`);&#10;    });&#10;&#10;    console.log(&quot;\n2.  UPDATING REMAINING FARMERS...&quot;);&#10;&#10;    let successCount = 0;&#10;&#10;    for (const farmer of remainingFarmers) {&#10;      try {&#10;        console.log(`\nFixing ${farmer.name} (${farmer.id})...`);&#10;&#10;        // Check current farmer state&#10;        const currentFarmer = await db.collection(&quot;farmers&quot;).findOne({&#10;          _id: new ObjectId(farmer.id)&#10;        });&#10;&#10;        if (!currentFarmer) {&#10;          console.log(`  ❌ Farmer not found`);&#10;          continue;&#10;        }&#10;&#10;        let updateData;&#10;&#10;        if (currentFarmer.farmInfo) {&#10;          // farmInfo exists, just update the farmingMethods field&#10;          updateData = {&#10;            $set: {&#10;              &quot;farmInfo.farmingMethods&quot;: farmer.methods,&#10;              updatedAt: new Date()&#10;            }&#10;          };&#10;          console.log(`   Updating existing farmInfo...`);&#10;        } else {&#10;          // farmInfo doesn't exist, create it&#10;          updateData = {&#10;            $set: {&#10;              farmInfo: {&#10;                farmName: currentFarmer.farmName || `Farm ${farmer.id}`,&#10;                farmDescription: &quot;&quot;,&#10;                farmSize: currentFarmer.farmSize || null,&#10;                farmType: &quot;Mixed Farming&quot;,&#10;                certifications: [],&#10;                establishedYear: null,&#10;                farmingMethods: farmer.methods&#10;              },&#10;              updatedAt: new Date()&#10;            }&#10;          };&#10;          console.log(`   Creating new farmInfo...`);&#10;        }&#10;&#10;        const result = await db.collection(&quot;farmers&quot;).updateOne(&#10;          { _id: new ObjectId(farmer.id) },&#10;          updateData&#10;        );&#10;&#10;        if (result.modifiedCount &gt; 0) {&#10;          console.log(`  ✅ Successfully updated!`);&#10;          successCount++;&#10;        } else {&#10;          console.log(`  ⚠️  No changes made`);&#10;        }&#10;&#10;      } catch (error) {&#10;        console.log(`  ❌ Error updating ${farmer.name}: ${error.message}`);&#10;      }&#10;    }&#10;&#10;    console.log(&quot;\n3.  FINAL VERIFICATION...&quot;);&#10;&#10;    // Check all farmers now&#10;    const allFarmers = await db.collection(&quot;farmers&quot;).find({}).toArray();&#10;    &#10;    const farmersWithMethods = allFarmers.filter(farmer =&gt; &#10;      farmer.farmInfo?.farmingMethods &amp;&amp; &#10;      Array.isArray(farmer.farmInfo.farmingMethods) &amp;&amp; &#10;      farmer.farmInfo.farmingMethods.length &gt; 0&#10;    );&#10;&#10;    const farmersWithoutMethods = allFarmers.filter(farmer =&gt; &#10;      !farmer.farmInfo?.farmingMethods || &#10;      !Array.isArray(farmer.farmInfo.farmingMethods) || &#10;      farmer.farmInfo.farmingMethods.length === 0&#10;    );&#10;&#10;    console.log(`\n4.  FINAL RESULTS:`);&#10;    console.log(`✅ Total farmers with farming methods: ${farmersWithMethods.length}`);&#10;    &#10;    console.log(`\n✅ All farmers with methods:`);&#10;    farmersWithMethods.forEach(farmer =&gt; {&#10;      console.log(`  - ${farmer.name || 'unnamed'}: [${farmer.farmInfo.farmingMethods.join(', ')}]`);&#10;    });&#10;&#10;    if (farmersWithoutMethods.length &gt; 0) {&#10;      console.log(`\n❌ Farmers still without methods: ${farmersWithoutMethods.length}`);&#10;      farmersWithoutMethods.forEach(farmer =&gt; {&#10;        console.log(`  - ${farmer.name || 'unnamed'} (${farmer._id})`);&#10;      });&#10;    }&#10;&#10;    console.log(`\n5.  SUMMARY:`);&#10;    console.log(`Total farmers: ${allFarmers.length}`);&#10;    console.log(`Successfully fixed: ${successCount}`);&#10;    console.log(`Farmers with methods: ${farmersWithMethods.length} (${((farmersWithMethods.length/allFarmers.length)*100).toFixed(1)}%)`);&#10;&#10;    if (farmersWithMethods.length === allFarmers.length) {&#10;      console.log(`\n PERFECT! ALL ${allFarmers.length} FARMERS NOW HAVE FARMING METHODS!`);&#10;      console.log(` Every farmer profile page will now show specific farming methods!`);&#10;    }&#10;&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;fixRemainingFarmers().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/fix-reviews.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/fix-reviews.js" />
              <option name="originalContent" value="  const client = new MongoClient(&quot;mongodb://localhost:27017&quot;);&#10;  });&#10;&#10;  console.log(`✅ Removed ${result.deletedCount} recent reviews`);&#10;  await client.close();&#10;}&#10;&#10;async function showReviewTimeline() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017&quot;);&#10;  await client.connect();&#10;  const db = client.db(&quot;farmfresh&quot;);&#10;&#10;  const reviews = await db&#10;    .collection(&quot;reviews&quot;)&#10;    .find({})&#10;    .sort({ createdAt: 1 })&#10;    .toArray();&#10;&#10;  console.log(&quot;\n Review timeline (oldest to newest):&quot;);&#10;  reviews.forEach((review, index) =&gt; {&#10;    console.log(&#10;      `${index + 1}. ${review.createdAt.toISOString()} - ${review.reviewer} - ${review.comment?.substring(0, 50)}...`,&#10;    );&#10;  });&#10;&#10;  await client.close();&#10;}&#10;" />
              <option name="updatedContent" value="// Check and fix review mess - remove duplicate reviews added by mistake&#10;const { MongoClient, ObjectId } = require(&quot;mongodb&quot;);&#10;&#10;async function fixReviewMess() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017&quot;);&#10;  await client.connect();&#10;  const db = client.db(&quot;farmfresh&quot;);&#10;&#10;  console.log(&quot; Analyzing review situation...&quot;);&#10;&#10;  // Get all reviews&#10;  const allReviews = await db.collection(&quot;reviews&quot;).find({}).toArray();&#10;  console.log(`Total reviews in database: ${allReviews.length}`);&#10;&#10;  // Group reviews by product ID&#10;  const reviewsByProduct = {};&#10;  allReviews.forEach((review) =&gt; {&#10;    if (!reviewsByProduct[review.productId]) {&#10;      reviewsByProduct[review.productId] = [];&#10;    }&#10;    reviewsByProduct[review.productId].push(review);&#10;  });&#10;&#10;  console.log(&quot;\n Reviews per product:&quot;);&#10;  Object.entries(reviewsByProduct).forEach(([productId, reviews]) =&gt; {&#10;    const product = reviews[0]; // Just to get some context&#10;    console.log(`Product ID ${productId}: ${reviews.length} reviews`);&#10;&#10;    // Show reviewers to identify duplicates&#10;    const reviewers = reviews.map((r) =&gt; r.reviewer).join(&quot;, &quot;);&#10;    console.log(`  Reviewers: ${reviewers}`);&#10;&#10;    // Check for suspicious patterns (our sample review names)&#10;    const sampleReviewers = [&#10;      &quot;John Doe&quot;,&#10;      &quot;Jane Smith&quot;,&#10;      &quot;Mike Johnson&quot;,&#10;      &quot;Sarah Wilson&quot;,&#10;      &quot;David Brown&quot;,&#10;    ];&#10;    const hasSampleReviews = reviews.some((r) =&gt;&#10;      sampleReviewers.includes(r.reviewer),&#10;    );&#10;    if (hasSampleReviews) {&#10;      console.log(&#10;        `  ⚠️ This product has sample reviews that might need removal`,&#10;      );&#10;    }&#10;    console.log(&quot;&quot;);&#10;  });&#10;&#10;  // Ask what to do&#10;  console.log(&quot;\n What would you like to do?&quot;);&#10;  console.log(&#10;    &quot;1. Remove all reviews with sample reviewer names (John Doe, Jane Smith, etc.)&quot;,&#10;  );&#10;  console.log(&quot;2. Remove reviews created in the last hour (recent additions)&quot;);&#10;  console.log(&#10;    &quot;3. Show me the oldest vs newest reviews to identify which are original&quot;,&#10;  );&#10;  console.log(&quot;\nRun with parameter: node fix-reviews.js [1|2|3]&quot;);&#10;&#10;  await client.close();&#10;}&#10;&#10;// Handle command line arguments&#10;const action = process.argv[2];&#10;&#10;if (action === &quot;1&quot;) {&#10;  removeSampleReviews();&#10;} else if (action === &quot;2&quot;) {&#10;  removeRecentReviews();&#10;} else if (action === &quot;3&quot;) {&#10;  showReviewTimeline();&#10;} else {&#10;  fixReviewMess().catch(console.error);&#10;}&#10;&#10;async function removeSampleReviews() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017&quot;);&#10;  await client.connect();&#10;  const db = client.db(&quot;farmfresh&quot;);&#10;&#10;  const sampleReviewers = [&#10;    &quot;John Doe&quot;,&#10;    &quot;Jane Smith&quot;,&#10;    &quot;Mike Johnson&quot;,&#10;    &quot;Sarah Wilson&quot;,&#10;    &quot;David Brown&quot;,&#10;  ];&#10;&#10;  console.log(&quot;️ Removing sample reviews...&quot;);&#10;  const result = await db.collection(&quot;reviews&quot;).deleteMany({&#10;    reviewer: { $in: sampleReviewers },&#10;  });&#10;&#10;  console.log(`✅ Removed ${result.deletedCount} sample reviews`);&#10;&#10;  // Check what's left&#10;  const remainingReviews = await db.collection(&quot;reviews&quot;).find({}).toArray();&#10;  console.log(` Remaining reviews: ${remainingReviews.length}`);&#10;  console.log(&quot;Your original reviews:&quot;);&#10;  remainingReviews.forEach((r) =&gt;&#10;    console.log(`- ${r.reviewer || &quot;Anonymous&quot;}: ${r.comment?.substring(0, 50)}...`),&#10;  );&#10;&#10;  await client.close();&#10;}&#10;&#10;async function removeRecentReviews() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017&quot;);&#10;  await client.connect();&#10;  const db = client.db(&quot;farmfresh&quot;);&#10;&#10;  const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000);&#10;&#10;  console.log(&quot;️ Removing reviews created in the last hour...&quot;);&#10;  const result = await db.collection(&quot;reviews&quot;).deleteMany({&#10;    createdAt: { $gte: oneHourAgo },&#10;  });&#10;&#10;  console.log(`✅ Removed ${result.deletedCount} recent reviews`);&#10;  await client.close();&#10;}&#10;&#10;async function showReviewTimeline() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017&quot;);&#10;  await client.connect();&#10;  const db = client.db(&quot;farmfresh&quot;);&#10;&#10;  const reviews = await db&#10;    .collection(&quot;reviews&quot;)&#10;    .find({})&#10;    .sort({ createdAt: 1 })&#10;    .toArray();&#10;&#10;  console.log(&quot;\n Review timeline (oldest to newest):&quot;);&#10;  reviews.forEach((review, index) =&gt; {&#10;    console.log(&#10;      `${index + 1}. ${review.createdAt.toISOString()} - ${review.reviewer} - ${review.comment?.substring(0, 50)}...`,&#10;    );&#10;  });&#10;&#10;  await client.close();&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/fix-sweet-corn-order.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/fix-sweet-corn-order.js" />
              <option name="updatedContent" value="const { MongoClient, ObjectId } = require(&quot;mongodb&quot;);&#10;fixSweetCornOrderIssue().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/fix-undefined-status.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/fix-undefined-status.js" />
              <option name="updatedContent" value="const { MongoClient } = require(&quot;mongodb&quot;);&#10;&#10;async function fixUndefinedProductStatuses() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017/farmfresh&quot;);&#10;  &#10;  try {&#10;    await client.connect();&#10;    console.log(&quot; FIXING UNDEFINED PRODUCT STATUSES\n&quot;);&#10;    &#10;    const db = client.db(&quot;farmfresh&quot;);&#10;    &#10;    // Find all products with undefined status&#10;    const productsWithUndefinedStatus = await db.collection(&quot;products&quot;).find({&#10;      $or: [&#10;        { status: { $exists: false } },&#10;        { status: undefined },&#10;        { status: null }&#10;      ]&#10;    }).toArray();&#10;    &#10;    console.log(` Found ${productsWithUndefinedStatus.length} products with undefined status:`);&#10;    &#10;    if (productsWithUndefinedStatus.length === 0) {&#10;      console.log(&quot;✅ No products found with undefined status!&quot;);&#10;      return;&#10;    }&#10;    &#10;    // Show the products that will be fixed&#10;    productsWithUndefinedStatus.forEach((product, index) =&gt; {&#10;      console.log(`${index + 1}. &quot;${product.name}&quot; by ${product.farmerName} (${product.farmerId})`);&#10;      console.log(`   - Current status: ${product.status} (type: ${typeof product.status})`);&#10;    });&#10;    &#10;    // Ask for confirmation (in a real scenario, you'd want this)&#10;    console.log(`\n Updating all ${productsWithUndefinedStatus.length} products to status &quot;active&quot;...`);&#10;    &#10;    // Update all products with undefined status to &quot;active&quot;&#10;    const updateResult = await db.collection(&quot;products&quot;).updateMany(&#10;      {&#10;        $or: [&#10;          { status: { $exists: false } },&#10;          { status: undefined },&#10;          { status: null }&#10;        ]&#10;      },&#10;      {&#10;        $set: {&#10;          status: &quot;active&quot;,&#10;          updatedAt: new Date()&#10;        }&#10;      }&#10;    );&#10;    &#10;    console.log(`✅ Updated ${updateResult.modifiedCount} products successfully!`);&#10;    &#10;    // Verify the fix&#10;    const verifyCount = await db.collection(&quot;products&quot;).countDocuments({&#10;      $or: [&#10;        { status: { $exists: false } },&#10;        { status: undefined },&#10;        { status: null }&#10;      ]&#10;    });&#10;    &#10;    console.log(`\n Verification: ${verifyCount} products still have undefined status`);&#10;    &#10;    // Show updated status distribution&#10;    const statusCounts = await db.collection(&quot;products&quot;).aggregate([&#10;      {&#10;        $group: {&#10;          _id: &quot;$status&quot;,&#10;          count: { $sum: 1 }&#10;        }&#10;      }&#10;    ]).toArray();&#10;    &#10;    console.log(`\n UPDATED STATUS DISTRIBUTION:`);&#10;    statusCounts.forEach(({ _id, count }) =&gt; {&#10;      console.log(`   - &quot;${_id}&quot;: ${count} products`);&#10;    });&#10;    &#10;    console.log(`\n WHAT THIS FIXES:`);&#10;    console.log(`✅ Active products will now show &quot;Pause/Deactivate&quot; button instead of &quot;Activate&quot;`);&#10;    console.log(`✅ Products will behave correctly when toggling status`);&#10;    console.log(`✅ Status filtering will work properly in the manage page`);&#10;    &#10;    console.log(`\n NEXT STEPS:`);&#10;    console.log(`1. Refresh your farmer manage page`);&#10;    console.log(`2. Check that active products now show &quot;Pause&quot; button`);&#10;    console.log(`3. Test status toggle functionality`);&#10;    &#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n✅ Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;fixUndefinedProductStatuses().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/investigate-dill-oregano.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/investigate-dill-oregano.js" />
              <option name="updatedContent" value="const { MongoClient, ObjectId } = require(&quot;mongodb&quot;);&#10;&#10;async function investigateDillOreganoOwnership() {&#10;  const client = new MongoClient(&quot;mongodb://localhost:27017/farmfresh&quot;);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot; INVESTIGATING DILL AND OREGANO OWNERSHIP\n&quot;);&#10;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // 1. Check current state of Dill and Oregano&#10;    console.log(&quot;1.  CHECKING CURRENT DILL AND OREGANO DATA:&quot;);&#10;    &#10;    const dill = await db.collection(&quot;products&quot;).findOne({ name: &quot;Dill&quot; });&#10;    const oregano = await db.collection(&quot;products&quot;).findOne({ name: &quot;Oregano&quot; });&#10;&#10;    if (dill) {&#10;      console.log(&quot;DILL:&quot;);&#10;      console.log(`  Top-level: farmerId=${dill.farmerId}, farmerName=${dill.farmerName}, farmerEmail=${dill.farmerEmail}`);&#10;      console.log(`  Embedded: farmer._id=${dill.farmer?._id}, farmer.name=${dill.farmer?.name}, farmer.email=${dill.farmer?.email}`);&#10;    }&#10;&#10;    if (oregano) {&#10;      console.log(&quot;OREGANO:&quot;);&#10;      console.log(`  Top-level: farmerId=${oregano.farmerId}, farmerName=${oregano.farmerName}, farmerEmail=${oregano.farmerEmail}`);&#10;      console.log(`  Embedded: farmer._id=${oregano.farmer?._id}, farmer.name=${oregano.farmer?.name}, farmer.email=${oregano.farmer?.email}`);&#10;    }&#10;&#10;    // 2. Check if there's a &quot;chashi jashim&quot; farmer&#10;    console.log(&quot;\n2.  CHECKING FOR 'CHASHI JASHIM' FARMER:&quot;);&#10;    const chashiFarmer = await db.collection(&quot;farmers&quot;).findOne({&#10;      name: /chashi.*jashim/i&#10;    });&#10;&#10;    if (chashiFarmer) {&#10;      console.log(&quot;Found Chashi Jashim farmer:&quot;);&#10;      console.log(`  ID: ${chashiFarmer._id}`);&#10;      console.log(`  Name: ${chashiFarmer.name}`);&#10;      console.log(`  Email: ${chashiFarmer.email}`);&#10;    } else {&#10;      console.log(&quot;❌ No 'Chashi Jashim' farmer found in farmers collection&quot;);&#10;    }&#10;&#10;    // 3. Check all farmers to see who might be the correct owner&#10;    console.log(&quot;\n3.  CHECKING ALL FARMERS:&quot;);&#10;    const allFarmers = await db.collection(&quot;farmers&quot;).find({}).toArray();&#10;    &#10;    console.log(&quot;Available farmers:&quot;);&#10;    allFarmers.forEach(farmer =&gt; {&#10;      console.log(`  - ${farmer._id}: ${farmer.name} (${farmer.email})`);&#10;    });&#10;&#10;    // 4. Check if Dill/Oregano appear in any farmer's product history or orders&#10;    console.log(&quot;\n4.  CHECKING PRODUCT HISTORY IN ORDERS:&quot;);&#10;    &#10;    const ordersWithDill = await db.collection(&quot;orders&quot;).find({&#10;      &quot;items.productName&quot;: &quot;Dill&quot;&#10;    }).toArray();&#10;    &#10;    const ordersWithOregano = await db.collection(&quot;orders&quot;).find({&#10;      &quot;items.productName&quot;: &quot;Oregano&quot;&#10;    }).toArray();&#10;&#10;    console.log(`Found ${ordersWithDill.length} orders with Dill`);&#10;    ordersWithDill.slice(0, 3).forEach(order =&gt; {&#10;      const dillItem = order.items.find(item =&gt; item.productName === &quot;Dill&quot;);&#10;      console.log(`  Order ${order._id}: farmerId=${dillItem?.farmerId}, farmerName=${dillItem?.farmerName}`);&#10;    });&#10;&#10;    console.log(`Found ${ordersWithOregano.length} orders with Oregano`);&#10;    ordersWithOregano.slice(0, 3).forEach(order =&gt; {&#10;      const oreganoItem = order.items.find(item =&gt; item.productName === &quot;Oregano&quot;);&#10;      console.log(`  Order ${order._id}: farmerId=${oreganoItem?.farmerId}, farmerName=${oreganoItem?.farmerName}`);&#10;    });&#10;&#10;    // 5. Check creation/modification history if available&#10;    console.log(&quot;\n5.  CHECKING CREATION/MODIFICATION DATES:&quot;);&#10;    &#10;    if (dill) {&#10;      console.log(`Dill created: ${dill.createdAt}, updated: ${dill.updatedAt}`);&#10;    }&#10;    if (oregano) {&#10;      console.log(`Oregano created: ${oregano.createdAt}, updated: ${oregano.updatedAt}`);&#10;    }&#10;&#10;    // 6. Current product counts per farmer&#10;    console.log(&quot;\n6.  CURRENT PRODUCT COUNTS PER FARMER:&quot;);&#10;    &#10;    for (const farmer of allFarmers) {&#10;      const productCount = await db.collection(&quot;products&quot;).countDocuments({&#10;        $or: [&#10;          { farmerId: farmer._id },&#10;          { &quot;farmer._id&quot;: farmer._id }&#10;        ]&#10;      });&#10;      &#10;      if (productCount &gt; 0) {&#10;        console.log(`  ${farmer.name} (${farmer._id}): ${productCount} products`);&#10;      }&#10;    }&#10;&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;    console.log(&quot;\n Database connection closed&quot;);&#10;  }&#10;}&#10;&#10;investigateDillOreganoOwnership().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/make-visible.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/make-visible.js" />
              <option name="updatedContent" value="// Make the products with reviews visible by marking them as featured&#10;const { MongoClient, ObjectId } = require('mongodb');&#10;&#10;async function makeReviewedProductsVisible() {&#10;  const client = new MongoClient('mongodb://localhost:27017');&#10;  await client.connect();&#10;  const db = client.db('farmfresh');&#10;  &#10;  const productIdsWithReviews = ['6889cb7ab6d22dd651140bee', '688affa63c35c3c0ff9c4925'];&#10;  &#10;  console.log(' Making products with reviews visible...\n');&#10;  &#10;  for (const productId of productIdsWithReviews) {&#10;    try {&#10;      const result = await db.collection('products').updateOne(&#10;        { _id: new ObjectId(productId) },&#10;        { &#10;          $set: { &#10;            featured: true,&#10;            status: 'active',&#10;            stock: Math.max(10, 0) // Ensure they have stock&#10;          } &#10;        }&#10;      );&#10;      &#10;      if (result.matchedCount &gt; 0) {&#10;        console.log(`✅ Updated product ${productId} to be featured and active`);&#10;      } else {&#10;        console.log(`❌ Product ${productId} not found`);&#10;      }&#10;    } catch (error) {&#10;      console.log(`❌ Error updating product ${productId}: ${error.message}`);&#10;    }&#10;  }&#10;  &#10;  console.log('\n Now check your homepage - the products with reviews should appear in the featured section with star ratings!');&#10;  &#10;  await client.close();&#10;}&#10;&#10;makeReviewedProductsVisible().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/next.config.mjs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/next.config.mjs" />
              <option name="originalContent" value="/** @type {import('next').NextConfig} */&#10;const nextConfig = {&#10;  images: {&#10;    remotePatterns: [&#10;      {&#10;        protocol: &quot;https&quot;,&#10;        hostname: &quot;images.unsplash.com&quot;,&#10;        port: &quot;&quot;,&#10;        pathname: &quot;/**&quot;,&#10;      },&#10;      {&#10;        protocol: &quot;https&quot;,&#10;        hostname: &quot;plus.unsplash.com&quot;,&#10;        port: &quot;&quot;,&#10;        pathname: &quot;/**&quot;,&#10;      },&#10;    ],&#10;  },&#10;  // Increase API payload size limit to handle multiple compressed images&#10;  api: {&#10;    bodyParser: {&#10;      sizeLimit: &quot;50mb&quot;,&#10;    },&#10;  },&#10;  // Handle large request bodies in the new App Router&#10;  experimental: {&#10;    serverComponentsExternalPackages: [],&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;  // Suppress hydration warnings in development&#10;  reactStrictMode: true,&#10;  onDemandEntries: {&#10;    // period (in ms) where the server will keep pages in the buffer&#10;    maxInactiveAge: 25 * 1000,&#10;    // number of pages that should be kept simultaneously without being disposed&#10;    pagesBufferLength: 2,&#10;  },&#10;  // Custom webpack config to suppress hydration warnings&#10;  webpack: (config, { dev, isServer }) =&gt; {&#10;    if (dev &amp;&amp; !isServer) {&#10;      const originalEntry = config.entry;&#10;      config.entry = async () =&gt; {&#10;        const entries = await originalEntry();&#10;        if (entries['main.js'] &amp;&amp; !entries['main.js'].includes('./utils/suppress-hydration-warnings.js')) {&#10;          entries['main.js'].unshift('./utils/suppress-hydration-warnings.js');&#10;        }&#10;        return entries;&#10;      };&#10;    }&#10;    return config;&#10;  },&#10;};&#10;&#10;export default nextConfig;&#10;" />
              <option name="updatedContent" value="/** @type {import('next').NextConfig} */&#10;const nextConfig = {&#10;  images: {&#10;    remotePatterns: [&#10;      {&#10;        protocol: &quot;https&quot;,&#10;        hostname: &quot;images.unsplash.com&quot;,&#10;        port: &quot;&quot;,&#10;        pathname: &quot;/**&quot;,&#10;      },&#10;      {&#10;        protocol: &quot;https&quot;,&#10;        hostname: &quot;plus.unsplash.com&quot;,&#10;        port: &quot;&quot;,&#10;        pathname: &quot;/**&quot;,&#10;      },&#10;    ],&#10;  },&#10;  // Increase API payload size limit to handle multiple compressed images&#10;  api: {&#10;    bodyParser: {&#10;      sizeLimit: &quot;50mb&quot;,&#10;    },&#10;  },&#10;  // Handle large request bodies in the new App Router&#10;  experimental: {&#10;    serverComponentsExternalPackages: [],&#10;  },&#10;};&#10;&#10;export default nextConfig;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/scripts/create-farmer-users.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/scripts/create-farmer-users.js" />
              <option name="updatedContent" value="const { MongoClient } = require(&quot;mongodb&quot;);&#10;const bcrypt = require(&quot;bcryptjs&quot;);&#10;&#10;// MongoDB connection string - update this with your actual connection string&#10;const MONGODB_URI = process.env.MONGODB_URI || &quot;mongodb://localhost:27017&quot;;&#10;const DB_NAME = &quot;farmfresh&quot;;&#10;&#10;// Default password for all farmers (you can change this)&#10;const DEFAULT_PASSWORD = &quot;farmer123&quot;;&#10;&#10;// Hardcoded farmers data - this should match the structure of your farmer documents&#10;const hardcodedFarmers = [&#10;  {&#10;    _id: &quot;farmer_001&quot;,&#10;    name: &quot;Abdul Rahman&quot;,&#10;    email: &quot;abdul.rahman@farmfresh.com&quot;,&#10;    phone: &quot;+880 1712 345678&quot;,&#10;    location: &quot;Rajshahi, Bangladesh&quot;,&#10;    farmName: &quot;Farm 001&quot;,&#10;    specializations: [&quot;Grains&quot;, &quot;Honey&quot;],&#10;  },&#10;  {&#10;    _id: &quot;farmer_002&quot;,&#10;    name: &quot;Sufia Begum&quot;,&#10;    email: &quot;sufia.begum@farmfresh.com&quot;,&#10;    phone: &quot;+880 1818 901234&quot;,&#10;    location: &quot;Sylhet, Bangladesh&quot;,&#10;    farmName: &quot;Farm 002&quot;,&#10;    specializations: [&quot;Fruits&quot;, &quot;Herbs&quot;],&#10;  },&#10;  {&#10;    _id: &quot;farmer_003&quot;,&#10;    name: &quot;Fatema Begum&quot;,&#10;    email: &quot;fatema.begum@farmfresh.com&quot;,&#10;    phone: &quot;+880 1813 456789&quot;,&#10;    location: &quot;Dhaka, Bangladesh&quot;,&#10;    farmName: &quot;Farm 003&quot;,&#10;    specializations: [&quot;Vegetables&quot;, &quot;Fruits&quot;, &quot;Honey&quot;],&#10;  },&#10;  {&#10;    _id: &quot;farmer_004&quot;,&#10;    name: &quot;Ibrahim Khalil&quot;,&#10;    email: &quot;ibrahim.khalil@farmfresh.com&quot;,&#10;    phone: &quot;+880 1717 890123&quot;,&#10;    location: &quot;Barishal, Bangladesh&quot;,&#10;    farmName: &quot;Farm 004&quot;,&#10;    specializations: [&quot;Fruits&quot;, &quot;Dairy&quot;, &quot;Herbs&quot;],&#10;  },&#10;  {&#10;    _id: &quot;farmer_005&quot;,&#10;    name: &quot;Mizanur Rahman&quot;,&#10;    email: &quot;mizanur.rahman@farmfresh.com&quot;,&#10;    phone: &quot;+880 1521 234567&quot;,&#10;    location: &quot;Tangail, Bangladesh&quot;,&#10;    farmName: &quot;Farm 005&quot;,&#10;    specializations: [&quot;Dairy&quot;, &quot;Vegetables&quot;],&#10;  },&#10;  {&#10;    _id: &quot;farmer_006&quot;,&#10;    name: &quot;Mostafa Kamal&quot;,&#10;    email: &quot;mostafa.kamal@farmfresh.com&quot;,&#10;    phone: &quot;+880 1521 234567&quot;,&#10;    location: &quot;Gazipur, Bangladesh&quot;,&#10;    farmName: &quot;Farm 006&quot;,&#10;    specializations: [&quot;Vegetables&quot;, &quot;Dairy&quot;],&#10;  },&#10;  {&#10;    _id: &quot;farmer_007&quot;,&#10;    name: &quot;Rubina Akter&quot;,&#10;    email: &quot;rubina.akter@farmfresh.com&quot;,&#10;    phone: &quot;+880 1420 123456&quot;,&#10;    location: &quot;Netrokona, Bangladesh&quot;,&#10;    farmName: &quot;Farm 007&quot;,&#10;    specializations: [&quot;Herbs&quot;, &quot;Honey&quot;],&#10;  },&#10;  {&#10;    _id: &quot;farmer_008&quot;,&#10;    name: &quot;Ayesha Siddika&quot;,&#10;    email: &quot;ayesha.siddika@farmfresh.com&quot;,&#10;    phone: &quot;+880 1515 678901&quot;,&#10;    location: &quot;Khulna, Bangladesh&quot;,&#10;    farmName: &quot;Farm 008&quot;,&#10;    specializations: [&quot;Fruits&quot;, &quot;Honey&quot;],&#10;  },&#10;  {&#10;    _id: &quot;farmer_009&quot;,&#10;    name: &quot;Khanzad Ali&quot;,&#10;    email: &quot;khanzad.ali@farmfresh.com&quot;,&#10;    phone: &quot;+880 1919 012345&quot;,&#10;    location: &quot;Sylhet, Bangladesh&quot;,&#10;    farmName: &quot;Farm 009&quot;,&#10;    specializations: [&quot;Honey&quot;, &quot;Vegetables&quot;],&#10;  },&#10;];&#10;&#10;// Function to create farmer users&#10;async function createFarmerUsers() {&#10;  const client = new MongoClient(MONGODB_URI);&#10;&#10;  try {&#10;    await client.connect();&#10;    console.log(&quot;Connected to MongoDB&quot;);&#10;&#10;    const db = client.db(DB_NAME);&#10;    const usersCollection = db.collection(&quot;users&quot;);&#10;&#10;    // Hash the default password&#10;    const hashedPassword = await bcrypt.hash(DEFAULT_PASSWORD, 12);&#10;&#10;    for (const farmer of hardcodedFarmers) {&#10;      try {&#10;        // Check if user already exists&#10;        const existingUser = await usersCollection.findOne({&#10;          email: farmer.email,&#10;        });&#10;&#10;        if (existingUser) {&#10;          console.log(&#10;            `User already exists for ${farmer.name} (${farmer.email})`,&#10;          );&#10;          continue;&#10;        }&#10;&#10;        // Split name into first and last name&#10;        const nameParts = farmer.name.split(&quot; &quot;);&#10;        const firstName = nameParts[0];&#10;        const lastName = nameParts.slice(1).join(&quot; &quot;) || &quot;&quot;;&#10;&#10;        // Create user document&#10;        const userData = {&#10;          _id: farmer._id, // Use the same ID as the farmer&#10;          firstName: firstName,&#10;          lastName: lastName,&#10;          name: farmer.name,&#10;          email: farmer.email,&#10;          phone: farmer.phone,&#10;          address: farmer.location,&#10;          bio: &quot;&quot;,&#10;          password: hashedPassword,&#10;          userType: &quot;farmer&quot;,&#10;          provider: &quot;credentials&quot;,&#10;          emailVerified: true, // Set to true for these hardcoded farmers&#10;          farmDetails: {&#10;            farmName: farmer.farmName,&#10;            specialization: farmer.specializations,&#10;            farmSize: null,&#10;            farmSizeUnit: &quot;acres&quot;,&#10;          },&#10;          profilePicture: null,&#10;          createdAt: new Date(),&#10;          updatedAt: new Date(),&#10;        };&#10;&#10;        // Insert user&#10;        await usersCollection.insertOne(userData);&#10;        console.log(&#10;          `Created user account for ${farmer.name} (${farmer.email})`,&#10;        );&#10;      } catch (error) {&#10;        console.error(`Error creating user for ${farmer.name}:`, error);&#10;      }&#10;    }&#10;&#10;    console.log(&quot;\nFarmer user creation completed!&quot;);&#10;    console.log(`Default password for all farmers: ${DEFAULT_PASSWORD}`);&#10;    console.log(&#10;      &quot;\nYou can now login with any of these farmer accounts using their email and the default password.&quot;,&#10;    );&#10;  } catch (error) {&#10;    console.error(&quot;Error connecting to MongoDB:&quot;, error);&#10;  } finally {&#10;    await client.close();&#10;  }&#10;}&#10;&#10;// Run the script&#10;createFarmerUsers().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/scripts/migrate-farmers.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/scripts/migrate-farmers.js" />
              <option name="updatedContent" value="// Script to migrate farmers from users collection to farmers collection&#10;import clientPromise from &quot;../lib/mongodb.js&quot;;&#10;&#10;async function migrateFarmers() {&#10;  try {&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;    const usersCollection = db.collection(&quot;users&quot;);&#10;    const farmersCollection = db.collection(&quot;farmers&quot;);&#10;&#10;    // Find all users with userType &quot;farmer&quot;&#10;    const farmerUsers = await usersCollection.find({ userType: &quot;farmer&quot; }).toArray();&#10;    &#10;    console.log(`Found ${farmerUsers.length} farmer users to migrate`);&#10;&#10;    for (const user of farmerUsers) {&#10;      // Check if farmer already exists in farmers collection&#10;      const existingFarmer = await farmersCollection.findOne({ _id: user._id });&#10;      &#10;      if (!existingFarmer) {&#10;        // Create farmer document&#10;        const farmerData = {&#10;          _id: user._id,&#10;          name: user.name || `${user.firstName} ${user.lastName}`,&#10;          email: user.email,&#10;          phone: user.phone || &quot;&quot;,&#10;          location: user.address || &quot;&quot;,&#10;          farmName: user.farmDetails?.farmName || `${user.name}'s Farm`,&#10;          specializations: user.farmDetails?.specialization ? &#10;            Array.isArray(user.farmDetails.specialization) ? &#10;              user.farmDetails.specialization : &#10;              [user.farmDetails.specialization] : &#10;            [&quot;General Farming&quot;],&#10;          farmSize: user.farmDetails?.farmSize || null,&#10;          farmSizeUnit: user.farmDetails?.farmSizeUnit || &quot;acres&quot;,&#10;          bio: user.bio || &quot;&quot;,&#10;          profilePicture: user.profilePicture || null,&#10;          rating: 0,&#10;          totalReviews: 0,&#10;          verified: false,&#10;          joinedDate: user.createdAt || new Date(),&#10;          products: [],&#10;          orders: [],&#10;          availability: {&#10;            status: &quot;available&quot;,&#10;            schedule: {&#10;              monday: { start: &quot;09:00&quot;, end: &quot;17:00&quot;, available: true },&#10;              tuesday: { start: &quot;09:00&quot;, end: &quot;17:00&quot;, available: true },&#10;              wednesday: { start: &quot;09:00&quot;, end: &quot;17:00&quot;, available: true },&#10;              thursday: { start: &quot;09:00&quot;, end: &quot;17:00&quot;, available: true },&#10;              friday: { start: &quot;09:00&quot;, end: &quot;17:00&quot;, available: true },&#10;              saturday: { start: &quot;09:00&quot;, end: &quot;15:00&quot;, available: true },&#10;              sunday: { start: &quot;10:00&quot;, end: &quot;14:00&quot;, available: false }&#10;            }&#10;          },&#10;          socialMedia: {&#10;            facebook: &quot;&quot;,&#10;            instagram: &quot;&quot;,&#10;            twitter: &quot;&quot;,&#10;            website: &quot;&quot;&#10;          },&#10;          certifications: [],&#10;          deliveryOptions: {&#10;            farmPickup: true,&#10;            localDelivery: false,&#10;            shipping: false,&#10;            deliveryRadius: 0&#10;          },&#10;          createdAt: user.createdAt || new Date(),&#10;          updatedAt: new Date()&#10;        };&#10;&#10;        // Insert farmer&#10;        await farmersCollection.insertOne(farmerData);&#10;        console.log(`✅ Migrated farmer: ${farmerData.name}`);&#10;      } else {&#10;        console.log(`⚠️  Farmer ${user.name} already exists in farmers collection`);&#10;      }&#10;    }&#10;&#10;    console.log(&quot;✅ Migration completed!&quot;);&#10;    &#10;    // Show final count&#10;    const totalFarmers = await farmersCollection.countDocuments();&#10;    console.log(` Total farmers in collection: ${totalFarmers}`);&#10;    &#10;  } catch (error) {&#10;    console.error(&quot;❌ Migration error:&quot;, error);&#10;  }&#10;}&#10;&#10;migrateFarmers();" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/scripts/optimize-atlas-indexes.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/scripts/optimize-atlas-indexes.js" />
              <option name="updatedContent" value="// MongoDB Atlas Performance Optimization Script&#10;// Run this script to create optimized indexes for better Atlas performance&#10;&#10;import clientPromise from &quot;../lib/mongodb.js&quot;;&#10;&#10;async function createAtlasOptimizedIndexes() {&#10;  try {&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;    &#10;    console.log(&quot; Starting MongoDB Atlas index optimization...&quot;);&#10;&#10;    // Products Collection - Optimized for products page performance&#10;    const productsCollection = db.collection(&quot;products&quot;);&#10;    console.log(&quot; Optimizing products collection indexes...&quot;);&#10;    &#10;    await productsCollection.createIndex(&#10;      { status: 1, category: 1, featured: 1, createdAt: -1 },&#10;      { name: &quot;products_main_query_idx&quot;, background: true }&#10;    );&#10;    &#10;    await productsCollection.createIndex(&#10;      { status: 1, featured: 1, averageRating: -1 },&#10;      { name: &quot;products_featured_rating_idx&quot;, background: true }&#10;    );&#10;    &#10;    await productsCollection.createIndex(&#10;      { status: 1, price: 1 },&#10;      { name: &quot;products_price_filter_idx&quot;, background: true }&#10;    );&#10;    &#10;    await productsCollection.createIndex(&#10;      { status: 1, purchaseCount: -1 },&#10;      { name: &quot;products_popularity_idx&quot;, background: true }&#10;    );&#10;&#10;    // Orders Collection - Optimized for farmer dashboard and orders pages&#10;    const ordersCollection = db.collection(&quot;orders&quot;);&#10;    console.log(&quot; Optimizing orders collection indexes...&quot;);&#10;    &#10;    // Critical farmer query indexes&#10;    await ordersCollection.createIndex(&#10;      { &quot;items.farmerId&quot;: 1, status: 1, createdAt: -1 },&#10;      { name: &quot;farmer_orders_main_idx&quot;, background: true }&#10;    );&#10;    &#10;    await ordersCollection.createIndex(&#10;      { &quot;items.farmerEmail&quot;: 1, status: 1, createdAt: -1 },&#10;      { name: &quot;farmer_email_orders_idx&quot;, background: true }&#10;    );&#10;    &#10;    // Customer order indexes&#10;    await ordersCollection.createIndex(&#10;      { userId: 1, createdAt: -1 },&#10;      { name: &quot;customer_orders_idx&quot;, background: true }&#10;    );&#10;    &#10;    // Status filtering&#10;    await ordersCollection.createIndex(&#10;      { status: 1, createdAt: -1 },&#10;      { name: &quot;status_date_idx&quot;, background: true }&#10;    );&#10;&#10;    // Reviews Collection - For faster review loading&#10;    const reviewsCollection = db.collection(&quot;reviews&quot;);&#10;    console.log(&quot;⭐ Optimizing reviews collection indexes...&quot;);&#10;    &#10;    await reviewsCollection.createIndex(&#10;      { productId: 1, createdAt: -1 },&#10;      { name: &quot;product_reviews_idx&quot;, background: true }&#10;    );&#10;    &#10;    await reviewsCollection.createIndex(&#10;      { userId: 1, productId: 1 },&#10;      { name: &quot;user_product_review_idx&quot;, background: true, unique: true }&#10;    );&#10;&#10;    // Favorites Collection - For user favorites&#10;    const favoritesCollection = db.collection(&quot;favorites&quot;);&#10;    console.log(&quot;❤️ Optimizing favorites collection indexes...&quot;);&#10;    &#10;    await favoritesCollection.createIndex(&#10;      { userId: 1, productId: 1 },&#10;      { name: &quot;user_favorites_idx&quot;, background: true, unique: true }&#10;    );&#10;    &#10;    await favoritesCollection.createIndex(&#10;      { userId: 1, createdAt: -1 },&#10;      { name: &quot;user_favorites_date_idx&quot;, background: true }&#10;    );&#10;&#10;    // Carts Collection - For cart operations&#10;    const cartsCollection = db.collection(&quot;carts&quot;);&#10;    console.log(&quot; Optimizing carts collection indexes...&quot;);&#10;    &#10;    await cartsCollection.createIndex(&#10;      { userId: 1 },&#10;      { name: &quot;user_cart_idx&quot;, background: true, unique: true }&#10;    );&#10;&#10;    console.log(&quot;✅ Atlas optimization complete!&quot;);&#10;    console.log(&quot; Performance improvements applied for:&quot;);&#10;    console.log(&quot;   • Products page - faster filtering and sorting&quot;);&#10;    console.log(&quot;   • Farmer dashboard - optimized order queries&quot;);&#10;    console.log(&quot;   • Farmer orders page - improved farmer-specific queries&quot;);&#10;    console.log(&quot;   • Reviews and favorites - faster user interactions&quot;);&#10;    &#10;    return true;&#10;  } catch (error) {&#10;    console.error(&quot;❌ Error optimizing indexes:&quot;, error);&#10;    return false;&#10;  }&#10;}&#10;&#10;// Atlas-specific query optimization hints&#10;async function optimizeAtlasQueries() {&#10;  console.log(&quot; Applying Atlas-specific optimizations...&quot;);&#10;  &#10;  const client = await clientPromise;&#10;  const db = client.db(&quot;farmfresh&quot;);&#10;  &#10;  // Enable collection-level read preferences for better performance&#10;  const collections = ['products', 'orders', 'reviews', 'favorites', 'carts'];&#10;  &#10;  for (const collectionName of collections) {&#10;    const collection = db.collection(collectionName);&#10;    &#10;    // Set read preference to secondary for read-heavy operations&#10;    collection.readPreference = 'secondaryPreferred';&#10;    &#10;    console.log(` Optimized read preference for ${collectionName}`);&#10;  }&#10;  &#10;  console.log(&quot;✅ Query optimizations applied!&quot;);&#10;}&#10;&#10;// Main execution function&#10;async function main() {&#10;  console.log(&quot; MongoDB Atlas Performance Optimization&quot;);&#10;  console.log(&quot;=========================================&quot;);&#10;  &#10;  const indexSuccess = await createAtlasOptimizedIndexes();&#10;  &#10;  if (indexSuccess) {&#10;    await optimizeAtlasQueries();&#10;    console.log(&quot; Your FarmFresh app is now optimized for Atlas!&quot;);&#10;    console.log(&quot; Expected performance improvements:&quot;);&#10;    console.log(&quot;   • Products page: 60-80% faster&quot;);&#10;    console.log(&quot;   • Farmer dashboard: 70-90% faster&quot;); &#10;    console.log(&quot;   • Order queries: 50-70% faster&quot;);&#10;  } else {&#10;    console.log(&quot;❌ Optimization failed. Check your MongoDB connection.&quot;);&#10;  }&#10;}&#10;&#10;// Run if called directly&#10;if (import.meta.url === `file://${process.argv[1]}`) {&#10;  main().catch(console.error);&#10;}&#10;&#10;export { createAtlasOptimizedIndexes, optimizeAtlasQueries };" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/specialization-card.txt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/specialization-card.txt" />
              <option name="updatedContent" value="{/* Dynamic Farm Specializations Card */}&#10;&lt;div className=&quot;group relative overflow-hidden rounded-3xl bg-gradient-to-br from-emerald-50 via-teal-50 to-cyan-50 dark:from-emerald-900/20 dark:via-teal-900/20 dark:to-cyan-900/20 p-8 hover:shadow-2xl transition-all duration-700 border border-emerald-200 dark:border-emerald-800&quot;&gt;&#10;  &lt;div className=&quot;absolute inset-0 bg-gradient-to-br from-emerald-400/10 to-teal-400/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500&quot;&gt;&lt;/div&gt;&#10;  &lt;div className=&quot;absolute top-4 right-4 w-16 h-16 bg-emerald-100 dark:bg-emerald-800/30 rounded-full opacity-20 group-hover:scale-150 group-hover:rotate-180 transition-all duration-700&quot;&gt;&lt;/div&gt;&#10;  &lt;div className=&quot;relative z-10&quot;&gt;&#10;    &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;      &lt;div className=&quot;w-16 h-16 bg-gradient-to-br from-emerald-500 to-teal-600 rounded-2xl flex items-center justify-center transform group-hover:rotate-12 transition-transform duration-500 shadow-lg&quot;&gt;&#10;        &lt;i className=&quot;fas fa-spa text-2xl text-white&quot;&gt;&lt;/i&gt;&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;text-right&quot;&gt;&#10;        &lt;div className=&quot;text-4xl font-bold text-emerald-600 dark:text-emerald-400 mb-1&quot;&gt;&#10;          {farmer.specializations?.length || stats.categories?.length || 3}&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;text-emerald-500 dark:text-emerald-300 text-sm font-medium&quot;&gt;&#10;          Specializations&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;    &lt;div className=&quot;space-y-3&quot;&gt;&#10;      &lt;div className=&quot;text-center&quot;&gt;&#10;        &lt;div className=&quot;flex flex-wrap gap-1 justify-center mb-3&quot;&gt;&#10;          {(farmer.specializations?.slice(0, 3) || stats.categories?.slice(0, 3) || ['Organic', 'Fresh', 'Quality']).map((spec, index) =&gt; {&#10;            const icons = {&#10;              'Grains': 'fas fa-seedling',&#10;              'Fruits': 'fas fa-apple-alt',&#10;              'Vegetables': 'fas fa-carrot',&#10;              'Herbs': 'fas fa-leaf',&#10;              'Honey': 'fas fa-bug',&#10;              'Dairy': 'fas fa-glass-whiskey',&#10;              'Organic': 'fas fa-leaf',&#10;              'Fresh': 'fas fa-sun',&#10;              'Quality': 'fas fa-star'&#10;            };&#10;            const colors = ['text-emerald-500', 'text-teal-500', 'text-cyan-500'];&#10;            return (&#10;              &lt;div key={index} className=&quot;flex items-center bg-white/70 dark:bg-emerald-900/30 rounded-full px-2 py-1&quot;&gt;&#10;                &lt;i className={`${icons[spec] || 'fas fa-spa'} ${colors[index % 3]} text-xs mr-1`}&gt;&lt;/i&gt;&#10;                &lt;span className=&quot;text-xs font-medium text-gray-700 dark:text-gray-300&quot;&gt;{spec}&lt;/span&gt;&#10;              &lt;/div&gt;&#10;            );&#10;          })}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;        &lt;div className=&quot;flex-1 h-2 bg-emerald-100 dark:bg-emerald-900/30 rounded-full overflow-hidden&quot;&gt;&#10;          &lt;div&#10;            className=&quot;h-full bg-gradient-to-r from-emerald-500 to-teal-500 rounded-full animate-pulse&quot;&#10;            style={{ width: &quot;90%&quot; }}&#10;          &gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;span className=&quot;text-xs text-emerald-600 dark:text-emerald-400 font-medium&quot;&gt;&#10;          Expert&#10;        &lt;/span&gt;&#10;      &lt;/div&gt;&#10;      &lt;div className=&quot;text-center text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;        Premium farm specialties&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&lt;/div&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/test-db-connection.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/test-db-connection.js" />
              <option name="updatedContent" value="const { MongoClient } = require(&quot;mongodb&quot;);&#10;&#10;// Simple test script to debug Fatema Begum's data&#10;async function testConnection() {&#10;  // Try different connection strings&#10;  const connectionStrings = [&#10;    &quot;mongodb://localhost:27017/farmfresh&quot;,&#10;    &quot;mongodb://127.0.0.1:27017/farmfresh&quot;,&#10;    process.env.MONGODB_URI,&#10;    process.env.DATABASE_URL&#10;  ].filter(Boolean);&#10;&#10;  for (const uri of connectionStrings) {&#10;    console.log(`\n Trying connection: ${uri.replace(/\/\/[^:]*:[^@]*@/, '//***:***@')}`);&#10;    &#10;    try {&#10;      const client = new MongoClient(uri, {&#10;        serverSelectionTimeoutMS: 5000,&#10;        connectTimeoutMS: 5000,&#10;      });&#10;      &#10;      await client.connect();&#10;      console.log(&quot;✅ Connected successfully!&quot;);&#10;      &#10;      const db = client.db(&quot;farmfresh&quot;);&#10;      &#10;      // Test basic queries&#10;      const farmersCount = await db.collection(&quot;farmers&quot;).countDocuments();&#10;      const productsCount = await db.collection(&quot;products&quot;).countDocuments();&#10;      const ordersCount = await db.collection(&quot;orders&quot;).countDocuments();&#10;      &#10;      console.log(` Database stats: ${farmersCount} farmers, ${productsCount} products, ${ordersCount} orders`);&#10;      &#10;      // Search for Fatema specifically&#10;      const fatemaFarmers = await db.collection(&quot;farmers&quot;).find({ &#10;        name: /fatema.*begum/i &#10;      }).toArray();&#10;      &#10;      console.log(`\n‍ Found ${fatemaFarmers.length} Fatema Begum farmers:`);&#10;      fatemaFarmers.forEach(f =&gt; {&#10;        console.log(`- ${f.name} (${f.email}) ID: ${f._id}`);&#10;      });&#10;      &#10;      // Search for corn products&#10;      const cornProducts = await db.collection(&quot;products&quot;).find({ &#10;        name: /corn/i &#10;      }).toArray();&#10;      &#10;      console.log(`\n Found ${cornProducts.length} corn products:`);&#10;      cornProducts.forEach(p =&gt; {&#10;        console.log(`- &quot;${p.name}&quot; by ${p.farmerName || p.farmerEmail || 'Unknown'} (Category: ${p.category})`);&#10;        console.log(`  ID: ${p._id}, Farmer ID: ${p.farmerId}`);&#10;      });&#10;      &#10;      // Search for orders with corn&#10;      const cornOrders = await db.collection(&quot;orders&quot;).find({&#10;        &quot;items.name&quot;: /corn/i&#10;      }).toArray();&#10;      &#10;      console.log(`\n Found ${cornOrders.length} orders with corn:`);&#10;      cornOrders.forEach(o =&gt; {&#10;        console.log(`- Order ${o._id} by ${o.customerName} (${o.status})`);&#10;        o.items.forEach(item =&gt; {&#10;          if (/corn/i.test(item.name)) {&#10;            console.log(`  * ${item.name} x${item.quantity} - ৳${item.price}`);&#10;          }&#10;        });&#10;      });&#10;      &#10;      await client.close();&#10;      return; // Exit on first successful connection&#10;      &#10;    } catch (error) {&#10;      console.log(`❌ Failed: ${error.message}`);&#10;    }&#10;  }&#10;  &#10;  console.log(&quot;\n❌ All connection attempts failed!&quot;);&#10;}&#10;&#10;testConnection().catch(console.error);" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/utils/suppress-hydration-warnings.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/utils/suppress-hydration-warnings.js" />
              <option name="updatedContent" value="// Suppress hydration warnings in development&#10;if (typeof window !== 'undefined' &amp;&amp; process.env.NODE_ENV === 'development') {&#10;  const originalError = console.error;&#10;  console.error = (...args) =&gt; {&#10;    const message = args[0];&#10;    &#10;    // Suppress hydration mismatch warnings&#10;    if (&#10;      typeof message === 'string' &amp;&amp;&#10;      (message.includes('hydrated but some attributes') ||&#10;       message.includes('Warning: Text content did not match') ||&#10;       message.includes('Warning: Prop `className` did not match') ||&#10;       message.includes('Hydration failed because the initial UI does not match'))&#10;    ) {&#10;      return;&#10;    }&#10;    &#10;    // Let other errors through&#10;    originalError.apply(console, args);&#10;  };&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>