<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/payment/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/payment/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useEffect, useRef } from &quot;react&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useRouter } from &quot;next/navigation&quot;;&#10;import { useCart } from &quot;@/contexts/CartContext&quot;;&#10;import Image from &quot;next/image&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;&#10;export default function Payment() {&#10;  const { data: session, status } = useSession();&#10;  const router = useRouter();&#10;  const {&#10;    items: cartItems,&#10;    getCartTotal,&#10;    loading: cartLoading,&#10;    clearCart,&#10;    updateQuantity,&#10;    removeFromCart,&#10;  } = useCart();&#10;&#10;  // Enhanced state management&#10;  const [loading, setLoading] = useState(true);&#10;  const [showEditModal, setShowEditModal] = useState(false);&#10;  const [showAddressModal, setShowAddressModal] = useState(false);&#10;  const [showPaymentModal, setShowPaymentModal] = useState(false);&#10;  const [processing, setProcessing] = useState(false);&#10;  const [redirectingToSuccess, setRedirectingToSuccess] = useState(false);&#10;  const [step, setStep] = useState(1); // 1: Review, 2: Address, 3: Payment, 4: Confirmation&#10;  const [notifications, setNotifications] = useState([]);&#10;  const [promoCode, setPromoCode] = useState(&quot;&quot;);&#10;  const [promoDiscount, setPromoDiscount] = useState(0);&#10;  const [selectedDeliveryDate, setSelectedDeliveryDate] = useState(&quot;&quot;);&#10;  const [selectedTimeSlot, setSelectedTimeSlot] = useState(&quot;&quot;);&#10;  const [orderNotes, setOrderNotes] = useState(&quot;&quot;);&#10;  const [agreementChecked, setAgreementChecked] = useState(false);&#10;  const [newsletterSubscribe, setNewsletterSubscribe] = useState(false);&#10;  const [paymentProcessingStep, setPaymentProcessingStep] = useState(0);&#10;&#10;  // Form states&#10;  const [deliveryAddress, setDeliveryAddress] = useState({&#10;    name: &quot;&quot;,&#10;    phone: &quot;&quot;,&#10;    address: &quot;&quot;,&#10;    city: &quot;&quot;,&#10;    postalCode: &quot;&quot;,&#10;    instructions: &quot;&quot;,&#10;    addressType: &quot;home&quot;, // home, office, other&#10;    landmark: &quot;&quot;,&#10;    alternatePhone: &quot;&quot;,&#10;  });&#10;&#10;  const [paymentForm, setPaymentForm] = useState({&#10;    cardNumber: &quot;&quot;,&#10;    expiryDate: &quot;&quot;,&#10;    cvv: &quot;&quot;,&#10;    cardName: &quot;&quot;,&#10;    mobileNumber: &quot;&quot;,&#10;    paymentMethod: &quot;card&quot;,&#10;    sameAsDelivery: true,&#10;    saveCard: false,&#10;    installments: &quot;1&quot;,&#10;  });&#10;&#10;  const [editQuantities, setEditQuantities] = useState({});&#10;  const [removedItems, setRemovedItems] = useState([]);&#10;  const scrollRef = useRef(null);&#10;&#10;  useEffect(() =&gt; {&#10;    console.log(&quot;Payment - Session status:&quot;, status, &quot;Session:&quot;, session);&#10;&#10;    if (status === &quot;loading&quot;) {&#10;      return;&#10;    }&#10;&#10;    if (status === &quot;unauthenticated&quot;) {&#10;      router.push(&quot;/login&quot;);&#10;      return;&#10;    }&#10;&#10;    if (status === &quot;authenticated&quot; &amp;&amp; session?.user) {&#10;      if (session.user) {&#10;        setDeliveryAddress((prev) =&gt; ({&#10;          ...prev,&#10;          name: session.user.name || &quot;&quot;,&#10;          phone: session.user.phone || &quot;&quot;,&#10;        }));&#10;        setPaymentForm((prev) =&gt; ({&#10;          ...prev,&#10;          cardName: session.user.name || &quot;&quot;,&#10;        }));&#10;      }&#10;&#10;      if (cartItems &amp;&amp; cartItems.length &gt; 0) {&#10;        const quantities = {};&#10;        cartItems.forEach((item) =&gt; {&#10;          quantities[item.id || item._id] = item.quantity;&#10;        });&#10;        setEditQuantities(quantities);&#10;      }&#10;&#10;      // Set default delivery date (tomorrow)&#10;      const tomorrow = new Date();&#10;      tomorrow.setDate(tomorrow.getDate() + 1);&#10;      setSelectedDeliveryDate(tomorrow.toISOString().split(&quot;T&quot;)[0]);&#10;&#10;      setLoading(false);&#10;    }&#10;  }, [session, status, router, cartItems]);&#10;&#10;  useEffect(() =&gt; {&#10;    if (&#10;      !cartLoading &amp;&amp;&#10;      cartItems.length === 0 &amp;&amp;&#10;      status === &quot;authenticated&quot; &amp;&amp;&#10;      !processing &amp;&amp;&#10;      !redirectingToSuccess&#10;    ) {&#10;      const timer = setTimeout(() =&gt; {&#10;        if (cartItems.length === 0 &amp;&amp; !processing &amp;&amp; !redirectingToSuccess) {&#10;          router.push(&quot;/cart&quot;);&#10;        }&#10;      }, 500);&#10;&#10;      return () =&gt; clearTimeout(timer);&#10;    }&#10;  }, [&#10;    cartItems,&#10;    cartLoading,&#10;    status,&#10;    router,&#10;    processing,&#10;    redirectingToSuccess,&#10;  ]);&#10;&#10;  // Notification system&#10;  const addNotification = (message, type = &quot;info&quot;) =&gt; {&#10;    const id = Date.now();&#10;    setNotifications((prev) =&gt; [...prev, { id, message, type }]);&#10;    setTimeout(() =&gt; {&#10;      setNotifications((prev) =&gt; prev.filter((n) =&gt; n.id !== id));&#10;    }, 4000);&#10;  };&#10;&#10;  // Enhanced calculations&#10;  const formatPrice = (price) =&gt; {&#10;    const numericPrice =&#10;      typeof price === &quot;number&quot; ? price : parseFloat(price) || 0;&#10;    return `à§³${numericPrice.toFixed(0)}`;&#10;  };&#10;&#10;  const calculateSubtotal = () =&gt; {&#10;    return cartItems.reduce((total, item) =&gt; {&#10;      const quantity = editQuantities[item.id || item._id] || item.quantity;&#10;      return total + (item.price || 0) * quantity;&#10;    }, 0);&#10;  };&#10;&#10;  const deliveryFee =&#10;    selectedDeliveryDate === new Date().toISOString().split(&quot;T&quot;)[0] ? 100 : 50;&#10;  const serviceFee = 25;&#10;  const subtotal = calculateSubtotal();&#10;  const discountAmount = (subtotal * promoDiscount) / 100;&#10;  const total = subtotal + deliveryFee + serviceFee - discountAmount;&#10;&#10;  // Enhanced handlers&#10;  const handleEditQuantity = (itemId, newQuantity) =&gt; {&#10;    if (newQuantity &gt;= 1) {&#10;      setEditQuantities((prev) =&gt; ({&#10;        ...prev,&#10;        [itemId]: newQuantity,&#10;      }));&#10;      // Update cart context as well&#10;      updateQuantity(itemId, newQuantity);&#10;      addNotification(&quot;Quantity updated successfully&quot;, &quot;success&quot;);&#10;    }&#10;  };&#10;&#10;  const handleRemoveItem = (itemId) =&gt; {&#10;    if (confirm(&quot;Are you sure you want to remove this item from your cart?&quot;)) {&#10;      setRemovedItems((prev) =&gt; [...prev, itemId]);&#10;      removeFromCart(itemId);&#10;      addNotification(&quot;Item removed from cart&quot;, &quot;info&quot;);&#10;    }&#10;  };&#10;&#10;  const handleAddressChange = (e) =&gt; {&#10;    const { name, value } = e.target;&#10;    setDeliveryAddress((prev) =&gt; ({ ...prev, [name]: value }));&#10;  };&#10;&#10;  const handlePaymentChange = (e) =&gt; {&#10;    const { name, value, type, checked } = e.target;&#10;    setPaymentForm((prev) =&gt; ({&#10;      ...prev,&#10;      [name]: type === &quot;checkbox&quot; ? checked : value,&#10;    }));&#10;  };&#10;&#10;  const applyPromoCode = async () =&gt; {&#10;    // Simulate promo code validation&#10;    const validCodes = {&#10;      SAVE10: 10,&#10;      FIRST20: 20,&#10;      WELCOME15: 15,&#10;      FARMER5: 5,&#10;    };&#10;&#10;    if (validCodes[promoCode.toUpperCase()]) {&#10;      setPromoDiscount(validCodes[promoCode.toUpperCase()]);&#10;      addNotification(&#10;        `Promo code applied! ${validCodes[promoCode.toUpperCase()]}% discount`,&#10;        &quot;success&quot;,&#10;      );&#10;    } else {&#10;      addNotification(&quot;Invalid promo code&quot;, &quot;error&quot;);&#10;    }&#10;  };&#10;&#10;  const validateForm = () =&gt; {&#10;    // Enhanced validation&#10;    if (&#10;      !deliveryAddress.name ||&#10;      !deliveryAddress.phone ||&#10;      !deliveryAddress.address ||&#10;      !deliveryAddress.city&#10;    ) {&#10;      addNotification(&#10;        &quot;Please fill in all required delivery address fields&quot;,&#10;        &quot;error&quot;,&#10;      );&#10;      return false;&#10;    }&#10;&#10;    if (!selectedDeliveryDate) {&#10;      addNotification(&quot;Please select a delivery date&quot;, &quot;error&quot;);&#10;      return false;&#10;    }&#10;&#10;    if (!agreementChecked) {&#10;      addNotification(&quot;Please agree to terms and conditions&quot;, &quot;error&quot;);&#10;      return false;&#10;    }&#10;&#10;    if (paymentForm.paymentMethod === &quot;card&quot;) {&#10;      if (&#10;        !paymentForm.cardNumber ||&#10;        !paymentForm.expiryDate ||&#10;        !paymentForm.cvv ||&#10;        !paymentForm.cardName&#10;      ) {&#10;        addNotification(&quot;Please fill in all required card fields&quot;, &quot;error&quot;);&#10;        return false;&#10;      }&#10;    } else if (&#10;      paymentForm.paymentMethod === &quot;bkash&quot; ||&#10;      paymentForm.paymentMethod === &quot;nagad&quot;&#10;    ) {&#10;      if (!paymentForm.mobileNumber) {&#10;        addNotification(&quot;Please enter your mobile number&quot;, &quot;error&quot;);&#10;        return false;&#10;      }&#10;    }&#10;    return true;&#10;  };&#10;&#10;  const handleSubmitOrder = async () =&gt; {&#10;    if (!validateForm()) return;&#10;    if (cartItems.length === 0) {&#10;      addNotification(&quot;Your cart is empty&quot;, &quot;error&quot;);&#10;      return;&#10;    }&#10;&#10;    setProcessing(true);&#10;    setPaymentProcessingStep(1);&#10;&#10;    try {&#10;      // Simulate multi-step payment processing&#10;      await new Promise((resolve) =&gt;&#10;        setTimeout(() =&gt; {&#10;          setPaymentProcessingStep(2);&#10;          resolve();&#10;        }, 1000),&#10;      );&#10;&#10;      await new Promise((resolve) =&gt;&#10;        setTimeout(() =&gt; {&#10;          setPaymentProcessingStep(3);&#10;          resolve();&#10;        }, 1500),&#10;      );&#10;&#10;      await new Promise((resolve) =&gt;&#10;        setTimeout(() =&gt; {&#10;          setPaymentProcessingStep(4);&#10;          resolve();&#10;        }, 1000),&#10;      );&#10;&#10;      const userId =&#10;        session.user.userId ||&#10;        session.user.id ||&#10;        session.user._id ||&#10;        session.user.email;&#10;&#10;      const farmerIds = [];&#10;      const farmerEmails = [];&#10;&#10;      cartItems.forEach((item) =&gt; {&#10;        const farmerId =&#10;          typeof item.farmer === &quot;object&quot;&#10;            ? item.farmer?.id || item.farmer?._id&#10;            : null;&#10;        const farmerEmail =&#10;          typeof item.farmer === &quot;object&quot; ? item.farmer?.email : null;&#10;&#10;        if (farmerId &amp;&amp; !farmerIds.includes(farmerId)) {&#10;          farmerIds.push(farmerId);&#10;        }&#10;        if (farmerEmail &amp;&amp; !farmerEmails.includes(farmerEmail)) {&#10;          farmerEmails.push(farmerEmail);&#10;        }&#10;      });&#10;&#10;      const orderData = {&#10;        userId: userId,&#10;        customerName: session.user.name || deliveryAddress.name,&#10;        customerEmail: session.user.email,&#10;        customerPhone: deliveryAddress.phone,&#10;        farmerIds: farmerIds,&#10;        farmerEmails: farmerEmails,&#10;        items: cartItems.map((item) =&gt; ({&#10;          productId: item.id || item._id,&#10;          name: item.name,&#10;          productName: item.name,&#10;          quantity: editQuantities[item.id || item._id] || item.quantity,&#10;          price: item.price || 0,&#10;          unit: item.unit || &quot;kg&quot;,&#10;          image: item.image,&#10;          farmerName:&#10;            typeof item.farmer === &quot;object&quot; &amp;&amp; item.farmer?.name&#10;              ? item.farmer.name&#10;              : typeof item.farmer === &quot;string&quot;&#10;                ? item.farmer&#10;                : &quot;Local Farmer&quot;,&#10;          farmerId:&#10;            typeof item.farmer === &quot;object&quot;&#10;              ? item.farmer?.id || item.farmer?._id&#10;              : null,&#10;          farmerEmail:&#10;            typeof item.farmer === &quot;object&quot; ? item.farmer?.email : null,&#10;        })),&#10;        deliveryAddress: {&#10;          ...deliveryAddress,&#10;          deliveryDate: selectedDeliveryDate,&#10;          timeSlot: selectedTimeSlot,&#10;        },&#10;        orderNotes,&#10;        promoCode: promoCode || null,&#10;        promoDiscount,&#10;        subtotal,&#10;        deliveryFee,&#10;        serviceFee,&#10;        discountAmount,&#10;        total,&#10;        paymentMethod: paymentForm.paymentMethod,&#10;        status: &quot;pending&quot;,&#10;        newsletterSubscribe,&#10;      };&#10;&#10;      const response = await fetch(&quot;/api/orders&quot;, {&#10;        method: &quot;POST&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify(orderData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;        const orderId = data.orderId || data.order?._id;&#10;&#10;        if (orderId) {&#10;          try {&#10;            await fetch(`/api/cart?userId=${encodeURIComponent(userId)}`, {&#10;              method: &quot;DELETE&quot;,&#10;            });&#10;          } catch (cartError) {&#10;            console.error(&quot;Error clearing cart:&quot;, cartError);&#10;          }&#10;&#10;          setRedirectingToSuccess(true);&#10;          router.replace(`/success?orderId=${orderId}`);&#10;          setTimeout(() =&gt; clearCart(), 100);&#10;        } else {&#10;          addNotification(&#10;            &quot;Order created successfully! Redirecting...&quot;,&#10;            &quot;success&quot;,&#10;          );&#10;          router.replace(&quot;/&quot;);&#10;        }&#10;      } else {&#10;        const errorData = await response&#10;          .json()&#10;          .catch(() =&gt; ({ error: &quot;Unknown error&quot; }));&#10;        throw new Error(errorData.error || &quot;Failed to create order&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error processing payment:&quot;, error);&#10;      addNotification(&quot;Payment failed. Please try again.&quot;, &quot;error&quot;);&#10;      setProcessing(false);&#10;      setPaymentProcessingStep(0);&#10;    }&#10;  };&#10;&#10;  // Get available time slots&#10;  const getTimeSlots = () =&gt; {&#10;    const slots = [&#10;      &quot;9:00 AM - 12:00 PM&quot;,&#10;      &quot;12:00 PM - 3:00 PM&quot;,&#10;      &quot;3:00 PM - 6:00 PM&quot;,&#10;      &quot;6:00 PM - 9:00 PM&quot;,&#10;    ];&#10;    return slots;&#10;  };&#10;&#10;  // Get next 7 days for delivery&#10;  const getDeliveryDates = () =&gt; {&#10;    const dates = [];&#10;    for (let i = 1; i &lt;= 7; i++) {&#10;      const date = new Date();&#10;      date.setDate(date.getDate() + i);&#10;      dates.push({&#10;        value: date.toISOString().split(&quot;T&quot;)[0],&#10;        label: date.toLocaleDateString(&quot;en-US&quot;, {&#10;          weekday: &quot;short&quot;,&#10;          month: &quot;short&quot;,&#10;          day: &quot;numeric&quot;,&#10;        }),&#10;        isToday: i === 1,&#10;      });&#10;    }&#10;    return dates;&#10;  };&#10;&#10;  if (status === &quot;loading&quot; || loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#10;          &lt;div className=&quot;animate-spin rounded-full h-32 w-32 border-b-2 border-green-600 mx-auto mb-4&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg&quot;&gt;&#10;            Loading your enhanced payment experience...&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  if (cartItems.length === 0) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center max-w-md mx-auto&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-lg&quot;&gt;&#10;            &lt;i className=&quot;fas fa-shopping-cart text-6xl text-gray-400 mb-6&quot;&gt;&lt;/i&gt;&#10;            &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;              Your cart is empty&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-8&quot;&gt;&#10;              Add some fresh products to your cart before proceeding to payment&#10;            &lt;/p&gt;&#10;            &lt;Link&#10;              href=&quot;/products&quot;&#10;              className=&quot;inline-block bg-green-600 hover:bg-green-700 text-white px-8 py-3 rounded-lg font-medium transition transform hover:scale-105&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-leaf mr-2&quot;&gt;&lt;/i&gt;&#10;              Browse Fresh Products&#10;            &lt;/Link&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      {/* Notification System */}&#10;      &lt;div className=&quot;fixed top-4 right-4 z-50 space-y-2&quot;&gt;&#10;        {notifications.map((notification) =&gt; (&#10;          &lt;div&#10;            key={notification.id}&#10;            className={`px-6 py-4 rounded-lg shadow-lg text-white transform transition-all duration-500 animate-slide-in ${&#10;              notification.type === &quot;success&quot;&#10;                ? &quot;bg-green-600&quot;&#10;                : notification.type === &quot;error&quot;&#10;                  ? &quot;bg-red-600&quot;&#10;                  : notification.type === &quot;warning&quot;&#10;                    ? &quot;bg-yellow-600&quot;&#10;                    : &quot;bg-blue-600&quot;&#10;            }`}&#10;          &gt;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#10;              &lt;i&#10;                className={`fas ${&#10;                  notification.type === &quot;success&quot;&#10;                    ? &quot;fa-check-circle&quot;&#10;                    : notification.type === &quot;error&quot;&#10;                      ? &quot;fa-exclamation-circle&quot;&#10;                      : notification.type === &quot;warning&quot;&#10;                        ? &quot;fa-exclamation-triangle&quot;&#10;                        : &quot;fa-info-circle&quot;&#10;                } mr-2`}&#10;              &gt;&lt;/i&gt;&#10;              {notification.message}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        ))}&#10;      &lt;/div&gt;&#10;&#10;      {/* Payment Processing Modal */}&#10;      {processing &amp;&amp; (&#10;        &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl p-8 max-w-md w-full text-center&quot;&gt;&#10;            &lt;div className=&quot;mb-6&quot;&gt;&#10;              &lt;div className=&quot;animate-spin rounded-full h-16 w-16 border-b-2 border-green-600 mx-auto mb-4&quot;&gt;&lt;/div&gt;&#10;              &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                Processing Payment&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                {paymentProcessingStep === 1 &amp;&amp; &quot;Validating payment details...&quot;}&#10;                {paymentProcessingStep === 2 &amp;&amp; &quot;Contacting payment gateway...&quot;}&#10;                {paymentProcessingStep === 3 &amp;&amp; &quot;Securing transaction...&quot;}&#10;                {paymentProcessingStep === 4 &amp;&amp; &quot;Finalizing order...&quot;}&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Processing Steps */}&#10;            &lt;div className=&quot;flex justify-center space-x-2 mb-4&quot;&gt;&#10;              {[1, 2, 3, 4].map((step) =&gt; (&#10;                &lt;div&#10;                  key={step}&#10;                  className={`w-3 h-3 rounded-full ${&#10;                    step &lt;= paymentProcessingStep&#10;                      ? &quot;bg-green-600&quot;&#10;                      : &quot;bg-gray-300&quot;&#10;                  } transition-colors duration-300`}&#10;                &gt;&lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;&#10;            &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;              Please do not close this window or navigate away&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;&#10;      {/* Enhanced Breadcrumb */}&#10;      &lt;div className=&quot;bg-white dark:bg-gray-800 shadow-sm&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4&quot;&gt;&#10;          &lt;nav&#10;            className=&quot;flex justify-between items-center&quot;&#10;            aria-label=&quot;Breadcrumb&quot;&#10;          &gt;&#10;            &lt;ol className=&quot;flex items-center space-x-2 text-sm&quot;&gt;&#10;              &lt;li&gt;&#10;                &lt;Link&#10;                  href=&quot;/&quot;&#10;                  className=&quot;text-gray-500 hover:text-green-600 transition&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-home mr-1&quot;&gt;&lt;/i&gt;Home&#10;                &lt;/Link&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;Link&#10;                  href=&quot;/cart&quot;&#10;                  className=&quot;text-gray-500 hover:text-green-600 transition&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-shopping-cart mr-1&quot;&gt;&lt;/i&gt;Cart&#10;                &lt;/Link&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;              &lt;/li&gt;&#10;              &lt;li className=&quot;text-gray-900 dark:text-white font-medium&quot;&gt;&#10;                &lt;i className=&quot;fas fa-credit-card mr-1&quot;&gt;&lt;/i&gt;Secure Checkout&#10;              &lt;/li&gt;&#10;            &lt;/ol&gt;&#10;&#10;            {/* Progress Indicator */}&#10;            &lt;div className=&quot;hidden md:flex items-center space-x-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center text-green-600&quot;&gt;&#10;                &lt;div className=&quot;w-6 h-6 bg-green-600 text-white rounded-full flex items-center justify-center text-xs font-bold mr-2&quot;&gt;&#10;                  â&#10;                &lt;/div&gt;&#10;                &lt;span className=&quot;text-sm font-medium&quot;&gt;Cart&lt;/span&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;w-8 h-px bg-green-600&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;flex items-center text-green-600&quot;&gt;&#10;                &lt;div className=&quot;w-6 h-6 bg-green-600 text-white rounded-full flex items-center justify-center text-xs font-bold mr-2&quot;&gt;&#10;                  2&#10;                &lt;/div&gt;&#10;                &lt;span className=&quot;text-sm font-medium&quot;&gt;Checkout&lt;/span&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;w-8 h-px bg-gray-300&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;flex items-center text-gray-400&quot;&gt;&#10;                &lt;div className=&quot;w-6 h-6 bg-gray-300 text-gray-600 rounded-full flex items-center justify-center text-xs font-bold mr-2&quot;&gt;&#10;                  3&#10;                &lt;/div&gt;&#10;                &lt;span className=&quot;text-sm&quot;&gt;Confirmation&lt;/span&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/nav&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Main Payment Content */}&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          {/* Page Header */}&#10;          &lt;div className=&quot;text-center mb-8&quot;&gt;&#10;            &lt;h1 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;              Complete Your Order&#10;            &lt;/h1&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;              Review your items and proceed with secure payment&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-8&quot;&gt;&#10;            {/* Enhanced Order Summary */}&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6 h-fit&quot;&gt;&#10;              &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-receipt mr-2 text-green-600&quot;&gt;&lt;/i&gt;&#10;                  Order Summary&#10;                &lt;/h2&gt;&#10;                &lt;span className=&quot;bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium&quot;&gt;&#10;                  {cartItems.length} items&#10;                &lt;/span&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Product Details with Enhanced Design */}&#10;              &lt;div className=&quot;space-y-4 mb-6 max-h-96 overflow-y-auto&quot;&gt;&#10;                {cartItems.map((item) =&gt; {&#10;                  const quantity =&#10;                    editQuantities[item.id || item._id] || item.quantity;&#10;                  return (&#10;                    &lt;div&#10;                      key={item.id || item._id}&#10;                      className=&quot;group relative flex items-center space-x-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200&quot;&#10;                    &gt;&#10;                      &lt;div className=&quot;relative&quot;&gt;&#10;                        &lt;img&#10;                          src={&#10;                            item.images?.[0] ||&#10;                            item.image ||&#10;                            &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=80&amp;h=80&amp;fit=crop&quot;&#10;                          }&#10;                          alt={item.name}&#10;                          className=&quot;w-20 h-20 rounded-xl object-cover shadow-md&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;absolute -top-2 -right-2 bg-green-600 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center font-bold&quot;&gt;&#10;                          {quantity}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;flex-1&quot;&gt;&#10;                        &lt;h3 className=&quot;font-semibold text-gray-900 dark:text-white text-lg&quot;&gt;&#10;                          {item.name}&#10;                        &lt;/h3&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-user-tie mr-1&quot;&gt;&lt;/i&gt;&#10;                          {typeof item.farmer === &quot;object&quot; &amp;&amp; item.farmer?.name&#10;                            ? item.farmer.name&#10;                            : typeof item.farmer === &quot;string&quot;&#10;                              ? item.farmer&#10;                              : &quot;Local Farmer&quot;}&#10;                        &lt;/p&gt;&#10;                        &lt;div className=&quot;flex items-center space-x-2 mt-1&quot;&gt;&#10;                          &lt;span className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {quantity} {item.unit || &quot;kg&quot;}&#10;                          &lt;/span&gt;&#10;                          &lt;span className=&quot;text-xs text-gray-400&quot;&gt;â¢&lt;/span&gt;&#10;                          &lt;span className=&quot;text-sm text-green-600 font-medium&quot;&gt;&#10;                            {formatPrice(item.price || 0)}/{item.unit || &quot;kg&quot;}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;text-right&quot;&gt;&#10;                        &lt;p className=&quot;text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          {formatPrice((item.price || 0) * quantity)}&#10;                        &lt;/p&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setShowEditModal(true)}&#10;                          className=&quot;text-sm text-blue-600 hover:text-blue-800 transition opacity-0 group-hover:opacity-100&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-edit mr-1&quot;&gt;&lt;/i&gt;Edit&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  );&#10;                })}&#10;              &lt;/div&gt;&#10;&#10;              {/* Promo Code Section */}&#10;              &lt;div className=&quot;mb-6 p-4 bg-gradient-to-r from-green-50 to-blue-50 dark:from-green-900/20 dark:to-blue-900/20 rounded-xl border border-green-200 dark:border-green-700&quot;&gt;&#10;                &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-tags mr-2 text-green-600&quot;&gt;&lt;/i&gt;&#10;                  Have a promo code?&#10;                &lt;/h4&gt;&#10;                &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                  &lt;input&#10;                    type=&quot;text&quot;&#10;                    value={promoCode}&#10;                    onChange={(e) =&gt; setPromoCode(e.target.value.toUpperCase())}&#10;                    placeholder=&quot;Enter promo code&quot;&#10;                    className=&quot;flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                  /&gt;&#10;                  &lt;button&#10;                    onClick={applyPromoCode}&#10;                    disabled={!promoCode}&#10;                    className=&quot;px-6 py-2 bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white rounded-lg font-medium transition&quot;&#10;                  &gt;&#10;                    Apply&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;                {promoDiscount &gt; 0 &amp;&amp; (&#10;                  &lt;div className=&quot;mt-3 flex items-center text-green-600&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-check-circle mr-2&quot;&gt;&lt;/i&gt;&#10;                    &lt;span className=&quot;text-sm font-medium&quot;&gt;&#10;                      {promoDiscount}% discount applied!&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;&#10;              {/* Enhanced Delivery Information */}&#10;              &lt;div className=&quot;mb-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-700&quot;&gt;&#10;                &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-truck mr-2 text-blue-600&quot;&gt;&lt;/i&gt;&#10;                  Delivery Information&#10;                &lt;/h4&gt;&#10;                &lt;div className=&quot;space-y-2 text-sm&quot;&gt;&#10;                  &lt;div className=&quot;flex justify-between&quot;&gt;&#10;                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Delivery Date:&#10;                    &lt;/span&gt;&#10;                    &lt;span className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                      {selectedDeliveryDate&#10;                        ? new Date(selectedDeliveryDate).toLocaleDateString(&#10;                            &quot;en-US&quot;,&#10;                            {&#10;                              weekday: &quot;short&quot;,&#10;                              month: &quot;short&quot;,&#10;                              day: &quot;numeric&quot;,&#10;                            },&#10;                          )&#10;                        : &quot;Tomorrow&quot;}&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex justify-between&quot;&gt;&#10;                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Time Slot:&#10;                    &lt;/span&gt;&#10;                    &lt;span className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                      {selectedTimeSlot || &quot;12:00 PM - 3:00 PM&quot;}&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex justify-between&quot;&gt;&#10;                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Address:&#10;                    &lt;/span&gt;&#10;                    &lt;span className=&quot;font-medium text-gray-900 dark:text-white text-right max-w-xs&quot;&gt;&#10;                      {deliveryAddress.address &amp;&amp; deliveryAddress.city&#10;                        ? `${deliveryAddress.address}, ${deliveryAddress.city}`&#10;                        : &quot;Please fill address below&quot;}&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Enhanced Price Breakdown */}&#10;              &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6 mb-6&quot;&gt;&#10;                &lt;div className=&quot;space-y-3&quot;&gt;&#10;                  &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    &lt;span&gt;Subtotal ({cartItems.length} items):&lt;/span&gt;&#10;                    &lt;span&gt;{formatPrice(subtotal)}&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center&quot;&gt;&#10;                      &lt;span&gt;Delivery Fee:&lt;/span&gt;&#10;                      {selectedDeliveryDate ===&#10;                        new Date().toISOString().split(&quot;T&quot;)[0] &amp;&amp; (&#10;                        &lt;span className=&quot;ml-2 bg-orange-100 text-orange-800 px-2 py-1 rounded text-xs&quot;&gt;&#10;                          Same day&#10;                        &lt;/span&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                    &lt;span&gt;{formatPrice(deliveryFee)}&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    &lt;span&gt;Service Fee:&lt;/span&gt;&#10;                    &lt;span&gt;{formatPrice(serviceFee)}&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {promoDiscount &gt; 0 &amp;&amp; (&#10;                    &lt;div className=&quot;flex justify-between text-green-600&quot;&gt;&#10;                      &lt;span&gt;Discount ({promoDiscount}%):&lt;/span&gt;&#10;                      &lt;span&gt;-{formatPrice(discountAmount)}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-3&quot;&gt;&#10;                    &lt;div className=&quot;flex justify-between text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                      &lt;span&gt;Total:&lt;/span&gt;&#10;                      &lt;span className=&quot;text-green-600&quot;&gt;&#10;                        {formatPrice(total)}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Order Notes &amp; Additional Information */}&#10;              &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6 mb-6&quot;&gt;&#10;                &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-sticky-note mr-2 text-yellow-600&quot;&gt;&lt;/i&gt;&#10;                  Additional Information&#10;                &lt;/h4&gt;&#10;&#10;                &lt;div className=&quot;space-y-4&quot;&gt;&#10;                  {/* Order Notes */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Order Notes (Optional)&#10;                    &lt;/label&gt;&#10;                    &lt;textarea&#10;                      value={orderNotes}&#10;                      onChange={(e) =&gt; setOrderNotes(e.target.value)}&#10;                      rows=&quot;3&quot;&#10;                      maxLength=&quot;200&quot;&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Any special requests or notes for your order...&quot;&#10;                    /&gt;&#10;                    &lt;p className=&quot;text-xs text-gray-500 dark:text-gray-400 mt-1&quot;&gt;&#10;                      {orderNotes.length}/200 characters&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Newsletter Subscription */}&#10;                  &lt;div className=&quot;p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-700&quot;&gt;&#10;                    &lt;label className=&quot;flex items-start&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        checked={newsletterSubscribe}&#10;                        onChange={(e) =&gt;&#10;                          setNewsletterSubscribe(e.target.checked)&#10;                        }&#10;                        className=&quot;rounded border-gray-300 text-green-600 focus:ring-green-500 mt-1&quot;&#10;                      /&gt;&#10;                      &lt;div className=&quot;ml-3&quot;&gt;&#10;                        &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                          Subscribe to our newsletter&#10;                        &lt;/span&gt;&#10;                        &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#10;                          Get updates on fresh products, seasonal offers, and&#10;                          farming tips directly to your inbox.&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Terms and Conditions - Required */}&#10;                  &lt;div&#10;                    className={`p-4 rounded-lg border-2 transition-colors ${&#10;                      agreementChecked&#10;                        ? &quot;bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-700&quot;&#10;                        : &quot;bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-700&quot;&#10;                    }`}&#10;                  &gt;&#10;                    &lt;label className=&quot;flex items-start&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        checked={agreementChecked}&#10;                        onChange={(e) =&gt; setAgreementChecked(e.target.checked)}&#10;                        className=&quot;rounded border-gray-300 text-green-600 focus:ring-green-500 mt-1&quot;&#10;                        required&#10;                      /&gt;&#10;                      &lt;div className=&quot;ml-3&quot;&gt;&#10;                        &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white flex items-center&quot;&gt;&#10;                          I agree to the Terms &amp; Conditions *&#10;                          {!agreementChecked &amp;&amp; (&#10;                            &lt;i className=&quot;fas fa-exclamation-triangle text-red-500 ml-2&quot;&gt;&lt;/i&gt;&#10;                          )}&#10;                          {agreementChecked &amp;&amp; (&#10;                            &lt;i className=&quot;fas fa-check-circle text-green-500 ml-2&quot;&gt;&lt;/i&gt;&#10;                          )}&#10;                        &lt;/span&gt;&#10;                        &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#10;                          By checking this box, you agree to our{&quot; &quot;}&#10;                          &lt;Link&#10;                            href=&quot;/terms&quot;&#10;                            className=&quot;text-green-600 hover:text-green-700 underline font-medium&quot;&#10;                          &gt;&#10;                            Terms of Service&#10;                          &lt;/Link&gt;{&quot; &quot;}&#10;                          and{&quot; &quot;}&#10;                          &lt;Link&#10;                            href=&quot;/privacy&quot;&#10;                            className=&quot;text-green-600 hover:text-green-700 underline font-medium&quot;&#10;                          &gt;&#10;                            Privacy Policy&#10;                          &lt;/Link&gt;&#10;                          .&#10;                          {!agreementChecked &amp;&amp; (&#10;                            &lt;span className=&quot;text-red-600 font-medium&quot;&gt;&#10;                              {&quot; &quot;}&#10;                              This agreement is required to proceed.&#10;                            &lt;/span&gt;&#10;                          )}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Quick Edit Button */}&#10;              &lt;button&#10;                onClick={() =&gt; setShowEditModal(true)}&#10;                className=&quot;w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white py-3 rounded-xl font-medium transition transform hover:scale-105 flex items-center justify-center&quot;&#10;              &gt;&#10;                &lt;i className=&quot;fas fa-edit mr-2&quot;&gt;&lt;/i&gt;&#10;                Edit Order Details&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Enhanced Payment &amp; Delivery Form */}&#10;            &lt;div className=&quot;space-y-6&quot;&gt;&#10;              {/* Delivery Address Form */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-map-marker-alt mr-2 text-green-600&quot;&gt;&lt;/i&gt;&#10;                  Delivery Address&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Full Name *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      name=&quot;name&quot;&#10;                      value={deliveryAddress.name}&#10;                      onChange={handleAddressChange}&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Enter your full name&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Phone Number *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;tel&quot;&#10;                      name=&quot;phone&quot;&#10;                      value={deliveryAddress.phone}&#10;                      onChange={handleAddressChange}&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;+880 1234 567890&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;md:col-span-2&quot;&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Street Address *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      name=&quot;address&quot;&#10;                      value={deliveryAddress.address}&#10;                      onChange={handleAddressChange}&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;House/Building number, Street name&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      City *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      name=&quot;city&quot;&#10;                      value={deliveryAddress.city}&#10;                      onChange={handleAddressChange}&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Enter your city&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Postal Code&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      name=&quot;postalCode&quot;&#10;                      value={deliveryAddress.postalCode}&#10;                      onChange={handleAddressChange}&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Postal code&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;md:col-span-2&quot;&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Delivery Instructions&#10;                    &lt;/label&gt;&#10;                    &lt;textarea&#10;                      name=&quot;instructions&quot;&#10;                      value={deliveryAddress.instructions}&#10;                      onChange={handleAddressChange}&#10;                      rows=&quot;3&quot;&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Any special delivery instructions...&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Delivery Scheduling */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-calendar-alt mr-2 text-blue-600&quot;&gt;&lt;/i&gt;&#10;                  Delivery Schedule&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;space-y-4&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3&quot;&gt;&#10;                      Choose Delivery Date&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;grid grid-cols-2 md:grid-cols-3 gap-3&quot;&gt;&#10;                      {getDeliveryDates().map((date) =&gt; (&#10;                        &lt;label&#10;                          key={date.value}&#10;                          className={`relative flex items-center justify-center p-4 border-2 rounded-lg cursor-pointer transition ${&#10;                            selectedDeliveryDate === date.value&#10;                              ? &quot;border-green-500 bg-green-50 dark:bg-green-900/20&quot;&#10;                              : &quot;border-gray-300 dark:border-gray-600 hover:border-green-300&quot;&#10;                          }`}&#10;                        &gt;&#10;                          &lt;input&#10;                            type=&quot;radio&quot;&#10;                            name=&quot;deliveryDate&quot;&#10;                            value={date.value}&#10;                            checked={selectedDeliveryDate === date.value}&#10;                            onChange={(e) =&gt;&#10;                              setSelectedDeliveryDate(e.target.value)&#10;                            }&#10;                            className=&quot;sr-only&quot;&#10;                          /&gt;&#10;                          &lt;div className=&quot;text-center&quot;&gt;&#10;                            &lt;div className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                              {date.label}&#10;                            &lt;/div&gt;&#10;                            {date.isToday &amp;&amp; (&#10;                              &lt;div className=&quot;text-xs text-orange-600 font-medium&quot;&gt;&#10;                                +à§³50 express&#10;                              &lt;/div&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                          {selectedDeliveryDate === date.value &amp;&amp; (&#10;                            &lt;div className=&quot;absolute top-2 right-2 w-4 h-4 bg-green-500 rounded-full flex items-center justify-center&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-check text-white text-xs&quot;&gt;&lt;/i&gt;&#10;                            &lt;/div&gt;&#10;                          )}&#10;                        &lt;/label&gt;&#10;                      ))}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3&quot;&gt;&#10;                      Preferred Time Slot&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-3&quot;&gt;&#10;                      {getTimeSlots().map((slot) =&gt; (&#10;                        &lt;label&#10;                          key={slot}&#10;                          className={`flex items-center p-3 border-2 rounded-lg cursor-pointer transition ${&#10;                            selectedTimeSlot === slot&#10;                              ? &quot;border-blue-500 bg-blue-50 dark:bg-blue-900/20&quot;&#10;                              : &quot;border-gray-300 dark:border-gray-600 hover:border-blue-300&quot;&#10;                          }`}&#10;                        &gt;&#10;                          &lt;input&#10;                            type=&quot;radio&quot;&#10;                            name=&quot;timeSlot&quot;&#10;                            value={slot}&#10;                            checked={selectedTimeSlot === slot}&#10;                            onChange={(e) =&gt;&#10;                              setSelectedTimeSlot(e.target.value)&#10;                            }&#10;                            className=&quot;text-blue-600 focus:ring-blue-500&quot;&#10;                          /&gt;&#10;                          &lt;span className=&quot;ml-3 font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                            {slot}&#10;                          &lt;/span&gt;&#10;                        &lt;/label&gt;&#10;                      ))}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Payment Method Section */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-credit-card mr-2 text-purple-600&quot;&gt;&lt;/i&gt;&#10;                  Payment Method&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {/* Payment Method Options */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3&quot;&gt;&#10;                      Select Payment Method&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;space-y-3&quot;&gt;&#10;                      &lt;label className=&quot;flex items-center p-3 border border-gray-300 dark:border-gray-600 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;radio&quot;&#10;                          name=&quot;paymentMethod&quot;&#10;                          value=&quot;card&quot;&#10;                          checked={paymentForm.paymentMethod === &quot;card&quot;}&#10;                          onChange={handlePaymentChange}&#10;                          className=&quot;text-green-600 focus:ring-green-500&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;ml-3 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-credit-card text-lg mr-2&quot;&gt;&lt;/i&gt;&#10;                          &lt;span className=&quot;font-medium&quot;&gt;Credit/Debit Card&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/label&gt;&#10;                      &lt;label className=&quot;flex items-center p-3 border border-gray-300 dark:border-gray-600 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;radio&quot;&#10;                          name=&quot;paymentMethod&quot;&#10;                          value=&quot;bkash&quot;&#10;                          checked={paymentForm.paymentMethod === &quot;bkash&quot;}&#10;                          onChange={handlePaymentChange}&#10;                          className=&quot;text-green-600 focus:ring-green-500&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;ml-3 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-mobile-alt text-lg mr-2&quot;&gt;&lt;/i&gt;&#10;                          &lt;span className=&quot;font-medium&quot;&gt;bKash&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/label&gt;&#10;                      &lt;label className=&quot;flex items-center p-3 border border-gray-300 dark:border-gray-600 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;radio&quot;&#10;                          name=&quot;paymentMethod&quot;&#10;                          value=&quot;nagad&quot;&#10;                          checked={paymentForm.paymentMethod === &quot;nagad&quot;}&#10;                          onChange={handlePaymentChange}&#10;                          className=&quot;text-green-600 focus:ring-green-500&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;ml-3 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-wallet text-lg mr-2&quot;&gt;&lt;/i&gt;&#10;                          &lt;span className=&quot;font-medium&quot;&gt;Nagad&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/label&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Card Details */}&#10;                  {paymentForm.paymentMethod === &quot;card&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;label&#10;                          htmlFor=&quot;cardName&quot;&#10;                          className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                        &gt;&#10;                          Name on Card&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;text&quot;&#10;                          id=&quot;cardName&quot;&#10;                          name=&quot;cardName&quot;&#10;                          value={paymentForm.cardName}&#10;                          onChange={handlePaymentChange}&#10;                          required&#10;                          className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                          placeholder=&quot;John Doe&quot;&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div&gt;&#10;                        &lt;label&#10;                          htmlFor=&quot;cardNumber&quot;&#10;                          className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                        &gt;&#10;                          Card Number&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;text&quot;&#10;                          id=&quot;cardNumber&quot;&#10;                          name=&quot;cardNumber&quot;&#10;                          value={paymentForm.cardNumber}&#10;                          onChange={handlePaymentChange}&#10;                          required&#10;                          className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                          placeholder=&quot;1234 5678 9012 3456&quot;&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;grid grid-cols-2 gap-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;label&#10;                            htmlFor=&quot;expiryDate&quot;&#10;                            className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                          &gt;&#10;                            Expiry Date&#10;                          &lt;/label&gt;&#10;                          &lt;input&#10;                            type=&quot;text&quot;&#10;                            id=&quot;expiryDate&quot;&#10;                            name=&quot;expiryDate&quot;&#10;                            value={paymentForm.expiryDate}&#10;                            onChange={handlePaymentChange}&#10;                            required&#10;                            className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                            placeholder=&quot;MM/YY&quot;&#10;                          /&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&gt;&#10;                          &lt;label&#10;                            htmlFor=&quot;cvv&quot;&#10;                            className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                          &gt;&#10;                            CVV&#10;                          &lt;/label&gt;&#10;                          &lt;input&#10;                            type=&quot;password&quot;&#10;                            id=&quot;cvv&quot;&#10;                            name=&quot;cvv&quot;&#10;                            value={paymentForm.cvv}&#10;                            onChange={handlePaymentChange}&#10;                            maxLength=&quot;4&quot;&#10;                            required&#10;                            className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                            placeholder=&quot;123&quot;&#10;                          /&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Mobile Payment Details */}&#10;                  {(paymentForm.paymentMethod === &quot;bkash&quot; ||&#10;                    paymentForm.paymentMethod === &quot;nagad&quot;) &amp;&amp; (&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;label&#10;                          htmlFor=&quot;mobileNumber&quot;&#10;                          className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                        &gt;&#10;                          Mobile Number&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;tel&quot;&#10;                          id=&quot;mobileNumber&quot;&#10;                          name=&quot;mobileNumber&quot;&#10;                          value={paymentForm.mobileNumber}&#10;                          onChange={handlePaymentChange}&#10;                          className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                          placeholder=&quot;+880 1234 567890&quot;&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;p-4 bg-blue-50 dark:bg-blue-900 rounded-lg&quot;&gt;&#10;                        &lt;p className=&quot;text-sm text-blue-700 dark:text-blue-300&quot;&gt;&#10;                          You will be redirected to{&quot; &quot;}&#10;                          {paymentForm.paymentMethod === &quot;bkash&quot;&#10;                            ? &quot;bKash&quot;&#10;                            : &quot;Nagad&quot;}{&quot; &quot;}&#10;                          payment gateway to complete your payment.&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Billing Address */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;flex items-center mb-4&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        name=&quot;sameAsDelivery&quot;&#10;                        checked={paymentForm.sameAsDelivery}&#10;                        onChange={handlePaymentChange}&#10;                        className=&quot;rounded border-gray-300 text-green-600 focus:ring-green-500&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Same as delivery address&#10;                      &lt;/span&gt;&#10;                    &lt;/label&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Submit Button */}&#10;                  &lt;button&#10;                    onClick={handleSubmitOrder}&#10;                    disabled={processing || !agreementChecked}&#10;                    className={`w-full py-3 px-4 rounded-lg font-medium text-lg transition duration-200 transform ${&#10;                      processing || !agreementChecked&#10;                        ? &quot;bg-gray-400 cursor-not-allowed text-white&quot;&#10;                        : &quot;bg-green-600 hover:bg-green-700 text-white hover:scale-105&quot;&#10;                    }`}&#10;                  &gt;&#10;                    {processing ? (&#10;                      &lt;&gt;&#10;                        &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        Processing Payment...&#10;                      &lt;/&gt;&#10;                    ) : !agreementChecked ? (&#10;                      &lt;&gt;&#10;                        &lt;i className=&quot;fas fa-exclamation-triangle mr-2&quot;&gt;&lt;/i&gt;&#10;                        Please agree to Terms &amp; Conditions&#10;                      &lt;/&gt;&#10;                    ) : (&#10;                      &lt;&gt;&#10;                        &lt;i className=&quot;fas fa-lock mr-2&quot;&gt;&lt;/i&gt;&#10;                        Complete Payment - {formatPrice(total)}&#10;                      &lt;/&gt;&#10;                    )}&#10;                  &lt;/button&gt;&#10;&#10;                  {/* Agreement Reminder */}&#10;                  {!agreementChecked &amp;&amp; (&#10;                    &lt;div className=&quot;p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-700 rounded-lg&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center text-red-700 dark:text-red-300&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-info-circle mr-2&quot;&gt;&lt;/i&gt;&#10;                        &lt;span className=&quot;text-sm&quot;&gt;&#10;                          You must agree to the Terms &amp; Conditions in the order&#10;                          summary to proceed with payment.&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Enhanced Order Summary */}&#10;      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6 h-fit&quot;&gt;&#10;        &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;          &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;            &lt;i className=&quot;fas fa-receipt mr-2 text-green-600&quot;&gt;&lt;/i&gt;&#10;            Order Summary&#10;          &lt;/h2&gt;&#10;          &lt;span className=&quot;bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium&quot;&gt;&#10;            {cartItems.length} items&#10;          &lt;/span&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Product Details with Enhanced Design */}&#10;        &lt;div className=&quot;space-y-4 mb-6 max-h-96 overflow-y-auto&quot;&gt;&#10;          {cartItems.map((item) =&gt; {&#10;            const quantity =&#10;              editQuantities[item.id || item._id] || item.quantity;&#10;            return (&#10;              &lt;div&#10;                key={item.id || item._id}&#10;                className=&quot;group relative flex items-center space-x-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200&quot;&#10;              &gt;&#10;                &lt;div className=&quot;relative&quot;&gt;&#10;                  &lt;img&#10;                    src={&#10;                      item.images?.[0] ||&#10;                      item.image ||&#10;                      &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=80&amp;h=80&amp;fit=crop&quot;&#10;                    }&#10;                    alt={item.name}&#10;                    className=&quot;w-20 h-20 rounded-xl object-cover shadow-md&quot;&#10;                  /&gt;&#10;                  &lt;div className=&quot;absolute -top-2 -right-2 bg-green-600 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center font-bold&quot;&gt;&#10;                    {quantity}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;flex-1&quot;&gt;&#10;                  &lt;h3 className=&quot;font-semibold text-gray-900 dark:text-white text-lg&quot;&gt;&#10;                    {item.name}&#10;                  &lt;/h3&gt;&#10;                  &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-user-tie mr-1&quot;&gt;&lt;/i&gt;&#10;                    {typeof item.farmer === &quot;object&quot; &amp;&amp; item.farmer?.name&#10;                      ? item.farmer.name&#10;                      : typeof item.farmer === &quot;string&quot;&#10;                        ? item.farmer&#10;                        : &quot;Local Farmer&quot;}&#10;                  &lt;/p&gt;&#10;                  &lt;div className=&quot;flex items-center space-x-2 mt-1&quot;&gt;&#10;                    &lt;span className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      {quantity} {item.unit || &quot;kg&quot;}&#10;                    &lt;/span&gt;&#10;                    &lt;span className=&quot;text-xs text-gray-400&quot;&gt;â¢&lt;/span&gt;&#10;                    &lt;span className=&quot;text-sm text-green-600 font-medium&quot;&gt;&#10;                      {formatPrice(item.price || 0)}/{item.unit || &quot;kg&quot;}&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;text-right&quot;&gt;&#10;                  &lt;p className=&quot;text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                    {formatPrice((item.price || 0) * quantity)}&#10;                  &lt;/p&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; setShowEditModal(true)}&#10;                    className=&quot;text-sm text-blue-600 hover:text-blue-800 transition opacity-0 group-hover:opacity-100&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-edit mr-1&quot;&gt;&lt;/i&gt;Edit&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            );&#10;          })}&#10;        &lt;/div&gt;&#10;&#10;        {/* Promo Code Section */}&#10;        &lt;div className=&quot;mb-6 p-4 bg-gradient-to-r from-green-50 to-blue-50 dark:from-green-900/20 dark:to-blue-900/20 rounded-xl border border-green-200 dark:border-green-700&quot;&gt;&#10;          &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;            &lt;i className=&quot;fas fa-tags mr-2 text-green-600&quot;&gt;&lt;/i&gt;&#10;            Have a promo code?&#10;          &lt;/h4&gt;&#10;          &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;            &lt;input&#10;              type=&quot;text&quot;&#10;              value={promoCode}&#10;              onChange={(e) =&gt; setPromoCode(e.target.value.toUpperCase())}&#10;              placeholder=&quot;Enter promo code&quot;&#10;              className=&quot;flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;            /&gt;&#10;            &lt;button&#10;              onClick={applyPromoCode}&#10;              disabled={!promoCode}&#10;              className=&quot;px-6 py-2 bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white rounded-lg font-medium transition&quot;&#10;            &gt;&#10;              Apply&#10;            &lt;/button&gt;&#10;          &lt;/div&gt;&#10;          {promoDiscount &gt; 0 &amp;&amp; (&#10;            &lt;div className=&quot;mt-3 flex items-center text-green-600&quot;&gt;&#10;              &lt;i className=&quot;fas fa-check-circle mr-2&quot;&gt;&lt;/i&gt;&#10;              &lt;span className=&quot;text-sm font-medium&quot;&gt;&#10;                {promoDiscount}% discount applied!&#10;              &lt;/span&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;&#10;        {/* Enhanced Delivery Information */}&#10;        &lt;div className=&quot;mb-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-700&quot;&gt;&#10;          &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;            &lt;i className=&quot;fas fa-truck mr-2 text-blue-600&quot;&gt;&lt;/i&gt;&#10;            Delivery Information&#10;          &lt;/h4&gt;&#10;          &lt;div className=&quot;space-y-2 text-sm&quot;&gt;&#10;            &lt;div className=&quot;flex justify-between&quot;&gt;&#10;              &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                Delivery Date:&#10;              &lt;/span&gt;&#10;              &lt;span className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                {selectedDeliveryDate&#10;                  ? new Date(selectedDeliveryDate).toLocaleDateString(&quot;en-US&quot;, {&#10;                      weekday: &quot;short&quot;,&#10;                      month: &quot;short&quot;,&#10;                      day: &quot;numeric&quot;,&#10;                    })&#10;                  : &quot;Tomorrow&quot;}&#10;              &lt;/span&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;flex justify-between&quot;&gt;&#10;              &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                Time Slot:&#10;              &lt;/span&gt;&#10;              &lt;span className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                {selectedTimeSlot || &quot;12:00 PM - 3:00 PM&quot;}&#10;              &lt;/span&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;flex justify-between&quot;&gt;&#10;              &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;Address:&lt;/span&gt;&#10;              &lt;span className=&quot;font-medium text-gray-900 dark:text-white text-right max-w-xs&quot;&gt;&#10;                {deliveryAddress.address &amp;&amp; deliveryAddress.city&#10;                  ? `${deliveryAddress.address}, ${deliveryAddress.city}`&#10;                  : &quot;Please fill address below&quot;}&#10;              &lt;/span&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Enhanced Price Breakdown */}&#10;        &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6 mb-6&quot;&gt;&#10;          &lt;div className=&quot;space-y-3&quot;&gt;&#10;            &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;              &lt;span&gt;Subtotal ({cartItems.length} items):&lt;/span&gt;&#10;              &lt;span&gt;{formatPrice(subtotal)}&lt;/span&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;              &lt;div className=&quot;flex items-center&quot;&gt;&#10;                &lt;span&gt;Delivery Fee:&lt;/span&gt;&#10;                {selectedDeliveryDate ===&#10;                  new Date().toISOString().split(&quot;T&quot;)[0] &amp;&amp; (&#10;                  &lt;span className=&quot;ml-2 bg-orange-100 text-orange-800 px-2 py-1 rounded text-xs&quot;&gt;&#10;                    Same day&#10;                  &lt;/span&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;              &lt;span&gt;{formatPrice(deliveryFee)}&lt;/span&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;              &lt;span&gt;Service Fee:&lt;/span&gt;&#10;              &lt;span&gt;{formatPrice(serviceFee)}&lt;/span&gt;&#10;            &lt;/div&gt;&#10;&#10;            {promoDiscount &gt; 0 &amp;&amp; (&#10;              &lt;div className=&quot;flex justify-between text-green-600&quot;&gt;&#10;                &lt;span&gt;Discount ({promoDiscount}%):&lt;/span&gt;&#10;                &lt;span&gt;-{formatPrice(discountAmount)}&lt;/span&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-3&quot;&gt;&#10;              &lt;div className=&quot;flex justify-between text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                &lt;span&gt;Total:&lt;/span&gt;&#10;                &lt;span className=&quot;text-green-600&quot;&gt;{formatPrice(total)}&lt;/span&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Order Notes &amp; Additional Information */}&#10;        &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6 mb-6&quot;&gt;&#10;          &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center&quot;&gt;&#10;            &lt;i className=&quot;fas fa-sticky-note mr-2 text-yellow-600&quot;&gt;&lt;/i&gt;&#10;            Additional Information&#10;          &lt;/h4&gt;&#10;&#10;          &lt;div className=&quot;space-y-4&quot;&gt;&#10;            {/* Order Notes */}&#10;            &lt;div&gt;&#10;              &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                Order Notes (Optional)&#10;              &lt;/label&gt;&#10;              &lt;textarea&#10;                value={orderNotes}&#10;                onChange={(e) =&gt; setOrderNotes(e.target.value)}&#10;                rows=&quot;3&quot;&#10;                maxLength=&quot;200&quot;&#10;                className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                placeholder=&quot;Any special requests or notes for your order...&quot;&#10;              /&gt;&#10;              &lt;p className=&quot;text-xs text-gray-500 dark:text-gray-400 mt-1&quot;&gt;&#10;                {orderNotes.length}/200 characters&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Newsletter Subscription */}&#10;            &lt;div className=&quot;p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-700&quot;&gt;&#10;              &lt;label className=&quot;flex items-start&quot;&gt;&#10;                &lt;input&#10;                  type=&quot;checkbox&quot;&#10;                  checked={newsletterSubscribe}&#10;                  onChange={(e) =&gt; setNewsletterSubscribe(e.target.checked)}&#10;                  className=&quot;rounded border-gray-300 text-green-600 focus:ring-green-500 mt-1&quot;&#10;                /&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                    Subscribe to our newsletter&#10;                  &lt;/span&gt;&#10;                  &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#10;                    Get updates on fresh products, seasonal offers, and farming&#10;                    tips directly to your inbox.&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/label&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Terms and Conditions - Required */}&#10;            &lt;div&#10;              className={`p-4 rounded-lg border-2 transition-colors ${&#10;                agreementChecked&#10;                  ? &quot;bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-700&quot;&#10;                  : &quot;bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-700&quot;&#10;              }`}&#10;            &gt;&#10;              &lt;label className=&quot;flex items-start&quot;&gt;&#10;                &lt;input&#10;                  type=&quot;checkbox&quot;&#10;                  checked={agreementChecked}&#10;                  onChange={(e) =&gt; setAgreementChecked(e.target.checked)}&#10;                  className=&quot;rounded border-gray-300 text-green-600 focus:ring-green-500 mt-1&quot;&#10;                  required&#10;                /&gt;&#10;                &lt;div className=&quot;ml-3&quot;&gt;&#10;                  &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white flex items-center&quot;&gt;&#10;                    I agree to the Terms &amp; Conditions *&#10;                    {!agreementChecked &amp;&amp; (&#10;                      &lt;i className=&quot;fas fa-exclamation-triangle text-red-500 ml-2&quot;&gt;&lt;/i&gt;&#10;                    )}&#10;                    {agreementChecked &amp;&amp; (&#10;                      &lt;i className=&quot;fas fa-check-circle text-green-500 ml-2&quot;&gt;&lt;/i&gt;&#10;                    )}&#10;                  &lt;/span&gt;&#10;                  &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#10;                    By checking this box, you agree to our{&quot; &quot;}&#10;                    &lt;Link&#10;                      href=&quot;/terms&quot;&#10;                      className=&quot;text-green-600 hover:text-green-700 underline font-medium&quot;&#10;                    &gt;&#10;                      Terms of Service&#10;                    &lt;/Link&gt;{&quot; &quot;}&#10;                    and{&quot; &quot;}&#10;                    &lt;Link&#10;                      href=&quot;/privacy&quot;&#10;                      className=&quot;text-green-600 hover:text-green-700 underline font-medium&quot;&#10;                    &gt;&#10;                      Privacy Policy&#10;                    &lt;/Link&gt;&#10;                    .&#10;                    {!agreementChecked &amp;&amp; (&#10;                      &lt;span className=&quot;text-red-600 font-medium&quot;&gt;&#10;                        {&quot; &quot;}&#10;                        This agreement is required to proceed.&#10;                      &lt;/span&gt;&#10;                    )}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/label&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Quick Edit Button */}&#10;        &lt;button&#10;          onClick={() =&gt; setShowEditModal(true)}&#10;          className=&quot;w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white py-3 rounded-xl font-medium transition transform hover:scale-105 flex items-center justify-center&quot;&#10;        &gt;&#10;          &lt;i className=&quot;fas fa-edit mr-2&quot;&gt;&lt;/i&gt;&#10;          Edit Order Details&#10;        &lt;/button&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Enhanced Edit Order Modal */}&#10;      {showEditModal &amp;&amp; (&#10;        &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl w-full max-w-4xl max-h-[90vh] overflow-hidden&quot;&gt;&#10;            {/* Modal Header */}&#10;            &lt;div className=&quot;flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-600&quot;&gt;&#10;              &lt;h3 className=&quot;text-2xl font-bold text-gray-900 dark:text-white flex items-center&quot;&gt;&#10;                &lt;i className=&quot;fas fa-edit mr-3 text-blue-600&quot;&gt;&lt;/i&gt;&#10;                Edit Order Details&#10;              &lt;/h3&gt;&#10;              &lt;button&#10;                onClick={() =&gt; setShowEditModal(false)}&#10;                className=&quot;p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition&quot;&#10;              &gt;&#10;                &lt;i className=&quot;fas fa-times text-xl&quot;&gt;&lt;/i&gt;&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Modal Body */}&#10;            &lt;div className=&quot;p-6 overflow-y-auto max-h-96&quot;&gt;&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                {cartItems.map((item) =&gt; {&#10;                  const quantity =&#10;                    editQuantities[item.id || item._id] || item.quantity;&#10;                  const itemTotal = (item.price || 0) * quantity;&#10;&#10;                  return (&#10;                    &lt;div&#10;                      key={item.id || item._id}&#10;                      className=&quot;group relative bg-gray-50 dark:bg-gray-700 rounded-xl p-6 hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200&quot;&#10;                    &gt;&#10;                      {/* Remove Button */}&#10;                      &lt;button&#10;                        onClick={() =&gt; handleRemoveItem(item.id || item._id)}&#10;                        className=&quot;absolute top-4 right-4 w-8 h-8 bg-red-100 text-red-600 rounded-full flex items-center justify-center hover:bg-red-200 opacity-0 group-hover:opacity-100 transition-opacity&quot;&#10;                        title=&quot;Remove item&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-trash text-sm&quot;&gt;&lt;/i&gt;&#10;                      &lt;/button&gt;&#10;&#10;                      &lt;div className=&quot;flex items-start space-x-6&quot;&gt;&#10;                        {/* Product Image */}&#10;                        &lt;div className=&quot;relative flex-shrink-0&quot;&gt;&#10;                          &lt;img&#10;                            src={&#10;                              item.images?.[0] ||&#10;                              item.image ||&#10;                              &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=120&amp;h=120&amp;fit=crop&quot;&#10;                            }&#10;                            alt={item.name}&#10;                            className=&quot;w-24 h-24 rounded-xl object-cover shadow-md&quot;&#10;                          /&gt;&#10;                          &lt;div className=&quot;absolute -top-2 -right-2 bg-green-600 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center font-bold&quot;&gt;&#10;                            {quantity}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Product Details */}&#10;                        &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#10;                          &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                            {item.name}&#10;                          &lt;/h4&gt;&#10;&#10;                          &lt;div className=&quot;space-y-2 text-sm&quot;&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-user-tie mr-2&quot;&gt;&lt;/i&gt;&#10;                              Farmer:{&quot; &quot;}&#10;                              {typeof item.farmer === &quot;object&quot; &amp;&amp;&#10;                              item.farmer?.name&#10;                                ? item.farmer.name&#10;                                : typeof item.farmer === &quot;string&quot;&#10;                                  ? item.farmer&#10;                                  : &quot;Local Farmer&quot;}&#10;                            &lt;/p&gt;&#10;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-tag mr-2&quot;&gt;&lt;/i&gt;&#10;                              Unit Price: {formatPrice(&#10;                                item.price || 0,&#10;                              )} per {item.unit || &quot;kg&quot;}&#10;                            &lt;/p&gt;&#10;&#10;                            {item.description &amp;&amp; (&#10;                              &lt;p className=&quot;text-gray-600 dark:text-gray-400 flex items-start&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-info-circle mr-2 mt-0.5&quot;&gt;&lt;/i&gt;&#10;                                {item.description.length &gt; 100&#10;                                  ? `${item.description.substring(0, 100)}...`&#10;                                  : item.description}&#10;                              &lt;/p&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Quantity Controls &amp; Price */}&#10;                        &lt;div className=&quot;flex flex-col items-end space-y-4&quot;&gt;&#10;                          {/* Price Display */}&#10;                          &lt;div className=&quot;text-right&quot;&gt;&#10;                            &lt;div className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                              {formatPrice(itemTotal)}&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                              {quantity} Ã {formatPrice(item.price || 0)}&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          {/* Quantity Controls */}&#10;                          &lt;div className=&quot;flex items-center space-x-4 bg-white dark:bg-gray-800 rounded-xl p-3 shadow-sm&quot;&gt;&#10;                            &lt;button&#10;                              onClick={() =&gt;&#10;                                handleEditQuantity(&#10;                                  item.id || item._id,&#10;                                  Math.max(1, quantity - 1),&#10;                                )&#10;                              }&#10;                              disabled={quantity &lt;= 1}&#10;                              className=&quot;w-10 h-10 rounded-full bg-red-100 text-red-600 hover:bg-red-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center transition&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-minus&quot;&gt;&lt;/i&gt;&#10;                            &lt;/button&gt;&#10;&#10;                            &lt;div className=&quot;text-center min-w-[3rem]&quot;&gt;&#10;                              &lt;div className=&quot;text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                                {quantity}&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                {item.unit || &quot;kg&quot;}&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;button&#10;                              onClick={() =&gt;&#10;                                handleEditQuantity(&#10;                                  item.id || item._id,&#10;                                  quantity + 1,&#10;                                )&#10;                              }&#10;                              disabled={quantity &gt;= (item.stock || 999)}&#10;                              className=&quot;w-10 h-10 rounded-full bg-green-100 text-green-600 hover:bg-green-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center transition&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-plus&quot;&gt;&lt;/i&gt;&#10;                            &lt;/button&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          {/* Stock Status */}&#10;                          {item.stock &amp;&amp; (&#10;                            &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400 text-right&quot;&gt;&#10;                              {item.stock} {item.unit || &quot;kg&quot;} available&#10;                            &lt;/div&gt;&#10;                          )}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Quick Actions */}&#10;                      &lt;div className=&quot;mt-4 pt-4 border-t border-gray-200 dark:border-gray-600 flex justify-between items-center&quot;&gt;&#10;                        &lt;div className=&quot;flex space-x-2&quot;&gt;&#10;                          {[1, 2, 5, 10].map((preset) =&gt; (&#10;                            &lt;button&#10;                              key={preset}&#10;                              onClick={() =&gt;&#10;                                handleEditQuantity(item.id || item._id, preset)&#10;                              }&#10;                              className=&quot;px-3 py-1 text-xs bg-blue-100 text-blue-600 rounded-full hover:bg-blue-200 transition&quot;&#10;                            &gt;&#10;                              {preset} {item.unit || &quot;kg&quot;}&#10;                            &lt;/button&gt;&#10;                          ))}&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;button&#10;                          onClick={() =&gt; handleRemoveItem(item.id || item._id)}&#10;                          className=&quot;text-sm text-red-600 hover:text-red-800 flex items-center transition&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-trash mr-1&quot;&gt;&lt;/i&gt;&#10;                          Remove&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  );&#10;                })}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Modal Footer */}&#10;            &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 p-6 bg-gray-50 dark:bg-gray-700&quot;&gt;&#10;              {/* Updated Total */}&#10;              &lt;div className=&quot;flex justify-between items-center mb-4&quot;&gt;&#10;                &lt;span className=&quot;text-lg font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Updated Subtotal:&#10;                &lt;/span&gt;&#10;                &lt;span className=&quot;text-2xl font-bold text-green-600&quot;&gt;&#10;                  {formatPrice(calculateSubtotal())}&#10;                &lt;/span&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Action Buttons */}&#10;              &lt;div className=&quot;flex space-x-4&quot;&gt;&#10;                &lt;button&#10;                  onClick={() =&gt; setShowEditModal(false)}&#10;                  className=&quot;flex-1 px-6 py-3 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-600 font-medium transition&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-times mr-2&quot;&gt;&lt;/i&gt;&#10;                  Cancel&#10;                &lt;/button&gt;&#10;&#10;                &lt;button&#10;                  onClick={() =&gt; {&#10;                    setShowEditModal(false);&#10;                    addNotification(&quot;Order updated successfully!&quot;, &quot;success&quot;);&#10;                  }}&#10;                  className=&quot;flex-1 px-6 py-3 bg-green-600 hover:bg-green-700 text-white rounded-xl font-medium transition transform hover:scale-105&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-check mr-2&quot;&gt;&lt;/i&gt;&#10;                  Save Changes&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useEffect, useRef } from &quot;react&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useRouter } from &quot;next/navigation&quot;;&#10;import { useCart } from &quot;@/contexts/CartContext&quot;;&#10;import Image from &quot;next/image&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;&#10;export default function Payment() {&#10;  const { data: session, status } = useSession();&#10;  const router = useRouter();&#10;  const {&#10;    items: cartItems,&#10;    getCartTotal,&#10;    loading: cartLoading,&#10;    clearCart,&#10;    updateQuantity,&#10;    removeFromCart,&#10;  } = useCart();&#10;&#10;  // Enhanced state management&#10;  const [loading, setLoading] = useState(true);&#10;  const [showEditModal, setShowEditModal] = useState(false);&#10;  const [showAddressModal, setShowAddressModal] = useState(false);&#10;  const [showPaymentModal, setShowPaymentModal] = useState(false);&#10;  const [processing, setProcessing] = useState(false);&#10;  const [redirectingToSuccess, setRedirectingToSuccess] = useState(false);&#10;  const [step, setStep] = useState(1); // 1: Review, 2: Address, 3: Payment, 4: Confirmation&#10;  const [notifications, setNotifications] = useState([]);&#10;  const [promoCode, setPromoCode] = useState(&quot;&quot;);&#10;  const [promoDiscount, setPromoDiscount] = useState(0);&#10;  const [selectedDeliveryDate, setSelectedDeliveryDate] = useState(&quot;&quot;);&#10;  const [selectedTimeSlot, setSelectedTimeSlot] = useState(&quot;&quot;);&#10;  const [orderNotes, setOrderNotes] = useState(&quot;&quot;);&#10;  const [agreementChecked, setAgreementChecked] = useState(false);&#10;  const [newsletterSubscribe, setNewsletterSubscribe] = useState(false);&#10;  const [paymentProcessingStep, setPaymentProcessingStep] = useState(0);&#10;&#10;  // Form states&#10;  const [deliveryAddress, setDeliveryAddress] = useState({&#10;    name: &quot;&quot;,&#10;    phone: &quot;&quot;,&#10;    address: &quot;&quot;,&#10;    city: &quot;&quot;,&#10;    postalCode: &quot;&quot;,&#10;    instructions: &quot;&quot;,&#10;    addressType: &quot;home&quot;, // home, office, other&#10;    landmark: &quot;&quot;,&#10;    alternatePhone: &quot;&quot;,&#10;  });&#10;&#10;  const [paymentForm, setPaymentForm] = useState({&#10;    cardNumber: &quot;&quot;,&#10;    expiryDate: &quot;&quot;,&#10;    cvv: &quot;&quot;,&#10;    cardName: &quot;&quot;,&#10;    mobileNumber: &quot;&quot;,&#10;    paymentMethod: &quot;card&quot;,&#10;    sameAsDelivery: true,&#10;    saveCard: false,&#10;    installments: &quot;1&quot;,&#10;  });&#10;&#10;  const [editQuantities, setEditQuantities] = useState({});&#10;  const [removedItems, setRemovedItems] = useState([]);&#10;  const scrollRef = useRef(null);&#10;&#10;  useEffect(() =&gt; {&#10;    console.log(&quot;Payment - Session status:&quot;, status, &quot;Session:&quot;, session);&#10;&#10;    if (status === &quot;loading&quot;) {&#10;      return;&#10;    }&#10;&#10;    if (status === &quot;unauthenticated&quot;) {&#10;      router.push(&quot;/login&quot;);&#10;      return;&#10;    }&#10;&#10;    if (status === &quot;authenticated&quot; &amp;&amp; session?.user) {&#10;      if (session.user) {&#10;        setDeliveryAddress((prev) =&gt; ({&#10;          ...prev,&#10;          name: session.user.name || &quot;&quot;,&#10;          phone: session.user.phone || &quot;&quot;,&#10;        }));&#10;        setPaymentForm((prev) =&gt; ({&#10;          ...prev,&#10;          cardName: session.user.name || &quot;&quot;,&#10;        }));&#10;      }&#10;&#10;      if (cartItems &amp;&amp; cartItems.length &gt; 0) {&#10;        const quantities = {};&#10;        cartItems.forEach((item) =&gt; {&#10;          quantities[item.id || item._id] = item.quantity;&#10;        });&#10;        setEditQuantities(quantities);&#10;      }&#10;&#10;      // Set default delivery date (tomorrow)&#10;      const tomorrow = new Date();&#10;      tomorrow.setDate(tomorrow.getDate() + 1);&#10;      setSelectedDeliveryDate(tomorrow.toISOString().split(&quot;T&quot;)[0]);&#10;&#10;      setLoading(false);&#10;    }&#10;  }, [session, status, router, cartItems]);&#10;&#10;  useEffect(() =&gt; {&#10;    if (&#10;      !cartLoading &amp;&amp;&#10;      cartItems.length === 0 &amp;&amp;&#10;      status === &quot;authenticated&quot; &amp;&amp;&#10;      !processing &amp;&amp;&#10;      !redirectingToSuccess&#10;    ) {&#10;      const timer = setTimeout(() =&gt; {&#10;        if (cartItems.length === 0 &amp;&amp; !processing &amp;&amp; !redirectingToSuccess) {&#10;          router.push(&quot;/cart&quot;);&#10;        }&#10;      }, 500);&#10;&#10;      return () =&gt; clearTimeout(timer);&#10;    }&#10;  }, [&#10;    cartItems,&#10;    cartLoading,&#10;    status,&#10;    router,&#10;    processing,&#10;    redirectingToSuccess,&#10;  ]);&#10;&#10;  // Notification system&#10;  const addNotification = (message, type = &quot;info&quot;) =&gt; {&#10;    const id = Date.now();&#10;    setNotifications((prev) =&gt; [...prev, { id, message, type }]);&#10;    setTimeout(() =&gt; {&#10;      setNotifications((prev) =&gt; prev.filter((n) =&gt; n.id !== id));&#10;    }, 4000);&#10;  };&#10;&#10;  // Enhanced calculations&#10;  const formatPrice = (price) =&gt; {&#10;    const numericPrice =&#10;      typeof price === &quot;number&quot; ? price : parseFloat(price) || 0;&#10;    return `à§³${numericPrice.toFixed(0)}`;&#10;  };&#10;&#10;  const calculateSubtotal = () =&gt; {&#10;    return cartItems.reduce((total, item) =&gt; {&#10;      const quantity = editQuantities[item.id || item._id] || item.quantity;&#10;      return total + (item.price || 0) * quantity;&#10;    }, 0);&#10;  };&#10;&#10;  const deliveryFee =&#10;    selectedDeliveryDate === new Date().toISOString().split(&quot;T&quot;)[0] ? 100 : 50;&#10;  const serviceFee = 25;&#10;  const subtotal = calculateSubtotal();&#10;  const discountAmount = (subtotal * promoDiscount) / 100;&#10;  const total = subtotal + deliveryFee + serviceFee - discountAmount;&#10;&#10;  // Enhanced handlers&#10;  const handleEditQuantity = (itemId, newQuantity) =&gt; {&#10;    if (newQuantity &gt;= 1) {&#10;      setEditQuantities((prev) =&gt; ({&#10;        ...prev,&#10;        [itemId]: newQuantity,&#10;      }));&#10;      // Update cart context as well&#10;      updateQuantity(itemId, newQuantity);&#10;      addNotification(&quot;Quantity updated successfully&quot;, &quot;success&quot;);&#10;    }&#10;  };&#10;&#10;  const handleRemoveItem = (itemId) =&gt; {&#10;    if (confirm(&quot;Are you sure you want to remove this item from your cart?&quot;)) {&#10;      setRemovedItems((prev) =&gt; [...prev, itemId]);&#10;      removeFromCart(itemId);&#10;      addNotification(&quot;Item removed from cart&quot;, &quot;info&quot;);&#10;    }&#10;  };&#10;&#10;  const handleAddressChange = (e) =&gt; {&#10;    const { name, value } = e.target;&#10;    setDeliveryAddress((prev) =&gt; ({ ...prev, [name]: value }));&#10;  };&#10;&#10;  const handlePaymentChange = (e) =&gt; {&#10;    const { name, value, type, checked } = e.target;&#10;    setPaymentForm((prev) =&gt; ({&#10;      ...prev,&#10;      [name]: type === &quot;checkbox&quot; ? checked : value,&#10;    }));&#10;  };&#10;&#10;  const applyPromoCode = async () =&gt; {&#10;    // Simulate promo code validation&#10;    const validCodes = {&#10;      SAVE10: 10,&#10;      FIRST20: 20,&#10;      WELCOME15: 15,&#10;      FARMER5: 5,&#10;    };&#10;&#10;    if (validCodes[promoCode.toUpperCase()]) {&#10;      setPromoDiscount(validCodes[promoCode.toUpperCase()]);&#10;      addNotification(&#10;        `Promo code applied! ${validCodes[promoCode.toUpperCase()]}% discount`,&#10;        &quot;success&quot;,&#10;      );&#10;    } else {&#10;      addNotification(&quot;Invalid promo code&quot;, &quot;error&quot;);&#10;    }&#10;  };&#10;&#10;  const validateForm = () =&gt; {&#10;    // Enhanced validation&#10;    if (&#10;      !deliveryAddress.name ||&#10;      !deliveryAddress.phone ||&#10;      !deliveryAddress.address ||&#10;      !deliveryAddress.city&#10;    ) {&#10;      addNotification(&#10;        &quot;Please fill in all required delivery address fields&quot;,&#10;        &quot;error&quot;,&#10;      );&#10;      return false;&#10;    }&#10;&#10;    if (!selectedDeliveryDate) {&#10;      addNotification(&quot;Please select a delivery date&quot;, &quot;error&quot;);&#10;      return false;&#10;    }&#10;&#10;    if (!agreementChecked) {&#10;      addNotification(&quot;Please agree to terms and conditions&quot;, &quot;error&quot;);&#10;      return false;&#10;    }&#10;&#10;    if (paymentForm.paymentMethod === &quot;card&quot;) {&#10;      if (&#10;        !paymentForm.cardNumber ||&#10;        !paymentForm.expiryDate ||&#10;        !paymentForm.cvv ||&#10;        !paymentForm.cardName&#10;      ) {&#10;        addNotification(&quot;Please fill in all required card fields&quot;, &quot;error&quot;);&#10;        return false;&#10;      }&#10;    } else if (&#10;      paymentForm.paymentMethod === &quot;bkash&quot; ||&#10;      paymentForm.paymentMethod === &quot;nagad&quot;&#10;    ) {&#10;      if (!paymentForm.mobileNumber) {&#10;        addNotification(&quot;Please enter your mobile number&quot;, &quot;error&quot;);&#10;        return false;&#10;      }&#10;    }&#10;    return true;&#10;  };&#10;&#10;  const handleSubmitOrder = async () =&gt; {&#10;    if (!validateForm()) return;&#10;    if (cartItems.length === 0) {&#10;      addNotification(&quot;Your cart is empty&quot;, &quot;error&quot;);&#10;      return;&#10;    }&#10;&#10;    setProcessing(true);&#10;    setPaymentProcessingStep(1);&#10;&#10;    try {&#10;      // Simulate multi-step payment processing&#10;      await new Promise((resolve) =&gt;&#10;        setTimeout(() =&gt; {&#10;          setPaymentProcessingStep(2);&#10;          resolve();&#10;        }, 1000),&#10;      );&#10;&#10;      await new Promise((resolve) =&gt;&#10;        setTimeout(() =&gt; {&#10;          setPaymentProcessingStep(3);&#10;          resolve();&#10;        }, 1500),&#10;      );&#10;&#10;      await new Promise((resolve) =&gt;&#10;        setTimeout(() =&gt; {&#10;          setPaymentProcessingStep(4);&#10;          resolve();&#10;        }, 1000),&#10;      );&#10;&#10;      const userId =&#10;        session.user.userId ||&#10;        session.user.id ||&#10;        session.user._id ||&#10;        session.user.email;&#10;&#10;      const farmerIds = [];&#10;      const farmerEmails = [];&#10;&#10;      cartItems.forEach((item) =&gt; {&#10;        const farmerId =&#10;          typeof item.farmer === &quot;object&quot;&#10;            ? item.farmer?.id || item.farmer?._id&#10;            : null;&#10;        const farmerEmail =&#10;          typeof item.farmer === &quot;object&quot; ? item.farmer?.email : null;&#10;&#10;        if (farmerId &amp;&amp; !farmerIds.includes(farmerId)) {&#10;          farmerIds.push(farmerId);&#10;        }&#10;        if (farmerEmail &amp;&amp; !farmerEmails.includes(farmerEmail)) {&#10;          farmerEmails.push(farmerEmail);&#10;        }&#10;      });&#10;&#10;      const orderData = {&#10;        userId: userId,&#10;        customerName: session.user.name || deliveryAddress.name,&#10;        customerEmail: session.user.email,&#10;        customerPhone: deliveryAddress.phone,&#10;        farmerIds: farmerIds,&#10;        farmerEmails: farmerEmails,&#10;        items: cartItems.map((item) =&gt; ({&#10;          productId: item.id || item._id,&#10;          name: item.name,&#10;          productName: item.name,&#10;          quantity: editQuantities[item.id || item._id] || item.quantity,&#10;          price: item.price || 0,&#10;          unit: item.unit || &quot;kg&quot;,&#10;          image: item.image,&#10;          farmerName:&#10;            typeof item.farmer === &quot;object&quot; &amp;&amp; item.farmer?.name&#10;              ? item.farmer.name&#10;              : typeof item.farmer === &quot;string&quot;&#10;                ? item.farmer&#10;                : &quot;Local Farmer&quot;,&#10;          farmerId:&#10;            typeof item.farmer === &quot;object&quot;&#10;              ? item.farmer?.id || item.farmer?._id&#10;              : null,&#10;          farmerEmail:&#10;            typeof item.farmer === &quot;object&quot; ? item.farmer?.email : null,&#10;        })),&#10;        deliveryAddress: {&#10;          ...deliveryAddress,&#10;          deliveryDate: selectedDeliveryDate,&#10;          timeSlot: selectedTimeSlot,&#10;        },&#10;        orderNotes,&#10;        promoCode: promoCode || null,&#10;        promoDiscount,&#10;        subtotal,&#10;        deliveryFee,&#10;        serviceFee,&#10;        discountAmount,&#10;        total,&#10;        paymentMethod: paymentForm.paymentMethod,&#10;        status: &quot;pending&quot;,&#10;        newsletterSubscribe,&#10;      };&#10;&#10;      const response = await fetch(&quot;/api/orders&quot;, {&#10;        method: &quot;POST&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify(orderData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;        const orderId = data.orderId || data.order?._id;&#10;&#10;        if (orderId) {&#10;          try {&#10;            await fetch(`/api/cart?userId=${encodeURIComponent(userId)}`, {&#10;              method: &quot;DELETE&quot;,&#10;            });&#10;          } catch (cartError) {&#10;            console.error(&quot;Error clearing cart:&quot;, cartError);&#10;          }&#10;&#10;          setRedirectingToSuccess(true);&#10;          router.replace(`/success?orderId=${orderId}`);&#10;          setTimeout(() =&gt; clearCart(), 100);&#10;        } else {&#10;          addNotification(&#10;            &quot;Order created successfully! Redirecting...&quot;,&#10;            &quot;success&quot;,&#10;          );&#10;          router.replace(&quot;/&quot;);&#10;        }&#10;      } else {&#10;        const errorData = await response&#10;          .json()&#10;          .catch(() =&gt; ({ error: &quot;Unknown error&quot; }));&#10;        throw new Error(errorData.error || &quot;Failed to create order&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error processing payment:&quot;, error);&#10;      addNotification(&quot;Payment failed. Please try again.&quot;, &quot;error&quot;);&#10;      setProcessing(false);&#10;      setPaymentProcessingStep(0);&#10;    }&#10;  };&#10;&#10;  // Get available time slots&#10;  const getTimeSlots = () =&gt; {&#10;    const slots = [&#10;      &quot;9:00 AM - 12:00 PM&quot;,&#10;      &quot;12:00 PM - 3:00 PM&quot;,&#10;      &quot;3:00 PM - 6:00 PM&quot;,&#10;      &quot;6:00 PM - 9:00 PM&quot;,&#10;    ];&#10;    return slots;&#10;  };&#10;&#10;  // Get next 7 days for delivery&#10;  const getDeliveryDates = () =&gt; {&#10;    const dates = [];&#10;    for (let i = 1; i &lt;= 7; i++) {&#10;      const date = new Date();&#10;      date.setDate(date.getDate() + i);&#10;      dates.push({&#10;        value: date.toISOString().split(&quot;T&quot;)[0],&#10;        label: date.toLocaleDateString(&quot;en-US&quot;, {&#10;          weekday: &quot;short&quot;,&#10;          month: &quot;short&quot;,&#10;          day: &quot;numeric&quot;,&#10;        }),&#10;        isToday: i === 1,&#10;      });&#10;    }&#10;    return dates;&#10;  };&#10;&#10;  if (status === &quot;loading&quot; || loading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#10;          &lt;div className=&quot;animate-spin rounded-full h-32 w-32 border-b-2 border-green-600 mx-auto mb-4&quot;&gt;&lt;/div&gt;&#10;          &lt;p className=&quot;text-gray-600 dark:text-gray-400 text-lg&quot;&gt;&#10;            Loading your enhanced payment experience...&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  if (cartItems.length === 0) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center max-w-md mx-auto&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-lg&quot;&gt;&#10;            &lt;i className=&quot;fas fa-shopping-cart text-6xl text-gray-400 mb-6&quot;&gt;&lt;/i&gt;&#10;            &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;              Your cart is empty&#10;            &lt;/h2&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-8&quot;&gt;&#10;              Add some fresh products to your cart before proceeding to payment&#10;            &lt;/p&gt;&#10;            &lt;Link&#10;              href=&quot;/products&quot;&#10;              className=&quot;inline-block bg-green-600 hover:bg-green-700 text-white px-8 py-3 rounded-lg font-medium transition transform hover:scale-105&quot;&#10;            &gt;&#10;              &lt;i className=&quot;fas fa-leaf mr-2&quot;&gt;&lt;/i&gt;&#10;              Browse Fresh Products&#10;            &lt;/Link&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      {/* Notification System */}&#10;      &lt;div className=&quot;fixed top-4 right-4 z-50 space-y-2&quot;&gt;&#10;        {notifications.map((notification) =&gt; (&#10;          &lt;div&#10;            key={notification.id}&#10;            className={`px-6 py-4 rounded-lg shadow-lg text-white transform transition-all duration-500 animate-slide-in ${&#10;              notification.type === &quot;success&quot;&#10;                ? &quot;bg-green-600&quot;&#10;                : notification.type === &quot;error&quot;&#10;                  ? &quot;bg-red-600&quot;&#10;                  : notification.type === &quot;warning&quot;&#10;                    ? &quot;bg-yellow-600&quot;&#10;                    : &quot;bg-blue-600&quot;&#10;            }`}&#10;          &gt;&#10;            &lt;div className=&quot;flex items-center&quot;&gt;&#10;              &lt;i&#10;                className={`fas ${&#10;                  notification.type === &quot;success&quot;&#10;                    ? &quot;fa-check-circle&quot;&#10;                    : notification.type === &quot;error&quot;&#10;                      ? &quot;fa-exclamation-circle&quot;&#10;                      : notification.type === &quot;warning&quot;&#10;                        ? &quot;fa-exclamation-triangle&quot;&#10;                        : &quot;fa-info-circle&quot;&#10;                } mr-2`}&#10;              &gt;&lt;/i&gt;&#10;              {notification.message}&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        ))}&#10;      &lt;/div&gt;&#10;&#10;      {/* Payment Processing Modal */}&#10;      {processing &amp;&amp; (&#10;        &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl p-8 max-w-md w-full text-center&quot;&gt;&#10;            &lt;div className=&quot;mb-6&quot;&gt;&#10;              &lt;div className=&quot;animate-spin rounded-full h-16 w-16 border-b-2 border-green-600 mx-auto mb-4&quot;&gt;&lt;/div&gt;&#10;              &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                Processing Payment&#10;              &lt;/h3&gt;&#10;              &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                {paymentProcessingStep === 1 &amp;&amp; &quot;Validating payment details...&quot;}&#10;                {paymentProcessingStep === 2 &amp;&amp; &quot;Contacting payment gateway...&quot;}&#10;                {paymentProcessingStep === 3 &amp;&amp; &quot;Securing transaction...&quot;}&#10;                {paymentProcessingStep === 4 &amp;&amp; &quot;Finalizing order...&quot;}&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Processing Steps */}&#10;            &lt;div className=&quot;flex justify-center space-x-2 mb-4&quot;&gt;&#10;              {[1, 2, 3, 4].map((step) =&gt; (&#10;                &lt;div&#10;                  key={step}&#10;                  className={`w-3 h-3 rounded-full ${&#10;                    step &lt;= paymentProcessingStep&#10;                      ? &quot;bg-green-600&quot;&#10;                      : &quot;bg-gray-300&quot;&#10;                  } transition-colors duration-300`}&#10;                &gt;&lt;/div&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;&#10;            &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;              Please do not close this window or navigate away&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;&#10;      {/* Enhanced Breadcrumb */}&#10;      &lt;div className=&quot;bg-white dark:bg-gray-800 shadow-sm&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4&quot;&gt;&#10;          &lt;nav&#10;            className=&quot;flex justify-between items-center&quot;&#10;            aria-label=&quot;Breadcrumb&quot;&#10;          &gt;&#10;            &lt;ol className=&quot;flex items-center space-x-2 text-sm&quot;&gt;&#10;              &lt;li&gt;&#10;                &lt;Link&#10;                  href=&quot;/&quot;&#10;                  className=&quot;text-gray-500 hover:text-green-600 transition&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-home mr-1&quot;&gt;&lt;/i&gt;Home&#10;                &lt;/Link&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;Link&#10;                  href=&quot;/cart&quot;&#10;                  className=&quot;text-gray-500 hover:text-green-600 transition&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-shopping-cart mr-1&quot;&gt;&lt;/i&gt;Cart&#10;                &lt;/Link&gt;&#10;              &lt;/li&gt;&#10;              &lt;li&gt;&#10;                &lt;i className=&quot;fas fa-chevron-right text-gray-400 text-xs&quot;&gt;&lt;/i&gt;&#10;              &lt;/li&gt;&#10;              &lt;li className=&quot;text-gray-900 dark:text-white font-medium&quot;&gt;&#10;                &lt;i className=&quot;fas fa-credit-card mr-1&quot;&gt;&lt;/i&gt;Secure Checkout&#10;              &lt;/li&gt;&#10;            &lt;/ol&gt;&#10;&#10;            {/* Progress Indicator */}&#10;            &lt;div className=&quot;hidden md:flex items-center space-x-4&quot;&gt;&#10;              &lt;div className=&quot;flex items-center text-green-600&quot;&gt;&#10;                &lt;div className=&quot;w-6 h-6 bg-green-600 text-white rounded-full flex items-center justify-center text-xs font-bold mr-2&quot;&gt;&#10;                  â&#10;                &lt;/div&gt;&#10;                &lt;span className=&quot;text-sm font-medium&quot;&gt;Cart&lt;/span&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;w-8 h-px bg-green-600&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;flex items-center text-green-600&quot;&gt;&#10;                &lt;div className=&quot;w-6 h-6 bg-green-600 text-white rounded-full flex items-center justify-center text-xs font-bold mr-2&quot;&gt;&#10;                  2&#10;                &lt;/div&gt;&#10;                &lt;span className=&quot;text-sm font-medium&quot;&gt;Checkout&lt;/span&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;w-8 h-px bg-gray-300&quot;&gt;&lt;/div&gt;&#10;              &lt;div className=&quot;flex items-center text-gray-400&quot;&gt;&#10;                &lt;div className=&quot;w-6 h-6 bg-gray-300 text-gray-600 rounded-full flex items-center justify-center text-xs font-bold mr-2&quot;&gt;&#10;                  3&#10;                &lt;/div&gt;&#10;                &lt;span className=&quot;text-sm&quot;&gt;Confirmation&lt;/span&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/nav&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Main Payment Content */}&#10;      &lt;div className=&quot;min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          {/* Page Header */}&#10;          &lt;div className=&quot;text-center mb-8&quot;&gt;&#10;            &lt;h1 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;              Complete Your Order&#10;            &lt;/h1&gt;&#10;            &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;              Review your items and proceed with secure payment&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-8&quot;&gt;&#10;            {/* Enhanced Order Summary */}&#10;            &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6 h-fit&quot;&gt;&#10;              &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-receipt mr-2 text-green-600&quot;&gt;&lt;/i&gt;&#10;                  Order Summary&#10;                &lt;/h2&gt;&#10;                &lt;span className=&quot;bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium&quot;&gt;&#10;                  {cartItems.length} items&#10;                &lt;/span&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Product Details with Enhanced Design */}&#10;              &lt;div className=&quot;space-y-4 mb-6 max-h-96 overflow-y-auto&quot;&gt;&#10;                {cartItems.map((item) =&gt; {&#10;                  const quantity =&#10;                    editQuantities[item.id || item._id] || item.quantity;&#10;                  return (&#10;                    &lt;div&#10;                      key={item.id || item._id}&#10;                      className=&quot;group relative flex items-center space-x-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200&quot;&#10;                    &gt;&#10;                      &lt;div className=&quot;relative&quot;&gt;&#10;                        &lt;img&#10;                          src={&#10;                            item.images?.[0] ||&#10;                            item.image ||&#10;                            &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=80&amp;h=80&amp;fit=crop&quot;&#10;                          }&#10;                          alt={item.name}&#10;                          className=&quot;w-20 h-20 rounded-xl object-cover shadow-md&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;absolute -top-2 -right-2 bg-green-600 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center font-bold&quot;&gt;&#10;                          {quantity}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;flex-1&quot;&gt;&#10;                        &lt;h3 className=&quot;font-semibold text-gray-900 dark:text-white text-lg&quot;&gt;&#10;                          {item.name}&#10;                        &lt;/h3&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-user-tie mr-1&quot;&gt;&lt;/i&gt;&#10;                          {typeof item.farmer === &quot;object&quot; &amp;&amp; item.farmer?.name&#10;                            ? item.farmer.name&#10;                            : typeof item.farmer === &quot;string&quot;&#10;                              ? item.farmer&#10;                              : &quot;Local Farmer&quot;}&#10;                        &lt;/p&gt;&#10;                        &lt;div className=&quot;flex items-center space-x-2 mt-1&quot;&gt;&#10;                          &lt;span className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {quantity} {item.unit || &quot;kg&quot;}&#10;                          &lt;/span&gt;&#10;                          &lt;span className=&quot;text-xs text-gray-400&quot;&gt;â¢&lt;/span&gt;&#10;                          &lt;span className=&quot;text-sm text-green-600 font-medium&quot;&gt;&#10;                            {formatPrice(item.price || 0)}/{item.unit || &quot;kg&quot;}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;text-right&quot;&gt;&#10;                        &lt;p className=&quot;text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          {formatPrice((item.price || 0) * quantity)}&#10;                        &lt;/p&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setShowEditModal(true)}&#10;                          className=&quot;text-sm text-blue-600 hover:text-blue-800 transition opacity-0 group-hover:opacity-100&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-edit mr-1&quot;&gt;&lt;/i&gt;Edit&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  );&#10;                })}&#10;              &lt;/div&gt;&#10;&#10;              {/* Promo Code Section */}&#10;              &lt;div className=&quot;mb-6 p-4 bg-gradient-to-r from-green-50 to-blue-50 dark:from-green-900/20 dark:to-blue-900/20 rounded-xl border border-green-200 dark:border-green-700&quot;&gt;&#10;                &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-tags mr-2 text-green-600&quot;&gt;&lt;/i&gt;&#10;                  Have a promo code?&#10;                &lt;/h4&gt;&#10;                &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                  &lt;input&#10;                    type=&quot;text&quot;&#10;                    value={promoCode}&#10;                    onChange={(e) =&gt; setPromoCode(e.target.value.toUpperCase())}&#10;                    placeholder=&quot;Enter promo code&quot;&#10;                    className=&quot;flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                  /&gt;&#10;                  &lt;button&#10;                    onClick={applyPromoCode}&#10;                    disabled={!promoCode}&#10;                    className=&quot;px-6 py-2 bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white rounded-lg font-medium transition&quot;&#10;                  &gt;&#10;                    Apply&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;                {promoDiscount &gt; 0 &amp;&amp; (&#10;                  &lt;div className=&quot;mt-3 flex items-center text-green-600&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-check-circle mr-2&quot;&gt;&lt;/i&gt;&#10;                    &lt;span className=&quot;text-sm font-medium&quot;&gt;&#10;                      {promoDiscount}% discount applied!&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;&#10;              {/* Enhanced Delivery Information */}&#10;              &lt;div className=&quot;mb-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-700&quot;&gt;&#10;                &lt;h4 className=&quot;font-medium text-gray-900 dark:text-white mb-3 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-truck mr-2 text-blue-600&quot;&gt;&lt;/i&gt;&#10;                  Delivery Information&#10;                &lt;/h4&gt;&#10;                &lt;div className=&quot;space-y-2 text-sm&quot;&gt;&#10;                  &lt;div className=&quot;flex justify-between&quot;&gt;&#10;                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Delivery Date:&#10;                    &lt;/span&gt;&#10;                    &lt;span className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                      {selectedDeliveryDate&#10;                        ? new Date(selectedDeliveryDate).toLocaleDateString(&#10;                            &quot;en-US&quot;,&#10;                            {&#10;                              weekday: &quot;short&quot;,&#10;                              month: &quot;short&quot;,&#10;                              day: &quot;numeric&quot;,&#10;                            },&#10;                          )&#10;                        : &quot;Tomorrow&quot;}&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex justify-between&quot;&gt;&#10;                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Time Slot:&#10;                    &lt;/span&gt;&#10;                    &lt;span className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                      {selectedTimeSlot || &quot;12:00 PM - 3:00 PM&quot;}&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex justify-between&quot;&gt;&#10;                    &lt;span className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Address:&#10;                    &lt;/span&gt;&#10;                    &lt;span className=&quot;font-medium text-gray-900 dark:text-white text-right max-w-xs&quot;&gt;&#10;                      {deliveryAddress.address &amp;&amp; deliveryAddress.city&#10;                        ? `${deliveryAddress.address}, ${deliveryAddress.city}`&#10;                        : &quot;Please fill address below&quot;}&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Enhanced Price Breakdown */}&#10;              &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6 mb-6&quot;&gt;&#10;                &lt;div className=&quot;space-y-3&quot;&gt;&#10;                  &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    &lt;span&gt;Subtotal ({cartItems.length} items):&lt;/span&gt;&#10;                    &lt;span&gt;{formatPrice(subtotal)}&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center&quot;&gt;&#10;                      &lt;span&gt;Delivery Fee:&lt;/span&gt;&#10;                      {selectedDeliveryDate ===&#10;                        new Date().toISOString().split(&quot;T&quot;)[0] &amp;&amp; (&#10;                        &lt;span className=&quot;ml-2 bg-orange-100 text-orange-800 px-2 py-1 rounded text-xs&quot;&gt;&#10;                          Same day&#10;                        &lt;/span&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                    &lt;span&gt;{formatPrice(deliveryFee)}&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;flex justify-between text-gray-600 dark:text-gray-400&quot;&gt;&#10;                    &lt;span&gt;Service Fee:&lt;/span&gt;&#10;                    &lt;span&gt;{formatPrice(serviceFee)}&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {promoDiscount &gt; 0 &amp;&amp; (&#10;                    &lt;div className=&quot;flex justify-between text-green-600&quot;&gt;&#10;                      &lt;span&gt;Discount ({promoDiscount}%):&lt;/span&gt;&#10;                      &lt;span&gt;-{formatPrice(discountAmount)}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-3&quot;&gt;&#10;                    &lt;div className=&quot;flex justify-between text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                      &lt;span&gt;Total:&lt;/span&gt;&#10;                      &lt;span className=&quot;text-green-600&quot;&gt;&#10;                        {formatPrice(total)}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Order Notes &amp; Additional Information */}&#10;              &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 pt-6 mb-6&quot;&gt;&#10;                &lt;h4 className=&quot;text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-sticky-note mr-2 text-yellow-600&quot;&gt;&lt;/i&gt;&#10;                  Additional Information&#10;                &lt;/h4&gt;&#10;&#10;                &lt;div className=&quot;space-y-4&quot;&gt;&#10;                  {/* Order Notes */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Order Notes (Optional)&#10;                    &lt;/label&gt;&#10;                    &lt;textarea&#10;                      value={orderNotes}&#10;                      onChange={(e) =&gt; setOrderNotes(e.target.value)}&#10;                      rows=&quot;3&quot;&#10;                      maxLength=&quot;200&quot;&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Any special requests or notes for your order...&quot;&#10;                    /&gt;&#10;                    &lt;p className=&quot;text-xs text-gray-500 dark:text-gray-400 mt-1&quot;&gt;&#10;                      {orderNotes.length}/200 characters&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Newsletter Subscription */}&#10;                  &lt;div className=&quot;p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-700&quot;&gt;&#10;                    &lt;label className=&quot;flex items-start&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        checked={newsletterSubscribe}&#10;                        onChange={(e) =&gt;&#10;                          setNewsletterSubscribe(e.target.checked)&#10;                        }&#10;                        className=&quot;rounded border-gray-300 text-green-600 focus:ring-green-500 mt-1&quot;&#10;                      /&gt;&#10;                      &lt;div className=&quot;ml-3&quot;&gt;&#10;                        &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                          Subscribe to our newsletter&#10;                        &lt;/span&gt;&#10;                        &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#10;                          Get updates on fresh products, seasonal offers, and&#10;                          farming tips directly to your inbox.&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Terms and Conditions - Required */}&#10;                  &lt;div&#10;                    className={`p-4 rounded-lg border-2 transition-colors ${&#10;                      agreementChecked&#10;                        ? &quot;bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-700&quot;&#10;                        : &quot;bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-700&quot;&#10;                    }`}&#10;                  &gt;&#10;                    &lt;label className=&quot;flex items-start&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        checked={agreementChecked}&#10;                        onChange={(e) =&gt; setAgreementChecked(e.target.checked)}&#10;                        className=&quot;rounded border-gray-300 text-green-600 focus:ring-green-500 mt-1&quot;&#10;                        required&#10;                      /&gt;&#10;                      &lt;div className=&quot;ml-3&quot;&gt;&#10;                        &lt;span className=&quot;text-sm font-medium text-gray-900 dark:text-white flex items-center&quot;&gt;&#10;                          I agree to the Terms &amp; Conditions *&#10;                          {!agreementChecked &amp;&amp; (&#10;                            &lt;i className=&quot;fas fa-exclamation-triangle text-red-500 ml-2&quot;&gt;&lt;/i&gt;&#10;                          )}&#10;                          {agreementChecked &amp;&amp; (&#10;                            &lt;i className=&quot;fas fa-check-circle text-green-500 ml-2&quot;&gt;&lt;/i&gt;&#10;                          )}&#10;                        &lt;/span&gt;&#10;                        &lt;p className=&quot;text-xs text-gray-600 dark:text-gray-400 mt-1&quot;&gt;&#10;                          By checking this box, you agree to our{&quot; &quot;}&#10;                          &lt;Link&#10;                            href=&quot;/terms&quot;&#10;                            className=&quot;text-green-600 hover:text-green-700 underline font-medium&quot;&#10;                          &gt;&#10;                            Terms of Service&#10;                          &lt;/Link&gt;{&quot; &quot;}&#10;                          and{&quot; &quot;}&#10;                          &lt;Link&#10;                            href=&quot;/privacy&quot;&#10;                            className=&quot;text-green-600 hover:text-green-700 underline font-medium&quot;&#10;                          &gt;&#10;                            Privacy Policy&#10;                          &lt;/Link&gt;&#10;                          .&#10;                          {!agreementChecked &amp;&amp; (&#10;                            &lt;span className=&quot;text-red-600 font-medium&quot;&gt;&#10;                              {&quot; &quot;}&#10;                              This agreement is required to proceed.&#10;                            &lt;/span&gt;&#10;                          )}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Quick Edit Button */}&#10;              &lt;button&#10;                onClick={() =&gt; setShowEditModal(true)}&#10;                className=&quot;w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white py-3 rounded-xl font-medium transition transform hover:scale-105 flex items-center justify-center&quot;&#10;              &gt;&#10;                &lt;i className=&quot;fas fa-edit mr-2&quot;&gt;&lt;/i&gt;&#10;                Edit Order Details&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Enhanced Payment &amp; Delivery Form */}&#10;            &lt;div className=&quot;space-y-6&quot;&gt;&#10;              {/* Delivery Address Form */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-map-marker-alt mr-2 text-green-600&quot;&gt;&lt;/i&gt;&#10;                  Delivery Address&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Full Name *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      name=&quot;name&quot;&#10;                      value={deliveryAddress.name}&#10;                      onChange={handleAddressChange}&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Enter your full name&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Phone Number *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;tel&quot;&#10;                      name=&quot;phone&quot;&#10;                      value={deliveryAddress.phone}&#10;                      onChange={handleAddressChange}&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;+880 1234 567890&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;md:col-span-2&quot;&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Street Address *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      name=&quot;address&quot;&#10;                      value={deliveryAddress.address}&#10;                      onChange={handleAddressChange}&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;House/Building number, Street name&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      City *&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      name=&quot;city&quot;&#10;                      value={deliveryAddress.city}&#10;                      onChange={handleAddressChange}&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Enter your city&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Postal Code&#10;                    &lt;/label&gt;&#10;                    &lt;input&#10;                      type=&quot;text&quot;&#10;                      name=&quot;postalCode&quot;&#10;                      value={deliveryAddress.postalCode}&#10;                      onChange={handleAddressChange}&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Postal code&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;md:col-span-2&quot;&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                      Delivery Instructions&#10;                    &lt;/label&gt;&#10;                    &lt;textarea&#10;                      name=&quot;instructions&quot;&#10;                      value={deliveryAddress.instructions}&#10;                      onChange={handleAddressChange}&#10;                      rows=&quot;3&quot;&#10;                      className=&quot;w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                      placeholder=&quot;Any special delivery instructions...&quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Delivery Scheduling */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-calendar-alt mr-2 text-blue-600&quot;&gt;&lt;/i&gt;&#10;                  Delivery Schedule&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;space-y-4&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3&quot;&gt;&#10;                      Choose Delivery Date&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;grid grid-cols-2 md:grid-cols-3 gap-3&quot;&gt;&#10;                      {getDeliveryDates().map((date) =&gt; (&#10;                        &lt;label&#10;                          key={date.value}&#10;                          className={`relative flex items-center justify-center p-4 border-2 rounded-lg cursor-pointer transition ${&#10;                            selectedDeliveryDate === date.value&#10;                              ? &quot;border-green-500 bg-green-50 dark:bg-green-900/20&quot;&#10;                              : &quot;border-gray-300 dark:border-gray-600 hover:border-green-300&quot;&#10;                          }`}&#10;                        &gt;&#10;                          &lt;input&#10;                            type=&quot;radio&quot;&#10;                            name=&quot;deliveryDate&quot;&#10;                            value={date.value}&#10;                            checked={selectedDeliveryDate === date.value}&#10;                            onChange={(e) =&gt;&#10;                              setSelectedDeliveryDate(e.target.value)&#10;                            }&#10;                            className=&quot;sr-only&quot;&#10;                          /&gt;&#10;                          &lt;div className=&quot;text-center&quot;&gt;&#10;                            &lt;div className=&quot;font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                              {date.label}&#10;                            &lt;/div&gt;&#10;                            {date.isToday &amp;&amp; (&#10;                              &lt;div className=&quot;text-xs text-orange-600 font-medium&quot;&gt;&#10;                                +à§³50 express&#10;                              &lt;/div&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                          {selectedDeliveryDate === date.value &amp;&amp; (&#10;                            &lt;div className=&quot;absolute top-2 right-2 w-4 h-4 bg-green-500 rounded-full flex items-center justify-center&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-check text-white text-xs&quot;&gt;&lt;/i&gt;&#10;                            &lt;/div&gt;&#10;                          )}&#10;                        &lt;/label&gt;&#10;                      ))}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3&quot;&gt;&#10;                      Preferred Time Slot&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-3&quot;&gt;&#10;                      {getTimeSlots().map((slot) =&gt; (&#10;                        &lt;label&#10;                          key={slot}&#10;                          className={`flex items-center p-3 border-2 rounded-lg cursor-pointer transition ${&#10;                            selectedTimeSlot === slot&#10;                              ? &quot;border-blue-500 bg-blue-50 dark:bg-blue-900/20&quot;&#10;                              : &quot;border-gray-300 dark:border-gray-600 hover:border-blue-300&quot;&#10;                          }`}&#10;                        &gt;&#10;                          &lt;input&#10;                            type=&quot;radio&quot;&#10;                            name=&quot;timeSlot&quot;&#10;                            value={slot}&#10;                            checked={selectedTimeSlot === slot}&#10;                            onChange={(e) =&gt;&#10;                              setSelectedTimeSlot(e.target.value)&#10;                            }&#10;                            className=&quot;text-blue-600 focus:ring-blue-500&quot;&#10;                          /&gt;&#10;                          &lt;span className=&quot;ml-3 font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                            {slot}&#10;                          &lt;/span&gt;&#10;                        &lt;/label&gt;&#10;                      ))}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Payment Method Section */}&#10;              &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6&quot;&gt;&#10;                &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center&quot;&gt;&#10;                  &lt;i className=&quot;fas fa-credit-card mr-2 text-purple-600&quot;&gt;&lt;/i&gt;&#10;                  Payment Method&#10;                &lt;/h3&gt;&#10;&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {/* Payment Method Options */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3&quot;&gt;&#10;                      Select Payment Method&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;space-y-3&quot;&gt;&#10;                      &lt;label className=&quot;flex items-center p-3 border border-gray-300 dark:border-gray-600 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;radio&quot;&#10;                          name=&quot;paymentMethod&quot;&#10;                          value=&quot;card&quot;&#10;                          checked={paymentForm.paymentMethod === &quot;card&quot;}&#10;                          onChange={handlePaymentChange}&#10;                          className=&quot;text-green-600 focus:ring-green-500&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;ml-3 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-credit-card text-lg mr-2&quot;&gt;&lt;/i&gt;&#10;                          &lt;span className=&quot;font-medium&quot;&gt;Credit/Debit Card&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/label&gt;&#10;                      &lt;label className=&quot;flex items-center p-3 border border-gray-300 dark:border-gray-600 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;radio&quot;&#10;                          name=&quot;paymentMethod&quot;&#10;                          value=&quot;bkash&quot;&#10;                          checked={paymentForm.paymentMethod === &quot;bkash&quot;}&#10;                          onChange={handlePaymentChange}&#10;                          className=&quot;text-green-600 focus:ring-green-500&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;ml-3 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-mobile-alt text-lg mr-2&quot;&gt;&lt;/i&gt;&#10;                          &lt;span className=&quot;font-medium&quot;&gt;bKash&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/label&gt;&#10;                      &lt;label className=&quot;flex items-center p-3 border border-gray-300 dark:border-gray-600 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700&quot;&gt;&#10;                        &lt;input&#10;                          type=&quot;radio&quot;&#10;                          name=&quot;paymentMethod&quot;&#10;                          value=&quot;nagad&quot;&#10;                          checked={paymentForm.paymentMethod === &quot;nagad&quot;}&#10;                          onChange={handlePaymentChange}&#10;                          className=&quot;text-green-600 focus:ring-green-500&quot;&#10;                        /&gt;&#10;                        &lt;div className=&quot;ml-3 flex items-center&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-wallet text-lg mr-2&quot;&gt;&lt;/i&gt;&#10;                          &lt;span className=&quot;font-medium&quot;&gt;Nagad&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/label&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Card Details */}&#10;                  {paymentForm.paymentMethod === &quot;card&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;label&#10;                          htmlFor=&quot;cardName&quot;&#10;                          className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                        &gt;&#10;                          Name on Card&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;text&quot;&#10;                          id=&quot;cardName&quot;&#10;                          name=&quot;cardName&quot;&#10;                          value={paymentForm.cardName}&#10;                          onChange={handlePaymentChange}&#10;                          required&#10;                          className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                          placeholder=&quot;John Doe&quot;&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div&gt;&#10;                        &lt;label&#10;                          htmlFor=&quot;cardNumber&quot;&#10;                          className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                        &gt;&#10;                          Card Number&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;text&quot;&#10;                          id=&quot;cardNumber&quot;&#10;                          name=&quot;cardNumber&quot;&#10;                          value={paymentForm.cardNumber}&#10;                          onChange={handlePaymentChange}&#10;                          required&#10;                          className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                          placeholder=&quot;1234 5678 9012 3456&quot;&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;grid grid-cols-2 gap-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;label&#10;                            htmlFor=&quot;expiryDate&quot;&#10;                            className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                          &gt;&#10;                            Expiry Date&#10;                          &lt;/label&gt;&#10;                          &lt;input&#10;                            type=&quot;text&quot;&#10;                            id=&quot;expiryDate&quot;&#10;                            name=&quot;expiryDate&quot;&#10;                            value={paymentForm.expiryDate}&#10;                            onChange={handlePaymentChange}&#10;                            required&#10;                            className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                            placeholder=&quot;MM/YY&quot;&#10;                          /&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&gt;&#10;                          &lt;label&#10;                            htmlFor=&quot;cvv&quot;&#10;                            className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                          &gt;&#10;                            CVV&#10;                          &lt;/label&gt;&#10;                          &lt;input&#10;                            type=&quot;password&quot;&#10;                            id=&quot;cvv&quot;&#10;                            name=&quot;cvv&quot;&#10;                            value={paymentForm.cvv}&#10;                            onChange={handlePaymentChange}&#10;                            maxLength=&quot;4&quot;&#10;                            required&#10;                            className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                            placeholder=&quot;123&quot;&#10;                          /&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Mobile Payment Details */}&#10;                  {(paymentForm.paymentMethod === &quot;bkash&quot; ||&#10;                    paymentForm.paymentMethod === &quot;nagad&quot;) &amp;&amp; (&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;label&#10;                          htmlFor=&quot;mobileNumber&quot;&#10;                          className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1&quot;&#10;                        &gt;&#10;                          Mobile Number&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;tel&quot;&#10;                          id=&quot;mobileNumber&quot;&#10;                          name=&quot;mobileNumber&quot;&#10;                          value={paymentForm.mobileNumber}&#10;                          onChange={handlePaymentChange}&#10;                          className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white&quot;&#10;                          placeholder=&quot;+880 1234 567890&quot;&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;p-4 bg-blue-50 dark:bg-blue-900 rounded-lg&quot;&gt;&#10;                        &lt;p className=&quot;text-sm text-blue-700 dark:text-blue-300&quot;&gt;&#10;                          You will be redirected to{&quot; &quot;}&#10;                          {paymentForm.paymentMethod === &quot;bkash&quot;&#10;                            ? &quot;bKash&quot;&#10;                            : &quot;Nagad&quot;}{&quot; &quot;}&#10;                          payment gateway to complete your payment.&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Billing Address */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;flex items-center mb-4&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        name=&quot;sameAsDelivery&quot;&#10;                        checked={paymentForm.sameAsDelivery}&#10;                        onChange={handlePaymentChange}&#10;                        className=&quot;rounded border-gray-300 text-green-600 focus:ring-green-500&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                        Same as delivery address&#10;                      &lt;/span&gt;&#10;                    &lt;/label&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Submit Button */}&#10;                  &lt;button&#10;                    onClick={handleSubmitOrder}&#10;                    disabled={processing || !agreementChecked}&#10;                    className={`w-full py-3 px-4 rounded-lg font-medium text-lg transition duration-200 transform ${&#10;                      processing || !agreementChecked&#10;                        ? &quot;bg-gray-400 cursor-not-allowed text-white&quot;&#10;                        : &quot;bg-green-600 hover:bg-green-700 text-white hover:scale-105&quot;&#10;                    }`}&#10;                  &gt;&#10;                    {processing ? (&#10;                      &lt;&gt;&#10;                        &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        Processing Payment...&#10;                      &lt;/&gt;&#10;                    ) : !agreementChecked ? (&#10;                      &lt;&gt;&#10;                        &lt;i className=&quot;fas fa-exclamation-triangle mr-2&quot;&gt;&lt;/i&gt;&#10;                        Please agree to Terms &amp; Conditions&#10;                      &lt;/&gt;&#10;                    ) : (&#10;                      &lt;&gt;&#10;                        &lt;i className=&quot;fas fa-lock mr-2&quot;&gt;&lt;/i&gt;&#10;                        Complete Payment - {formatPrice(total)}&#10;                      &lt;/&gt;&#10;                    )}&#10;                  &lt;/button&gt;&#10;&#10;                  {/* Agreement Reminder */}&#10;                  {!agreementChecked &amp;&amp; (&#10;                    &lt;div className=&quot;p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-700 rounded-lg&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center text-red-700 dark:text-red-300&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-info-circle mr-2&quot;&gt;&lt;/i&gt;&#10;                        &lt;span className=&quot;text-sm&quot;&gt;&#10;                          You must agree to the Terms &amp; Conditions in the order&#10;                          summary to proceed with payment.&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Enhanced Edit Order Modal */}&#10;      {showEditModal &amp;&amp; (&#10;        &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50&quot;&gt;&#10;          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl w-full max-w-4xl max-h-[90vh] overflow-hidden&quot;&gt;&#10;            {/* Modal Header */}&#10;            &lt;div className=&quot;flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-600&quot;&gt;&#10;              &lt;h3 className=&quot;text-2xl font-bold text-gray-900 dark:text-white flex items-center&quot;&gt;&#10;                &lt;i className=&quot;fas fa-edit mr-3 text-blue-600&quot;&gt;&lt;/i&gt;&#10;                Edit Order Details&#10;              &lt;/h3&gt;&#10;              &lt;button&#10;                onClick={() =&gt; setShowEditModal(false)}&#10;                className=&quot;p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition&quot;&#10;              &gt;&#10;                &lt;i className=&quot;fas fa-times text-xl&quot;&gt;&lt;/i&gt;&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Modal Body */}&#10;            &lt;div className=&quot;p-6 overflow-y-auto max-h-96&quot;&gt;&#10;              &lt;div className=&quot;space-y-6&quot;&gt;&#10;                {cartItems.map((item) =&gt; {&#10;                  const quantity =&#10;                    editQuantities[item.id || item._id] || item.quantity;&#10;                  const itemTotal = (item.price || 0) * quantity;&#10;&#10;                  return (&#10;                    &lt;div&#10;                      key={item.id || item._id}&#10;                      className=&quot;group relative bg-gray-50 dark:bg-gray-700 rounded-xl p-6 hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200&quot;&#10;                    &gt;&#10;                      {/* Remove Button */}&#10;                      &lt;button&#10;                        onClick={() =&gt; handleRemoveItem(item.id || item._id)}&#10;                        className=&quot;absolute top-4 right-4 w-8 h-8 bg-red-100 text-red-600 rounded-full flex items-center justify-center hover:bg-red-200 opacity-0 group-hover:opacity-100 transition-opacity&quot;&#10;                        title=&quot;Remove item&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-trash text-sm&quot;&gt;&lt;/i&gt;&#10;                      &lt;/button&gt;&#10;&#10;                      &lt;div className=&quot;flex items-start space-x-6&quot;&gt;&#10;                        {/* Product Image */}&#10;                        &lt;div className=&quot;relative flex-shrink-0&quot;&gt;&#10;                          &lt;img&#10;                            src={&#10;                              item.images?.[0] ||&#10;                              item.image ||&#10;                              &quot;https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=120&amp;h=120&amp;fit=crop&quot;&#10;                            }&#10;                            alt={item.name}&#10;                            className=&quot;w-24 h-24 rounded-xl object-cover shadow-md&quot;&#10;                          /&gt;&#10;                          &lt;div className=&quot;absolute -top-2 -right-2 bg-green-600 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center font-bold&quot;&gt;&#10;                            {quantity}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Product Details */}&#10;                        &lt;div className=&quot;flex-1 min-w-0&quot;&gt;&#10;                          &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                            {item.name}&#10;                          &lt;/h4&gt;&#10;&#10;                          &lt;div className=&quot;space-y-2 text-sm&quot;&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-user-tie mr-2&quot;&gt;&lt;/i&gt;&#10;                              Farmer:{&quot; &quot;}&#10;                              {typeof item.farmer === &quot;object&quot; &amp;&amp;&#10;                              item.farmer?.name&#10;                                ? item.farmer.name&#10;                                : typeof item.farmer === &quot;string&quot;&#10;                                  ? item.farmer&#10;                                  : &quot;Local Farmer&quot;}&#10;                            &lt;/p&gt;&#10;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 flex items-center&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-tag mr-2&quot;&gt;&lt;/i&gt;&#10;                              Unit Price: {formatPrice(&#10;                                item.price || 0,&#10;                              )} per {item.unit || &quot;kg&quot;}&#10;                            &lt;/p&gt;&#10;&#10;                            {item.description &amp;&amp; (&#10;                              &lt;p className=&quot;text-gray-600 dark:text-gray-400 flex items-start&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-info-circle mr-2 mt-0.5&quot;&gt;&lt;/i&gt;&#10;                                {item.description.length &gt; 100&#10;                                  ? `${item.description.substring(0, 100)}...`&#10;                                  : item.description}&#10;                              &lt;/p&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        {/* Quantity Controls &amp; Price */}&#10;                        &lt;div className=&quot;flex flex-col items-end space-y-4&quot;&gt;&#10;                          {/* Price Display */}&#10;                          &lt;div className=&quot;text-right&quot;&gt;&#10;                            &lt;div className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                              {formatPrice(itemTotal)}&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                              {quantity} Ã {formatPrice(item.price || 0)}&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          {/* Quantity Controls */}&#10;                          &lt;div className=&quot;flex items-center space-x-4 bg-white dark:bg-gray-800 rounded-xl p-3 shadow-sm&quot;&gt;&#10;                            &lt;button&#10;                              onClick={() =&gt;&#10;                                handleEditQuantity(&#10;                                  item.id || item._id,&#10;                                  Math.max(1, quantity - 1),&#10;                                )&#10;                              }&#10;                              disabled={quantity &lt;= 1}&#10;                              className=&quot;w-10 h-10 rounded-full bg-red-100 text-red-600 hover:bg-red-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center transition&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-minus&quot;&gt;&lt;/i&gt;&#10;                            &lt;/button&gt;&#10;&#10;                            &lt;div className=&quot;text-center min-w-[3rem]&quot;&gt;&#10;                              &lt;div className=&quot;text-xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                                {quantity}&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                {item.unit || &quot;kg&quot;}&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;button&#10;                              onClick={() =&gt;&#10;                                handleEditQuantity(&#10;                                  item.id || item._id,&#10;                                  quantity + 1,&#10;                                )&#10;                              }&#10;                              disabled={quantity &gt;= (item.stock || 999)}&#10;                              className=&quot;w-10 h-10 rounded-full bg-green-100 text-green-600 hover:bg-green-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center transition&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-plus&quot;&gt;&lt;/i&gt;&#10;                            &lt;/button&gt;&#10;                          &lt;/div&gt;&#10;&#10;                          {/* Stock Status */}&#10;                          {item.stock &amp;&amp; (&#10;                            &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400 text-right&quot;&gt;&#10;                              {item.stock} {item.unit || &quot;kg&quot;} available&#10;                            &lt;/div&gt;&#10;                          )}&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Quick Actions */}&#10;                      &lt;div className=&quot;mt-4 pt-4 border-t border-gray-200 dark:border-gray-600 flex justify-between items-center&quot;&gt;&#10;                        &lt;div className=&quot;flex space-x-2&quot;&gt;&#10;                          {[1, 2, 5, 10].map((preset) =&gt; (&#10;                            &lt;button&#10;                              key={preset}&#10;                              onClick={() =&gt;&#10;                                handleEditQuantity(item.id || item._id, preset)&#10;                              }&#10;                              className=&quot;px-3 py-1 text-xs bg-blue-100 text-blue-600 rounded-full hover:bg-blue-200 transition&quot;&#10;                            &gt;&#10;                              {preset} {item.unit || &quot;kg&quot;}&#10;                            &lt;/button&gt;&#10;                          ))}&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;button&#10;                          onClick={() =&gt; handleRemoveItem(item.id || item._id)}&#10;                          className=&quot;text-sm text-red-600 hover:text-red-800 flex items-center transition&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-trash mr-1&quot;&gt;&lt;/i&gt;&#10;                          Remove&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  );&#10;                })}&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Modal Footer */}&#10;            &lt;div className=&quot;border-t border-gray-200 dark:border-gray-600 p-6 bg-gray-50 dark:bg-gray-700&quot;&gt;&#10;              {/* Updated Total */}&#10;              &lt;div className=&quot;flex justify-between items-center mb-4&quot;&gt;&#10;                &lt;span className=&quot;text-lg font-medium text-gray-900 dark:text-white&quot;&gt;&#10;                  Updated Subtotal:&#10;                &lt;/span&gt;&#10;                &lt;span className=&quot;text-2xl font-bold text-green-600&quot;&gt;&#10;                  {formatPrice(calculateSubtotal())}&#10;                &lt;/span&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Action Buttons */}&#10;              &lt;div className=&quot;flex space-x-4&quot;&gt;&#10;                &lt;button&#10;                  onClick={() =&gt; setShowEditModal(false)}&#10;                  className=&quot;flex-1 px-6 py-3 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-600 font-medium transition&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-times mr-2&quot;&gt;&lt;/i&gt;&#10;                  Cancel&#10;                &lt;/button&gt;&#10;&#10;                &lt;button&#10;                  onClick={() =&gt; {&#10;                    setShowEditModal(false);&#10;                    addNotification(&quot;Order updated successfully!&quot;, &quot;success&quot;);&#10;                  }}&#10;                  className=&quot;flex-1 px-6 py-3 bg-green-600 hover:bg-green-700 text-white rounded-xl font-medium transition transform hover:scale-105&quot;&#10;                &gt;&#10;                  &lt;i className=&quot;fas fa-check mr-2&quot;&gt;&lt;/i&gt;&#10;                  Save Changes&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>