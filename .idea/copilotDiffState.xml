<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/api/products/[id]/reviews/route.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/api/products/[id]/reviews/route.js" />
              <option name="originalContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;import { ObjectId } from &quot;mongodb&quot;;&#10;&#10;export async function GET(request, { params }) {&#10;  try {&#10;    const { id } = params; // product ID&#10;    const { searchParams } = new URL(request.url);&#10;    const page = parseInt(searchParams.get(&quot;page&quot;)) || 1;&#10;    const limit = parseInt(searchParams.get(&quot;limit&quot;)) || 5;&#10;    const userId = searchParams.get(&quot;userId&quot;);&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Check if reviews are stored in the product document itself&#10;    const product = await db&#10;      .collection(&quot;products&quot;)&#10;      .findOne(&#10;        { _id: new ObjectId(id) },&#10;        { projection: { reviews: 1, ratings: 1, comments: 1 } },&#10;      );&#10;&#10;    console.log(&#10;      &quot;DEBUG - Product with reviews:&quot;,&#10;      JSON.stringify(product, null, 2),&#10;    );&#10;&#10;    let reviews = [];&#10;    let totalReviews = 0;&#10;&#10;    if (product &amp;&amp; product.reviews &amp;&amp; Array.isArray(product.reviews)) {&#10;      // Reviews are stored in the product document&#10;      reviews = product.reviews;&#10;      totalReviews = reviews.length;&#10;      console.log(&quot;DEBUG - Found reviews in product document:&quot;, totalReviews);&#10;      console.log(&#10;        &quot;DEBUG - Raw reviews structure:&quot;,&#10;        JSON.stringify(reviews, null, 2),&#10;      );&#10;    } else {&#10;      // Try the separate reviews collection with different query formats&#10;      const possibleQueries = [&#10;        { productId: id },&#10;        { productId: new ObjectId(id) },&#10;        { product_id: id },&#10;        { &quot;product._id&quot;: new ObjectId(id) },&#10;      ];&#10;&#10;      for (const query of possibleQueries) {&#10;        try {&#10;          const foundReviews = await db&#10;            .collection(&quot;reviews&quot;)&#10;            .find(query)&#10;            .toArray();&#10;          if (foundReviews.length &gt; 0) {&#10;            reviews = foundReviews;&#10;            totalReviews = foundReviews.length;&#10;            console.log(&#10;              &quot;DEBUG - Found reviews with query:&quot;,&#10;              JSON.stringify(query),&#10;            );&#10;            break;&#10;          }&#10;        } catch (error) {&#10;          console.log(&quot;Query failed:&quot;, error.message);&#10;        }&#10;      }&#10;    }&#10;&#10;    // If still no reviews found, check all documents in reviews collection&#10;    if (reviews.length === 0) {&#10;      const allReviews = await db.collection(&quot;reviews&quot;).find({}).toArray();&#10;      console.log(&quot;DEBUG - All reviews in collection:&quot;, allReviews.length);&#10;      if (allReviews.length &gt; 0) {&#10;        console.log(&#10;          &quot;DEBUG - Sample review structure:&quot;,&#10;          JSON.stringify(allReviews[0], null, 2),&#10;        );&#10;      }&#10;    }&#10;&#10;    // Normalize the review format with better field checking&#10;    const normalizedReviews = await Promise.all(&#10;      reviews.map(async (review) =&gt; {&#10;        // Only use reviewer field since that's the standard now&#10;        let userName = review.reviewer || &quot;Anonymous&quot;;&#10;&#10;        // If no reviewer name found but there's a userId, try to get the user's name&#10;        if (!userName &amp;&amp; review.userId) {&#10;          try {&#10;            const user = await db&#10;              .collection(&quot;users&quot;)&#10;              .findOne({ _id: new ObjectId(review.userId) });&#10;            if (user) {&#10;              userName =&#10;                user.name ||&#10;                user.firstName ||&#10;                user.username ||&#10;                user.email?.split(&quot;@&quot;)[0];&#10;            }&#10;          } catch (error) {&#10;            console.log(&quot;Error fetching user for review:&quot;, error.message);&#10;          }&#10;        }&#10;&#10;        userName = userName || &quot;Anonymous&quot;;&#10;&#10;        console.log(&quot;DEBUG - Review normalization:&quot;, {&#10;          originalReview: review,&#10;          extractedName: userName,&#10;          foundUserData: !!userName &amp;&amp; userName !== &quot;Anonymous&quot;,&#10;        });&#10;&#10;        return {&#10;          _id: review._id || review.reviewId || new ObjectId(),&#10;          rating: review.rating || 5,&#10;          comment: review.comment || review.text || review.content || &quot;&quot;,&#10;          createdAt:&#10;            review.createdAt || review.date || review.timestamp || new Date(),&#10;          user: {&#10;            name: userName,&#10;            email: review.userEmail || review.user?.email || review.email || &quot;&quot;,&#10;          },&#10;          customerName: userName,&#10;          userName: userName, // Add this for consistency&#10;          reviewer: userName, // Keep this for compatibility&#10;        };&#10;      }),&#10;    );&#10;&#10;    // Apply pagination&#10;    const startIndex = (page - 1) * limit;&#10;    const paginatedReviews = normalizedReviews.slice(&#10;      startIndex,&#10;      startIndex + limit,&#10;    );&#10;    const hasMore = totalReviews &gt; page * limit;&#10;&#10;    return NextResponse.json({&#10;      reviews: paginatedReviews,&#10;      pagination: {&#10;        currentPage: page,&#10;        totalPages: Math.ceil(totalReviews / limit),&#10;        totalReviews,&#10;        hasMore,&#10;      },&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Error fetching reviews:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to fetch reviews&quot; },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;export async function POST(request, { params }) {&#10;  try {&#10;    const { id } = params; // product ID&#10;    const { rating, comment, userId } = await request.json();&#10;&#10;    if (!rating || !comment || !userId) {&#10;      return NextResponse.json(&#10;        { error: &quot;Rating, comment, and user ID are required&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    if (rating &lt; 1 || rating &gt; 5) {&#10;      return NextResponse.json(&#10;        { error: &quot;Rating must be between 1 and 5&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Check if user has purchased this product (optional for demo purposes)&#10;    const hasPurchased = await db.collection(&quot;orders&quot;).findOne({&#10;      userId,&#10;      &quot;items.productId&quot;: id,&#10;      status: { $in: [&quot;delivered&quot;, &quot;confirmed&quot;, &quot;pending&quot;] }, // Allow reviews for any order status&#10;    });&#10;&#10;    // For demo purposes, allow reviews even without purchase (remove this in production)&#10;    const allowReviewWithoutPurchase = true;&#10;&#10;    if (!hasPurchased &amp;&amp; !allowReviewWithoutPurchase) {&#10;      return NextResponse.json(&#10;        { error: &quot;You can only review products you have purchased&quot; },&#10;        { status: 403 },&#10;      );&#10;    }&#10;&#10;    // Check if user has already reviewed this product&#10;    const existingReview = await db.collection(&quot;reviews&quot;).findOne({&#10;      productId: id,&#10;      userId,&#10;    });&#10;&#10;    if (existingReview) {&#10;      return NextResponse.json(&#10;        { error: &quot;You have already reviewed this product&quot; },&#10;        { status: 409 },&#10;      );&#10;    }&#10;&#10;    // Create review&#10;    const review = {&#10;      productId: id,&#10;      userId,&#10;      rating: parseInt(rating),&#10;      comment,&#10;      createdAt: new Date(),&#10;      updatedAt: new Date(),&#10;    };&#10;&#10;    const result = await db.collection(&quot;reviews&quot;).insertOne(review);&#10;&#10;    // Update product average rating&#10;    const allReviews = await db&#10;      .collection(&quot;reviews&quot;)&#10;      .find({ productId: id })&#10;      .toArray();&#10;    const averageRating =&#10;      allReviews.reduce((sum, review) =&gt; sum + review.rating, 0) /&#10;      allReviews.length;&#10;&#10;    await db.collection(&quot;products&quot;).updateOne(&#10;      { _id: new ObjectId(id) },&#10;      {&#10;        $set: {&#10;          averageRating: Math.round(averageRating * 10) / 10,&#10;          totalRatings: allReviews.length,&#10;        },&#10;      },&#10;    );&#10;&#10;    return NextResponse.json({&#10;      success: true,&#10;      reviewId: result.insertedId,&#10;      averageRating: Math.round(averageRating * 10) / 10,&#10;      totalRatings: allReviews.length,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Error creating review:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to create review&quot; },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;" />
              <option name="updatedContent" value="import { NextResponse } from &quot;next/server&quot;;&#10;import clientPromise from &quot;@/lib/mongodb&quot;;&#10;import { ObjectId } from &quot;mongodb&quot;;&#10;&#10;export async function GET(request, { params }) {&#10;  try {&#10;    const { id } = params; // product ID&#10;    const { searchParams } = new URL(request.url);&#10;    const page = parseInt(searchParams.get(&quot;page&quot;)) || 1;&#10;    const limit = parseInt(searchParams.get(&quot;limit&quot;)) || 5;&#10;    const userId = searchParams.get(&quot;userId&quot;);&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Check if reviews are stored in the product document itself&#10;    const product = await db&#10;      .collection(&quot;products&quot;)&#10;      .findOne(&#10;        { _id: new ObjectId(id) },&#10;        { projection: { reviews: 1, ratings: 1, comments: 1 } },&#10;      );&#10;&#10;    console.log(&#10;      &quot;DEBUG - Product with reviews:&quot;,&#10;      JSON.stringify(product, null, 2),&#10;    );&#10;&#10;    let reviews = [];&#10;    let totalReviews = 0;&#10;&#10;    if (product &amp;&amp; product.reviews &amp;&amp; Array.isArray(product.reviews)) {&#10;      // Reviews are stored in the product document&#10;      reviews = product.reviews;&#10;      totalReviews = reviews.length;&#10;      console.log(&quot;DEBUG - Found reviews in product document:&quot;, totalReviews);&#10;      console.log(&#10;        &quot;DEBUG - Raw reviews structure:&quot;,&#10;        JSON.stringify(reviews, null, 2),&#10;      );&#10;    } else {&#10;      // Try the separate reviews collection with different query formats&#10;      const possibleQueries = [&#10;        { productId: id },&#10;        { productId: new ObjectId(id) },&#10;        { product_id: id },&#10;        { &quot;product._id&quot;: new ObjectId(id) },&#10;      ];&#10;&#10;      for (const query of possibleQueries) {&#10;        try {&#10;          const foundReviews = await db&#10;            .collection(&quot;reviews&quot;)&#10;            .find(query)&#10;            .toArray();&#10;          if (foundReviews.length &gt; 0) {&#10;            reviews = foundReviews;&#10;            totalReviews = foundReviews.length;&#10;            console.log(&#10;              &quot;DEBUG - Found reviews with query:&quot;,&#10;              JSON.stringify(query),&#10;            );&#10;            break;&#10;          }&#10;        } catch (error) {&#10;          console.log(&quot;Query failed:&quot;, error.message);&#10;        }&#10;      }&#10;    }&#10;&#10;    // If still no reviews found, check all documents in reviews collection&#10;    if (reviews.length === 0) {&#10;      const allReviews = await db.collection(&quot;reviews&quot;).find({}).toArray();&#10;      console.log(&quot;DEBUG - All reviews in collection:&quot;, allReviews.length);&#10;      if (allReviews.length &gt; 0) {&#10;        console.log(&#10;          &quot;DEBUG - Sample review structure:&quot;,&#10;          JSON.stringify(allReviews[0], null, 2),&#10;        );&#10;      }&#10;    }&#10;&#10;    // Normalize the review format with better field checking&#10;    const normalizedReviews = await Promise.all(&#10;      reviews.map(async (review) =&gt; {&#10;        // Only use reviewer field since that's the standard now&#10;        let userName = review.reviewer || &quot;Anonymous&quot;;&#10;&#10;        console.log(&quot;DEBUG - Review normalization:&quot;, {&#10;          originalReview: review,&#10;          extractedName: userName,&#10;          foundUserData: !!userName &amp;&amp; userName !== &quot;Anonymous&quot;,&#10;        });&#10;&#10;        return {&#10;          _id: review._id || review.reviewId || new ObjectId(),&#10;          rating: review.rating || 5,&#10;          comment: review.comment || review.text || review.content || &quot;&quot;,&#10;          createdAt:&#10;            review.createdAt || review.date || review.timestamp || new Date(),&#10;          reviewer: userName, // Only keep reviewer field&#10;        };&#10;      }),&#10;    );&#10;&#10;    // Apply pagination&#10;    const startIndex = (page - 1) * limit;&#10;    const paginatedReviews = normalizedReviews.slice(&#10;      startIndex,&#10;      startIndex + limit,&#10;    );&#10;    const hasMore = totalReviews &gt; page * limit;&#10;&#10;    return NextResponse.json({&#10;      reviews: paginatedReviews,&#10;      pagination: {&#10;        currentPage: page,&#10;        totalPages: Math.ceil(totalReviews / limit),&#10;        totalReviews,&#10;        hasMore,&#10;      },&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Error fetching reviews:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to fetch reviews&quot; },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}&#10;&#10;export async function POST(request, { params }) {&#10;  try {&#10;    const { id } = params; // product ID&#10;    const { rating, comment, userId } = await request.json();&#10;&#10;    if (!rating || !comment || !userId) {&#10;      return NextResponse.json(&#10;        { error: &quot;Rating, comment, and user ID are required&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    if (rating &lt; 1 || rating &gt; 5) {&#10;      return NextResponse.json(&#10;        { error: &quot;Rating must be between 1 and 5&quot; },&#10;        { status: 400 },&#10;      );&#10;    }&#10;&#10;    const client = await clientPromise;&#10;    const db = client.db(&quot;farmfresh&quot;);&#10;&#10;    // Check if user has purchased this product (optional for demo purposes)&#10;    const hasPurchased = await db.collection(&quot;orders&quot;).findOne({&#10;      userId,&#10;      &quot;items.productId&quot;: id,&#10;      status: { $in: [&quot;delivered&quot;, &quot;confirmed&quot;, &quot;pending&quot;] }, // Allow reviews for any order status&#10;    });&#10;&#10;    // For demo purposes, allow reviews even without purchase (remove this in production)&#10;    const allowReviewWithoutPurchase = true;&#10;&#10;    if (!hasPurchased &amp;&amp; !allowReviewWithoutPurchase) {&#10;      return NextResponse.json(&#10;        { error: &quot;You can only review products you have purchased&quot; },&#10;        { status: 403 },&#10;      );&#10;    }&#10;&#10;    // Check if user has already reviewed this product&#10;    const existingReview = await db.collection(&quot;reviews&quot;).findOne({&#10;      productId: id,&#10;      userId,&#10;    });&#10;&#10;    if (existingReview) {&#10;      return NextResponse.json(&#10;        { error: &quot;You have already reviewed this product&quot; },&#10;        { status: 409 },&#10;      );&#10;    }&#10;&#10;    // Create review&#10;    const review = {&#10;      productId: id,&#10;      userId,&#10;      rating: parseInt(rating),&#10;      comment,&#10;      createdAt: new Date(),&#10;      updatedAt: new Date(),&#10;    };&#10;&#10;    const result = await db.collection(&quot;reviews&quot;).insertOne(review);&#10;&#10;    // Update product average rating&#10;    const allReviews = await db&#10;      .collection(&quot;reviews&quot;)&#10;      .find({ productId: id })&#10;      .toArray();&#10;    const averageRating =&#10;      allReviews.reduce((sum, review) =&gt; sum + review.rating, 0) /&#10;      allReviews.length;&#10;&#10;    await db.collection(&quot;products&quot;).updateOne(&#10;      { _id: new ObjectId(id) },&#10;      {&#10;        $set: {&#10;          averageRating: Math.round(averageRating * 10) / 10,&#10;          totalRatings: allReviews.length,&#10;        },&#10;      },&#10;    );&#10;&#10;    return NextResponse.json({&#10;      success: true,&#10;      reviewId: result.insertedId,&#10;      averageRating: Math.round(averageRating * 10) / 10,&#10;      totalRatings: allReviews.length,&#10;    });&#10;  } catch (error) {&#10;    console.error(&quot;Error creating review:&quot;, error);&#10;    return NextResponse.json(&#10;      { error: &quot;Failed to create review&quot; },&#10;      { status: 500 },&#10;    );&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/details/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/details/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import Link from &quot;next/link&quot;;&#10;import Image from &quot;next/image&quot;;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { useSearchParams, useRouter } from &quot;next/navigation&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useCart } from &quot;@/contexts/CartContext&quot;;&#10;import { useFavorites } from &quot;@/contexts/FavoritesContext&quot;;&#10;import ProductCard from &quot;@/components/ProductCard&quot;;&#10;import StarRating from &quot;@/components/StarRating&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;import RecentOrdersSection from &quot;@/components/RecentOrdersSection&quot;;&#10;import FarmerProfileView from &quot;@/components/FarmerProfileView&quot;;&#10;import useProductData from &quot;@/hooks/useProductData&quot;;&#10;import useOwnership from &quot;@/hooks/useOwnership&quot;;&#10;import useReviews from &quot;@/hooks/useReviews&quot;;&#10;&#10;import Loading from &quot;@/components/Loading&quot;;&#10;import NotFound from &quot;@/components/NotFound&quot;;&#10;&#10;export default function ProductDetails() {&#10;  const searchParams = useSearchParams();&#10;  const router = useRouter();&#10;  const productId = searchParams.get(&quot;id&quot;);&#10;  const viewMode = searchParams.get(&quot;view&quot;);&#10;  const { data: session } = useSession();&#10;  const { addToCart } = useCart();&#10;  const { addToFavorites, removeFromFavorites, isProductFavorited } =&#10;    useFavorites();&#10;&#10;  // Custom hooks&#10;  const {&#10;    product,&#10;    farmer,&#10;    farmerProducts,&#10;    responseType,&#10;    relatedProducts,&#10;    loading,&#10;    fetchProductDetails,&#10;  } = useProductData(productId);&#10;&#10;  const { reviews, hasMoreReviews, fetchReviews, reviewsPage } = useReviews(&#10;    productId,&#10;    responseType,&#10;  );&#10;  const isOwner = useOwnership(product, session, viewMode);&#10;&#10;  // State management&#10;  const [selectedImage, setSelectedImage] = useState(0);&#10;  const [quantity, setQuantity] = useState(1);&#10;  const [activeTab, setActiveTab] = useState(&quot;description&quot;);&#10;  const [isAddingToCart, setIsAddingToCart] = useState(false);&#10;  const [isFavorite, setIsFavorite] = useState(false);&#10;&#10;  // Review form state&#10;  const [showReviewForm, setShowReviewForm] = useState(false);&#10;  const [reviewForm, setReviewForm] = useState({ rating: 5, comment: &quot;&quot; });&#10;  const [isSubmittingReview, setIsSubmittingReview] = useState(false);&#10;&#10;  // Farmer-specific states&#10;  const [stockUpdate, setStockUpdate] = useState(&quot;&quot;);&#10;  const [priceUpdate, setPriceUpdate] = useState(&quot;&quot;);&#10;  const [isUpdating, setIsUpdating] = useState(false);&#10;  const [recentOrders, setRecentOrders] = useState([]);&#10;  const [loadingOrders, setLoadingOrders] = useState(false);&#10;&#10;  // Effects&#10;  useEffect(() =&gt; {&#10;    if (productId) {&#10;      fetchProductDetails();&#10;    }&#10;  }, [productId]);&#10;&#10;  useEffect(() =&gt; {&#10;    if (productId &amp;&amp; isOwner &amp;&amp; viewMode !== &quot;customer&quot;) {&#10;      const interval = setInterval(() =&gt; {&#10;        fetchProductDetails();&#10;      }, 30000);&#10;      return () =&gt; clearInterval(interval);&#10;    }&#10;  }, [productId, isOwner, viewMode]);&#10;&#10;  useEffect(() =&gt; {&#10;    if (productId &amp;&amp; isOwner &amp;&amp; viewMode !== &quot;customer&quot;) {&#10;      fetchRecentOrders();&#10;    }&#10;  }, [productId, isOwner, viewMode]);&#10;&#10;  // Check if product is favorited when productId changes&#10;  useEffect(() =&gt; {&#10;    if (productId) {&#10;      setIsFavorite(isProductFavorited(productId));&#10;    }&#10;  }, [productId, isProductFavorited]);&#10;&#10;  // API calls&#10;  const fetchRecentOrders = async () =&gt; {&#10;    try {&#10;      setLoadingOrders(true);&#10;      const response = await fetch(&#10;        `/api/orders?productId=${productId}&amp;limit=5`,&#10;      );&#10;&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;        setRecentOrders(data.orders || []);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching recent orders:&quot;, error);&#10;    } finally {&#10;      setLoadingOrders(false);&#10;    }&#10;  };&#10;&#10;  // Event handlers&#10;  const handleAddToCart = async () =&gt; {&#10;    if (!session?.user) {&#10;      window.location.href = &quot;/login&quot;;&#10;      return;&#10;    }&#10;&#10;    setIsAddingToCart(true);&#10;    try {&#10;      const item = {&#10;        productId: productId,&#10;        id: productId, // Add id field for cart context&#10;        name: product.name,&#10;        price: product.price,&#10;        quantity: quantity,&#10;        stock: product.stock, // Include stock information&#10;        image:&#10;          product.image ||&#10;          (product.images &amp;&amp; product.images[0]) ||&#10;          &quot;/placeholder-image.jpg&quot;,&#10;        unit: product.unit || &quot;kg&quot;,&#10;        farmerId: product.farmerId,&#10;        farmerName:&#10;          product.farmer?.name || product.farmer?.farmName || &quot;Unknown Farmer&quot;,&#10;      };&#10;&#10;      await addToCart(item, quantity);&#10;      alert(&quot;Product added to cart successfully!&quot;);&#10;    } catch (error) {&#10;      console.error(&quot;Error adding to cart:&quot;, error);&#10;      // Show user-friendly error message for stock issues&#10;      if (&#10;        error.message.includes(&quot;Only&quot;) &amp;&amp;&#10;        error.message.includes(&quot;available in stock&quot;)&#10;      ) {&#10;        alert(error.message);&#10;      } else {&#10;        alert(&quot;Failed to add product to cart. Please try again.&quot;);&#10;      }&#10;    } finally {&#10;      setIsAddingToCart(false);&#10;    }&#10;  };&#10;&#10;  const handleBuyNow = async () =&gt; {&#10;    if (!session?.user) {&#10;      window.location.href = &quot;/login&quot;;&#10;      return;&#10;    }&#10;&#10;    setIsAddingToCart(true);&#10;    try {&#10;      // Create a product object that matches the CartContext expectations&#10;      const productForCart = {&#10;        id: productId,&#10;        name: product.name,&#10;        price: product.price,&#10;        image:&#10;          product.image ||&#10;          (product.images &amp;&amp; product.images[0]) ||&#10;          &quot;/placeholder-image.jpg&quot;,&#10;        unit: product.unit || &quot;kg&quot;,&#10;        farmerId: product.farmerId,&#10;        farmer: {&#10;          id: product.farmerId,&#10;          _id: product.farmerId,&#10;          email: product.farmer?.email,&#10;          name:&#10;            product.farmer?.name ||&#10;            product.farmer?.farmName ||&#10;            &quot;Unknown Farmer&quot;,&#10;        },&#10;        farmerName:&#10;          product.farmer?.name || product.farmer?.farmName || &quot;Unknown Farmer&quot;,&#10;        stock: product.stock || 0,&#10;      };&#10;&#10;      // Use CartContext's addToCart function&#10;      await addToCart(productForCart, quantity);&#10;&#10;      // Immediately redirect to payment - let the payment page handle the cart state&#10;      // The payment page should wait for cart loading to complete before checking if empty&#10;      router.push(&quot;/payment&quot;);&#10;    } catch (error) {&#10;      console.error(&quot;Error processing buy now:&quot;, error);&#10;      alert(error.message || &quot;Failed to process order. Please try again.&quot;);&#10;    } finally {&#10;      setIsAddingToCart(false);&#10;    }&#10;  };&#10;&#10;  const handleFavoriteToggle = async () =&gt; {&#10;    if (!session?.user) {&#10;      window.location.href = &quot;/login&quot;;&#10;      return;&#10;    }&#10;&#10;    try {&#10;      if (isFavorite) {&#10;        // Remove from favorites&#10;        const success = await removeFromFavorites(productId);&#10;        if (success) {&#10;          setIsFavorite(false);&#10;          alert(&quot;Product removed from favorites!&quot;);&#10;        } else {&#10;          alert(&quot;Failed to remove from favorites. Please try again.&quot;);&#10;        }&#10;      } else {&#10;        // Add to favorites&#10;        const success = await addToFavorites(productId);&#10;        if (success) {&#10;          setIsFavorite(true);&#10;          alert(&quot;Product added to favorites!&quot;);&#10;        } else {&#10;          alert(&quot;Failed to add to favorites. Please try again.&quot;);&#10;        }&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error toggling favorite:&quot;, error);&#10;      alert(&quot;Failed to update favorites. Please try again.&quot;);&#10;    }&#10;  };&#10;&#10;  const handleSubmitReview = async (e) =&gt; {&#10;    e.preventDefault();&#10;    if (!session) {&#10;      alert(&quot;Please login to submit a review&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsSubmittingReview(true);&#10;    try {&#10;      // Include userId in the review submission&#10;      const reviewData = {&#10;        ...reviewForm,&#10;        userId:&#10;          session.user.id ||&#10;          session.user._id ||&#10;          session.user.userId ||&#10;          session.user.email,&#10;      };&#10;&#10;      const response = await fetch(`/api/products/${productId}/reviews`, {&#10;        method: &quot;POST&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify(reviewData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        setShowReviewForm(false);&#10;        setReviewForm({ rating: 5, comment: &quot;&quot; });&#10;        fetchReviews();&#10;        fetchProductDetails();&#10;        alert(&quot;Review submitted successfully!&quot;);&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to submit review&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error submitting review:&quot;, error);&#10;      alert(&quot;Failed to submit review&quot;);&#10;    } finally {&#10;      setIsSubmittingReview(false);&#10;    }&#10;  };&#10;&#10;  const loadMoreReviews = () =&gt; {&#10;    fetchReviews(reviewsPage + 1, true);&#10;  };&#10;&#10;  const handleUpdateProduct = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    if (!stockUpdate &amp;&amp; !priceUpdate) {&#10;      alert(&quot;Please enter a value to update&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const updateData = {};&#10;&#10;      if (stockUpdate &amp;&amp; stockUpdate.trim() !== &quot;&quot;) {&#10;        const stockValue = parseInt(stockUpdate);&#10;        if (isNaN(stockValue) || stockValue &lt; 0) {&#10;          alert(&quot;Please enter a valid stock number&quot;);&#10;          setIsUpdating(false);&#10;          return;&#10;        }&#10;        updateData.stock = stockValue;&#10;      }&#10;&#10;      if (priceUpdate &amp;&amp; priceUpdate.trim() !== &quot;&quot;) {&#10;        const priceValue = parseFloat(priceUpdate);&#10;        if (isNaN(priceValue) || priceValue &lt;= 0) {&#10;          alert(&quot;Please enter a valid price&quot;);&#10;          setIsUpdating(false);&#10;          return;&#10;        }&#10;        updateData.price = priceValue;&#10;      }&#10;&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify(updateData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Product updated successfully!&quot;);&#10;        fetchProductDetails();&#10;        setStockUpdate(&quot;&quot;);&#10;        setPriceUpdate(&quot;&quot;);&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to update product&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error updating product:&quot;, error);&#10;      alert(&quot;Failed to update product. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleToggleStatus = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    const newStatus = product.status === &quot;active&quot; ? &quot;inactive&quot; : &quot;active&quot;;&#10;    const actionText = newStatus === &quot;active&quot; ? &quot;activate&quot; : &quot;deactivate&quot;;&#10;&#10;    if (!confirm(`Are you sure you want to ${actionText} this product?`)) {&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify({ status: newStatus }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(`Product ${actionText}d successfully!`);&#10;        fetchProductDetails();&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || `Failed to ${actionText} product`);&#10;      }&#10;    } catch (error) {&#10;      console.error(`Error ${actionText}ing product:`, error);&#10;      alert(`Failed to ${actionText} product. Please try again.`);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleDeleteProduct = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    if (&#10;      !confirm(&#10;        &quot;⚠️ Are you sure you want to delete this product?\n\nThis action cannot be undone and will remove:\n• The product listing\n• All associated data\n• Product from any pending orders&quot;,&#10;      )&#10;    ) {&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;DELETE&quot;,&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Product deleted successfully!&quot;);&#10;        window.location.href = &quot;/manage&quot;;&#10;      } else {&#10;        const error = await response.json();&#10;        if (response.status === 409) {&#10;          alert(&#10;            &quot;❌ Cannot Delete Product\n\nThis product has pending orders and cannot be deleted.\nPlease wait for all orders to be completed or cancelled before deleting this product.\n\nYou can temporarily deactivate the product instead.&quot;,&#10;          );&#10;        } else {&#10;          alert(error.error || &quot;Failed to delete product&quot;);&#10;        }&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error deleting product:&quot;, error);&#10;      alert(&quot;Failed to delete product. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleAddImages = () =&gt; {&#10;    router.push(`/create?edit=${productId}`);&#10;  };&#10;&#10;  // Helper function to get all images&#10;  const getAllImages = () =&gt; {&#10;    const allImages = [];&#10;    if (product?.image) {&#10;      allImages.push(product.image);&#10;    }&#10;    if (product?.images &amp;&amp; product.images.length &gt; 0) {&#10;      allImages.push(...product.images);&#10;    }&#10;    return allImages;&#10;  };&#10;&#10;  // Calculate rating distribution from reviews&#10;  const calculateRatingDistribution = () =&gt; {&#10;    if (!reviews || reviews.length === 0) {&#10;      return { 5: 0, 4: 0, 3: 0, 2: 0, 1: 0 };&#10;    }&#10;&#10;    const distribution = { 5: 0, 4: 0, 3: 0, 2: 0, 1: 0 };&#10;&#10;    reviews.forEach((review) =&gt; {&#10;      const rating = Math.floor(review.rating); // Round down to nearest integer&#10;      if (rating &gt;= 1 &amp;&amp; rating &lt;= 5) {&#10;        distribution[rating]++;&#10;      }&#10;    });&#10;&#10;    return distribution;&#10;  };&#10;&#10;  const getRatingPercentage = (rating, distribution) =&gt; {&#10;    const totalReviews = reviews?.length || 0;&#10;    if (totalReviews === 0) return 0;&#10;    return (distribution[rating] / totalReviews) * 100;&#10;  };&#10;&#10;  // Render components based on state&#10;  if (loading) {&#10;    return &lt;Loading /&gt;;&#10;  }&#10;&#10;  if (responseType === &quot;farmer&quot; &amp;&amp; farmer) {&#10;    return (&#10;      &lt;FarmerProfileView farmer={farmer} farmerProducts={farmerProducts} /&gt;&#10;    );&#10;  }&#10;&#10;  if (!product &amp;&amp; !farmer) {&#10;    return &lt;NotFound responseType={responseType} /&gt;;&#10;  }&#10;&#10;  // Main product details render&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          {/* Farmer Dashboard View */}&#10;          {isOwner &amp;&amp; viewMode !== &quot;customer&quot; ? (&#10;            &lt;&gt;&#10;              {/* Farmer Breadcrumb */}&#10;              &lt;nav className=&quot;mb-8&quot;&gt;&#10;                &lt;ol className=&quot;flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/manage&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-tachometer-alt mr-1&quot;&gt;&lt;/i&gt;&#10;                      Dashboard&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;span className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                      {product.name} - Management&#10;                    &lt;/span&gt;&#10;                  &lt;/li&gt;&#10;                &lt;/ol&gt;&#10;              &lt;/nav&gt;&#10;&#10;              {/* Customer View Notice */}&#10;              &lt;div className=&quot;bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4 mb-6&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-info-circle text-blue-600 dark:text-blue-400 mr-2&quot;&gt;&lt;/i&gt;&#10;                    &lt;span className=&quot;text-blue-800 dark:text-blue-200&quot;&gt;&#10;                      You are viewing this as the product owner.&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;Link&#10;                    href={`/details?id=${productId}&amp;view=customer`}&#10;                    className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-eye mr-1&quot;&gt;&lt;/i&gt;&#10;                    View as Customer&#10;                  &lt;/Link&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Farmer Product Management Header */}&#10;              &lt;div className=&quot;bg-gradient-to-r from-green-600 to-emerald-600 rounded-2xl shadow-lg p-8 mb-8 text-white&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h1 className=&quot;text-3xl font-bold mb-2&quot;&gt;&#10;                      Product Management&#10;                    &lt;/h1&gt;&#10;                    &lt;p className=&quot;text-green-100&quot;&gt;&#10;                      Manage your product listing and inventory&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-right&quot;&gt;&#10;                    &lt;div className=&quot;text-sm text-green-100 mb-1&quot;&gt;&#10;                      Product Status&#10;                    &lt;/div&gt;&#10;                    &lt;div&#10;                      className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${&#10;                        product.status === &quot;active&quot;&#10;                          ? &quot;bg-green-100 text-green-800&quot;&#10;                          : &quot;bg-red-100 text-red-800&quot;&#10;                      }`}&#10;                    &gt;&#10;                      &lt;i&#10;                        className={`fas ${product.status === &quot;active&quot; ? &quot;fa-check-circle&quot; : &quot;fa-times-circle&quot;} mr-1`}&#10;                      &gt;&lt;/i&gt;&#10;                      {product.status === &quot;active&quot; ? &quot;Active&quot; : &quot;Inactive&quot;}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-3 gap-8&quot;&gt;&#10;                {/* Product Images &amp; Info */}&#10;                &lt;div className=&quot;lg:col-span-2 space-y-6&quot;&gt;&#10;                  {/* Image Management */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                        Product Images&#10;                      &lt;/h3&gt;&#10;                      &lt;button&#10;                        onClick={handleAddImages}&#10;                        className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-plus mr-1&quot;&gt;&lt;/i&gt;&#10;                        Add Images&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Current Images Display */}&#10;                    {(() =&gt; {&#10;                      const allImages = getAllImages();&#10;&#10;                      return allImages.length &gt; 0 ? (&#10;                        &lt;div className=&quot;space-y-4&quot;&gt;&#10;                          &lt;div className=&quot;aspect-video max-w-md bg-gray-100 dark:bg-gray-700 rounded-lg overflow-hidden&quot;&gt;&#10;                            &lt;Image&#10;                              src={allImages[selectedImage]}&#10;                              alt={product.name}&#10;                              width={400}&#10;                              height={225}&#10;                              className=&quot;w-full h-full object-cover&quot;&#10;                            /&gt;&#10;                          &lt;/div&gt;&#10;                          {allImages.length &gt; 1 &amp;&amp; (&#10;                            &lt;div className=&quot;grid grid-cols-5 gap-2 max-w-md&quot;&gt;&#10;                              {allImages.map((image, index) =&gt; (&#10;                                &lt;button&#10;                                  key={index}&#10;                                  onClick={() =&gt; setSelectedImage(index)}&#10;                                  className={`aspect-square rounded-lg overflow-hidden border-2 ${&#10;                                    selectedImage === index&#10;                                      ? &quot;border-primary-500&quot;&#10;                                      : &quot;border-gray-300 dark:border-gray-600&quot;&#10;                                  }`}&#10;                                &gt;&#10;                                  &lt;Image&#10;                                    src={image}&#10;                                    alt={`${product.name} ${index + 1}`}&#10;                                    width={80}&#10;                                    height={80}&#10;                                    className=&quot;w-full h-full object-cover&quot;&#10;                                  /&gt;&#10;                                &lt;/button&gt;&#10;                              ))}&#10;                            &lt;/div&gt;&#10;                          )}&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-12 bg-gray-50 dark:bg-gray-700 rounded-lg&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-image text-4xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            No images uploaded&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      );&#10;                    })()}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Product Information */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                        Product Information&#10;                      &lt;/h3&gt;&#10;                      &lt;Link&#10;                        href={`/create?edit=${productId}`}&#10;                        className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-edit mr-1&quot;&gt;&lt;/i&gt;&#10;                        Edit Details&#10;                      &lt;/Link&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.name}&#10;                        &lt;/h2&gt;&#10;                        &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          {product.category}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;span className=&quot;text-sm font-medium text-gray-500 dark:text-gray-400&quot;&gt;&#10;                            Price&#10;                          &lt;/span&gt;&#10;                          &lt;p className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                            ${product.price?.toFixed(2)} per{&quot; &quot;}&#10;                            {product.unit || &quot;kg&quot;}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&gt;&#10;                          &lt;span className=&quot;text-sm font-medium text-gray-500 dark:text-gray-400&quot;&gt;&#10;                            Stock&#10;                          &lt;/span&gt;&#10;                          &lt;p className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                            {product.stock} {product.unit || &quot;kg&quot;}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div&gt;&#10;                        &lt;span className=&quot;text-sm font-medium text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          Description&#10;                        &lt;/span&gt;&#10;                        &lt;p className=&quot;text-gray-700 dark:text-gray-300 mt-1&quot;&gt;&#10;                          {product.description || &quot;No description provided.&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {product.features &amp;&amp; (&#10;                        &lt;div&gt;&#10;                          &lt;span className=&quot;text-sm font-medium text-gray-500 dark:text-gray-400&quot;&gt;&#10;                            Features&#10;                          &lt;/span&gt;&#10;                          &lt;ul className=&quot;list-disc list-inside text-gray-700 dark:text-gray-300 mt-1&quot;&gt;&#10;                            {product.features.map((feature, index) =&gt; (&#10;                              &lt;li key={index}&gt;{feature}&lt;/li&gt;&#10;                            ))}&#10;                          &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Quick Actions */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-6&quot;&gt;&#10;                      Quick Updates&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                      {/* Stock Update */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                          Update Stock&#10;                        &lt;/label&gt;&#10;                        &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                          &lt;input&#10;                            type=&quot;number&quot;&#10;                            value={stockUpdate}&#10;                            onChange={(e) =&gt; setStockUpdate(e.target.value)}&#10;                            placeholder=&quot;New stock amount&quot;&#10;                            className=&quot;flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white&quot;&#10;                          /&gt;&#10;                          &lt;button&#10;                            onClick={handleUpdateProduct}&#10;                            disabled={isUpdating || !stockUpdate}&#10;                            className=&quot;bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition disabled:bg-gray-400&quot;&#10;                          &gt;&#10;                            Update&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Price Update */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                          Update Price&#10;                        &lt;/label&gt;&#10;                        &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                          &lt;input&#10;                            type=&quot;number&quot;&#10;                            step=&quot;0.01&quot;&#10;                            value={priceUpdate}&#10;                            onChange={(e) =&gt; setPriceUpdate(e.target.value)}&#10;                            placeholder=&quot;New price&quot;&#10;                            className=&quot;flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white&quot;&#10;                          /&gt;&#10;                          &lt;button&#10;                            onClick={handleUpdateProduct}&#10;                            disabled={isUpdating || !priceUpdate}&#10;                            className=&quot;bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition disabled:bg-gray-400&quot;&#10;                          &gt;&#10;                            Update&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Recent Orders */}&#10;                  &lt;RecentOrdersSection&#10;                    recentOrders={recentOrders}&#10;                    loadingOrders={loadingOrders}&#10;                    product={product}&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Sidebar - Analytics &amp; Actions */}&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {/* Performance Stats */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                        Performance&#10;                      &lt;/h3&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                        Real-time data&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      {/* Total Sales */}&#10;                      &lt;div className=&quot;text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-center gap-2 mb-1&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-chart-line text-blue-600&quot;&gt;&lt;/i&gt;&#10;                          &lt;span className=&quot;text-2xl font-bold text-blue-600&quot;&gt;&#10;                            {product.performanceMetrics?.totalSales || 0}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Total Sales&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Total Revenue */}&#10;                      &lt;div className=&quot;text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-green-600&quot;&gt;&#10;                          $&#10;                          {(&#10;                            product.performanceMetrics?.totalRevenue || 0&#10;                          ).toFixed(2)}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Total Revenue&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Average Rating */}&#10;                      &lt;div className=&quot;text-center p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-yellow-600&quot;&gt;&#10;                          {(product.averageRating || 0).toFixed(1)}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Average Rating&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;flex justify-center mt-1&quot;&gt;&#10;                          &lt;StarRating&#10;                            rating={product.averageRating || 0}&#10;                            size=&quot;sm&quot;&#10;                          /&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Total Reviews */}&#10;                      &lt;div className=&quot;text-center p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-purple-600&quot;&gt;&#10;                          {product.reviewCount || product.totalReviews || 0}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Total Reviews&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Average Order Value */}&#10;                      {product.performanceMetrics?.averageOrderValue &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;text-center p-4 bg-orange-50 dark:bg-orange-900/20 rounded-lg&quot;&gt;&#10;                          &lt;div className=&quot;text-2xl font-bold text-orange-600&quot;&gt;&#10;                            $&#10;                            {product.performanceMetrics.averageOrderValue.toFixed(&#10;                              2,&#10;                            )}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Avg. Order Value&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* Total Orders */}&#10;                      {product.performanceMetrics?.totalOrders &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;text-center p-4 bg-indigo-50 dark:bg-indigo-900/20 rounded-lg&quot;&gt;&#10;                          &lt;div className=&quot;text-2xl font-bold text-indigo-600&quot;&gt;&#10;                            {product.performanceMetrics.totalOrders}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Total Orders&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Performance Summary */}&#10;                    &lt;div className=&quot;mt-4 pt-4 border-t border-gray-200 dark:border-gray-700&quot;&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400 text-center&quot;&gt;&#10;                        {product.performanceMetrics?.totalSales &gt; 0&#10;                          ? &quot;Your product is performing well!&quot;&#10;                          : &quot;Start promoting your product to get your first sale!&quot;}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                      Actions&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;div className=&quot;space-y-3&quot;&gt;&#10;                      &lt;Link&#10;                        href={`/create?edit=${productId}`}&#10;                        className=&quot;w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-edit mr-2&quot;&gt;&lt;/i&gt;&#10;                        Edit Product&#10;                      &lt;/Link&gt;&#10;&#10;                      &lt;Link&#10;                        href={`/details?id=${productId}&amp;view=customer`}&#10;                        className=&quot;w-full bg-gray-600 hover:bg-gray-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-eye mr-2&quot;&gt;&lt;/i&gt;&#10;                        View as Customer&#10;                      &lt;/Link&gt;&#10;&#10;                      &lt;button&#10;                        onClick={handleToggleStatus}&#10;                        disabled={isUpdating}&#10;                        className={`w-full py-3 px-4 rounded-lg font-medium transition flex items-center justify-center ${&#10;                          product.status === &quot;active&quot;&#10;                            ? &quot;bg-orange-600 hover:bg-orange-700 text-white&quot;&#10;                            : &quot;bg-green-600 hover:bg-green-700 text-white&quot;&#10;                        } ${isUpdating ? &quot;opacity-50 cursor-not-allowed&quot; : &quot;&quot;}`}&#10;                      &gt;&#10;                        {isUpdating ? (&#10;                          &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        ) : (&#10;                          &lt;i&#10;                            className={`fas ${product.status === &quot;active&quot; ? &quot;fa-pause&quot; : &quot;fa-play&quot;} mr-2`}&#10;                          &gt;&lt;/i&gt;&#10;                        )}&#10;                        {product.status === &quot;active&quot;&#10;                          ? &quot;Deactivate&quot;&#10;                          : &quot;Activate&quot;}&#10;                      &lt;/button&gt;&#10;&#10;                      &lt;button&#10;                        onClick={handleDeleteProduct}&#10;                        disabled={isUpdating}&#10;                        className={`w-full bg-red-600 hover:bg-red-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center ${&#10;                          isUpdating ? &quot;opacity-50 cursor-not-allowed&quot; : &quot;&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {isUpdating ? (&#10;                          &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        ) : (&#10;                          &lt;i className=&quot;fas fa-trash mr-2&quot;&gt;&lt;/i&gt;&#10;                        )}&#10;                        Delete Product&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/&gt;&#10;          ) : (&#10;            /* Regular Customer View */&#10;            &lt;&gt;&#10;              {/* Breadcrumb */}&#10;              &lt;nav className=&quot;mb-8&quot;&gt;&#10;                &lt;ol className=&quot;flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      Home&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/products&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      Products&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;span className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                      {product.name}&#10;                    &lt;/span&gt;&#10;                  &lt;/li&gt;&#10;                &lt;/ol&gt;&#10;              &lt;/nav&gt;&#10;&#10;              &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12&quot;&gt;&#10;                {/* Product Images */}&#10;                &lt;div className=&quot;space-y-4&quot;&gt;&#10;                  &lt;div className=&quot;aspect-square bg-white dark:bg-gray-800 rounded-2xl overflow-hidden shadow-lg&quot;&gt;&#10;                    {(() =&gt; {&#10;                      const allImages = getAllImages();&#10;&#10;                      return (&#10;                        &lt;Image&#10;                          src={&#10;                            allImages[selectedImage] || &quot;/placeholder-image.jpg&quot;&#10;                          }&#10;                          alt={product.name}&#10;                          width={600}&#10;                          height={600}&#10;                          className=&quot;w-full h-full object-cover&quot;&#10;                        /&gt;&#10;                      );&#10;                    })()}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Thumbnail Images */}&#10;                  {(() =&gt; {&#10;                    const allImages = getAllImages();&#10;&#10;                    return allImages.length &gt; 1 ? (&#10;                      &lt;div className=&quot;grid grid-cols-5 gap-2&quot;&gt;&#10;                        {allImages.map((image, index) =&gt; (&#10;                          &lt;button&#10;                            key={index}&#10;                            onClick={() =&gt; setSelectedImage(index)}&#10;                            className={`aspect-square rounded-lg overflow-hidden border-2 ${&#10;                              selectedImage === index&#10;                                ? &quot;border-primary-500&quot;&#10;                                : &quot;border-gray-300 dark:border-gray-600&quot;&#10;                            }`}&#10;                          &gt;&#10;                            &lt;Image&#10;                              src={image}&#10;                              alt={`${product.name} ${index + 1}`}&#10;                              width={100}&#10;                              height={100}&#10;                              className=&quot;w-full h-full object-cover&quot;&#10;                            /&gt;&#10;                          &lt;/button&gt;&#10;                        ))}&#10;                      &lt;/div&gt;&#10;                    ) : null;&#10;                  })()}&#10;                &lt;/div&gt;&#10;&#10;                {/* Product Info */}&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {/* Category and Features */}&#10;                  &lt;div className=&quot;flex items-center gap-2 flex-wrap&quot;&gt;&#10;                    &lt;span className=&quot;bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 px-3 py-1 rounded-full text-sm font-medium&quot;&gt;&#10;                      {product.category}&#10;                    &lt;/span&gt;&#10;                    {product.isOrganic &amp;&amp; (&#10;                      &lt;span className=&quot;bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                        Organic&#10;                      &lt;/span&gt;&#10;                    )}&#10;                    {product.isFresh &amp;&amp; (&#10;                      &lt;span className=&quot;bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                        Fresh&#10;                      &lt;/span&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Product Name and Farmer */}&#10;                  &lt;div&gt;&#10;                    &lt;h1 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                      {product.name}&#10;                    &lt;/h1&gt;&#10;                    &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Produced by{&quot; &quot;}&#10;                      &lt;span className=&quot;font-semibold text-primary-600 dark:text-primary-400&quot;&gt;&#10;                        {product.farmer?.farmName ||&#10;                          product.farmer?.name ||&#10;                          &quot;Unknown Farmer&quot;}&#10;                      &lt;/span&gt;&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Rating and Reviews */}&#10;                  &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                    &lt;StarRating&#10;                      rating={product.averageRating || 0}&#10;                      showValue={true}&#10;                    /&gt;&#10;                    &lt;span className=&quot;text-gray-500 dark:text-gray-400&quot;&gt;&#10;                      ({product.reviewCount || product.totalReviews || 0}{&quot; &quot;}&#10;                      reviews)&#10;                    &lt;/span&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; setActiveTab(&quot;reviews&quot;)}&#10;                      className=&quot;text-primary-600 dark:text-primary-400 hover:underline&quot;&#10;                    &gt;&#10;                      Write a review&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Price and Stock */}&#10;                  &lt;div className=&quot;bg-gray-100 dark:bg-gray-800 rounded-xl p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;span className=&quot;text-3xl font-bold text-primary-600 dark:text-primary-400&quot;&gt;&#10;                          ${product.price?.toFixed(2)}&#10;                        &lt;/span&gt;&#10;                        &lt;span className=&quot;text-lg text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          /{product.unit || &quot;kg&quot;}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-right&quot;&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          Available Stock&#10;                        &lt;/p&gt;&#10;                        &lt;p className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.stock} {product.unit || &quot;kg&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Location */}&#10;                    &lt;div className=&quot;flex items-center text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-map-marker-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                      &lt;span&gt;&#10;                        {product.farmer?.location || &quot;Location not specified&quot;}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Quantity Selection */}&#10;                  &lt;div className=&quot;space-y-4&quot;&gt;&#10;                    &lt;div&gt;&#10;                      &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                        Quantity ({product.unit || &quot;kg&quot;})&#10;                      &lt;/label&gt;&#10;                      &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setQuantity(Math.max(1, quantity - 1))}&#10;                          className=&quot;w-10 h-10 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-center hover:bg-gray-50 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-minus&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          min=&quot;1&quot;&#10;                          max={product.stock}&#10;                          value={quantity}&#10;                          onChange={(e) =&gt;&#10;                            setQuantity(&#10;                              Math.max(1, parseInt(e.target.value) || 1),&#10;                            )&#10;                          }&#10;                          className=&quot;w-20 text-center py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white&quot;&#10;                        /&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt;&#10;                            setQuantity(Math.min(product.stock, quantity + 1))&#10;                          }&#10;                          className=&quot;w-10 h-10 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-center hover:bg-gray-50 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-plus&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;space-y-3&quot;&gt;&#10;                    &lt;button&#10;                      onClick={handleBuyNow}&#10;                      disabled={product.stock &lt;= 0}&#10;                      className=&quot;w-full bg-primary-600 hover:bg-primary-700 dark:bg-primary-700 dark:hover:bg-primary-800 text-white py-3 px-6 rounded-lg font-medium transition-all duration-200 shadow-md hover:shadow-lg disabled:bg-gray-400&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-bolt mr-2&quot;&gt;&lt;/i&gt;&#10;                      Buy Now&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={handleAddToCart}&#10;                      disabled={isAddingToCart || product.stock &lt;= 0}&#10;                      className=&quot;w-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white py-3 px-6 rounded-lg font-medium transition disabled:bg-gray-400&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-shopping-cart mr-2&quot;&gt;&lt;/i&gt;&#10;                      {isAddingToCart ? &quot;Adding...&quot; : &quot;Add to Cart&quot;}&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={handleFavoriteToggle}&#10;                      className=&quot;w-full border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 text-gray-900 dark:text-white py-3 px-6 rounded-lg font-medium transition&quot;&#10;                    &gt;&#10;                      &lt;i&#10;                        className={`${isFavorite ? &quot;fas&quot; : &quot;far&quot;} fa-heart mr-2 ${isFavorite ? &quot;text-red-500&quot; : &quot;&quot;}`}&#10;                      &gt;&lt;/i&gt;&#10;                      Add to Favorite&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Farmer Contact */}&#10;                  &lt;div className=&quot;bg-primary-50 dark:bg-primary-900 rounded-xl p-4&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                      &lt;div className=&quot;w-12 h-12 rounded-full bg-primary-100 dark:bg-primary-800 flex items-center justify-center&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-user text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div&gt;&#10;                        &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.farmer?.name || &quot;Farmer&quot;}&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          {product.farmer?.email ||&#10;                            &quot;Contact information not available&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Tabs Section */}&#10;              &lt;div className=&quot;mt-16&quot;&gt;&#10;                &lt;div className=&quot;border-b border-gray-200 dark:border-gray-700&quot;&gt;&#10;                  &lt;nav className=&quot;flex space-x-8&quot;&gt;&#10;                    {[&#10;                      &quot;description&quot;,&#10;                      &quot;nutrition&quot;,&#10;                      &quot;storage&quot;,&#10;                      &quot;reviews&quot;,&#10;                      &quot;farmer&quot;,&#10;                    ].map((tab) =&gt; (&#10;                      &lt;button&#10;                        key={tab}&#10;                        onClick={() =&gt; setActiveTab(tab)}&#10;                        className={`py-4 px-1 border-b-2 font-medium text-sm ${&#10;                          activeTab === tab&#10;                            ? &quot;border-primary-500 text-primary-600 dark:text-primary-400&quot;&#10;                            : &quot;border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {tab.charAt(0).toUpperCase() + tab.slice(1)}&#10;                      &lt;/button&gt;&#10;                    ))}&#10;                  &lt;/nav&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;py-8&quot;&gt;&#10;                  {/* Description Tab */}&#10;                  {activeTab === &quot;description&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-4&quot;&gt;&#10;                        Product Description&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;                        {product.description ||&#10;                          &quot;No description available for this product.&quot;}&#10;                      &lt;/p&gt;&#10;&#10;                      {product.features &amp;&amp; product.features.length &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;mt-6&quot;&gt;&#10;                          &lt;h4 className=&quot;text-lg font-medium mb-3&quot;&gt;&#10;                            Key Features&#10;                          &lt;/h4&gt;&#10;                          &lt;ul className=&quot;list-disc list-inside space-y-1&quot;&gt;&#10;                            {product.features.map((feature, index) =&gt; (&#10;                              &lt;li&#10;                                key={index}&#10;                                className=&quot;text-gray-600 dark:text-gray-400&quot;&#10;                              &gt;&#10;                                {feature}&#10;                              &lt;/li&gt;&#10;                            ))}&#10;                          &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Nutrition Tab */}&#10;                  {activeTab === &quot;nutrition&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        Nutritional Information&#10;                      &lt;/h3&gt;&#10;&#10;                      {product.nutritionalInformation ? (&#10;                        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg p-6&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {product.nutritionalInformation}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-apple-alt text-4xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Nutritional information is not available for this&#10;                            product.&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Storage Instructions Tab */}&#10;                  {activeTab === &quot;storage&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        Storage Instructions&#10;                      &lt;/h3&gt;&#10;&#10;                      {product.storageInstructions ? (&#10;                        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg p-6&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {product.storageInstructions}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-warehouse text-4xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Storage instructions are not available for this&#10;                            product.&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* General storage tips */}&#10;                      &lt;div className=&quot;mt-8&quot;&gt;&#10;                        &lt;h4 className=&quot;text-lg font-medium mb-4&quot;&gt;&#10;                          General Storage Tips&#10;                        &lt;/h4&gt;&#10;                        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;                          &lt;div className=&quot;bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg&quot;&gt;&#10;                            &lt;h5 className=&quot;font-medium text-blue-900 dark:text-blue-100 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-thermometer-half mr-2&quot;&gt;&lt;/i&gt;&#10;                              Temperature&#10;                            &lt;/h5&gt;&#10;                            &lt;p className=&quot;text-sm text-blue-700 dark:text-blue-300&quot;&gt;&#10;                              Store in a cool, dry place away from direct&#10;                              sunlight&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;bg-green-50 dark:bg-green-900/20 p-4 rounded-lg&quot;&gt;&#10;                            &lt;h5 className=&quot;font-medium text-green-900 dark:text-green-100 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-tint mr-2&quot;&gt;&lt;/i&gt;&#10;                              Humidity&#10;                            &lt;/h5&gt;&#10;                            &lt;p className=&quot;text-sm text-green-700 dark:text-green-300&quot;&gt;&#10;                              Keep in low humidity environment to prevent&#10;                              spoilage&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Reviews Tab */}&#10;                  {activeTab === &quot;reviews&quot; &amp;&amp; (&#10;                    &lt;div&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-8&quot;&gt;&#10;                        &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          Customer Reviews (&#10;                          {product.reviewCount || product.totalReviews || 0})&#10;                        &lt;/h2&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setShowReviewForm(true)}&#10;                          className=&quot;bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg font-medium transition&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-plus mr-2&quot;&gt;&lt;/i&gt;&#10;                          Write Review&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Review Summary */}&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-6 mb-8&quot;&gt;&#10;                        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-8&quot;&gt;&#10;                          &lt;div className=&quot;text-center&quot;&gt;&#10;                            &lt;div className=&quot;text-4xl font-bold text-primary-600 dark:text-primary-400 mb-2&quot;&gt;&#10;                              {(product.averageRating || 0).toFixed(1)}&#10;                            &lt;/div&gt;&#10;                            &lt;StarRating&#10;                              rating={product.averageRating || 0}&#10;                              size=&quot;lg&quot;&#10;                            /&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mt-2&quot;&gt;&#10;                              Based on{&quot; &quot;}&#10;                              {product.reviewCount || product.totalReviews || 0}{&quot; &quot;}&#10;                              reviews&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;space-y-2&quot;&gt;&#10;                            {(() =&gt; {&#10;                              const ratingDistribution =&#10;                                calculateRatingDistribution();&#10;                              return [5, 4, 3, 2, 1].map((rating) =&gt; {&#10;                                const count = ratingDistribution[rating];&#10;                                const percentage = getRatingPercentage(&#10;                                  rating,&#10;                                  ratingDistribution,&#10;                                );&#10;                                return (&#10;                                  &lt;div&#10;                                    key={rating}&#10;                                    className=&quot;flex items-center space-x-2&quot;&#10;                                  &gt;&#10;                                    &lt;span className=&quot;text-sm text-gray-600 dark:text-gray-400 w-8&quot;&gt;&#10;                                      {rating}★&#10;                                    &lt;/span&gt;&#10;                                    &lt;div className=&quot;flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-2&quot;&gt;&#10;                                      &lt;div&#10;                                        className=&quot;bg-yellow-400 h-2 rounded-full transition-all duration-300&quot;&#10;                                        style={{ width: `${percentage}%` }}&#10;                                      &gt;&lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;span className=&quot;text-sm text-gray-600 dark:text-gray-400 w-8&quot;&gt;&#10;                                      {count}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                );&#10;                              });&#10;                            })()}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Review Form Modal */}&#10;                      {showReviewForm &amp;&amp; (&#10;                        &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4&quot;&gt;&#10;                          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-6 w-full max-w-md&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                              &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                                Write a Review&#10;                              &lt;/h3&gt;&#10;                              &lt;button&#10;                                onClick={() =&gt; setShowReviewForm(false)}&#10;                                className=&quot;text-gray-400 hover:text-gray-600 dark:hover:text-gray-300&quot;&#10;                              &gt;&#10;                                &lt;i className=&quot;fas fa-times&quot;&gt;&lt;/i&gt;&#10;                              &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;form&#10;                              onSubmit={handleSubmitReview}&#10;                              className=&quot;space-y-4&quot;&#10;                            &gt;&#10;                              &lt;div&gt;&#10;                                &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                                  Rating&#10;                                &lt;/label&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#10;                                  {[1, 2, 3, 4, 5].map((star) =&gt; (&#10;                                    &lt;button&#10;                                      key={star}&#10;                                      type=&quot;button&quot;&#10;                                      onClick={() =&gt;&#10;                                        setReviewForm({&#10;                                          ...reviewForm,&#10;                                          rating: star,&#10;                                        })&#10;                                      }&#10;                                      className={`text-2xl ${&#10;                                        star &lt;= reviewForm.rating&#10;                                          ? &quot;text-yellow-400&quot;&#10;                                          : &quot;text-gray-300 dark:text-gray-600&quot;&#10;                                      }`}&#10;                                    &gt;&#10;                                      ★&#10;                                    &lt;/button&gt;&#10;                                  ))}&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div&gt;&#10;                                &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                                  Comment&#10;                                &lt;/label&gt;&#10;                                &lt;textarea&#10;                                  value={reviewForm.comment}&#10;                                  onChange={(e) =&gt;&#10;                                    setReviewForm({&#10;                                      ...reviewForm,&#10;                                      comment: e.target.value,&#10;                                    })&#10;                                  }&#10;                                  rows={4}&#10;                                  className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                                  placeholder=&quot;Share your experience with this product...&quot;&#10;                                  required&#10;                                /&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                                &lt;button&#10;                                  type=&quot;button&quot;&#10;                                  onClick={() =&gt; setShowReviewForm(false)}&#10;                                  className=&quot;flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700&quot;&#10;                                &gt;&#10;                                  Cancel&#10;                                &lt;/button&gt;&#10;                                &lt;button&#10;                                  type=&quot;submit&quot;&#10;                                  disabled={isSubmittingReview}&#10;                                  className=&quot;flex-1 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50&quot;&#10;                                &gt;&#10;                                  {isSubmittingReview&#10;                                    ? &quot;Submitting...&quot;&#10;                                    : &quot;Submit Review&quot;}&#10;                                &lt;/button&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/form&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* Individual Reviews */}&#10;                      &lt;div className=&quot;space-y-8&quot;&gt;&#10;                        {reviews &amp;&amp; reviews.length &gt; 0 ? (&#10;                          reviews.map((review, index) =&gt; (&#10;                            &lt;div&#10;                              key={review._id}&#10;                              className=&quot;group bg-gradient-to-br from-white via-gray-50 to-white dark:from-gray-800 dark:via-gray-850 dark:to-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 dark:border-gray-700 hover:border-primary-200 dark:hover:border-primary-800&quot;&#10;                              style={{ animationDelay: `${index * 100}ms` }}&#10;                            &gt;&#10;                              &lt;div className=&quot;flex items-start justify-between mb-4&quot;&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                                  &lt;div className=&quot;relative&quot;&gt;&#10;                                    &lt;div className=&quot;w-12 h-12 rounded-full bg-gradient-to-br from-primary-400 to-primary-600 dark:from-primary-500 dark:to-primary-700 flex items-center justify-center shadow-lg&quot;&gt;&#10;                                      &lt;span className=&quot;text-white font-bold text-lg&quot;&gt;&#10;                                      {(review.reviewer || &quot;Anonymous&quot;)&#10;                                          .charAt(0)&#10;                                          .toUpperCase()}&#10;                                      &lt;/span&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div className=&quot;absolute -bottom-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-white dark:border-gray-800 flex items-center justify-center&quot;&gt;&#10;                                      &lt;i className=&quot;fas fa-check text-white text-xs&quot;&gt;&lt;/i&gt;&#10;                                    &lt;/div&gt;&#10;                                  &lt;/div&gt;&#10;                                  &lt;div className=&quot;flex-1&quot;&gt;&#10;                                    &lt;div className=&quot;flex items-center gap-3 mb-1&quot;&gt;&#10;                                      &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white text-lg&quot;&gt;&#10;                                        {(() =&gt; {&#10;                                          const name =&#10;                                            review.customerName ||&#10;                                            review.userName ||&#10;                                            review.user?.name ||&#10;                                            review.user || // Add this line - when user is directly a string&#10;                                            review.reviewer || // Add this for products.json structure&#10;                                            review.name ||&#10;                                            &quot;Anonymous&quot;;&#10;                                          return name;&#10;                                        })()}&#10;                                      &lt;/h4&gt;&#10;                                      &lt;span className=&quot;px-2 py-1 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 text-xs font-medium rounded-full&quot;&gt;&#10;                                        Verified Buyer&#10;                                      &lt;/span&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                                      &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#10;                                        {[1, 2, 3, 4, 5].map((star) =&gt; (&#10;                                          &lt;span&#10;                                            key={star}&#10;                                            className={`text-lg transition-all duration-200 ${&#10;                                              star &lt;= review.rating&#10;                                                ? &quot;text-yellow-400 drop-shadow-sm&quot;&#10;                                                : &quot;text-gray-300 dark:text-gray-600&quot;&#10;                                            }`}&#10;                                          &gt;&#10;                                            ★&#10;                                          &lt;/span&gt;&#10;                                        ))}&#10;                                      &lt;/div&gt;&#10;                                      &lt;span className=&quot;text-sm font-medium text-yellow-600 dark:text-yellow-400&quot;&gt;&#10;                                        {review.rating}/5&#10;                                      &lt;/span&gt;&#10;                                      &lt;span className=&quot;text-gray-400&quot;&gt;•&lt;/span&gt;&#10;                                      &lt;span className=&quot;text-sm text-gray-500 dark:text-gray-400 font-medium&quot;&gt;&#10;                                        {new Date(&#10;                                          review.createdAt || review.date,&#10;                                        ).toLocaleDateString(&quot;en-US&quot;, {&#10;                                          year: &quot;numeric&quot;,&#10;                                          month: &quot;short&quot;,&#10;                                          day: &quot;numeric&quot;,&#10;                                        })}&#10;                                      &lt;/span&gt;&#10;                                    &lt;/div&gt;&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&#10;                                  &lt;button className=&quot;p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-thumbs-up text-gray-400 hover:text-primary-500&quot;&gt;&lt;/i&gt;&#10;                                  &lt;/button&gt;&#10;                                  &lt;button className=&quot;p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-share text-gray-400 hover:text-primary-500&quot;&gt;&lt;/i&gt;&#10;                                  &lt;/button&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;relative&quot;&gt;&#10;                                &lt;div className=&quot;absolute left-0 top-0 w-1 h-full bg-gradient-to-b from-primary-400 to-primary-600 rounded-full opacity-20&quot;&gt;&lt;/div&gt;&#10;                                &lt;p className=&quot;text-gray-700 dark:text-gray-300 leading-relaxed pl-6 text-base&quot;&gt;&#10;                                  &quot;{review.comment}&quot;&#10;                                &lt;/p&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              {/* Review actions footer */}&#10;                              &lt;div className=&quot;mt-4 pt-4 border-t border-gray-100 dark:border-gray-700 flex items-center justify-between&quot;&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                  &lt;span className=&quot;flex items-center space-x-1&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-heart text-red-400&quot;&gt;&lt;/i&gt;&#10;                                    &lt;span&gt;Helpful&lt;/span&gt;&#10;                                  &lt;/span&gt;&#10;                                  &lt;span className=&quot;flex items-center space-x-1&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-comment text-blue-400&quot;&gt;&lt;/i&gt;&#10;                                    &lt;span&gt;Reply&lt;/span&gt;&#10;                                  &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                                  &lt;div className=&quot;flex -space-x-1&quot;&gt;&#10;                                    {[1, 2, 3].map((i) =&gt; (&#10;                                      &lt;div&#10;                                        key={i}&#10;                                        className=&quot;w-6 h-6 rounded-full bg-gray-300 dark:bg-gray-600 border-2 border-white dark:border-gray-800&quot;&#10;                                      &gt;&lt;/div&gt;&#10;                                    ))}&#10;                                  &lt;/div&gt;&#10;                                  &lt;span className=&quot;text-xs text-gray-500&quot;&gt;&#10;                                    +2 found helpful&#10;                                  &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          ))&#10;                        ) : (&#10;                          &lt;div className=&quot;text-center py-16 bg-gradient-to-br from-gray-50 via-white to-gray-50 dark:from-gray-800 dark:via-gray-900 dark:to-gray-800 rounded-2xl border-2 border-dashed border-gray-200 dark:border-gray-700&quot;&gt;&#10;                            &lt;div className=&quot;relative inline-block mb-6&quot;&gt;&#10;                              &lt;div className=&quot;w-20 h-20 bg-gradient-to-br from-primary-100 to-primary-200 dark:from-primary-800 dark:to-primary-900 rounded-full flex items-center justify-center mx-auto shadow-lg&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-star text-3xl text-primary-500 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;absolute -top-2 -right-2 w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center animate-bounce&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-plus text-white text-sm&quot;&gt;&lt;/i&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                              No Reviews Yet&#10;                            &lt;/h3&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-6 max-w-md mx-auto&quot;&gt;&#10;                              Be the first to share your experience with this&#10;                              amazing product! Your review helps other customers&#10;                              make informed decisions.&#10;                            &lt;/p&gt;&#10;                            {session &amp;&amp; (&#10;                              &lt;button&#10;                                onClick={() =&gt; setShowReviewForm(true)}&#10;                                className=&quot;inline-flex items-center bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300&quot;&#10;                              &gt;&#10;                                &lt;i className=&quot;fas fa-edit mr-2&quot;&gt;&lt;/i&gt;&#10;                                Write First Review&#10;                              &lt;/button&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                        )}&#10;&#10;                        {/* Load More Reviews Button */}&#10;                        {hasMoreReviews &amp;&amp; (&#10;                          &lt;div className=&quot;text-center pt-8&quot;&gt;&#10;                            &lt;button&#10;                              onClick={loadMoreReviews}&#10;                              className=&quot;group inline-flex items-center bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 text-gray-900 dark:text-white px-8 py-4 rounded-xl font-semibold border-2 border-gray-200 dark:border-gray-700 hover:border-primary-300 dark:hover:border-primary-600 shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-chevron-down mr-3 group-hover:animate-bounce&quot;&gt;&lt;/i&gt;&#10;                              Load More Reviews&#10;                              &lt;span className=&quot;ml-3 px-2 py-1 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 text-sm rounded-full&quot;&gt;&#10;                                +{Math.min(5, reviews?.length || 0)}&#10;                              &lt;/span&gt;&#10;                            &lt;/button&gt;&#10;                          &lt;/div&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Farmer Tab */}&#10;                  {activeTab === &quot;farmer&quot; &amp;&amp; (&#10;                    &lt;div&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        About the Farmer&#10;                      &lt;/h3&gt;&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg p-6 shadow-lg&quot;&gt;&#10;                        &lt;div className=&quot;flex items-start gap-4&quot;&gt;&#10;                          &lt;div className=&quot;w-16 h-16 rounded-full bg-primary-100 dark:bg-primary-900 flex items-center justify-center flex-shrink-0&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-user text-2xl text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;flex-1&quot;&gt;&#10;                            &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                              {product.farmer?.farmName ||&#10;                                product.farmer?.name ||&#10;                                &quot;Farm Name&quot;}&#10;                            &lt;/h4&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-3&quot;&gt;&#10;                              {product.farmer?.email ||&#10;                                &quot;Farmer contact not available&quot;}&#10;                            &lt;/p&gt;&#10;&#10;                            {product.farmer?.location &amp;&amp; (&#10;                              &lt;div className=&quot;flex items-center text-gray-600 dark:text-gray-400 mb-3&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-map-marker-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                                &lt;span&gt;{product.farmer.location}&lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            )}&#10;&#10;                            {product.farmer?.phone &amp;&amp; (&#10;                              &lt;div className=&quot;flex items-center text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-phone mr-2&quot;&gt;&lt;/i&gt;&#10;                                &lt;span&gt;{product.farmer.phone}&lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            )}&#10;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;                              {product.farmer?.description ||&#10;                                &quot;A dedicated farmer committed to providing fresh, quality produce to the community.&quot;}&#10;                            &lt;/p&gt;&#10;&#10;                            &lt;div className=&quot;mt-4 pt-4 border-t border-gray-200 dark:border-gray-700&quot;&gt;&#10;                              &lt;Link&#10;                                href={`/details?id=${product.farmerId || product.farmer?.id}`}&#10;                                className=&quot;inline-flex items-center text-primary-600 hover:text-primary-700 font-medium&quot;&#10;                              &gt;&#10;                                &lt;i className=&quot;fas fa-external-link-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                                View All Products from this Farmer&#10;                              &lt;/Link&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Related Products outside tabs */}&#10;                  {relatedProducts.length &gt; 0 &amp;&amp; (&#10;                    &lt;div className=&quot;mt-16&quot;&gt;&#10;                      &lt;h3 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-8&quot;&gt;&#10;                        Related Products&#10;                      &lt;/h3&gt;&#10;                      &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6&quot;&gt;&#10;                        {relatedProducts.map((relatedProduct) =&gt; (&#10;                          &lt;ProductCard&#10;                            key={relatedProduct._id}&#10;                            product={relatedProduct}&#10;                          /&gt;&#10;                        ))}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import Link from &quot;next/link&quot;;&#10;import Image from &quot;next/image&quot;;&#10;import { useState, useEffect } from &quot;react&quot;;&#10;import { useSearchParams, useRouter } from &quot;next/navigation&quot;;&#10;import { useSession } from &quot;next-auth/react&quot;;&#10;import { useCart } from &quot;@/contexts/CartContext&quot;;&#10;import { useFavorites } from &quot;@/contexts/FavoritesContext&quot;;&#10;import ProductCard from &quot;@/components/ProductCard&quot;;&#10;import StarRating from &quot;@/components/StarRating&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;import RecentOrdersSection from &quot;@/components/RecentOrdersSection&quot;;&#10;import FarmerProfileView from &quot;@/components/FarmerProfileView&quot;;&#10;import useProductData from &quot;@/hooks/useProductData&quot;;&#10;import useOwnership from &quot;@/hooks/useOwnership&quot;;&#10;import useReviews from &quot;@/hooks/useReviews&quot;;&#10;&#10;import Loading from &quot;@/components/Loading&quot;;&#10;import NotFound from &quot;@/components/NotFound&quot;;&#10;&#10;export default function ProductDetails() {&#10;  const searchParams = useSearchParams();&#10;  const router = useRouter();&#10;  const productId = searchParams.get(&quot;id&quot;);&#10;  const viewMode = searchParams.get(&quot;view&quot;);&#10;  const { data: session } = useSession();&#10;  const { addToCart } = useCart();&#10;  const { addToFavorites, removeFromFavorites, isProductFavorited } =&#10;    useFavorites();&#10;&#10;  // Custom hooks&#10;  const {&#10;    product,&#10;    farmer,&#10;    farmerProducts,&#10;    responseType,&#10;    relatedProducts,&#10;    loading,&#10;    fetchProductDetails,&#10;  } = useProductData(productId);&#10;&#10;  const { reviews, hasMoreReviews, fetchReviews, reviewsPage } = useReviews(&#10;    productId,&#10;    responseType,&#10;  );&#10;  const isOwner = useOwnership(product, session, viewMode);&#10;&#10;  // State management&#10;  const [selectedImage, setSelectedImage] = useState(0);&#10;  const [quantity, setQuantity] = useState(1);&#10;  const [activeTab, setActiveTab] = useState(&quot;description&quot;);&#10;  const [isAddingToCart, setIsAddingToCart] = useState(false);&#10;  const [isFavorite, setIsFavorite] = useState(false);&#10;&#10;  // Review form state&#10;  const [showReviewForm, setShowReviewForm] = useState(false);&#10;  const [reviewForm, setReviewForm] = useState({ rating: 5, comment: &quot;&quot; });&#10;  const [isSubmittingReview, setIsSubmittingReview] = useState(false);&#10;&#10;  // Farmer-specific states&#10;  const [stockUpdate, setStockUpdate] = useState(&quot;&quot;);&#10;  const [priceUpdate, setPriceUpdate] = useState(&quot;&quot;);&#10;  const [isUpdating, setIsUpdating] = useState(false);&#10;  const [recentOrders, setRecentOrders] = useState([]);&#10;  const [loadingOrders, setLoadingOrders] = useState(false);&#10;&#10;  // Effects&#10;  useEffect(() =&gt; {&#10;    if (productId) {&#10;      fetchProductDetails();&#10;    }&#10;  }, [productId]);&#10;&#10;  useEffect(() =&gt; {&#10;    if (productId &amp;&amp; isOwner &amp;&amp; viewMode !== &quot;customer&quot;) {&#10;      const interval = setInterval(() =&gt; {&#10;        fetchProductDetails();&#10;      }, 30000);&#10;      return () =&gt; clearInterval(interval);&#10;    }&#10;  }, [productId, isOwner, viewMode]);&#10;&#10;  useEffect(() =&gt; {&#10;    if (productId &amp;&amp; isOwner &amp;&amp; viewMode !== &quot;customer&quot;) {&#10;      fetchRecentOrders();&#10;    }&#10;  }, [productId, isOwner, viewMode]);&#10;&#10;  // Check if product is favorited when productId changes&#10;  useEffect(() =&gt; {&#10;    if (productId) {&#10;      setIsFavorite(isProductFavorited(productId));&#10;    }&#10;  }, [productId, isProductFavorited]);&#10;&#10;  // API calls&#10;  const fetchRecentOrders = async () =&gt; {&#10;    try {&#10;      setLoadingOrders(true);&#10;      const response = await fetch(&#10;        `/api/orders?productId=${productId}&amp;limit=5`,&#10;      );&#10;&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;        setRecentOrders(data.orders || []);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching recent orders:&quot;, error);&#10;    } finally {&#10;      setLoadingOrders(false);&#10;    }&#10;  };&#10;&#10;  // Event handlers&#10;  const handleAddToCart = async () =&gt; {&#10;    if (!session?.user) {&#10;      window.location.href = &quot;/login&quot;;&#10;      return;&#10;    }&#10;&#10;    setIsAddingToCart(true);&#10;    try {&#10;      const item = {&#10;        productId: productId,&#10;        id: productId, // Add id field for cart context&#10;        name: product.name,&#10;        price: product.price,&#10;        quantity: quantity,&#10;        stock: product.stock, // Include stock information&#10;        image:&#10;          product.image ||&#10;          (product.images &amp;&amp; product.images[0]) ||&#10;          &quot;/placeholder-image.jpg&quot;,&#10;        unit: product.unit || &quot;kg&quot;,&#10;        farmerId: product.farmerId,&#10;        farmerName:&#10;          product.farmer?.name || product.farmer?.farmName || &quot;Unknown Farmer&quot;,&#10;      };&#10;&#10;      await addToCart(item, quantity);&#10;      alert(&quot;Product added to cart successfully!&quot;);&#10;    } catch (error) {&#10;      console.error(&quot;Error adding to cart:&quot;, error);&#10;      // Show user-friendly error message for stock issues&#10;      if (&#10;        error.message.includes(&quot;Only&quot;) &amp;&amp;&#10;        error.message.includes(&quot;available in stock&quot;)&#10;      ) {&#10;        alert(error.message);&#10;      } else {&#10;        alert(&quot;Failed to add product to cart. Please try again.&quot;);&#10;      }&#10;    } finally {&#10;      setIsAddingToCart(false);&#10;    }&#10;  };&#10;&#10;  const handleBuyNow = async () =&gt; {&#10;    if (!session?.user) {&#10;      window.location.href = &quot;/login&quot;;&#10;      return;&#10;    }&#10;&#10;    setIsAddingToCart(true);&#10;    try {&#10;      // Create a product object that matches the CartContext expectations&#10;      const productForCart = {&#10;        id: productId,&#10;        name: product.name,&#10;        price: product.price,&#10;        image:&#10;          product.image ||&#10;          (product.images &amp;&amp; product.images[0]) ||&#10;          &quot;/placeholder-image.jpg&quot;,&#10;        unit: product.unit || &quot;kg&quot;,&#10;        farmerId: product.farmerId,&#10;        farmer: {&#10;          id: product.farmerId,&#10;          _id: product.farmerId,&#10;          email: product.farmer?.email,&#10;          name:&#10;            product.farmer?.name ||&#10;            product.farmer?.farmName ||&#10;            &quot;Unknown Farmer&quot;,&#10;        },&#10;        farmerName:&#10;          product.farmer?.name || product.farmer?.farmName || &quot;Unknown Farmer&quot;,&#10;        stock: product.stock || 0,&#10;      };&#10;&#10;      // Use CartContext's addToCart function&#10;      await addToCart(productForCart, quantity);&#10;&#10;      // Immediately redirect to payment - let the payment page handle the cart state&#10;      // The payment page should wait for cart loading to complete before checking if empty&#10;      router.push(&quot;/payment&quot;);&#10;    } catch (error) {&#10;      console.error(&quot;Error processing buy now:&quot;, error);&#10;      alert(error.message || &quot;Failed to process order. Please try again.&quot;);&#10;    } finally {&#10;      setIsAddingToCart(false);&#10;    }&#10;  };&#10;&#10;  const handleFavoriteToggle = async () =&gt; {&#10;    if (!session?.user) {&#10;      window.location.href = &quot;/login&quot;;&#10;      return;&#10;    }&#10;&#10;    try {&#10;      if (isFavorite) {&#10;        // Remove from favorites&#10;        const success = await removeFromFavorites(productId);&#10;        if (success) {&#10;          setIsFavorite(false);&#10;          alert(&quot;Product removed from favorites!&quot;);&#10;        } else {&#10;          alert(&quot;Failed to remove from favorites. Please try again.&quot;);&#10;        }&#10;      } else {&#10;        // Add to favorites&#10;        const success = await addToFavorites(productId);&#10;        if (success) {&#10;          setIsFavorite(true);&#10;          alert(&quot;Product added to favorites!&quot;);&#10;        } else {&#10;          alert(&quot;Failed to add to favorites. Please try again.&quot;);&#10;        }&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error toggling favorite:&quot;, error);&#10;      alert(&quot;Failed to update favorites. Please try again.&quot;);&#10;    }&#10;  };&#10;&#10;  const handleSubmitReview = async (e) =&gt; {&#10;    e.preventDefault();&#10;    if (!session) {&#10;      alert(&quot;Please login to submit a review&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsSubmittingReview(true);&#10;    try {&#10;      // Include userId in the review submission&#10;      const reviewData = {&#10;        ...reviewForm,&#10;        userId:&#10;          session.user.id ||&#10;          session.user._id ||&#10;          session.user.userId ||&#10;          session.user.email,&#10;      };&#10;&#10;      const response = await fetch(`/api/products/${productId}/reviews`, {&#10;        method: &quot;POST&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify(reviewData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        setShowReviewForm(false);&#10;        setReviewForm({ rating: 5, comment: &quot;&quot; });&#10;        fetchReviews();&#10;        fetchProductDetails();&#10;        alert(&quot;Review submitted successfully!&quot;);&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to submit review&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error submitting review:&quot;, error);&#10;      alert(&quot;Failed to submit review&quot;);&#10;    } finally {&#10;      setIsSubmittingReview(false);&#10;    }&#10;  };&#10;&#10;  const loadMoreReviews = () =&gt; {&#10;    fetchReviews(reviewsPage + 1, true);&#10;  };&#10;&#10;  const handleUpdateProduct = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    if (!stockUpdate &amp;&amp; !priceUpdate) {&#10;      alert(&quot;Please enter a value to update&quot;);&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const updateData = {};&#10;&#10;      if (stockUpdate &amp;&amp; stockUpdate.trim() !== &quot;&quot;) {&#10;        const stockValue = parseInt(stockUpdate);&#10;        if (isNaN(stockValue) || stockValue &lt; 0) {&#10;          alert(&quot;Please enter a valid stock number&quot;);&#10;          setIsUpdating(false);&#10;          return;&#10;        }&#10;        updateData.stock = stockValue;&#10;      }&#10;&#10;      if (priceUpdate &amp;&amp; priceUpdate.trim() !== &quot;&quot;) {&#10;        const priceValue = parseFloat(priceUpdate);&#10;        if (isNaN(priceValue) || priceValue &lt;= 0) {&#10;          alert(&quot;Please enter a valid price&quot;);&#10;          setIsUpdating(false);&#10;          return;&#10;        }&#10;        updateData.price = priceValue;&#10;      }&#10;&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify(updateData),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Product updated successfully!&quot;);&#10;        fetchProductDetails();&#10;        setStockUpdate(&quot;&quot;);&#10;        setPriceUpdate(&quot;&quot;);&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || &quot;Failed to update product&quot;);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error updating product:&quot;, error);&#10;      alert(&quot;Failed to update product. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleToggleStatus = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    const newStatus = product.status === &quot;active&quot; ? &quot;inactive&quot; : &quot;active&quot;;&#10;    const actionText = newStatus === &quot;active&quot; ? &quot;activate&quot; : &quot;deactivate&quot;;&#10;&#10;    if (!confirm(`Are you sure you want to ${actionText} this product?`)) {&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;PUT&quot;,&#10;        headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;        body: JSON.stringify({ status: newStatus }),&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(`Product ${actionText}d successfully!`);&#10;        fetchProductDetails();&#10;      } else {&#10;        const error = await response.json();&#10;        alert(error.error || `Failed to ${actionText} product`);&#10;      }&#10;    } catch (error) {&#10;      console.error(`Error ${actionText}ing product:`, error);&#10;      alert(`Failed to ${actionText} product. Please try again.`);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleDeleteProduct = async () =&gt; {&#10;    if (!isOwner) return;&#10;&#10;    if (&#10;      !confirm(&#10;        &quot;⚠️ Are you sure you want to delete this product?\n\nThis action cannot be undone and will remove:\n• The product listing\n• All associated data\n• Product from any pending orders&quot;,&#10;      )&#10;    ) {&#10;      return;&#10;    }&#10;&#10;    setIsUpdating(true);&#10;    try {&#10;      const response = await fetch(`/api/products/${productId}`, {&#10;        method: &quot;DELETE&quot;,&#10;      });&#10;&#10;      if (response.ok) {&#10;        alert(&quot;Product deleted successfully!&quot;);&#10;        window.location.href = &quot;/manage&quot;;&#10;      } else {&#10;        const error = await response.json();&#10;        if (response.status === 409) {&#10;          alert(&#10;            &quot;❌ Cannot Delete Product\n\nThis product has pending orders and cannot be deleted.\nPlease wait for all orders to be completed or cancelled before deleting this product.\n\nYou can temporarily deactivate the product instead.&quot;,&#10;          );&#10;        } else {&#10;          alert(error.error || &quot;Failed to delete product&quot;);&#10;        }&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error deleting product:&quot;, error);&#10;      alert(&quot;Failed to delete product. Please try again.&quot;);&#10;    } finally {&#10;      setIsUpdating(false);&#10;    }&#10;  };&#10;&#10;  const handleAddImages = () =&gt; {&#10;    router.push(`/create?edit=${productId}`);&#10;  };&#10;&#10;  // Helper function to get all images&#10;  const getAllImages = () =&gt; {&#10;    const allImages = [];&#10;    if (product?.image) {&#10;      allImages.push(product.image);&#10;    }&#10;    if (product?.images &amp;&amp; product.images.length &gt; 0) {&#10;      allImages.push(...product.images);&#10;    }&#10;    return allImages;&#10;  };&#10;&#10;  // Calculate rating distribution from reviews&#10;  const calculateRatingDistribution = () =&gt; {&#10;    if (!reviews || reviews.length === 0) {&#10;      return { 5: 0, 4: 0, 3: 0, 2: 0, 1: 0 };&#10;    }&#10;&#10;    const distribution = { 5: 0, 4: 0, 3: 0, 2: 0, 1: 0 };&#10;&#10;    reviews.forEach((review) =&gt; {&#10;      const rating = Math.floor(review.rating); // Round down to nearest integer&#10;      if (rating &gt;= 1 &amp;&amp; rating &lt;= 5) {&#10;        distribution[rating]++;&#10;      }&#10;    });&#10;&#10;    return distribution;&#10;  };&#10;&#10;  const getRatingPercentage = (rating, distribution) =&gt; {&#10;    const totalReviews = reviews?.length || 0;&#10;    if (totalReviews === 0) return 0;&#10;    return (distribution[rating] / totalReviews) * 100;&#10;  };&#10;&#10;  // Render components based on state&#10;  if (loading) {&#10;    return &lt;Loading /&gt;;&#10;  }&#10;&#10;  if (responseType === &quot;farmer&quot; &amp;&amp; farmer) {&#10;    return (&#10;      &lt;FarmerProfileView farmer={farmer} farmerProducts={farmerProducts} /&gt;&#10;    );&#10;  }&#10;&#10;  if (!product &amp;&amp; !farmer) {&#10;    return &lt;NotFound responseType={responseType} /&gt;;&#10;  }&#10;&#10;  // Main product details render&#10;  return (&#10;    &lt;&gt;&#10;      &lt;div className=&quot;min-h-screen bg-gray-50 dark:bg-gray-900 py-8&quot;&gt;&#10;        &lt;div className=&quot;max-w-7xl mx-auto px-4 sm:px-6 lg:px-8&quot;&gt;&#10;          {/* Farmer Dashboard View */}&#10;          {isOwner &amp;&amp; viewMode !== &quot;customer&quot; ? (&#10;            &lt;&gt;&#10;              {/* Farmer Breadcrumb */}&#10;              &lt;nav className=&quot;mb-8&quot;&gt;&#10;                &lt;ol className=&quot;flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/manage&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-tachometer-alt mr-1&quot;&gt;&lt;/i&gt;&#10;                      Dashboard&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;span className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                      {product.name} - Management&#10;                    &lt;/span&gt;&#10;                  &lt;/li&gt;&#10;                &lt;/ol&gt;&#10;              &lt;/nav&gt;&#10;&#10;              {/* Customer View Notice */}&#10;              &lt;div className=&quot;bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4 mb-6&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                  &lt;div className=&quot;flex items-center&quot;&gt;&#10;                    &lt;i className=&quot;fas fa-info-circle text-blue-600 dark:text-blue-400 mr-2&quot;&gt;&lt;/i&gt;&#10;                    &lt;span className=&quot;text-blue-800 dark:text-blue-200&quot;&gt;&#10;                      You are viewing this as the product owner.&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;Link&#10;                    href={`/details?id=${productId}&amp;view=customer`}&#10;                    className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&#10;                  &gt;&#10;                    &lt;i className=&quot;fas fa-eye mr-1&quot;&gt;&lt;/i&gt;&#10;                    View as Customer&#10;                  &lt;/Link&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Farmer Product Management Header */}&#10;              &lt;div className=&quot;bg-gradient-to-r from-green-600 to-emerald-600 rounded-2xl shadow-lg p-8 mb-8 text-white&quot;&gt;&#10;                &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h1 className=&quot;text-3xl font-bold mb-2&quot;&gt;&#10;                      Product Management&#10;                    &lt;/h1&gt;&#10;                    &lt;p className=&quot;text-green-100&quot;&gt;&#10;                      Manage your product listing and inventory&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-right&quot;&gt;&#10;                    &lt;div className=&quot;text-sm text-green-100 mb-1&quot;&gt;&#10;                      Product Status&#10;                    &lt;/div&gt;&#10;                    &lt;div&#10;                      className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${&#10;                        product.status === &quot;active&quot;&#10;                          ? &quot;bg-green-100 text-green-800&quot;&#10;                          : &quot;bg-red-100 text-red-800&quot;&#10;                      }`}&#10;                    &gt;&#10;                      &lt;i&#10;                        className={`fas ${product.status === &quot;active&quot; ? &quot;fa-check-circle&quot; : &quot;fa-times-circle&quot;} mr-1`}&#10;                      &gt;&lt;/i&gt;&#10;                      {product.status === &quot;active&quot; ? &quot;Active&quot; : &quot;Inactive&quot;}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-3 gap-8&quot;&gt;&#10;                {/* Product Images &amp; Info */}&#10;                &lt;div className=&quot;lg:col-span-2 space-y-6&quot;&gt;&#10;                  {/* Image Management */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                        Product Images&#10;                      &lt;/h3&gt;&#10;                      &lt;button&#10;                        onClick={handleAddImages}&#10;                        className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-plus mr-1&quot;&gt;&lt;/i&gt;&#10;                        Add Images&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Current Images Display */}&#10;                    {(() =&gt; {&#10;                      const allImages = getAllImages();&#10;&#10;                      return allImages.length &gt; 0 ? (&#10;                        &lt;div className=&quot;space-y-4&quot;&gt;&#10;                          &lt;div className=&quot;aspect-video max-w-md bg-gray-100 dark:bg-gray-700 rounded-lg overflow-hidden&quot;&gt;&#10;                            &lt;Image&#10;                              src={allImages[selectedImage]}&#10;                              alt={product.name}&#10;                              width={400}&#10;                              height={225}&#10;                              className=&quot;w-full h-full object-cover&quot;&#10;                            /&gt;&#10;                          &lt;/div&gt;&#10;                          {allImages.length &gt; 1 &amp;&amp; (&#10;                            &lt;div className=&quot;grid grid-cols-5 gap-2 max-w-md&quot;&gt;&#10;                              {allImages.map((image, index) =&gt; (&#10;                                &lt;button&#10;                                  key={index}&#10;                                  onClick={() =&gt; setSelectedImage(index)}&#10;                                  className={`aspect-square rounded-lg overflow-hidden border-2 ${&#10;                                    selectedImage === index&#10;                                      ? &quot;border-primary-500&quot;&#10;                                      : &quot;border-gray-300 dark:border-gray-600&quot;&#10;                                  }`}&#10;                                &gt;&#10;                                  &lt;Image&#10;                                    src={image}&#10;                                    alt={`${product.name} ${index + 1}`}&#10;                                    width={80}&#10;                                    height={80}&#10;                                    className=&quot;w-full h-full object-cover&quot;&#10;                                  /&gt;&#10;                                &lt;/button&gt;&#10;                              ))}&#10;                            &lt;/div&gt;&#10;                          )}&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-12 bg-gray-50 dark:bg-gray-700 rounded-lg&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-image text-4xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            No images uploaded&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      );&#10;                    })()}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Product Information */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                        Product Information&#10;                      &lt;/h3&gt;&#10;                      &lt;Link&#10;                        href={`/create?edit=${productId}`}&#10;                        className=&quot;bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-edit mr-1&quot;&gt;&lt;/i&gt;&#10;                        Edit Details&#10;                      &lt;/Link&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.name}&#10;                        &lt;/h2&gt;&#10;                        &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          {product.category}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;span className=&quot;text-sm font-medium text-gray-500 dark:text-gray-400&quot;&gt;&#10;                            Price&#10;                          &lt;/span&gt;&#10;                          &lt;p className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                            ${product.price?.toFixed(2)} per{&quot; &quot;}&#10;                            {product.unit || &quot;kg&quot;}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&gt;&#10;                          &lt;span className=&quot;text-sm font-medium text-gray-500 dark:text-gray-400&quot;&gt;&#10;                            Stock&#10;                          &lt;/span&gt;&#10;                          &lt;p className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                            {product.stock} {product.unit || &quot;kg&quot;}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div&gt;&#10;                        &lt;span className=&quot;text-sm font-medium text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          Description&#10;                        &lt;/span&gt;&#10;                        &lt;p className=&quot;text-gray-700 dark:text-gray-300 mt-1&quot;&gt;&#10;                          {product.description || &quot;No description provided.&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {product.features &amp;&amp; (&#10;                        &lt;div&gt;&#10;                          &lt;span className=&quot;text-sm font-medium text-gray-500 dark:text-gray-400&quot;&gt;&#10;                            Features&#10;                          &lt;/span&gt;&#10;                          &lt;ul className=&quot;list-disc list-inside text-gray-700 dark:text-gray-300 mt-1&quot;&gt;&#10;                            {product.features.map((feature, index) =&gt; (&#10;                              &lt;li key={index}&gt;{feature}&lt;/li&gt;&#10;                            ))}&#10;                          &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Quick Actions */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;h3 className=&quot;text-xl font-semibold text-gray-900 dark:text-white mb-6&quot;&gt;&#10;                      Quick Updates&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;&#10;                      {/* Stock Update */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                          Update Stock&#10;                        &lt;/label&gt;&#10;                        &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                          &lt;input&#10;                            type=&quot;number&quot;&#10;                            value={stockUpdate}&#10;                            onChange={(e) =&gt; setStockUpdate(e.target.value)}&#10;                            placeholder=&quot;New stock amount&quot;&#10;                            className=&quot;flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white&quot;&#10;                          /&gt;&#10;                          &lt;button&#10;                            onClick={handleUpdateProduct}&#10;                            disabled={isUpdating || !stockUpdate}&#10;                            className=&quot;bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition disabled:bg-gray-400&quot;&#10;                          &gt;&#10;                            Update&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Price Update */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                          Update Price&#10;                        &lt;/label&gt;&#10;                        &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                          &lt;input&#10;                            type=&quot;number&quot;&#10;                            step=&quot;0.01&quot;&#10;                            value={priceUpdate}&#10;                            onChange={(e) =&gt; setPriceUpdate(e.target.value)}&#10;                            placeholder=&quot;New price&quot;&#10;                            className=&quot;flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white&quot;&#10;                          /&gt;&#10;                          &lt;button&#10;                            onClick={handleUpdateProduct}&#10;                            disabled={isUpdating || !priceUpdate}&#10;                            className=&quot;bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition disabled:bg-gray-400&quot;&#10;                          &gt;&#10;                            Update&#10;                          &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Recent Orders */}&#10;                  &lt;RecentOrdersSection&#10;                    recentOrders={recentOrders}&#10;                    loadingOrders={loadingOrders}&#10;                    product={product}&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Sidebar - Analytics &amp; Actions */}&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {/* Performance Stats */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                        Performance&#10;                      &lt;/h3&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400&quot;&gt;&#10;                        Real-time data&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div className=&quot;space-y-4&quot;&gt;&#10;                      {/* Total Sales */}&#10;                      &lt;div className=&quot;text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center justify-center gap-2 mb-1&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-chart-line text-blue-600&quot;&gt;&lt;/i&gt;&#10;                          &lt;span className=&quot;text-2xl font-bold text-blue-600&quot;&gt;&#10;                            {product.performanceMetrics?.totalSales || 0}&#10;                          &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Total Sales&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Total Revenue */}&#10;                      &lt;div className=&quot;text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-green-600&quot;&gt;&#10;                          $&#10;                          {(&#10;                            product.performanceMetrics?.totalRevenue || 0&#10;                          ).toFixed(2)}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Total Revenue&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Average Rating */}&#10;                      &lt;div className=&quot;text-center p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-yellow-600&quot;&gt;&#10;                          {(product.averageRating || 0).toFixed(1)}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Average Rating&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;flex justify-center mt-1&quot;&gt;&#10;                          &lt;StarRating&#10;                            rating={product.averageRating || 0}&#10;                            size=&quot;sm&quot;&#10;                          /&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Total Reviews */}&#10;                      &lt;div className=&quot;text-center p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg&quot;&gt;&#10;                        &lt;div className=&quot;text-2xl font-bold text-purple-600&quot;&gt;&#10;                          {product.reviewCount || product.totalReviews || 0}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          Total Reviews&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Average Order Value */}&#10;                      {product.performanceMetrics?.averageOrderValue &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;text-center p-4 bg-orange-50 dark:bg-orange-900/20 rounded-lg&quot;&gt;&#10;                          &lt;div className=&quot;text-2xl font-bold text-orange-600&quot;&gt;&#10;                            $&#10;                            {product.performanceMetrics.averageOrderValue.toFixed(&#10;                              2,&#10;                            )}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Avg. Order Value&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* Total Orders */}&#10;                      {product.performanceMetrics?.totalOrders &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;text-center p-4 bg-indigo-50 dark:bg-indigo-900/20 rounded-lg&quot;&gt;&#10;                          &lt;div className=&quot;text-2xl font-bold text-indigo-600&quot;&gt;&#10;                            {product.performanceMetrics.totalOrders}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Total Orders&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Performance Summary */}&#10;                    &lt;div className=&quot;mt-4 pt-4 border-t border-gray-200 dark:border-gray-700&quot;&gt;&#10;                      &lt;div className=&quot;text-xs text-gray-500 dark:text-gray-400 text-center&quot;&gt;&#10;                        {product.performanceMetrics?.totalSales &gt; 0&#10;                          ? &quot;Your product is performing well!&quot;&#10;                          : &quot;Start promoting your product to get your first sale!&quot;}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6&quot;&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-4&quot;&gt;&#10;                      Actions&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;div className=&quot;space-y-3&quot;&gt;&#10;                      &lt;Link&#10;                        href={`/create?edit=${productId}`}&#10;                        className=&quot;w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-edit mr-2&quot;&gt;&lt;/i&gt;&#10;                        Edit Product&#10;                      &lt;/Link&gt;&#10;&#10;                      &lt;Link&#10;                        href={`/details?id=${productId}&amp;view=customer`}&#10;                        className=&quot;w-full bg-gray-600 hover:bg-gray-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center&quot;&#10;                      &gt;&#10;                        &lt;i className=&quot;fas fa-eye mr-2&quot;&gt;&lt;/i&gt;&#10;                        View as Customer&#10;                      &lt;/Link&gt;&#10;&#10;                      &lt;button&#10;                        onClick={handleToggleStatus}&#10;                        disabled={isUpdating}&#10;                        className={`w-full py-3 px-4 rounded-lg font-medium transition flex items-center justify-center ${&#10;                          product.status === &quot;active&quot;&#10;                            ? &quot;bg-orange-600 hover:bg-orange-700 text-white&quot;&#10;                            : &quot;bg-green-600 hover:bg-green-700 text-white&quot;&#10;                        } ${isUpdating ? &quot;opacity-50 cursor-not-allowed&quot; : &quot;&quot;}`}&#10;                      &gt;&#10;                        {isUpdating ? (&#10;                          &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        ) : (&#10;                          &lt;i&#10;                            className={`fas ${product.status === &quot;active&quot; ? &quot;fa-pause&quot; : &quot;fa-play&quot;} mr-2`}&#10;                          &gt;&lt;/i&gt;&#10;                        )}&#10;                        {product.status === &quot;active&quot;&#10;                          ? &quot;Deactivate&quot;&#10;                          : &quot;Activate&quot;}&#10;                      &lt;/button&gt;&#10;&#10;                      &lt;button&#10;                        onClick={handleDeleteProduct}&#10;                        disabled={isUpdating}&#10;                        className={`w-full bg-red-600 hover:bg-red-700 text-white py-3 px-4 rounded-lg font-medium transition flex items-center justify-center ${&#10;                          isUpdating ? &quot;opacity-50 cursor-not-allowed&quot; : &quot;&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {isUpdating ? (&#10;                          &lt;i className=&quot;fas fa-spinner fa-spin mr-2&quot;&gt;&lt;/i&gt;&#10;                        ) : (&#10;                          &lt;i className=&quot;fas fa-trash mr-2&quot;&gt;&lt;/i&gt;&#10;                        )}&#10;                        Delete Product&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/&gt;&#10;          ) : (&#10;            /* Regular Customer View */&#10;            &lt;&gt;&#10;              {/* Breadcrumb */}&#10;              &lt;nav className=&quot;mb-8&quot;&gt;&#10;                &lt;ol className=&quot;flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      Home&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;Link href=&quot;/products&quot; className=&quot;hover:text-primary-600&quot;&gt;&#10;                      Products&#10;                    &lt;/Link&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;i className=&quot;fas fa-chevron-right text-xs&quot;&gt;&lt;/i&gt;&#10;                  &lt;/li&gt;&#10;                  &lt;li&gt;&#10;                    &lt;span className=&quot;text-gray-900 dark:text-white&quot;&gt;&#10;                      {product.name}&#10;                    &lt;/span&gt;&#10;                  &lt;/li&gt;&#10;                &lt;/ol&gt;&#10;              &lt;/nav&gt;&#10;&#10;              &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-2 gap-12&quot;&gt;&#10;                {/* Product Images */}&#10;                &lt;div className=&quot;space-y-4&quot;&gt;&#10;                  &lt;div className=&quot;aspect-square bg-white dark:bg-gray-800 rounded-2xl overflow-hidden shadow-lg&quot;&gt;&#10;                    {(() =&gt; {&#10;                      const allImages = getAllImages();&#10;&#10;                      return (&#10;                        &lt;Image&#10;                          src={&#10;                            allImages[selectedImage] || &quot;/placeholder-image.jpg&quot;&#10;                          }&#10;                          alt={product.name}&#10;                          width={600}&#10;                          height={600}&#10;                          className=&quot;w-full h-full object-cover&quot;&#10;                        /&gt;&#10;                      );&#10;                    })()}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Thumbnail Images */}&#10;                  {(() =&gt; {&#10;                    const allImages = getAllImages();&#10;&#10;                    return allImages.length &gt; 1 ? (&#10;                      &lt;div className=&quot;grid grid-cols-5 gap-2&quot;&gt;&#10;                        {allImages.map((image, index) =&gt; (&#10;                          &lt;button&#10;                            key={index}&#10;                            onClick={() =&gt; setSelectedImage(index)}&#10;                            className={`aspect-square rounded-lg overflow-hidden border-2 ${&#10;                              selectedImage === index&#10;                                ? &quot;border-primary-500&quot;&#10;                                : &quot;border-gray-300 dark:border-gray-600&quot;&#10;                            }`}&#10;                          &gt;&#10;                            &lt;Image&#10;                              src={image}&#10;                              alt={`${product.name} ${index + 1}`}&#10;                              width={100}&#10;                              height={100}&#10;                              className=&quot;w-full h-full object-cover&quot;&#10;                            /&gt;&#10;                          &lt;/button&gt;&#10;                        ))}&#10;                      &lt;/div&gt;&#10;                    ) : null;&#10;                  })()}&#10;                &lt;/div&gt;&#10;&#10;                {/* Product Info */}&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {/* Category and Features */}&#10;                  &lt;div className=&quot;flex items-center gap-2 flex-wrap&quot;&gt;&#10;                    &lt;span className=&quot;bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 px-3 py-1 rounded-full text-sm font-medium&quot;&gt;&#10;                      {product.category}&#10;                    &lt;/span&gt;&#10;                    {product.isOrganic &amp;&amp; (&#10;                      &lt;span className=&quot;bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                        Organic&#10;                      &lt;/span&gt;&#10;                    )}&#10;                    {product.isFresh &amp;&amp; (&#10;                      &lt;span className=&quot;bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded-full text-xs font-medium&quot;&gt;&#10;                        Fresh&#10;                      &lt;/span&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Product Name and Farmer */}&#10;                  &lt;div&gt;&#10;                    &lt;h1 className=&quot;text-3xl font-bold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                      {product.name}&#10;                    &lt;/h1&gt;&#10;                    &lt;p className=&quot;text-lg text-gray-600 dark:text-gray-400&quot;&gt;&#10;                      Produced by{&quot; &quot;}&#10;                      &lt;span className=&quot;font-semibold text-primary-600 dark:text-primary-400&quot;&gt;&#10;                        {product.farmer?.farmName ||&#10;                          product.farmer?.name ||&#10;                          &quot;Unknown Farmer&quot;}&#10;                      &lt;/span&gt;&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Rating and Reviews */}&#10;                  &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                    &lt;StarRating&#10;                      rating={product.averageRating || 0}&#10;                      showValue={true}&#10;                    /&gt;&#10;                    &lt;span className=&quot;text-gray-500 dark:text-gray-400&quot;&gt;&#10;                      ({product.reviewCount || product.totalReviews || 0}{&quot; &quot;}&#10;                      reviews)&#10;                    &lt;/span&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; setActiveTab(&quot;reviews&quot;)}&#10;                      className=&quot;text-primary-600 dark:text-primary-400 hover:underline&quot;&#10;                    &gt;&#10;                      Write a review&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Price and Stock */}&#10;                  &lt;div className=&quot;bg-gray-100 dark:bg-gray-800 rounded-xl p-6&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center justify-between mb-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;span className=&quot;text-3xl font-bold text-primary-600 dark:text-primary-400&quot;&gt;&#10;                          ${product.price?.toFixed(2)}&#10;                        &lt;/span&gt;&#10;                        &lt;span className=&quot;text-lg text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          /{product.unit || &quot;kg&quot;}&#10;                        &lt;/span&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;text-right&quot;&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                          Available Stock&#10;                        &lt;/p&gt;&#10;                        &lt;p className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.stock} {product.unit || &quot;kg&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Location */}&#10;                    &lt;div className=&quot;flex items-center text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;                      &lt;i className=&quot;fas fa-map-marker-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                      &lt;span&gt;&#10;                        {product.farmer?.location || &quot;Location not specified&quot;}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Quantity Selection */}&#10;                  &lt;div className=&quot;space-y-4&quot;&gt;&#10;                    &lt;div&gt;&#10;                      &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                        Quantity ({product.unit || &quot;kg&quot;})&#10;                      &lt;/label&gt;&#10;                      &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setQuantity(Math.max(1, quantity - 1))}&#10;                          className=&quot;w-10 h-10 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-center hover:bg-gray-50 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-minus&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          min=&quot;1&quot;&#10;                          max={product.stock}&#10;                          value={quantity}&#10;                          onChange={(e) =&gt;&#10;                            setQuantity(&#10;                              Math.max(1, parseInt(e.target.value) || 1),&#10;                            )&#10;                          }&#10;                          className=&quot;w-20 text-center py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white&quot;&#10;                        /&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt;&#10;                            setQuantity(Math.min(product.stock, quantity + 1))&#10;                          }&#10;                          className=&quot;w-10 h-10 rounded-lg border border-gray-300 dark:border-gray-600 flex items-center justify-center hover:bg-gray-50 dark:hover:bg-gray-700&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-plus&quot;&gt;&lt;/i&gt;&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;space-y-3&quot;&gt;&#10;                    &lt;button&#10;                      onClick={handleBuyNow}&#10;                      disabled={product.stock &lt;= 0}&#10;                      className=&quot;w-full bg-primary-600 hover:bg-primary-700 dark:bg-primary-700 dark:hover:bg-primary-800 text-white py-3 px-6 rounded-lg font-medium transition-all duration-200 shadow-md hover:shadow-lg disabled:bg-gray-400&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-bolt mr-2&quot;&gt;&lt;/i&gt;&#10;                      Buy Now&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={handleAddToCart}&#10;                      disabled={isAddingToCart || product.stock &lt;= 0}&#10;                      className=&quot;w-full bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white py-3 px-6 rounded-lg font-medium transition disabled:bg-gray-400&quot;&#10;                    &gt;&#10;                      &lt;i className=&quot;fas fa-shopping-cart mr-2&quot;&gt;&lt;/i&gt;&#10;                      {isAddingToCart ? &quot;Adding...&quot; : &quot;Add to Cart&quot;}&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={handleFavoriteToggle}&#10;                      className=&quot;w-full border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 text-gray-900 dark:text-white py-3 px-6 rounded-lg font-medium transition&quot;&#10;                    &gt;&#10;                      &lt;i&#10;                        className={`${isFavorite ? &quot;fas&quot; : &quot;far&quot;} fa-heart mr-2 ${isFavorite ? &quot;text-red-500&quot; : &quot;&quot;}`}&#10;                      &gt;&lt;/i&gt;&#10;                      Add to Favorite&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Farmer Contact */}&#10;                  &lt;div className=&quot;bg-primary-50 dark:bg-primary-900 rounded-xl p-4&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                      &lt;div className=&quot;w-12 h-12 rounded-full bg-primary-100 dark:bg-primary-800 flex items-center justify-center&quot;&gt;&#10;                        &lt;i className=&quot;fas fa-user text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div&gt;&#10;                        &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                          {product.farmer?.name || &quot;Farmer&quot;}&#10;                        &lt;/h4&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-600 dark:text-gray-400&quot;&gt;&#10;                          {product.farmer?.email ||&#10;                            &quot;Contact information not available&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {/* Tabs Section */}&#10;              &lt;div className=&quot;mt-16&quot;&gt;&#10;                &lt;div className=&quot;border-b border-gray-200 dark:border-gray-700&quot;&gt;&#10;                  &lt;nav className=&quot;flex space-x-8&quot;&gt;&#10;                    {[&#10;                      &quot;description&quot;,&#10;                      &quot;nutrition&quot;,&#10;                      &quot;storage&quot;,&#10;                      &quot;reviews&quot;,&#10;                      &quot;farmer&quot;,&#10;                    ].map((tab) =&gt; (&#10;                      &lt;button&#10;                        key={tab}&#10;                        onClick={() =&gt; setActiveTab(tab)}&#10;                        className={`py-4 px-1 border-b-2 font-medium text-sm ${&#10;                          activeTab === tab&#10;                            ? &quot;border-primary-500 text-primary-600 dark:text-primary-400&quot;&#10;                            : &quot;border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {tab.charAt(0).toUpperCase() + tab.slice(1)}&#10;                      &lt;/button&gt;&#10;                    ))}&#10;                  &lt;/nav&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;py-8&quot;&gt;&#10;                  {/* Description Tab */}&#10;                  {activeTab === &quot;description&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-4&quot;&gt;&#10;                        Product Description&#10;                      &lt;/h3&gt;&#10;                      &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;                        {product.description ||&#10;                          &quot;No description available for this product.&quot;}&#10;                      &lt;/p&gt;&#10;&#10;                      {product.features &amp;&amp; product.features.length &gt; 0 &amp;&amp; (&#10;                        &lt;div className=&quot;mt-6&quot;&gt;&#10;                          &lt;h4 className=&quot;text-lg font-medium mb-3&quot;&gt;&#10;                            Key Features&#10;                          &lt;/h4&gt;&#10;                          &lt;ul className=&quot;list-disc list-inside space-y-1&quot;&gt;&#10;                            {product.features.map((feature, index) =&gt; (&#10;                              &lt;li&#10;                                key={index}&#10;                                className=&quot;text-gray-600 dark:text-gray-400&quot;&#10;                              &gt;&#10;                                {feature}&#10;                              &lt;/li&gt;&#10;                            ))}&#10;                          &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Nutrition Tab */}&#10;                  {activeTab === &quot;nutrition&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        Nutritional Information&#10;                      &lt;/h3&gt;&#10;&#10;                      {product.nutritionalInformation ? (&#10;                        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg p-6&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {product.nutritionalInformation}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-apple-alt text-4xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Nutritional information is not available for this&#10;                            product.&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Storage Instructions Tab */}&#10;                  {activeTab === &quot;storage&quot; &amp;&amp; (&#10;                    &lt;div className=&quot;prose dark:prose-invert max-w-none&quot;&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        Storage Instructions&#10;                      &lt;/h3&gt;&#10;&#10;                      {product.storageInstructions ? (&#10;                        &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg p-6&quot;&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            {product.storageInstructions}&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;div className=&quot;text-center py-8&quot;&gt;&#10;                          &lt;i className=&quot;fas fa-warehouse text-4xl text-gray-400 mb-4&quot;&gt;&lt;/i&gt;&#10;                          &lt;p className=&quot;text-gray-600 dark:text-gray-400&quot;&gt;&#10;                            Storage instructions are not available for this&#10;                            product.&#10;                          &lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* General storage tips */}&#10;                      &lt;div className=&quot;mt-8&quot;&gt;&#10;                        &lt;h4 className=&quot;text-lg font-medium mb-4&quot;&gt;&#10;                          General Storage Tips&#10;                        &lt;/h4&gt;&#10;                        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;                          &lt;div className=&quot;bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg&quot;&gt;&#10;                            &lt;h5 className=&quot;font-medium text-blue-900 dark:text-blue-100 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-thermometer-half mr-2&quot;&gt;&lt;/i&gt;&#10;                              Temperature&#10;                            &lt;/h5&gt;&#10;                            &lt;p className=&quot;text-sm text-blue-700 dark:text-blue-300&quot;&gt;&#10;                              Store in a cool, dry place away from direct&#10;                              sunlight&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;bg-green-50 dark:bg-green-900/20 p-4 rounded-lg&quot;&gt;&#10;                            &lt;h5 className=&quot;font-medium text-green-900 dark:text-green-100 mb-2&quot;&gt;&#10;                              &lt;i className=&quot;fas fa-tint mr-2&quot;&gt;&lt;/i&gt;&#10;                              Humidity&#10;                            &lt;/h5&gt;&#10;                            &lt;p className=&quot;text-sm text-green-700 dark:text-green-300&quot;&gt;&#10;                              Keep in low humidity environment to prevent&#10;                              spoilage&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Reviews Tab */}&#10;                  {activeTab === &quot;reviews&quot; &amp;&amp; (&#10;                    &lt;div&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mb-8&quot;&gt;&#10;                        &lt;h2 className=&quot;text-2xl font-bold text-gray-900 dark:text-white&quot;&gt;&#10;                          Customer Reviews (&#10;                          {product.reviewCount || product.totalReviews || 0})&#10;                        &lt;/h2&gt;&#10;                        &lt;button&#10;                          onClick={() =&gt; setShowReviewForm(true)}&#10;                          className=&quot;bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg font-medium transition&quot;&#10;                        &gt;&#10;                          &lt;i className=&quot;fas fa-plus mr-2&quot;&gt;&lt;/i&gt;&#10;                          Write Review&#10;                        &lt;/button&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Review Summary */}&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-6 mb-8&quot;&gt;&#10;                        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-8&quot;&gt;&#10;                          &lt;div className=&quot;text-center&quot;&gt;&#10;                            &lt;div className=&quot;text-4xl font-bold text-primary-600 dark:text-primary-400 mb-2&quot;&gt;&#10;                              {(product.averageRating || 0).toFixed(1)}&#10;                            &lt;/div&gt;&#10;                            &lt;StarRating&#10;                              rating={product.averageRating || 0}&#10;                              size=&quot;lg&quot;&#10;                            /&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mt-2&quot;&gt;&#10;                              Based on{&quot; &quot;}&#10;                              {product.reviewCount || product.totalReviews || 0}{&quot; &quot;}&#10;                              reviews&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;space-y-2&quot;&gt;&#10;                            {(() =&gt; {&#10;                              const ratingDistribution =&#10;                                calculateRatingDistribution();&#10;                              return [5, 4, 3, 2, 1].map((rating) =&gt; {&#10;                                const count = ratingDistribution[rating];&#10;                                const percentage = getRatingPercentage(&#10;                                  rating,&#10;                                  ratingDistribution,&#10;                                );&#10;                                return (&#10;                                  &lt;div&#10;                                    key={rating}&#10;                                    className=&quot;flex items-center space-x-2&quot;&#10;                                  &gt;&#10;                                    &lt;span className=&quot;text-sm text-gray-600 dark:text-gray-400 w-8&quot;&gt;&#10;                                      {rating}★&#10;                                    &lt;/span&gt;&#10;                                    &lt;div className=&quot;flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-2&quot;&gt;&#10;                                      &lt;div&#10;                                        className=&quot;bg-yellow-400 h-2 rounded-full transition-all duration-300&quot;&#10;                                        style={{ width: `${percentage}%` }}&#10;                                      &gt;&lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;span className=&quot;text-sm text-gray-600 dark:text-gray-400 w-8&quot;&gt;&#10;                                      {count}&#10;                                    &lt;/span&gt;&#10;                                  &lt;/div&gt;&#10;                                );&#10;                              });&#10;                            })()}&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Review Form Modal */}&#10;                      {showReviewForm &amp;&amp; (&#10;                        &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4&quot;&gt;&#10;                          &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-xl p-6 w-full max-w-md&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center justify-between mb-6&quot;&gt;&#10;                              &lt;h3 className=&quot;text-lg font-semibold text-gray-900 dark:text-white&quot;&gt;&#10;                                Write a Review&#10;                              &lt;/h3&gt;&#10;                              &lt;button&#10;                                onClick={() =&gt; setShowReviewForm(false)}&#10;                                className=&quot;text-gray-400 hover:text-gray-600 dark:hover:text-gray-300&quot;&#10;                              &gt;&#10;                                &lt;i className=&quot;fas fa-times&quot;&gt;&lt;/i&gt;&#10;                              &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;form&#10;                              onSubmit={handleSubmitReview}&#10;                              className=&quot;space-y-4&quot;&#10;                            &gt;&#10;                              &lt;div&gt;&#10;                                &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                                  Rating&#10;                                &lt;/label&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#10;                                  {[1, 2, 3, 4, 5].map((star) =&gt; (&#10;                                    &lt;button&#10;                                      key={star}&#10;                                      type=&quot;button&quot;&#10;                                      onClick={() =&gt;&#10;                                        setReviewForm({&#10;                                          ...reviewForm,&#10;                                          rating: star,&#10;                                        })&#10;                                      }&#10;                                      className={`text-2xl ${&#10;                                        star &lt;= reviewForm.rating&#10;                                          ? &quot;text-yellow-400&quot;&#10;                                          : &quot;text-gray-300 dark:text-gray-600&quot;&#10;                                      }`}&#10;                                    &gt;&#10;                                      ★&#10;                                    &lt;/button&gt;&#10;                                  ))}&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div&gt;&#10;                                &lt;label className=&quot;block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;&#10;                                  Comment&#10;                                &lt;/label&gt;&#10;                                &lt;textarea&#10;                                  value={reviewForm.comment}&#10;                                  onChange={(e) =&gt;&#10;                                    setReviewForm({&#10;                                      ...reviewForm,&#10;                                      comment: e.target.value,&#10;                                    })&#10;                                  }&#10;                                  rows={4}&#10;                                  className=&quot;w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white&quot;&#10;                                  placeholder=&quot;Share your experience with this product...&quot;&#10;                                  required&#10;                                /&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;flex space-x-3&quot;&gt;&#10;                                &lt;button&#10;                                  type=&quot;button&quot;&#10;                                  onClick={() =&gt; setShowReviewForm(false)}&#10;                                  className=&quot;flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700&quot;&#10;                                &gt;&#10;                                  Cancel&#10;                                &lt;/button&gt;&#10;                                &lt;button&#10;                                  type=&quot;submit&quot;&#10;                                  disabled={isSubmittingReview}&#10;                                  className=&quot;flex-1 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50&quot;&#10;                                &gt;&#10;                                  {isSubmittingReview&#10;                                    ? &quot;Submitting...&quot;&#10;                                    : &quot;Submit Review&quot;}&#10;                                &lt;/button&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/form&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      )}&#10;&#10;                      {/* Individual Reviews */}&#10;                      &lt;div className=&quot;space-y-8&quot;&gt;&#10;                        {reviews &amp;&amp; reviews.length &gt; 0 ? (&#10;                          reviews.map((review, index) =&gt; (&#10;                            &lt;div&#10;                              key={review._id}&#10;                              className=&quot;group bg-gradient-to-br from-white via-gray-50 to-white dark:from-gray-800 dark:via-gray-850 dark:to-gray-800 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 dark:border-gray-700 hover:border-primary-200 dark:hover:border-primary-800&quot;&#10;                              style={{ animationDelay: `${index * 100}ms` }}&#10;                            &gt;&#10;                              &lt;div className=&quot;flex items-start justify-between mb-4&quot;&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-4&quot;&gt;&#10;                                  &lt;div className=&quot;relative&quot;&gt;&#10;                                    &lt;div className=&quot;w-12 h-12 rounded-full bg-gradient-to-br from-primary-400 to-primary-600 dark:from-primary-500 dark:to-primary-700 flex items-center justify-center shadow-lg&quot;&gt;&#10;                                      &lt;span className=&quot;text-white font-bold text-lg&quot;&gt;&#10;                                      {(review.reviewer || &quot;Anonymous&quot;)&#10;                                          .charAt(0)&#10;                                          .toUpperCase()}&#10;                                      &lt;/span&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div className=&quot;absolute -bottom-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-white dark:border-gray-800 flex items-center justify-center&quot;&gt;&#10;                                      &lt;i className=&quot;fas fa-check text-white text-xs&quot;&gt;&lt;/i&gt;&#10;                                    &lt;/div&gt;&#10;                                  &lt;/div&gt;&#10;                                  &lt;div className=&quot;flex-1&quot;&gt;&#10;                                    &lt;div className=&quot;flex items-center gap-3 mb-1&quot;&gt;&#10;                                      &lt;h4 className=&quot;font-semibold text-gray-900 dark:text-white text-lg&quot;&gt;&#10;                                        {review.reviewer || &quot;Anonymous&quot;}&#10;                                      &lt;/h4&gt;&#10;                                      &lt;span className=&quot;px-2 py-1 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 text-xs font-medium rounded-full&quot;&gt;&#10;                                        Verified Buyer&#10;                                      &lt;/span&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div className=&quot;flex items-center space-x-3&quot;&gt;&#10;                                      &lt;div className=&quot;flex items-center space-x-1&quot;&gt;&#10;                                        {[1, 2, 3, 4, 5].map((star) =&gt; (&#10;                                          &lt;span&#10;                                            key={star}&#10;                                            className={`text-lg transition-all duration-200 ${&#10;                                              star &lt;= review.rating&#10;                                                ? &quot;text-yellow-400 drop-shadow-sm&quot;&#10;                                                : &quot;text-gray-300 dark:text-gray-600&quot;&#10;                                            }`}&#10;                                          &gt;&#10;                                            ★&#10;                                          &lt;/span&gt;&#10;                                        ))}&#10;                                      &lt;/div&gt;&#10;                                      &lt;span className=&quot;text-sm font-medium text-yellow-600 dark:text-yellow-400&quot;&gt;&#10;                                        {review.rating}/5&#10;                                      &lt;/span&gt;&#10;                                      &lt;span className=&quot;text-gray-400&quot;&gt;•&lt;/span&gt;&#10;                                      &lt;span className=&quot;text-sm text-gray-500 dark:text-gray-400 font-medium&quot;&gt;&#10;                                        {new Date(&#10;                                          review.createdAt || review.date,&#10;                                        ).toLocaleDateString(&quot;en-US&quot;, {&#10;                                          year: &quot;numeric&quot;,&#10;                                          month: &quot;short&quot;,&#10;                                          day: &quot;numeric&quot;,&#10;                                        })}&#10;                                      &lt;/span&gt;&#10;                                    &lt;/div&gt;&#10;                                  &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300&quot;&gt;&#10;                                  &lt;button className=&quot;p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-thumbs-up text-gray-400 hover:text-primary-500&quot;&gt;&lt;/i&gt;&#10;                                  &lt;/button&gt;&#10;                                  &lt;button className=&quot;p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-share text-gray-400 hover:text-primary-500&quot;&gt;&lt;/i&gt;&#10;                                  &lt;/button&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              &lt;div className=&quot;relative&quot;&gt;&#10;                                &lt;div className=&quot;absolute left-0 top-0 w-1 h-full bg-gradient-to-b from-primary-400 to-primary-600 rounded-full opacity-20&quot;&gt;&lt;/div&gt;&#10;                                &lt;p className=&quot;text-gray-700 dark:text-gray-300 leading-relaxed pl-6 text-base&quot;&gt;&#10;                                  &quot;{review.comment}&quot;&#10;                                &lt;/p&gt;&#10;                              &lt;/div&gt;&#10;&#10;                              {/* Review actions footer */}&#10;                              &lt;div className=&quot;mt-4 pt-4 border-t border-gray-100 dark:border-gray-700 flex items-center justify-between&quot;&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;                                  &lt;span className=&quot;flex items-center space-x-1&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-heart text-red-400&quot;&gt;&lt;/i&gt;&#10;                                    &lt;span&gt;Helpful&lt;/span&gt;&#10;                                  &lt;/span&gt;&#10;                                  &lt;span className=&quot;flex items-center space-x-1&quot;&gt;&#10;                                    &lt;i className=&quot;fas fa-comment text-blue-400&quot;&gt;&lt;/i&gt;&#10;                                    &lt;span&gt;Reply&lt;/span&gt;&#10;                                  &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                                  &lt;div className=&quot;flex -space-x-1&quot;&gt;&#10;                                    {[1, 2, 3].map((i) =&gt; (&#10;                                      &lt;div&#10;                                        key={i}&#10;                                        className=&quot;w-6 h-6 rounded-full bg-gray-300 dark:bg-gray-600 border-2 border-white dark:border-gray-800&quot;&#10;                                      &gt;&lt;/div&gt;&#10;                                    ))}&#10;                                  &lt;/div&gt;&#10;                                  &lt;span className=&quot;text-xs text-gray-500&quot;&gt;&#10;                                    +2 found helpful&#10;                                  &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          ))&#10;                        ) : (&#10;                          &lt;div className=&quot;text-center py-16 bg-gradient-to-br from-gray-50 via-white to-gray-50 dark:from-gray-800 dark:via-gray-900 dark:to-gray-800 rounded-2xl border-2 border-dashed border-gray-200 dark:border-gray-700&quot;&gt;&#10;                            &lt;div className=&quot;relative inline-block mb-6&quot;&gt;&#10;                              &lt;div className=&quot;w-20 h-20 bg-gradient-to-br from-primary-100 to-primary-200 dark:from-primary-800 dark:to-primary-900 rounded-full flex items-center justify-center mx-auto shadow-lg&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-star text-3xl text-primary-500 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;absolute -top-2 -right-2 w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center animate-bounce&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-plus text-white text-sm&quot;&gt;&lt;/i&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;h3 className=&quot;text-xl font-bold text-gray-900 dark:text-white mb-3&quot;&gt;&#10;                              No Reviews Yet&#10;                            &lt;/h3&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-6 max-w-md mx-auto&quot;&gt;&#10;                              Be the first to share your experience with this&#10;                              amazing product! Your review helps other customers&#10;                              make informed decisions.&#10;                            &lt;/p&gt;&#10;                            {session &amp;&amp; (&#10;                              &lt;button&#10;                                onClick={() =&gt; setShowReviewForm(true)}&#10;                                className=&quot;inline-flex items-center bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300&quot;&#10;                              &gt;&#10;                                &lt;i className=&quot;fas fa-edit mr-2&quot;&gt;&lt;/i&gt;&#10;                                Write First Review&#10;                              &lt;/button&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                        )}&#10;&#10;                        {/* Load More Reviews Button */}&#10;                        {hasMoreReviews &amp;&amp; (&#10;                          &lt;div className=&quot;text-center pt-8&quot;&gt;&#10;                            &lt;button&#10;                              onClick={loadMoreReviews}&#10;                              className=&quot;group inline-flex items-center bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 text-gray-900 dark:text-white px-8 py-4 rounded-xl font-semibold border-2 border-gray-200 dark:border-gray-700 hover:border-primary-300 dark:hover:border-primary-600 shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300&quot;&#10;                            &gt;&#10;                              &lt;i className=&quot;fas fa-chevron-down mr-3 group-hover:animate-bounce&quot;&gt;&lt;/i&gt;&#10;                              Load More Reviews&#10;                              &lt;span className=&quot;ml-3 px-2 py-1 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 text-sm rounded-full&quot;&gt;&#10;                                +{Math.min(5, reviews?.length || 0)}&#10;                              &lt;/span&gt;&#10;                            &lt;/button&gt;&#10;                          &lt;/div&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Farmer Tab */}&#10;                  {activeTab === &quot;farmer&quot; &amp;&amp; (&#10;                    &lt;div&gt;&#10;                      &lt;h3 className=&quot;text-xl font-semibold mb-6&quot;&gt;&#10;                        About the Farmer&#10;                      &lt;/h3&gt;&#10;                      &lt;div className=&quot;bg-white dark:bg-gray-800 rounded-lg p-6 shadow-lg&quot;&gt;&#10;                        &lt;div className=&quot;flex items-start gap-4&quot;&gt;&#10;                          &lt;div className=&quot;w-16 h-16 rounded-full bg-primary-100 dark:bg-primary-900 flex items-center justify-center flex-shrink-0&quot;&gt;&#10;                            &lt;i className=&quot;fas fa-user text-2xl text-primary-600 dark:text-primary-400&quot;&gt;&lt;/i&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;flex-1&quot;&gt;&#10;                            &lt;h4 className=&quot;text-lg font-semibold text-gray-900 dark:text-white mb-2&quot;&gt;&#10;                              {product.farmer?.farmName ||&#10;                                product.farmer?.name ||&#10;                                &quot;Farm Name&quot;}&#10;                            &lt;/h4&gt;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 mb-3&quot;&gt;&#10;                              {product.farmer?.email ||&#10;                                &quot;Farmer contact not available&quot;}&#10;                            &lt;/p&gt;&#10;&#10;                            {product.farmer?.location &amp;&amp; (&#10;                              &lt;div className=&quot;flex items-center text-gray-600 dark:text-gray-400 mb-3&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-map-marker-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                                &lt;span&gt;{product.farmer.location}&lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            )}&#10;&#10;                            {product.farmer?.phone &amp;&amp; (&#10;                              &lt;div className=&quot;flex items-center text-gray-600 dark:text-gray-400 mb-4&quot;&gt;&#10;                                &lt;i className=&quot;fas fa-phone mr-2&quot;&gt;&lt;/i&gt;&#10;                                &lt;span&gt;{product.farmer.phone}&lt;/span&gt;&#10;                              &lt;/div&gt;&#10;                            )}&#10;&#10;                            &lt;p className=&quot;text-gray-600 dark:text-gray-400 leading-relaxed&quot;&gt;&#10;                              {product.farmer?.description ||&#10;                                &quot;A dedicated farmer committed to providing fresh, quality produce to the community.&quot;}&#10;                            &lt;/p&gt;&#10;&#10;                            &lt;div className=&quot;mt-4 pt-4 border-t border-gray-200 dark:border-gray-700&quot;&gt;&#10;                              &lt;Link&#10;                                href={`/details?id=${product.farmerId || product.farmer?.id}`}&#10;                                className=&quot;inline-flex items-center text-primary-600 hover:text-primary-700 font-medium&quot;&#10;                              &gt;&#10;                                &lt;i className=&quot;fas fa-external-link-alt mr-2&quot;&gt;&lt;/i&gt;&#10;                                View All Products from this Farmer&#10;                              &lt;/Link&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;&#10;                  {/* Related Products outside tabs */}&#10;                  {relatedProducts.length &gt; 0 &amp;&amp; (&#10;                    &lt;div className=&quot;mt-16&quot;&gt;&#10;                      &lt;h3 className=&quot;text-2xl font-bold text-gray-900 dark:text-white mb-8&quot;&gt;&#10;                        Related Products&#10;                      &lt;/h3&gt;&#10;                      &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6&quot;&gt;&#10;                        {relatedProducts.map((relatedProduct) =&gt; (&#10;                          &lt;ProductCard&#10;                            key={relatedProduct._id}&#10;                            product={relatedProduct}&#10;                          /&gt;&#10;                        ))}&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>